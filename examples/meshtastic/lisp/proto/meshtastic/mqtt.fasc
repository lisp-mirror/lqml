(#Y(si::bytecodes nil nil (1 0 16 1 29) #1=#A(t (629) ("COMMON-LISP-USER" si::select-package "CL-PROTOBUFS.MESHTASTIC" find-package "CL-PROTOBUFS.MESHTASTIC" ((#:pi . #:cl-protobufs.implementation)) si::dodefpackage "CL-PROTOBUFS.MESHTASTIC" cl-protobufs.meshtastic::mqtt :syntax :proto3 :package "meshtastic" cl-protobufs.implementation::define-schema proclaim ((inline cl-protobufs.meshtastic::%make-service-envelope)) mapc cl-protobufs.meshtastic::service-envelope "SERVICE-ENVELOPE-" ((cl-protobufs.meshtastic::%packet nil :type #2=(or null cl-protobufs.meshtastic::mesh-packet)) (cl-protobufs.meshtastic::%channel-id #3="" :type string) (cl-protobufs.meshtastic::%gateway-id #3# :type string) (cl-protobufs.implementation::%%bytes nil :type #4=(or null (simple-array (unsigned-byte 8)))) (cl-protobufs.implementation::%%is-set #5=(make-array 0 :element-type (quote bit) :initial-element 0) :type #6=(bit-vector 0))) ((cl-protobufs.implementation::%%skipped-bytes nil (or null cl-protobufs::byte-vector) nil 0 cl-protobufs.implementation::message-%%skipped-bytes) (cl-protobufs.meshtastic::%packet nil #2# nil 1 nil) (cl-protobufs.meshtastic::%channel-id #3# string nil 2 nil) (cl-protobufs.meshtastic::%gateway-id #3# string nil 3 nil) (cl-protobufs.implementation::%%bytes nil #4# nil 4 nil) (cl-protobufs.implementation::%%is-set #5# #6# nil 5 nil)) cl-protobufs.meshtastic::copy-service-envelope cl-protobufs::message (cl-protobufs.meshtastic::%make-service-envelope) si::define-structure #7=(cl-protobufs.meshtastic::service-envelope (:constructor cl-protobufs.meshtastic::%make-service-envelope) (:include cl-protobufs::message) (:predicate nil)) ext::location (defstruct #7#) (#8=#P"/home/polos/lqml/examples/meshtastic/lisp/proto/meshtastic/mqtt.lisp" . 714) ext::annotate cl-protobufs.meshtastic::%make-service-envelope (defun cl-protobufs.meshtastic::%make-service-envelope) (#8# . 714) :lambda-list #9=(&key #10=#:%%skipped-bytes #11=#:%packet (#12=#:%channel-id #3#) (#13=#:%gateway-id #3#) #14=#:%%bytes (#15=#:%%is-set (make-array 0 :element-type (quote bit) :initial-element 0))) (nil :%%is-set :%%bytes :%gateway-id :%channel-id :%packet :%%skipped-bytes) #10# #11# #3# #12# #13# #14# :element-type bit :initial-element make-array #15# #16=(bit-vector 0) typep #17=(bit-vector 0) cl-protobufs.implementation::%%is-set si::structure-type-error #18=(or null (simple-array (unsigned-byte 8))) #19=(or null (simple-array (unsigned-byte 8))) cl-protobufs.implementation::%%bytes #20=(or (array base-char (*)) (array character (*))) string cl-protobufs.meshtastic::%gateway-id #21=(or (array base-char (*)) (array character (*))) cl-protobufs.meshtastic::%channel-id #22=(or null cl-protobufs.meshtastic::mesh-packet) #23=(or null cl-protobufs.meshtastic::mesh-packet) cl-protobufs.meshtastic::%packet #24=(or null cl-protobufs::byte-vector) #25=(or null cl-protobufs::byte-vector) cl-protobufs.implementation::%%skipped-bytes 0 si::make-structure #Y(cl-protobufs.meshtastic::%make-service-envelope nil nil (28 35 22 40 2 77 46 36 22 40 2 77 46 37 22 40 3 15 38 46 39 22 40 3 15 38 46 40 22 40 2 77 46 41 22 40 15 9 0 14 42 15 43 14 44 9 0 19 5 45 12 46 46 13 0 15 47 19 2 48 76 39 12 13 0 15 49 15 17 15 50 19 4 51 13 1 15 52 19 2 48 76 39 12 13 1 15 53 15 17 15 54 19 4 51 13 2 15 55 19 2 48 76 39 12 13 2 15 56 15 17 15 57 19 4 51 13 3 15 58 19 2 48 76 39 12 13 3 15 56 15 17 15 59 19 4 51 13 4 15 60 19 2 48 76 39 12 13 4 15 61 15 17 15 62 19 4 51 13 5 15 63 19 2 48 76 39 12 13 5 15 64 15 17 15 65 19 4 51 15 66 13 5 13 4 13 3 13 2 13 1 13 0 19 7 67 29) #1# #8# 714) si::fset find-class inline (function (ext::lambda-block cl-protobufs.meshtastic::%make-service-envelope #9# #26=(declare (si::c-global)) (unless (typep #15# (quote #16#)) (si::structure-type-error #15# (quote #17#) (quote cl-protobufs.meshtastic::service-envelope) (quote cl-protobufs.implementation::%%is-set))) (unless (typep #14# (quote #18#)) (si::structure-type-error #14# (quote #19#) (quote cl-protobufs.meshtastic::service-envelope) (quote cl-protobufs.implementation::%%bytes))) (unless (typep #13# (quote #20#)) (si::structure-type-error #13# (quote string) (quote cl-protobufs.meshtastic::service-envelope) (quote cl-protobufs.meshtastic::%gateway-id))) (unless (typep #12# (quote #21#)) (si::structure-type-error #12# (quote string) (quote cl-protobufs.meshtastic::service-envelope) (quote cl-protobufs.meshtastic::%channel-id))) (unless (typep #11# (quote #22#)) (si::structure-type-error #11# (quote #23#) (quote cl-protobufs.meshtastic::service-envelope) (quote cl-protobufs.meshtastic::%packet))) (unless (typep #10# (quote #24#)) (si::structure-type-error #10# (quote #25#) (quote cl-protobufs.meshtastic::service-envelope) (quote cl-protobufs.implementation::%%skipped-bytes))) (si::make-structure (load-time-value (find-class (quote cl-protobufs.meshtastic::service-envelope))) #10# #11# #12# #13# #14# #15#))) si::put-sysprop cl-protobufs.meshtastic::service-envelope-%%is-set symbol-package package ext::package-locked-p si::*ignore-package-locks* package-error "Ignore lock and proceed." "Attempt to define CAS accessor ~S in locked package." (cl-protobufs.meshtastic::service-envelope-%%is-set) si::signal-simple-error mp::cas-expander #:g70084 si::x gensym si::new si::old mp::compare-and-swap-structure quote si::structure-ref #Y(nil nil nil (24 45 85 24 45 86 26 19 0 87 12 19 0 87 12 46 88 46 89 77 77 13 0 13 1 15 90 13 2 15 91 1 17 6 2 12 9 5 13 0 10 1 6 6 12 15 92 13 2 15 91 1 17 6 2 12 8 5 6 4 12 72 6 43 2 29) #1# #8# 714) cl-protobufs.meshtastic::service-envelope-%%bytes (cl-protobufs.meshtastic::service-envelope-%%bytes) #:g70085 #Y(nil nil nil (24 45 96 24 45 86 26 19 0 87 12 19 0 87 12 46 88 46 89 77 77 13 0 13 1 15 90 13 2 15 91 1 17 6 2 12 9 4 13 0 10 1 6 6 12 15 92 13 2 15 91 1 17 6 2 12 8 4 6 4 12 72 6 43 2 29) #1# #8# 714) cl-protobufs.meshtastic::service-envelope-%gateway-id (cl-protobufs.meshtastic::service-envelope-%gateway-id) #:g70086 #Y(nil nil nil (24 45 100 24 45 86 26 19 0 87 12 19 0 87 12 46 88 46 89 77 77 13 0 13 1 15 90 13 2 15 91 1 17 6 2 12 9 3 13 0 10 1 6 6 12 15 92 13 2 15 91 1 17 6 2 12 8 3 6 4 12 72 6 43 2 29) #1# #8# 714) cl-protobufs.meshtastic::service-envelope-%channel-id (cl-protobufs.meshtastic::service-envelope-%channel-id) #:g70087 #Y(nil nil nil (24 45 104 24 45 86 26 19 0 87 12 19 0 87 12 46 88 46 89 77 77 13 0 13 1 15 90 13 2 15 91 1 17 6 2 12 9 2 13 0 10 1 6 6 12 15 92 13 2 15 91 1 17 6 2 12 8 2 6 4 12 72 6 43 2 29) #1# #8# 714) cl-protobufs.meshtastic::service-envelope-%packet (cl-protobufs.meshtastic::service-envelope-%packet) #:g70088 #Y(nil nil nil (24 45 108 24 45 86 26 19 0 87 12 19 0 87 12 46 88 46 89 77 77 13 0 13 1 15 90 13 2 15 91 1 17 6 2 12 9 1 13 0 10 1 6 6 12 15 92 13 2 15 91 1 17 6 2 12 8 1 6 4 12 72 6 43 2 29) #1# #8# 714) cl-protobufs.meshtastic::service-envelope-%%skipped-bytes (cl-protobufs.meshtastic::service-envelope-%%skipped-bytes) #:g70089 #Y(nil nil nil (24 45 112 24 45 86 26 19 0 87 12 19 0 87 12 46 88 46 89 77 77 13 0 13 1 15 90 13 2 15 91 1 17 6 2 12 9 0 13 0 10 1 6 6 12 15 92 13 2 15 91 1 17 6 2 12 8 0 6 4 12 72 6 43 2 29) #1# #8# 714) ((inline cl-protobufs.meshtastic::service-envelope.packet)) cl-protobufs.meshtastic::service-envelope.packet (defun cl-protobufs.meshtastic::service-envelope.packet) (#8# . 714) #27=(#28=#:obj70066) #28# #Y(cl-protobufs.meshtastic::service-envelope.packet nil nil (24 45 119 26 13 0 19 1 106 29) #1# #8# 714) (function (ext::lambda-block cl-protobufs.meshtastic::service-envelope.packet #27# #26# (the (or null cl-protobufs.meshtastic::mesh-packet) (cl-protobufs.meshtastic::service-envelope-%packet #28#)))) ((inline #29=(setf cl-protobufs.meshtastic::service-envelope.packet))) #29# (defun #29#) (#8# . 714) #30=(#31=#:new-value70068 #32=#:obj70067) #31# #32# #:g70092 #:g70093 si::structure-set #Y(#29# nil nil (24 45 127 24 45 128 26 10 0 45 129 10 2 45 130 13 1 15 17 9 1 13 0 19 4 131 43 1 43 1 29) #1# #8# 714) (function (ext::lambda-block #29# #30# #26# (declare (type cl-protobufs.meshtastic::mesh-packet #31#)) nil (setf (cl-protobufs.meshtastic::service-envelope-%packet #32#) #31#))) ((inline cl-protobufs.meshtastic::service-envelope.%%has-packet)) cl-protobufs.meshtastic::service-envelope.%%has-packet (defun cl-protobufs.meshtastic::service-envelope.%%has-packet) (#8# . 714) #33=(#32#) #34=#:cur-value70069 eq #Y(cl-protobufs.meshtastic::service-envelope.%%has-packet nil nil (24 45 128 26 13 0 19 1 106 45 139 13 0 75 17 140 76 73 43 1 29) #1# #8# 714) (function (ext::lambda-block cl-protobufs.meshtastic::service-envelope.%%has-packet #33# #26# (let ((#34# (cl-protobufs.meshtastic::service-envelope-%packet #32#))) (not (eq #34# nil))))) ((inline cl-protobufs.meshtastic::service-envelope.clear-packet)) cl-protobufs.meshtastic::service-envelope.clear-packet (defun cl-protobufs.meshtastic::service-envelope.clear-packet) (#8# . 714) #35=(#32#) #:g70096 #:g70097 #Y(cl-protobufs.meshtastic::service-envelope.clear-packet nil nil (24 45 128 26 10 0 45 148 75 45 149 13 1 15 17 9 1 13 0 19 4 131 43 1 43 1 29) #1# #8# 714) (function (ext::lambda-block cl-protobufs.meshtastic::service-envelope.clear-packet #35# #26# nil (setf (cl-protobufs.meshtastic::service-envelope-%packet #32#) nil))) cl-protobufs.meshtastic::packet (defmethod cl-protobufs.meshtastic::packet (#32# cl-protobufs.meshtastic::service-envelope)) (#8# . 714) (cl-protobufs.meshtastic::service-envelope) (#32#) #Y(cl-protobufs.meshtastic::packet nil nil (24 45 128 26 13 0 19 1 115 29) #1# #8# 714) clos::install-method #36=(setf cl-protobufs.meshtastic::packet) (defmethod #36# #31# (#32# cl-protobufs.meshtastic::service-envelope)) (#8# . 714) (t cl-protobufs.meshtastic::service-envelope) (#31# #32#) #:g70104 #:g70105 (setf cl-protobufs.meshtastic::service-envelope.packet) #Y(#36# nil nil (24 45 127 24 45 128 26 10 0 45 164 10 2 45 165 13 0 13 1 33 166 18 2 43 1 43 1 29) #1# #8# 714) cl-protobufs.implementation::set-field-accessor-functions (cl-protobufs.meshtastic::service-envelope.clear-packet) export (cl-protobufs.meshtastic::service-envelope.packet) ((inline cl-protobufs.meshtastic::service-envelope.channel-id)) cl-protobufs.meshtastic::service-envelope.channel-id (defun cl-protobufs.meshtastic::service-envelope.channel-id) (#8# . 714) #37=(#38=#:obj70070) #38# #Y(cl-protobufs.meshtastic::service-envelope.channel-id nil nil (24 45 177 26 13 0 19 1 102 29) #1# #8# 714) (function (ext::lambda-block cl-protobufs.meshtastic::service-envelope.channel-id #37# #26# (the string (cl-protobufs.meshtastic::service-envelope-%channel-id #38#)))) ((inline #39=(setf cl-protobufs.meshtastic::service-envelope.channel-id))) #39# (defun #39#) (#8# . 714) #40=(#41=#:new-value70072 #42=#:obj70071) #41# #42# #:g70108 #:g70109 #Y(#39# nil nil (24 45 185 24 45 186 26 10 0 45 187 10 2 45 188 13 1 15 17 9 2 13 0 19 4 131 43 1 43 1 29) #1# #8# 714) (function (ext::lambda-block #39# #40# #26# (declare (type string #41#)) nil (setf (cl-protobufs.meshtastic::service-envelope-%channel-id #42#) #41#))) ((inline cl-protobufs.meshtastic::service-envelope.%%has-channel-id)) cl-protobufs.meshtastic::service-envelope.%%has-channel-id (defun cl-protobufs.meshtastic::service-envelope.%%has-channel-id) (#8# . 714) #43=(#42#) #44=#:cur-value70073 length > #Y(cl-protobufs.meshtastic::service-envelope.%%has-channel-id nil nil (24 45 186 26 13 0 19 1 102 45 196 10 0 16 197 12 9 0 19 2 198 43 1 29) #1# #8# 714) (function (ext::lambda-block cl-protobufs.meshtastic::service-envelope.%%has-channel-id #43# #26# (let ((#44# (cl-protobufs.meshtastic::service-envelope-%channel-id #42#))) (> (length #44#) 0)))) ((inline cl-protobufs.meshtastic::service-envelope.clear-channel-id)) cl-protobufs.meshtastic::service-envelope.clear-channel-id (defun cl-protobufs.meshtastic::service-envelope.clear-channel-id) (#8# . 714) #45=(#42#) #:g70112 #:g70113 #Y(cl-protobufs.meshtastic::service-envelope.clear-channel-id nil nil (24 45 186 26 10 0 45 206 1 38 45 207 13 1 15 17 9 2 13 0 19 4 131 43 1 43 1 29) #1# #8# 714) (function (ext::lambda-block cl-protobufs.meshtastic::service-envelope.clear-channel-id #45# #26# nil (setf (cl-protobufs.meshtastic::service-envelope-%channel-id #42#) #3#))) cl-protobufs.meshtastic::channel-id (defmethod cl-protobufs.meshtastic::channel-id (#42# cl-protobufs.meshtastic::service-envelope)) (#8# . 714) (cl-protobufs.meshtastic::service-envelope) (#42#) #Y(cl-protobufs.meshtastic::channel-id nil nil (24 45 186 26 13 0 19 1 173 29) #1# #8# 714) #46=(setf cl-protobufs.meshtastic::channel-id) (defmethod #46# #41# (#42# cl-protobufs.meshtastic::service-envelope)) (#8# . 714) (t cl-protobufs.meshtastic::service-envelope) (#41# #42#) #:g70120 #:g70121 (setf cl-protobufs.meshtastic::service-envelope.channel-id) #Y(#46# nil nil (24 45 185 24 45 186 26 10 0 45 221 10 2 45 222 13 0 13 1 33 223 18 2 43 1 43 1 29) #1# #8# 714) (cl-protobufs.meshtastic::service-envelope.clear-channel-id) (cl-protobufs.meshtastic::service-envelope.channel-id) ((inline cl-protobufs.meshtastic::service-envelope.gateway-id)) cl-protobufs.meshtastic::service-envelope.gateway-id (defun cl-protobufs.meshtastic::service-envelope.gateway-id) (#8# . 714) #47=(#48=#:obj70074) #48# #Y(cl-protobufs.meshtastic::service-envelope.gateway-id nil nil (24 45 232 26 13 0 19 1 98 29) #1# #8# 714) (function (ext::lambda-block cl-protobufs.meshtastic::service-envelope.gateway-id #47# #26# (the string (cl-protobufs.meshtastic::service-envelope-%gateway-id #48#)))) ((inline #49=(setf cl-protobufs.meshtastic::service-envelope.gateway-id))) #49# (defun #49#) (#8# . 714) #50=(#51=#:new-value70076 #52=#:obj70075) #51# #52# #:g70124 #:g70125 #Y(#49# nil nil (24 45 240 24 45 241 26 10 0 45 242 10 2 45 243 13 1 15 17 9 3 13 0 19 4 131 43 1 43 1 29) #1# #8# 714) (function (ext::lambda-block #49# #50# #26# (declare (type string #51#)) nil (setf (cl-protobufs.meshtastic::service-envelope-%gateway-id #52#) #51#))) ((inline cl-protobufs.meshtastic::service-envelope.%%has-gateway-id)) cl-protobufs.meshtastic::service-envelope.%%has-gateway-id (defun cl-protobufs.meshtastic::service-envelope.%%has-gateway-id) (#8# . 714) #53=(#52#) #54=#:cur-value70077 #Y(cl-protobufs.meshtastic::service-envelope.%%has-gateway-id nil nil (24 45 241 26 13 0 19 1 98 45 251 10 0 16 197 12 9 0 19 2 198 43 1 29) #1# #8# 714) (function (ext::lambda-block cl-protobufs.meshtastic::service-envelope.%%has-gateway-id #53# #26# (let ((#54# (cl-protobufs.meshtastic::service-envelope-%gateway-id #52#))) (> (length #54#) 0)))) ((inline cl-protobufs.meshtastic::service-envelope.clear-gateway-id)) cl-protobufs.meshtastic::service-envelope.clear-gateway-id (defun cl-protobufs.meshtastic::service-envelope.clear-gateway-id) (#8# . 714) #55=(#52#) #:g70128 #:g70129 #Y(cl-protobufs.meshtastic::service-envelope.clear-gateway-id nil nil (24 45 241 26 10 0 45 259 1 38 45 260 13 1 15 17 9 3 13 0 19 4 131 43 1 43 1 29) #1# #8# 714) (function (ext::lambda-block cl-protobufs.meshtastic::service-envelope.clear-gateway-id #55# #26# nil (setf (cl-protobufs.meshtastic::service-envelope-%gateway-id #52#) #3#))) cl-protobufs.meshtastic::gateway-id (defmethod cl-protobufs.meshtastic::gateway-id (#52# cl-protobufs.meshtastic::service-envelope)) (#8# . 714) (cl-protobufs.meshtastic::service-envelope) (#52#) #Y(cl-protobufs.meshtastic::gateway-id nil nil (24 45 241 26 13 0 19 1 228 29) #1# #8# 714) #56=(setf cl-protobufs.meshtastic::gateway-id) (defmethod #56# #51# (#52# cl-protobufs.meshtastic::service-envelope)) (#8# . 714) (t cl-protobufs.meshtastic::service-envelope) (#51# #52#) #:g70136 #:g70137 (setf cl-protobufs.meshtastic::service-envelope.gateway-id) #Y(#56# nil nil (24 45 240 24 45 241 26 10 0 45 274 10 2 45 275 13 0 13 1 33 276 18 2 43 1 43 1 29) #1# #8# 714) (cl-protobufs.meshtastic::service-envelope.clear-gateway-id) (cl-protobufs.meshtastic::service-envelope.gateway-id) ((inline cl-protobufs.meshtastic::make-service-envelope)) cl-protobufs.meshtastic::make-service-envelope (defun cl-protobufs.meshtastic::make-service-envelope) (#8# . 714) #57=(&key (cl-protobufs.meshtastic::packet :%unset) (cl-protobufs.meshtastic::channel-id :%unset) (cl-protobufs.meshtastic::gateway-id :%unset)) (nil :gateway-id :channel-id :packet) :%unset #58=#:obj70065 #:g70144 #:g70145 (setf cl-protobufs.meshtastic::service-envelope.packet) #:g70146 #:g70147 (setf cl-protobufs.meshtastic::service-envelope.channel-id) #:g70148 #:g70149 (setf cl-protobufs.meshtastic::service-envelope.gateway-id) #Y(cl-protobufs.meshtastic::make-service-envelope nil nil (28 285 22 40 3 14 286 46 152 22 40 3 14 286 46 210 22 40 3 14 286 46 263 19 0 30 45 287 13 3 11 286 17 140 40 4 10 3 76 76 39 21 10 0 45 288 10 4 45 289 13 0 13 1 33 290 18 2 43 1 43 1 13 2 11 286 17 140 40 4 10 2 76 76 39 21 10 0 45 291 10 3 45 292 13 0 13 1 33 293 18 2 43 1 43 1 13 1 11 286 17 140 40 4 10 1 76 76 39 21 10 0 45 294 10 2 45 295 13 0 13 1 33 296 18 2 43 1 43 1 10 0 73 43 1 29) #1# #8# 714) (function (ext::lambda-block cl-protobufs.meshtastic::make-service-envelope #57# #26# (let ((#58# (cl-protobufs.meshtastic::%make-service-envelope))) (unless (or (eq cl-protobufs.meshtastic::packet :%unset) (not cl-protobufs.meshtastic::packet)) (setf (cl-protobufs.meshtastic::service-envelope.packet #58#) cl-protobufs.meshtastic::packet)) (unless (or (eq cl-protobufs.meshtastic::channel-id :%unset) (not cl-protobufs.meshtastic::channel-id)) (setf (cl-protobufs.meshtastic::service-envelope.channel-id #58#) cl-protobufs.meshtastic::channel-id)) (unless (or (eq cl-protobufs.meshtastic::gateway-id :%unset) (not cl-protobufs.meshtastic::gateway-id)) (setf (cl-protobufs.meshtastic::service-envelope.gateway-id #58#) cl-protobufs.meshtastic::gateway-id)) #58#))) cl-protobufs.meshtastic::service-envelope.clear-%%is-set (defun cl-protobufs.meshtastic::service-envelope.clear-%%is-set) (#8# . 714) (#58#) fill #Y(cl-protobufs.meshtastic::service-envelope.clear-%%is-set nil nil (24 45 287 26 13 0 19 1 74 12 9 0 19 2 303 29) #1# #8# 714) (cl-protobufs.meshtastic::make-service-envelope cl-protobufs.meshtastic::service-envelope-%%is-set) cl-protobufs::clear (defmethod cl-protobufs::clear (#58# cl-protobufs.meshtastic::service-envelope)) (#8# . 714) (cl-protobufs.meshtastic::service-envelope) (#58#) #:g70156 #:g70157 #Y(cl-protobufs::clear nil nil (24 45 287 26 10 0 45 311 75 45 312 13 1 15 22 9 0 13 0 19 4 131 43 1 43 1 13 0 19 1 144 13 0 19 1 202 13 0 19 1 255 13 0 19 1 299 29) #1# #8# 714) 0 :message cl-protobufs.implementation::record-protobuf-object 0 allocate-instance cl-protobufs.implementation::msg-desc cl-protobufs::message-descriptor #:g70158 class #:g70159 #:g70160 (setf slot-value) #:g70161 cl-protobufs.implementation::name #:g70162 "ServiceEnvelope" #:g70163 (setf slot-value) #:g70164 cl-protobufs.implementation::qual-name #:g70165 "meshtastic.ServiceEnvelope" #:g70166 (setf slot-value) #:g70167 cl-protobufs.implementation::options #:g70168 #:g70169 (setf slot-value) #:g70170 cl-protobufs.implementation::alias #:g70171 #:g70172 (setf slot-value) #:g70173 cl-protobufs.implementation::fields #:g70174 0 #:g70175 (setf slot-value) #:g70176 cl-protobufs.implementation::oneofs #:g70177 #:g70178 (setf slot-value) cl-protobufs.implementation::field-vect slot-makunbound #:g70179 cl-protobufs.implementation::extended-fields #:g70180 #:g70181 (setf slot-value) #:g70182 cl-protobufs.implementation::extensions #:g70183 #:g70184 (setf slot-value) #:g70185 cl-protobufs.implementation::message-type #:g70186 #:g70187 (setf slot-value) 0 rplaca 0 rplacd 0 cl-protobufs::field-descriptor #:g70188 #:g70189 cl-protobufs.meshtastic::mesh-packet #:g70190 (setf slot-value) #:g70191 #:g70192 "packet" #:g70193 (setf slot-value) #:g70194 #:g70195 "meshtastic.ServiceEnvelope.packet" #:g70196 (setf slot-value) #:g70197 #:g70198 #:g70199 (setf slot-value) #:g70200 cl-protobufs.implementation::kind #:g70201 #:g70202 (setf slot-value) #:g70203 type #:g70204 #:g70205 (setf slot-value) #:g70206 cl-protobufs.implementation::label #:g70207 :optional #:g70208 (setf slot-value) #:g70209 cl-protobufs.implementation::index #:g70210 #:g70211 (setf slot-value) #:g70212 cl-protobufs.implementation::field-offset #:g70213 #:g70214 (setf slot-value) #:g70215 cl-protobufs.implementation::oneof-offset #:g70216 #:g70217 (setf slot-value) #:g70218 cl-protobufs.implementation::internal-field-name #:g70219 #:g70220 (setf slot-value) #:g70221 cl-protobufs.implementation::external-field-name #:g70222 #:g70223 (setf slot-value) #:g70224 cl-protobufs.implementation::json-name #:g70225 "packet" #:g70226 (setf slot-value) #:g70227 cl-protobufs.implementation::default #:g70228 cl-protobufs.implementation::empty-default #:g70229 (setf slot-value) #:g70230 cl-protobufs.implementation::packed #:g70231 #:g70232 (setf slot-value) #:g70233 cl-protobufs.implementation::container #:g70234 #:g70235 (setf slot-value) #:g70236 cl-protobufs.implementation::lazy #:g70237 #:g70238 (setf slot-value) #:g70239 cl-protobufs.implementation::bool-index #:g70240 #:g70241 (setf slot-value) 0 0 #:g70242 #:g70243 #:g70244 (setf slot-value) #:g70245 #:g70246 "channel_id" #:g70247 (setf slot-value) #:g70248 #:g70249 "meshtastic.ServiceEnvelope.channel_id" #:g70250 (setf slot-value) #:g70251 #:g70252 #:g70253 (setf slot-value) #:g70254 #:g70255 :scalar #:g70256 (setf slot-value) #:g70257 #:g70258 #:g70259 (setf slot-value) #:g70260 #:g70261 #:g70262 (setf slot-value) #:g70263 #:g70264 #:g70265 (setf slot-value) #:g70266 #:g70267 #:g70268 (setf slot-value) #:g70269 #:g70270 #:g70271 (setf slot-value) #:g70272 #:g70273 #:g70274 (setf slot-value) #:g70275 #:g70276 #:g70277 (setf slot-value) #:g70278 #:g70279 "channelId" #:g70280 (setf slot-value) #:g70281 #:g70282 #:g70283 (setf slot-value) #:g70284 #:g70285 #:g70286 (setf slot-value) #:g70287 #:g70288 #:g70289 (setf slot-value) #:g70290 #:g70291 #:g70292 (setf slot-value) #:g70293 #:g70294 #:g70295 (setf slot-value) 0 #:g70296 #:g70297 #:g70298 (setf slot-value) #:g70299 #:g70300 "gateway_id" #:g70301 (setf slot-value) #:g70302 #:g70303 "meshtastic.ServiceEnvelope.gateway_id" #:g70304 (setf slot-value) #:g70305 #:g70306 #:g70307 (setf slot-value) #:g70308 #:g70309 #:g70310 (setf slot-value) #:g70311 #:g70312 #:g70313 (setf slot-value) #:g70314 #:g70315 #:g70316 (setf slot-value) #:g70317 #:g70318 #:g70319 (setf slot-value) #:g70320 #:g70321 #:g70322 (setf slot-value) #:g70323 #:g70324 #:g70325 (setf slot-value) #:g70326 #:g70327 #:g70328 (setf slot-value) #:g70329 #:g70330 #:g70331 (setf slot-value) #:g70332 #:g70333 "gatewayId" #:g70334 (setf slot-value) #:g70335 #:g70336 #:g70337 (setf slot-value) #:g70338 #:g70339 #:g70340 (setf slot-value) #:g70341 #:g70342 #:g70343 (setf slot-value) #:g70344 #:g70345 #:g70346 (setf slot-value) #:g70347 #:g70348 #:g70349 (setf slot-value) (cl-protobufs.meshtastic::channel-id cl-protobufs.meshtastic::gateway-id cl-protobufs.meshtastic::mqtt cl-protobufs.meshtastic::packet cl-protobufs.meshtastic::service-envelope))) #8# 0) #Y(si::bytecodes nil nil (1 2 16 3 76 73 39 18 15 4 77 77 77 77 15 5 77 77 77 77 77 77 19 12 6 29) #1# #8# 131) #Y(si::bytecodes nil nil (1 7 16 1 29) #1# #8# 537) #Y(si::bytecodes nil nil (15 8 14 9 14 10 14 11 15 12 19 5 13 29) #1# #8# 580) #Y(si::bytecodes nil nil (15 14 15 15 19 2 16 15 17 15 18 77 77 15 19 15 20 15 21 15 22 77 77 15 23 9 6 77 77 77 19 15 24 15 25 15 26 15 27 15 28 19 4 29 15 30 15 26 15 31 15 32 19 4 29 15 30 14 33 77 15 34 19 4 29 15 17 19 1 70 78 66 15 30 1 68 12 19 2 69 15 30 15 71 15 72 19 3 73 1 74 16 75 45 76 10 0 39 10 10 0 16 77 39 4 11 78 76 39 16 15 79 15 80 15 81 15 82 14 11 13 0 19 6 83 43 1 15 74 15 84 1 93 12 19 3 73 1 94 16 75 45 76 10 0 39 10 10 0 16 77 39 4 11 78 76 39 16 15 79 15 80 15 81 15 95 14 11 13 0 19 6 83 43 1 15 94 15 84 1 97 12 19 3 73 1 98 16 75 45 76 10 0 39 10 10 0 16 77 39 4 11 78 76 39 16 15 79 15 80 15 81 15 99 14 11 13 0 19 6 83 43 1 15 98 15 84 1 101 12 19 3 73 1 102 16 75 45 76 10 0 39 10 10 0 16 77 39 4 11 78 76 39 16 15 79 15 80 15 81 15 103 14 11 13 0 19 6 83 43 1 15 102 15 84 1 105 12 19 3 73 1 106 16 75 45 76 10 0 39 10 10 0 16 77 39 4 11 78 76 39 16 15 79 15 80 15 81 15 107 14 11 13 0 19 6 83 43 1 15 106 15 84 1 109 12 19 3 73 1 110 16 75 45 76 10 0 39 10 10 0 16 77 39 4 11 78 76 39 16 15 79 15 80 15 81 15 111 14 11 13 0 19 6 83 43 1 15 110 15 84 1 113 12 19 3 73 15 14 15 114 19 2 16 15 115 15 26 15 116 15 117 19 4 29 15 115 14 33 77 15 118 19 4 29 15 115 1 120 12 19 2 69 15 115 15 71 15 121 19 3 73 15 14 15 122 19 2 16 15 123 15 26 15 124 15 125 19 4 29 15 123 14 33 77 15 126 19 4 29 15 123 1 132 12 19 2 69 15 123 15 71 15 133 19 3 73 15 14 15 134 19 2 16 15 135 15 26 15 136 15 137 19 4 29 15 135 14 33 77 15 138 19 4 29 15 135 1 141 12 19 2 69 15 135 15 71 15 142 19 3 73 15 14 15 143 19 2 16 15 144 15 26 15 145 15 146 19 4 29 15 144 14 33 77 15 147 19 4 29 15 144 1 150 12 19 2 69 15 144 15 71 15 151 19 3 73 15 152 15 26 15 153 15 154 19 4 29 15 152 77 15 155 15 156 1 157 12 19 5 158 15 159 15 26 15 160 15 161 19 4 29 15 159 77 15 162 15 163 1 167 12 19 5 158 15 17 15 152 19 2 168 15 169 19 1 170 15 171 19 1 170 15 14 15 172 19 2 16 15 173 15 26 15 174 15 175 19 4 29 15 173 14 33 77 15 176 19 4 29 15 173 1 178 12 19 2 69 15 173 15 71 15 179 19 3 73 15 14 15 180 19 2 16 15 181 15 26 15 182 15 183 19 4 29 15 181 14 33 77 15 184 19 4 29 15 181 1 189 12 19 2 69 15 181 15 71 15 190 19 3 73 15 14 15 191 19 2 16 15 192 15 26 15 193 15 194 19 4 29 15 192 14 33 77 15 195 19 4 29 15 192 1 199 12 19 2 69 15 192 15 71 15 200 19 3 73 15 14 15 201 19 2 16 15 202 15 26 15 203 15 204 19 4 29 15 202 14 33 77 15 205 19 4 29 15 202 1 208 12 19 2 69 15 202 15 71 15 209 19 3 73 15 210 15 26 15 211 15 212 19 4 29 15 210 77 15 213 15 214 1 215 12 19 5 158 15 216 15 26 15 217 15 218 19 4 29 15 216 77 15 219 15 220 1 224 12 19 5 158 15 17 15 210 19 2 168 15 225 19 1 170 15 226 19 1 170 15 14 15 227 19 2 16 15 228 15 26 15 229 15 230 19 4 29 15 228 14 33 77 15 231 19 4 29 15 228 1 233 12 19 2 69 15 228 15 71 15 234 19 3 73 15 14 15 235 19 2 16 15 236 15 26 15 237 15 238 19 4 29 15 236 14 33 77 15 239 19 4 29 15 236 1 244 12 19 2 69 15 236 15 71 15 245 19 3 73 15 14 15 246 19 2 16 15 247 15 26 15 248 15 249 19 4 29 15 247 14 33 77 15 250 19 4 29 15 247 1 252 12 19 2 69 15 247 15 71 15 253 19 3 73 15 14 15 254 19 2 16 15 255 15 26 15 256 15 257 19 4 29 15 255 14 33 77 15 258 19 4 29 15 255 1 261 12 19 2 69 15 255 15 71 15 262 19 3 73 15 263 15 26 15 264 15 265 19 4 29 15 263 77 15 266 15 267 1 268 12 19 5 158 15 269 15 26 15 270 15 271 19 4 29 15 269 77 15 272 15 273 1 277 12 19 5 158 15 17 15 263 19 2 168 15 278 19 1 170 15 279 19 1 170 15 14 15 280 19 2 16 15 281 15 26 15 282 15 283 19 4 29 15 281 14 33 77 15 284 19 4 29 15 281 1 297 12 19 2 69 15 281 15 71 15 298 19 3 73 15 299 15 26 15 300 15 301 19 4 29 15 299 14 33 77 15 302 19 4 29 15 299 1 304 12 19 2 69 15 305 19 1 170 15 306 15 26 15 307 15 308 19 4 29 15 306 77 15 309 15 310 1 313 12 19 5 158 15 320 19 1 70 78 317 15 317 19 1 318 45 319 15 315 13 0 14 315 19 3 316 10 0 43 1 78 314 77 75 3 78 351 15 381 19 1 70 78 380 15 380 19 1 318 78 376 1 376 45 382 1 322 45 383 1 384 45 385 13 0 13 2 13 1 33 386 18 3 43 1 43 2 1 376 45 387 1 327 45 388 1 389 45 390 13 0 13 2 13 1 33 391 18 3 43 1 43 2 1 376 45 392 1 333 45 393 1 394 45 395 13 0 13 2 13 1 33 396 18 3 43 1 43 2 1 376 45 397 1 339 45 398 75 45 399 13 0 13 2 13 1 33 400 18 3 43 1 43 2 1 376 45 401 1 402 45 403 1 315 45 404 13 0 13 2 13 1 33 405 18 3 43 1 43 2 1 376 45 406 1 407 45 408 1 384 45 409 13 0 13 2 13 1 33 410 18 3 43 1 43 2 1 376 45 411 1 412 45 413 1 414 45 415 13 0 13 2 13 1 33 416 18 3 43 1 43 2 1 376 45 417 1 418 45 419 8 1 45 420 13 0 13 2 13 1 33 421 18 3 43 1 43 2 1 376 45 422 1 423 45 424 75 45 425 13 0 13 2 13 1 33 426 18 3 43 1 43 2 1 376 45 427 1 428 45 429 75 45 430 13 0 13 2 13 1 33 431 18 3 43 1 43 2 1 376 45 432 1 433 45 434 1 62 45 435 13 0 13 2 13 1 33 436 18 3 43 1 43 2 1 376 45 437 1 438 45 439 1 152 45 440 13 0 13 2 13 1 33 441 18 3 43 1 43 2 1 376 45 442 1 443 45 444 1 445 45 446 13 0 13 2 13 1 33 447 18 3 43 1 43 2 1 376 45 448 1 449 45 450 1 451 45 452 13 0 13 2 13 1 33 453 18 3 43 1 43 2 1 376 45 454 1 455 45 456 75 45 457 13 0 13 2 13 1 33 458 18 3 43 1 43 2 1 376 45 459 1 460 45 461 75 45 462 13 0 13 2 13 1 33 463 18 3 43 1 43 2 1 376 45 464 1 465 45 466 75 45 467 13 0 13 2 13 1 33 468 18 3 43 1 43 2 1 376 45 469 1 470 45 471 75 45 472 13 0 13 2 13 1 33 473 18 3 43 1 43 2 77 75 3 78 378 15 380 19 1 318 78 474 1 474 45 476 1 322 45 477 1 56 45 478 13 0 13 2 13 1 33 479 18 3 43 1 43 2 1 474 45 480 1 327 45 481 1 482 45 483 13 0 13 2 13 1 33 484 18 3 43 1 43 2 1 474 45 485 1 333 45 486 1 487 45 488 13 0 13 2 13 1 33 489 18 3 43 1 43 2 1 474 45 490 1 339 45 491 75 45 492 13 0 13 2 13 1 33 493 18 3 43 1 43 2 1 474 45 494 1 402 45 495 1 496 45 497 13 0 13 2 13 1 33 498 18 3 43 1 43 2 1 474 45 499 1 407 45 500 1 56 45 501 13 0 13 2 13 1 33 502 18 3 43 1 43 2 1 474 45 503 1 412 45 504 1 414 45 505 13 0 13 2 13 1 33 506 18 3 43 1 43 2 1 474 45 507 1 418 45 508 8 2 45 509 13 0 13 2 13 1 33 510 18 3 43 1 43 2 1 474 45 511 1 423 45 512 75 45 513 13 0 13 2 13 1 33 514 18 3 43 1 43 2 1 474 45 515 1 428 45 516 75 45 517 13 0 13 2 13 1 33 518 18 3 43 1 43 2 1 474 45 519 1 433 45 520 1 59 45 521 13 0 13 2 13 1 33 522 18 3 43 1 43 2 1 474 45 523 1 438 45 524 1 210 45 525 13 0 13 2 13 1 33 526 18 3 43 1 43 2 1 474 45 527 1 443 45 528 1 529 45 530 13 0 13 2 13 1 33 531 18 3 43 1 43 2 1 474 45 532 1 449 45 533 1 451 45 534 13 0 13 2 13 1 33 535 18 3 43 1 43 2 1 474 45 536 1 455 45 537 75 45 538 13 0 13 2 13 1 33 539 18 3 43 1 43 2 1 474 45 540 1 460 45 541 75 45 542 13 0 13 2 13 1 33 543 18 3 43 1 43 2 1 474 45 544 1 465 45 545 75 45 546 13 0 13 2 13 1 33 547 18 3 43 1 43 2 1 474 45 548 1 470 45 549 75 45 550 13 0 13 2 13 1 33 551 18 3 43 1 43 2 77 75 3 78 475 15 380 19 1 318 78 552 1 552 45 553 1 322 45 554 1 56 45 555 13 0 13 2 13 1 33 556 18 3 43 1 43 2 1 552 45 557 1 327 45 558 1 559 45 560 13 0 13 2 13 1 33 561 18 3 43 1 43 2 1 552 45 562 1 333 45 563 1 564 45 565 13 0 13 2 13 1 33 566 18 3 43 1 43 2 1 552 45 567 1 339 45 568 75 45 569 13 0 13 2 13 1 33 570 18 3 43 1 43 2 1 552 45 571 1 402 45 572 1 496 45 573 13 0 13 2 13 1 33 574 18 3 43 1 43 2 1 552 45 575 1 407 45 576 1 56 45 577 13 0 13 2 13 1 33 578 18 3 43 1 43 2 1 552 45 579 1 412 45 580 1 414 45 581 13 0 13 2 13 1 33 582 18 3 43 1 43 2 1 552 45 583 1 418 45 584 8 3 45 585 13 0 13 2 13 1 33 586 18 3 43 1 43 2 1 552 45 587 1 423 45 588 75 45 589 13 0 13 2 13 1 33 590 18 3 43 1 43 2 1 552 45 591 1 428 45 592 75 45 593 13 0 13 2 13 1 33 594 18 3 43 1 43 2 1 552 45 595 1 433 45 596 1 57 45 597 13 0 13 2 13 1 33 598 18 3 43 1 43 2 1 552 45 599 1 438 45 600 1 263 45 601 13 0 13 2 13 1 33 602 18 3 43 1 43 2 1 552 45 603 1 443 45 604 1 605 45 606 13 0 13 2 13 1 33 607 18 3 43 1 43 2 1 552 45 608 1 449 45 609 1 451 45 610 13 0 13 2 13 1 33 611 18 3 43 1 43 2 1 552 45 612 1 455 45 613 75 45 614 13 0 13 2 13 1 33 615 18 3 43 1 43 2 1 552 45 616 1 460 45 617 75 45 618 13 0 13 2 13 1 33 619 18 3 43 1 43 2 1 552 45 620 1 465 45 621 75 45 622 13 0 13 2 13 1 33 623 18 3 43 1 43 2 1 552 45 624 1 470 45 625 75 45 626 13 0 13 2 13 1 33 627 18 3 43 1 43 2 15 475 1 552 17 377 15 475 75 17 379 15 378 1 474 17 377 15 378 1 475 17 379 15 351 1 376 17 377 15 351 1 378 17 379 1 314 45 321 1 322 45 323 1 17 45 324 13 0 13 2 13 1 33 325 18 3 43 1 43 2 1 314 45 326 1 327 45 328 1 329 45 330 13 0 13 2 13 1 33 331 18 3 43 1 43 2 1 314 45 332 1 333 45 334 1 335 45 336 13 0 13 2 13 1 33 337 18 3 43 1 43 2 1 314 45 338 1 339 45 340 75 45 341 13 0 13 2 13 1 33 342 18 3 43 1 43 2 1 314 45 343 1 344 45 345 75 45 346 13 0 13 2 13 1 33 347 18 3 43 1 43 2 1 314 45 348 1 349 45 350 1 351 45 352 13 0 13 2 13 1 33 353 18 3 43 1 43 2 1 314 45 354 1 355 45 356 75 45 357 13 0 13 2 13 1 33 358 18 3 43 1 43 2 15 314 1 359 17 360 1 314 45 361 1 362 45 363 75 45 364 13 0 13 2 13 1 33 365 18 3 43 1 43 2 1 314 45 366 1 367 45 368 75 45 369 13 0 13 2 13 1 33 370 18 3 43 1 43 2 1 314 45 371 1 372 45 373 1 315 45 374 13 0 13 2 13 1 33 375 18 3 43 1 43 2 15 17 15 314 14 315 19 3 316 29) #1# #8# 714) #Y(si::bytecodes nil nil (15 628 19 1 170 29) #1# #8# 1114))
