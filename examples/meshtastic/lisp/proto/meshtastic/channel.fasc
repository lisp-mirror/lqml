(#Y(si::bytecodes nil nil (1 0 16 1 29) #1=#A(t (1649) ("COMMON-LISP-USER" si::select-package "CL-PROTOBUFS.MESHTASTIC" find-package "CL-PROTOBUFS.MESHTASTIC" ((#:pi . #:cl-protobufs.implementation)) si::dodefpackage "CL-PROTOBUFS.MESHTASTIC" cl-protobufs.meshtastic::channel :syntax :proto3 :package "meshtastic" cl-protobufs.implementation::define-schema proclaim ((inline cl-protobufs.meshtastic::%make-channel-settings)) mapc cl-protobufs.meshtastic::channel-settings "CHANNEL-SETTINGS-" ((cl-protobufs.meshtastic::%channel-num 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%psk #2=(cl-protobufs::make-byte-vector 0 :adjustable t) :type cl-protobufs::byte-vector) (cl-protobufs.meshtastic::%name #3="" :type string) (cl-protobufs.meshtastic::%id 0 :type cl-protobufs::fixed32) (cl-protobufs.implementation::%%bytes nil :type #4=(or null (simple-array (unsigned-byte 8)))) (cl-protobufs.implementation::%%bool-values #5=(make-array 2 :element-type (quote bit) :initial-contents #6=#*00) :type #7=(bit-vector 2)) (cl-protobufs.implementation::%%is-set #8=(make-array 0 . #9=(:element-type (quote bit) :initial-element 0)) :type #10=(bit-vector 0))) (#11=(cl-protobufs.implementation::%%skipped-bytes nil (or null cl-protobufs::byte-vector) nil 0 cl-protobufs.implementation::message-%%skipped-bytes) (cl-protobufs.meshtastic::%channel-num 0 cl-protobufs::uint32 nil 1 nil) (cl-protobufs.meshtastic::%psk #2# cl-protobufs::byte-vector nil 2 nil) (cl-protobufs.meshtastic::%name #3# string nil 3 nil) (cl-protobufs.meshtastic::%id 0 cl-protobufs::fixed32 nil 4 nil) (cl-protobufs.implementation::%%bytes nil #4# nil 5 nil) (cl-protobufs.implementation::%%bool-values #5# #7# nil 6 nil) (cl-protobufs.implementation::%%is-set #8# #10# nil 7 nil)) cl-protobufs.meshtastic::copy-channel-settings cl-protobufs::message (cl-protobufs.meshtastic::%make-channel-settings) si::define-structure #12=(cl-protobufs.meshtastic::channel-settings (:constructor cl-protobufs.meshtastic::%make-channel-settings) . #13=((:include cl-protobufs::message) (:predicate nil))) ext::location (defstruct #12#) (#14=#P"/home/polos/lqml/examples/meshtastic/lisp/proto/meshtastic/channel.lisp" . 720) ext::annotate cl-protobufs.meshtastic::%make-channel-settings (defun cl-protobufs.meshtastic::%make-channel-settings) (#14# . 720) :lambda-list #15=(&key #16=#:%%skipped-bytes (#17=#:%channel-num 0) (#18=#:%psk (cl-protobufs::make-byte-vector 0 :adjustable t)) (#19=#:%name #3#) (#20=#:%id 0) #21=#:%%bytes (#22=#:%%bool-values (make-array 2 :element-type (quote bit) :initial-contents #6#)) (#23=#:%%is-set (make-array 0 :element-type (quote bit) :initial-element 0))) (nil :%%is-set :%%bool-values :%%bytes :%id :%name :%psk :%channel-num :%%skipped-bytes) #16# #17# :adjustable t cl-protobufs::make-byte-vector #18# #3# #19# #20# #21# :element-type bit :initial-contents #6# make-array #22# :initial-element #23# #24=(bit-vector 0) typep #25=(bit-vector 0) cl-protobufs.implementation::%%is-set si::structure-type-error #26=(bit-vector 2) #27=(bit-vector 2) cl-protobufs.implementation::%%bool-values #28=(or null (simple-array (unsigned-byte 8))) #29=(or null (simple-array (unsigned-byte 8))) cl-protobufs.implementation::%%bytes cl-protobufs::fixed32 cl-protobufs.meshtastic::%id #30=(or (array base-char (*)) (array character (*))) string cl-protobufs.meshtastic::%name cl-protobufs::byte-vector cl-protobufs.meshtastic::%psk cl-protobufs::uint32 cl-protobufs.meshtastic::%channel-num #31=(or null cl-protobufs::byte-vector) #32=(or null cl-protobufs::byte-vector) cl-protobufs.implementation::%%skipped-bytes 0 si::make-structure #Y(cl-protobufs.meshtastic::%make-channel-settings nil nil (28 35 22 40 2 77 46 36 22 40 3 9 0 46 37 22 40 11 9 0 14 38 14 39 19 3 40 12 46 41 22 40 3 15 42 46 43 22 40 3 9 0 46 44 22 40 2 77 46 45 22 40 15 9 2 14 46 15 47 14 48 15 49 19 5 50 12 46 51 22 40 15 9 0 14 46 15 47 14 52 9 0 19 5 50 12 46 53 13 0 15 54 19 2 55 76 39 12 13 0 15 56 15 17 15 57 19 4 58 13 1 15 59 19 2 55 76 39 12 13 1 15 60 15 17 15 61 19 4 58 13 2 15 62 19 2 55 76 39 12 13 2 15 63 15 17 15 64 19 4 58 13 3 15 65 19 2 55 76 39 12 13 3 15 65 15 17 15 66 19 4 58 13 4 15 67 19 2 55 76 39 12 13 4 15 68 15 17 15 69 19 4 58 13 5 15 70 19 2 55 76 39 12 13 5 15 70 15 17 15 71 19 4 58 13 6 15 72 19 2 55 76 39 12 13 6 15 72 15 17 15 73 19 4 58 13 7 15 74 19 2 55 76 39 12 13 7 15 75 15 17 15 76 19 4 58 15 77 13 7 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 9 78 29) #1# #14# 720) si::fset find-class inline (function (ext::lambda-block cl-protobufs.meshtastic::%make-channel-settings #15# #33=(declare (si::c-global)) (unless (typep #23# (quote #24#)) (si::structure-type-error #23# (quote #25#) (quote cl-protobufs.meshtastic::channel-settings) (quote cl-protobufs.implementation::%%is-set))) (unless (typep #22# (quote #26#)) (si::structure-type-error #22# (quote #27#) (quote cl-protobufs.meshtastic::channel-settings) (quote cl-protobufs.implementation::%%bool-values))) (unless (typep #21# (quote #28#)) (si::structure-type-error #21# (quote #29#) (quote cl-protobufs.meshtastic::channel-settings) (quote cl-protobufs.implementation::%%bytes))) (unless (typep #20# (quote cl-protobufs::fixed32)) (si::structure-type-error #20# (quote cl-protobufs::fixed32) (quote cl-protobufs.meshtastic::channel-settings) (quote cl-protobufs.meshtastic::%id))) (unless (typep #19# (quote #30#)) (si::structure-type-error #19# (quote string) (quote cl-protobufs.meshtastic::channel-settings) (quote cl-protobufs.meshtastic::%name))) (unless (typep #18# (quote cl-protobufs::byte-vector)) (si::structure-type-error #18# (quote cl-protobufs::byte-vector) (quote cl-protobufs.meshtastic::channel-settings) (quote cl-protobufs.meshtastic::%psk))) (unless (typep #17# (quote cl-protobufs::uint32)) (si::structure-type-error #17# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::channel-settings) (quote cl-protobufs.meshtastic::%channel-num))) (unless (typep #16# (quote #31#)) (si::structure-type-error #16# (quote #32#) (quote cl-protobufs.meshtastic::channel-settings) (quote cl-protobufs.implementation::%%skipped-bytes))) (si::make-structure (load-time-value (find-class (quote cl-protobufs.meshtastic::channel-settings))) #16# #17# #18# #19# #20# #21# #22# #23#))) si::put-sysprop cl-protobufs.meshtastic::channel-settings-%%is-set symbol-package package ext::package-locked-p si::*ignore-package-locks* package-error "Ignore lock and proceed." "Attempt to define CAS accessor ~S in locked package." (cl-protobufs.meshtastic::channel-settings-%%is-set) si::signal-simple-error mp::cas-expander #:g36176 si::x gensym si::new si::old mp::compare-and-swap-structure quote si::structure-ref #Y(nil nil nil (24 45 96 24 45 97 26 19 0 98 12 19 0 98 12 46 99 46 100 77 77 13 0 13 1 15 101 13 2 15 102 1 17 6 2 12 9 7 13 0 10 1 6 6 12 15 103 13 2 15 102 1 17 6 2 12 8 7 6 4 12 72 6 43 2 29) #1# #14# 720) cl-protobufs.meshtastic::channel-settings-%%bool-values (cl-protobufs.meshtastic::channel-settings-%%bool-values) #:g36177 #Y(nil nil nil (24 45 107 24 45 97 26 19 0 98 12 19 0 98 12 46 99 46 100 77 77 13 0 13 1 15 101 13 2 15 102 1 17 6 2 12 9 6 13 0 10 1 6 6 12 15 103 13 2 15 102 1 17 6 2 12 8 6 6 4 12 72 6 43 2 29) #1# #14# 720) cl-protobufs.meshtastic::channel-settings-%%bytes (cl-protobufs.meshtastic::channel-settings-%%bytes) #:g36178 #Y(nil nil nil (24 45 111 24 45 97 26 19 0 98 12 19 0 98 12 46 99 46 100 77 77 13 0 13 1 15 101 13 2 15 102 1 17 6 2 12 9 5 13 0 10 1 6 6 12 15 103 13 2 15 102 1 17 6 2 12 8 5 6 4 12 72 6 43 2 29) #1# #14# 720) cl-protobufs.meshtastic::channel-settings-%id (cl-protobufs.meshtastic::channel-settings-%id) #:g36179 #Y(nil nil nil (24 45 115 24 45 97 26 19 0 98 12 19 0 98 12 46 99 46 100 77 77 13 0 13 1 15 101 13 2 15 102 1 17 6 2 12 9 4 13 0 10 1 6 6 12 15 103 13 2 15 102 1 17 6 2 12 8 4 6 4 12 72 6 43 2 29) #1# #14# 720) cl-protobufs.meshtastic::channel-settings-%name (cl-protobufs.meshtastic::channel-settings-%name) #:g36180 #Y(nil nil nil (24 45 119 24 45 97 26 19 0 98 12 19 0 98 12 46 99 46 100 77 77 13 0 13 1 15 101 13 2 15 102 1 17 6 2 12 9 3 13 0 10 1 6 6 12 15 103 13 2 15 102 1 17 6 2 12 8 3 6 4 12 72 6 43 2 29) #1# #14# 720) cl-protobufs.meshtastic::channel-settings-%psk (cl-protobufs.meshtastic::channel-settings-%psk) #:g36181 #Y(nil nil nil (24 45 123 24 45 97 26 19 0 98 12 19 0 98 12 46 99 46 100 77 77 13 0 13 1 15 101 13 2 15 102 1 17 6 2 12 9 2 13 0 10 1 6 6 12 15 103 13 2 15 102 1 17 6 2 12 8 2 6 4 12 72 6 43 2 29) #1# #14# 720) cl-protobufs.meshtastic::channel-settings-%channel-num (cl-protobufs.meshtastic::channel-settings-%channel-num) #:g36182 #Y(nil nil nil (24 45 127 24 45 97 26 19 0 98 12 19 0 98 12 46 99 46 100 77 77 13 0 13 1 15 101 13 2 15 102 1 17 6 2 12 9 1 13 0 10 1 6 6 12 15 103 13 2 15 102 1 17 6 2 12 8 1 6 4 12 72 6 43 2 29) #1# #14# 720) cl-protobufs.meshtastic::channel-settings-%%skipped-bytes (cl-protobufs.meshtastic::channel-settings-%%skipped-bytes) #:g36183 #Y(nil nil nil (24 45 131 24 45 97 26 19 0 98 12 19 0 98 12 46 99 46 100 77 77 13 0 13 1 15 101 13 2 15 102 1 17 6 2 12 9 0 13 0 10 1 6 6 12 15 103 13 2 15 102 1 17 6 2 12 8 0 6 4 12 72 6 43 2 29) #1# #14# 720) ((inline cl-protobufs.meshtastic::channel-settings.channel-num)) cl-protobufs.meshtastic::channel-settings.channel-num (defun cl-protobufs.meshtastic::channel-settings.channel-num) (#14# . 720) #34=(#35=#:obj36144) #35# #Y(cl-protobufs.meshtastic::channel-settings.channel-num nil nil (24 45 138 26 13 0 19 1 125 29) #1# #14# 720) (function (ext::lambda-block cl-protobufs.meshtastic::channel-settings.channel-num #34# #33# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::channel-settings-%channel-num #35#)))) ((inline #36=(setf cl-protobufs.meshtastic::channel-settings.channel-num))) #36# (defun #36#) (#14# . 720) #37=(#38=#:new-value36146 #39=#:obj36145) #38# #39# #:g36186 #:g36187 si::structure-set #Y(#36# nil nil (24 45 146 24 45 147 26 10 0 45 148 10 2 45 149 13 1 15 17 9 1 13 0 19 4 150 43 1 43 1 29) #1# #14# 720) (function (ext::lambda-block #36# #37# #33# (declare (type cl-protobufs::uint32 #38#)) nil (setf (cl-protobufs.meshtastic::channel-settings-%channel-num #39#) #38#))) ((inline cl-protobufs.meshtastic::channel-settings.%%has-channel-num)) cl-protobufs.meshtastic::channel-settings.%%has-channel-num (defun cl-protobufs.meshtastic::channel-settings.%%has-channel-num) (#14# . 720) #40=(#39#) #41=#:cur-value36147 eq #Y(cl-protobufs.meshtastic::channel-settings.%%has-channel-num nil nil (24 45 147 26 13 0 19 1 125 45 158 13 0 8 0 17 159 76 73 43 1 29) #1# #14# 720) (function (ext::lambda-block cl-protobufs.meshtastic::channel-settings.%%has-channel-num #40# #33# (let ((#41# (cl-protobufs.meshtastic::channel-settings-%channel-num #39#))) (not (eq #41# 0))))) ((inline cl-protobufs.meshtastic::channel-settings.clear-channel-num)) cl-protobufs.meshtastic::channel-settings.clear-channel-num (defun cl-protobufs.meshtastic::channel-settings.clear-channel-num) (#14# . 720) #42=(#39#) #:g36190 #:g36191 #Y(cl-protobufs.meshtastic::channel-settings.clear-channel-num nil nil (24 45 147 26 10 0 45 167 8 0 45 168 13 1 15 17 9 1 13 0 19 4 150 43 1 43 1 29) #1# #14# 720) (function (ext::lambda-block cl-protobufs.meshtastic::channel-settings.clear-channel-num #42# #33# nil (setf (cl-protobufs.meshtastic::channel-settings-%channel-num #39#) 0))) cl-protobufs.meshtastic::channel-num (defmethod cl-protobufs.meshtastic::channel-num (#39# cl-protobufs.meshtastic::channel-settings)) (#14# . 720) (cl-protobufs.meshtastic::channel-settings) (#39#) #Y(cl-protobufs.meshtastic::channel-num nil nil (24 45 147 26 13 0 19 1 134 29) #1# #14# 720) clos::install-method #43=(setf cl-protobufs.meshtastic::channel-num) (defmethod #43# #38# (#39# cl-protobufs.meshtastic::channel-settings)) (#14# . 720) (t cl-protobufs.meshtastic::channel-settings) (#38# #39#) #:g36198 #:g36199 (setf cl-protobufs.meshtastic::channel-settings.channel-num) #Y(#43# nil nil (24 45 146 24 45 147 26 10 0 45 183 10 2 45 184 13 0 13 1 33 185 18 2 43 1 43 1 29) #1# #14# 720) cl-protobufs.implementation::set-field-accessor-functions (cl-protobufs.meshtastic::channel-settings.clear-channel-num) export (cl-protobufs.meshtastic::channel-settings.channel-num) ((inline cl-protobufs.meshtastic::channel-settings.psk)) cl-protobufs.meshtastic::channel-settings.psk (defun cl-protobufs.meshtastic::channel-settings.psk) (#14# . 720) #44=(#45=#:obj36148) #45# #Y(cl-protobufs.meshtastic::channel-settings.psk nil nil (24 45 196 26 13 0 19 1 121 29) #1# #14# 720) (function (ext::lambda-block cl-protobufs.meshtastic::channel-settings.psk #44# #33# (the cl-protobufs::byte-vector (cl-protobufs.meshtastic::channel-settings-%psk #45#)))) ((inline #46=(setf cl-protobufs.meshtastic::channel-settings.psk))) #46# (defun #46#) (#14# . 720) #47=(#48=#:new-value36150 #49=#:obj36149) #48# #49# #:g36202 #:g36203 #Y(#46# nil nil (24 45 204 24 45 205 26 10 0 45 206 10 2 45 207 13 1 15 17 9 2 13 0 19 4 150 43 1 43 1 29) #1# #14# 720) (function (ext::lambda-block #46# #47# #33# (declare (type cl-protobufs::byte-vector #48#)) nil (setf (cl-protobufs.meshtastic::channel-settings-%psk #49#) #48#))) ((inline cl-protobufs.meshtastic::channel-settings.%%has-psk)) cl-protobufs.meshtastic::channel-settings.%%has-psk (defun cl-protobufs.meshtastic::channel-settings.%%has-psk) (#14# . 720) #50=(#49#) #51=#:cur-value36151 length > #Y(cl-protobufs.meshtastic::channel-settings.%%has-psk nil nil (24 45 205 26 13 0 19 1 121 45 215 10 0 16 216 12 9 0 19 2 217 43 1 29) #1# #14# 720) (function (ext::lambda-block cl-protobufs.meshtastic::channel-settings.%%has-psk #50# #33# (let ((#51# (cl-protobufs.meshtastic::channel-settings-%psk #49#))) (> (length #51#) 0)))) ((inline cl-protobufs.meshtastic::channel-settings.clear-psk)) cl-protobufs.meshtastic::channel-settings.clear-psk (defun cl-protobufs.meshtastic::channel-settings.clear-psk) (#14# . 720) #52=(#49#) #:g36206 #:g36207 #Y(cl-protobufs.meshtastic::channel-settings.clear-psk nil nil (24 45 205 26 10 0 45 225 9 0 14 38 14 39 19 3 40 45 226 13 1 15 17 9 2 13 0 19 4 150 43 1 43 1 29) #1# #14# 720) (function (ext::lambda-block cl-protobufs.meshtastic::channel-settings.clear-psk #52# #33# nil (setf (cl-protobufs.meshtastic::channel-settings-%psk #49#) #2#))) cl-protobufs.meshtastic::psk (defmethod cl-protobufs.meshtastic::psk (#49# cl-protobufs.meshtastic::channel-settings)) (#14# . 720) (cl-protobufs.meshtastic::channel-settings) (#49#) #Y(cl-protobufs.meshtastic::psk nil nil (24 45 205 26 13 0 19 1 192 29) #1# #14# 720) #53=(setf cl-protobufs.meshtastic::psk) (defmethod #53# #48# (#49# cl-protobufs.meshtastic::channel-settings)) (#14# . 720) (t cl-protobufs.meshtastic::channel-settings) (#48# #49#) #:g36214 #:g36215 (setf cl-protobufs.meshtastic::channel-settings.psk) #Y(#53# nil nil (24 45 204 24 45 205 26 10 0 45 240 10 2 45 241 13 0 13 1 33 242 18 2 43 1 43 1 29) #1# #14# 720) (cl-protobufs.meshtastic::channel-settings.clear-psk) (cl-protobufs.meshtastic::channel-settings.psk) ((inline cl-protobufs.meshtastic::channel-settings.name)) cl-protobufs.meshtastic::channel-settings.name (defun cl-protobufs.meshtastic::channel-settings.name) (#14# . 720) #54=(#55=#:obj36152) #55# #Y(cl-protobufs.meshtastic::channel-settings.name nil nil (24 45 251 26 13 0 19 1 117 29) #1# #14# 720) (function (ext::lambda-block cl-protobufs.meshtastic::channel-settings.name #54# #33# (the string (cl-protobufs.meshtastic::channel-settings-%name #55#)))) ((inline #56=(setf cl-protobufs.meshtastic::channel-settings.name))) #56# (defun #56#) (#14# . 720) #57=(#58=#:new-value36154 #59=#:obj36153) #58# #59# #:g36218 #:g36219 #Y(#56# nil nil (24 45 259 24 45 260 26 10 0 45 261 10 2 45 262 13 1 15 17 9 3 13 0 19 4 150 43 1 43 1 29) #1# #14# 720) (function (ext::lambda-block #56# #57# #33# (declare (type string #58#)) nil (setf (cl-protobufs.meshtastic::channel-settings-%name #59#) #58#))) ((inline cl-protobufs.meshtastic::channel-settings.%%has-name)) cl-protobufs.meshtastic::channel-settings.%%has-name (defun cl-protobufs.meshtastic::channel-settings.%%has-name) (#14# . 720) #60=(#59#) #61=#:cur-value36155 #Y(cl-protobufs.meshtastic::channel-settings.%%has-name nil nil (24 45 260 26 13 0 19 1 117 45 270 10 0 16 216 12 9 0 19 2 217 43 1 29) #1# #14# 720) (function (ext::lambda-block cl-protobufs.meshtastic::channel-settings.%%has-name #60# #33# (let ((#61# (cl-protobufs.meshtastic::channel-settings-%name #59#))) (> (length #61#) 0)))) ((inline cl-protobufs.meshtastic::channel-settings.clear-name)) cl-protobufs.meshtastic::channel-settings.clear-name (defun cl-protobufs.meshtastic::channel-settings.clear-name) (#14# . 720) #62=(#59#) #:g36222 #:g36223 #Y(cl-protobufs.meshtastic::channel-settings.clear-name nil nil (24 45 260 26 10 0 45 278 1 42 45 279 13 1 15 17 9 3 13 0 19 4 150 43 1 43 1 29) #1# #14# 720) (function (ext::lambda-block cl-protobufs.meshtastic::channel-settings.clear-name #62# #33# nil (setf (cl-protobufs.meshtastic::channel-settings-%name #59#) #3#))) cl-protobufs.meshtastic::name (defmethod cl-protobufs.meshtastic::name (#59# cl-protobufs.meshtastic::channel-settings)) (#14# . 720) (cl-protobufs.meshtastic::channel-settings) (#59#) #Y(cl-protobufs.meshtastic::name nil nil (24 45 260 26 13 0 19 1 247 29) #1# #14# 720) #63=(setf cl-protobufs.meshtastic::name) (defmethod #63# #58# (#59# cl-protobufs.meshtastic::channel-settings)) (#14# . 720) (t cl-protobufs.meshtastic::channel-settings) (#58# #59#) #:g36230 #:g36231 (setf cl-protobufs.meshtastic::channel-settings.name) #Y(#63# nil nil (24 45 259 24 45 260 26 10 0 45 293 10 2 45 294 13 0 13 1 33 295 18 2 43 1 43 1 29) #1# #14# 720) (cl-protobufs.meshtastic::channel-settings.clear-name) (cl-protobufs.meshtastic::channel-settings.name) ((inline cl-protobufs.meshtastic::channel-settings.id)) cl-protobufs.meshtastic::channel-settings.id (defun cl-protobufs.meshtastic::channel-settings.id) (#14# . 720) #64=(#65=#:obj36156) #65# #Y(cl-protobufs.meshtastic::channel-settings.id nil nil (24 45 304 26 13 0 19 1 113 29) #1# #14# 720) (function (ext::lambda-block cl-protobufs.meshtastic::channel-settings.id #64# #33# (the cl-protobufs::fixed32 (cl-protobufs.meshtastic::channel-settings-%id #65#)))) ((inline #66=(setf cl-protobufs.meshtastic::channel-settings.id))) #66# (defun #66#) (#14# . 720) #67=(#68=#:new-value36158 #69=#:obj36157) #68# #69# #:g36234 #:g36235 #Y(#66# nil nil (24 45 312 24 45 313 26 10 0 45 314 10 2 45 315 13 1 15 17 9 4 13 0 19 4 150 43 1 43 1 29) #1# #14# 720) (function (ext::lambda-block #66# #67# #33# (declare (type cl-protobufs::fixed32 #68#)) nil (setf (cl-protobufs.meshtastic::channel-settings-%id #69#) #68#))) ((inline cl-protobufs.meshtastic::channel-settings.%%has-id)) cl-protobufs.meshtastic::channel-settings.%%has-id (defun cl-protobufs.meshtastic::channel-settings.%%has-id) (#14# . 720) #70=(#69#) #71=#:cur-value36159 #Y(cl-protobufs.meshtastic::channel-settings.%%has-id nil nil (24 45 313 26 13 0 19 1 113 45 323 13 0 8 0 17 159 76 73 43 1 29) #1# #14# 720) (function (ext::lambda-block cl-protobufs.meshtastic::channel-settings.%%has-id #70# #33# (let ((#71# (cl-protobufs.meshtastic::channel-settings-%id #69#))) (not (eq #71# 0))))) ((inline cl-protobufs.meshtastic::channel-settings.clear-id)) cl-protobufs.meshtastic::channel-settings.clear-id (defun cl-protobufs.meshtastic::channel-settings.clear-id) (#14# . 720) #72=(#69#) #:g36238 #:g36239 #Y(cl-protobufs.meshtastic::channel-settings.clear-id nil nil (24 45 313 26 10 0 45 331 8 0 45 332 13 1 15 17 9 4 13 0 19 4 150 43 1 43 1 29) #1# #14# 720) (function (ext::lambda-block cl-protobufs.meshtastic::channel-settings.clear-id #72# #33# nil (setf (cl-protobufs.meshtastic::channel-settings-%id #69#) 0))) cl-protobufs.meshtastic::id (defmethod cl-protobufs.meshtastic::id (#69# cl-protobufs.meshtastic::channel-settings)) (#14# . 720) (cl-protobufs.meshtastic::channel-settings) (#69#) #Y(cl-protobufs.meshtastic::id nil nil (24 45 313 26 13 0 19 1 300 29) #1# #14# 720) #73=(setf cl-protobufs.meshtastic::id) (defmethod #73# #68# (#69# cl-protobufs.meshtastic::channel-settings)) (#14# . 720) (t cl-protobufs.meshtastic::channel-settings) (#68# #69#) #:g36246 #:g36247 (setf cl-protobufs.meshtastic::channel-settings.id) #Y(#73# nil nil (24 45 312 24 45 313 26 10 0 45 346 10 2 45 347 13 0 13 1 33 348 18 2 43 1 43 1 29) #1# #14# 720) (cl-protobufs.meshtastic::channel-settings.clear-id) (cl-protobufs.meshtastic::channel-settings.id) ((inline cl-protobufs.meshtastic::channel-settings.uplink-enabled)) cl-protobufs.meshtastic::channel-settings.uplink-enabled (defun cl-protobufs.meshtastic::channel-settings.uplink-enabled) (#14# . 720) #74=(#75=#:obj36160) #75# plusp #Y(cl-protobufs.meshtastic::channel-settings.uplink-enabled nil nil (24 45 357 26 13 0 19 1 105 12 9 0 19 2 47 16 358 29) #1# #14# 720) (function (ext::lambda-block cl-protobufs.meshtastic::channel-settings.uplink-enabled #74# #33# (the boolean (plusp (bit (cl-protobufs.meshtastic::channel-settings-%%bool-values #75#) 0))))) ((inline #76=(setf cl-protobufs.meshtastic::channel-settings.uplink-enabled))) #76# (defun #76#) (#14# . 720) #77=(#78=#:new-value36162 #79=#:obj36161) #78# #79# si::aset #Y(#76# nil nil (24 45 366 24 45 367 26 13 0 19 1 105 12 9 0 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 368 29) #1# #14# 720) (function (ext::lambda-block #76# #77# #33# (declare (type boolean #78#)) nil (setf (bit (cl-protobufs.meshtastic::channel-settings-%%bool-values #79#) 0) (if #78# . #80=(1 0))))) ((inline cl-protobufs.meshtastic::channel-settings.%%has-uplink-enabled)) cl-protobufs.meshtastic::channel-settings.%%has-uplink-enabled (defun cl-protobufs.meshtastic::channel-settings.%%has-uplink-enabled) (#14# . 720) #81=(#79#) #82=#:cur-value36163 #Y(cl-protobufs.meshtastic::channel-settings.%%has-uplink-enabled nil nil (24 45 367 26 13 0 19 1 105 12 9 0 19 2 47 16 358 45 376 13 0 75 17 159 76 73 43 1 29) #1# #14# 720) (function (ext::lambda-block cl-protobufs.meshtastic::channel-settings.%%has-uplink-enabled #81# #33# (let ((#82# (plusp (bit (cl-protobufs.meshtastic::channel-settings-%%bool-values #79#) 0)))) (not (eq #82# nil))))) ((inline cl-protobufs.meshtastic::channel-settings.clear-uplink-enabled)) cl-protobufs.meshtastic::channel-settings.clear-uplink-enabled (defun cl-protobufs.meshtastic::channel-settings.clear-uplink-enabled) (#14# . 720) #83=(#79#) #Y(cl-protobufs.meshtastic::channel-settings.clear-uplink-enabled nil nil (24 45 367 26 13 0 19 1 105 12 9 0 9 0 19 3 368 29) #1# #14# 720) (function (ext::lambda-block cl-protobufs.meshtastic::channel-settings.clear-uplink-enabled #83# #33# nil (setf (bit (cl-protobufs.meshtastic::channel-settings-%%bool-values #79#) 0) 0))) cl-protobufs.meshtastic::uplink-enabled (defmethod cl-protobufs.meshtastic::uplink-enabled (#79# cl-protobufs.meshtastic::channel-settings)) (#14# . 720) (cl-protobufs.meshtastic::channel-settings) (#79#) #Y(cl-protobufs.meshtastic::uplink-enabled nil nil (24 45 367 26 13 0 19 1 353 29) #1# #14# 720) #84=(setf cl-protobufs.meshtastic::uplink-enabled) (defmethod #84# #78# (#79# cl-protobufs.meshtastic::channel-settings)) (#14# . 720) (t cl-protobufs.meshtastic::channel-settings) (#78# #79#) #:g36262 #:g36263 (setf cl-protobufs.meshtastic::channel-settings.uplink-enabled) #Y(#84# nil nil (24 45 366 24 45 367 26 10 0 45 397 10 2 45 398 13 0 13 1 33 399 18 2 43 1 43 1 29) #1# #14# 720) (cl-protobufs.meshtastic::channel-settings.clear-uplink-enabled) (cl-protobufs.meshtastic::channel-settings.uplink-enabled) ((inline cl-protobufs.meshtastic::channel-settings.downlink-enabled)) cl-protobufs.meshtastic::channel-settings.downlink-enabled (defun cl-protobufs.meshtastic::channel-settings.downlink-enabled) (#14# . 720) #85=(#86=#:obj36164) #86# #Y(cl-protobufs.meshtastic::channel-settings.downlink-enabled nil nil (24 45 408 26 13 0 19 1 105 12 9 1 19 2 47 16 358 29) #1# #14# 720) (function (ext::lambda-block cl-protobufs.meshtastic::channel-settings.downlink-enabled #85# #33# (the boolean (plusp (bit (cl-protobufs.meshtastic::channel-settings-%%bool-values #86#) 1))))) ((inline #87=(setf cl-protobufs.meshtastic::channel-settings.downlink-enabled))) #87# (defun #87#) (#14# . 720) #88=(#89=#:new-value36166 #90=#:obj36165) #89# #90# #Y(#87# nil nil (24 45 416 24 45 417 26 13 0 19 1 105 12 9 1 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 368 29) #1# #14# 720) (function (ext::lambda-block #87# #88# #33# (declare (type boolean #89#)) nil (setf (bit (cl-protobufs.meshtastic::channel-settings-%%bool-values #90#) 1) (if #89# . #80#)))) ((inline cl-protobufs.meshtastic::channel-settings.%%has-downlink-enabled)) cl-protobufs.meshtastic::channel-settings.%%has-downlink-enabled (defun cl-protobufs.meshtastic::channel-settings.%%has-downlink-enabled) (#14# . 720) #91=(#90#) #92=#:cur-value36167 #Y(cl-protobufs.meshtastic::channel-settings.%%has-downlink-enabled nil nil (24 45 417 26 13 0 19 1 105 12 9 1 19 2 47 16 358 45 425 13 0 75 17 159 76 73 43 1 29) #1# #14# 720) (function (ext::lambda-block cl-protobufs.meshtastic::channel-settings.%%has-downlink-enabled #91# #33# (let ((#92# (plusp (bit (cl-protobufs.meshtastic::channel-settings-%%bool-values #90#) 1)))) (not (eq #92# nil))))) ((inline cl-protobufs.meshtastic::channel-settings.clear-downlink-enabled)) cl-protobufs.meshtastic::channel-settings.clear-downlink-enabled (defun cl-protobufs.meshtastic::channel-settings.clear-downlink-enabled) (#14# . 720) #93=(#90#) #Y(cl-protobufs.meshtastic::channel-settings.clear-downlink-enabled nil nil (24 45 417 26 13 0 19 1 105 12 9 1 9 0 19 3 368 29) #1# #14# 720) (function (ext::lambda-block cl-protobufs.meshtastic::channel-settings.clear-downlink-enabled #93# #33# nil (setf (bit (cl-protobufs.meshtastic::channel-settings-%%bool-values #90#) 1) 0))) cl-protobufs.meshtastic::downlink-enabled (defmethod cl-protobufs.meshtastic::downlink-enabled (#90# cl-protobufs.meshtastic::channel-settings)) (#14# . 720) (cl-protobufs.meshtastic::channel-settings) (#90#) #Y(cl-protobufs.meshtastic::downlink-enabled nil nil (24 45 417 26 13 0 19 1 404 29) #1# #14# 720) #94=(setf cl-protobufs.meshtastic::downlink-enabled) (defmethod #94# #89# (#90# cl-protobufs.meshtastic::channel-settings)) (#14# . 720) (t cl-protobufs.meshtastic::channel-settings) (#89# #90#) #:g36278 #:g36279 (setf cl-protobufs.meshtastic::channel-settings.downlink-enabled) #Y(#94# nil nil (24 45 416 24 45 417 26 10 0 45 446 10 2 45 447 13 0 13 1 33 448 18 2 43 1 43 1 29) #1# #14# 720) (cl-protobufs.meshtastic::channel-settings.clear-downlink-enabled) (cl-protobufs.meshtastic::channel-settings.downlink-enabled) ((inline cl-protobufs.meshtastic::make-channel-settings)) cl-protobufs.meshtastic::make-channel-settings (defun cl-protobufs.meshtastic::make-channel-settings) (#14# . 720) #95=(&key (cl-protobufs.meshtastic::channel-num :%unset) (cl-protobufs.meshtastic::psk :%unset) (cl-protobufs.meshtastic::name :%unset) (cl-protobufs.meshtastic::id :%unset) (cl-protobufs.meshtastic::uplink-enabled :%unset) (cl-protobufs.meshtastic::downlink-enabled :%unset)) (nil :downlink-enabled :uplink-enabled :id :name :psk :channel-num) :%unset #96=#:obj36143 #:g36292 #:g36293 (setf cl-protobufs.meshtastic::channel-settings.channel-num) #:g36294 #:g36295 (setf cl-protobufs.meshtastic::channel-settings.psk) #:g36296 #:g36297 (setf cl-protobufs.meshtastic::channel-settings.name) #:g36298 #:g36299 (setf cl-protobufs.meshtastic::channel-settings.id) #:g36300 #:g36301 (setf cl-protobufs.meshtastic::channel-settings.uplink-enabled) #:g36302 #:g36303 (setf cl-protobufs.meshtastic::channel-settings.downlink-enabled) #Y(cl-protobufs.meshtastic::make-channel-settings nil nil (28 457 22 40 3 14 458 46 171 22 40 3 14 458 46 229 22 40 3 14 458 46 282 22 40 3 14 458 46 335 22 40 3 14 458 46 386 22 40 3 14 458 46 435 19 0 30 45 459 13 6 11 458 17 159 40 4 10 6 76 76 39 21 10 0 45 460 10 7 45 461 13 0 13 1 33 462 18 2 43 1 43 1 13 5 11 458 17 159 40 4 10 5 76 76 39 21 10 0 45 463 10 6 45 464 13 0 13 1 33 465 18 2 43 1 43 1 13 4 11 458 17 159 40 4 10 4 76 76 39 21 10 0 45 466 10 5 45 467 13 0 13 1 33 468 18 2 43 1 43 1 13 3 11 458 17 159 40 4 10 3 76 76 39 21 10 0 45 469 10 4 45 470 13 0 13 1 33 471 18 2 43 1 43 1 13 2 11 458 17 159 76 39 21 10 0 45 472 10 3 45 473 13 0 13 1 33 474 18 2 43 1 43 1 13 1 11 458 17 159 76 39 21 10 0 45 475 10 2 45 476 13 0 13 1 33 477 18 2 43 1 43 1 10 0 73 43 1 29) #1# #14# 720) (function (ext::lambda-block cl-protobufs.meshtastic::make-channel-settings #95# #33# (let ((#96# (cl-protobufs.meshtastic::%make-channel-settings))) (unless (or (eq cl-protobufs.meshtastic::channel-num :%unset) (not cl-protobufs.meshtastic::channel-num)) (setf (cl-protobufs.meshtastic::channel-settings.channel-num #96#) cl-protobufs.meshtastic::channel-num)) (unless (or (eq cl-protobufs.meshtastic::psk :%unset) (not cl-protobufs.meshtastic::psk)) (setf (cl-protobufs.meshtastic::channel-settings.psk #96#) cl-protobufs.meshtastic::psk)) (unless (or (eq cl-protobufs.meshtastic::name :%unset) (not cl-protobufs.meshtastic::name)) (setf (cl-protobufs.meshtastic::channel-settings.name #96#) cl-protobufs.meshtastic::name)) (unless (or (eq cl-protobufs.meshtastic::id :%unset) (not cl-protobufs.meshtastic::id)) (setf (cl-protobufs.meshtastic::channel-settings.id #96#) cl-protobufs.meshtastic::id)) (unless (eq cl-protobufs.meshtastic::uplink-enabled :%unset) (setf (cl-protobufs.meshtastic::channel-settings.uplink-enabled #96#) cl-protobufs.meshtastic::uplink-enabled)) (unless (eq cl-protobufs.meshtastic::downlink-enabled :%unset) (setf (cl-protobufs.meshtastic::channel-settings.downlink-enabled #96#) cl-protobufs.meshtastic::downlink-enabled)) #96#))) cl-protobufs.meshtastic::channel-settings.clear-%%is-set (defun cl-protobufs.meshtastic::channel-settings.clear-%%is-set) (#14# . 720) (#96#) fill #Y(cl-protobufs.meshtastic::channel-settings.clear-%%is-set nil nil (24 45 459 26 13 0 19 1 85 12 9 0 19 2 484 29) #1# #14# 720) (cl-protobufs.meshtastic::make-channel-settings cl-protobufs.meshtastic::channel-settings-%%is-set) cl-protobufs::clear (defmethod cl-protobufs::clear (#96# cl-protobufs.meshtastic::channel-settings)) (#14# . 720) (cl-protobufs.meshtastic::channel-settings) (#96#) #:g36310 #:g36311 #Y(cl-protobufs::clear nil nil (24 45 459 26 10 0 45 492 75 45 493 13 1 15 22 9 0 13 0 19 4 150 43 1 43 1 13 0 19 1 163 13 0 19 1 221 13 0 19 1 274 13 0 19 1 327 13 0 19 1 380 13 0 19 1 429 13 0 19 1 480 29) #1# #14# 720) 0 :message cl-protobufs.implementation::record-protobuf-object 0 allocate-instance cl-protobufs.implementation::msg-desc cl-protobufs::message-descriptor #:g36312 class #:g36313 #:g36314 (setf slot-value) #:g36315 cl-protobufs.implementation::name #:g36316 "ChannelSettings" #:g36317 (setf slot-value) #:g36318 cl-protobufs.implementation::qual-name #:g36319 "meshtastic.ChannelSettings" #:g36320 (setf slot-value) #:g36321 cl-protobufs.implementation::options #:g36322 #:g36323 (setf slot-value) #:g36324 cl-protobufs.implementation::alias #:g36325 #:g36326 (setf slot-value) #:g36327 cl-protobufs.implementation::fields #:g36328 0 #:g36329 (setf slot-value) #:g36330 cl-protobufs.implementation::oneofs #:g36331 #:g36332 (setf slot-value) cl-protobufs.implementation::field-vect slot-makunbound #:g36333 cl-protobufs.implementation::extended-fields #:g36334 #:g36335 (setf slot-value) #:g36336 cl-protobufs.implementation::extensions #:g36337 #:g36338 (setf slot-value) #:g36339 cl-protobufs.implementation::message-type #:g36340 #:g36341 (setf slot-value) 0 rplaca 0 rplacd 0 cl-protobufs::field-descriptor #:g36342 #:g36343 #:g36344 (setf slot-value) #:g36345 #:g36346 "channel_num" #:g36347 (setf slot-value) #:g36348 #:g36349 "meshtastic.ChannelSettings.channel_num" #:g36350 (setf slot-value) #:g36351 #:g36352 #:g36353 (setf slot-value) #:g36354 cl-protobufs.implementation::kind #:g36355 :scalar #:g36356 (setf slot-value) #:g36357 type #:g36358 #:g36359 (setf slot-value) #:g36360 cl-protobufs.implementation::label #:g36361 :optional #:g36362 (setf slot-value) #:g36363 cl-protobufs.implementation::index #:g36364 #:g36365 (setf slot-value) #:g36366 cl-protobufs.implementation::field-offset #:g36367 #:g36368 (setf slot-value) #:g36369 cl-protobufs.implementation::oneof-offset #:g36370 #:g36371 (setf slot-value) #:g36372 cl-protobufs.implementation::internal-field-name #:g36373 #:g36374 (setf slot-value) #:g36375 cl-protobufs.implementation::external-field-name #:g36376 #:g36377 (setf slot-value) #:g36378 cl-protobufs.implementation::json-name #:g36379 "channelNum" #:g36380 (setf slot-value) #:g36381 cl-protobufs.implementation::default #:g36382 cl-protobufs.implementation::empty-default #:g36383 (setf slot-value) #:g36384 cl-protobufs.implementation::packed #:g36385 #:g36386 (setf slot-value) #:g36387 cl-protobufs.implementation::container #:g36388 #:g36389 (setf slot-value) #:g36390 cl-protobufs.implementation::lazy #:g36391 #:g36392 (setf slot-value) #:g36393 cl-protobufs.implementation::bool-index #:g36394 #:g36395 (setf slot-value) 0 0 #:g36396 #:g36397 #:g36398 (setf slot-value) #:g36399 #:g36400 "psk" #:g36401 (setf slot-value) #:g36402 #:g36403 "meshtastic.ChannelSettings.psk" #:g36404 (setf slot-value) #:g36405 #:g36406 #:g36407 (setf slot-value) #:g36408 #:g36409 #:g36410 (setf slot-value) #:g36411 #:g36412 #:g36413 (setf slot-value) #:g36414 #:g36415 #:g36416 (setf slot-value) #:g36417 #:g36418 #:g36419 (setf slot-value) #:g36420 #:g36421 #:g36422 (setf slot-value) #:g36423 #:g36424 #:g36425 (setf slot-value) #:g36426 #:g36427 #:g36428 (setf slot-value) #:g36429 #:g36430 #:g36431 (setf slot-value) #:g36432 #:g36433 "psk" #:g36434 (setf slot-value) #:g36435 #:g36436 #:g36437 (setf slot-value) #:g36438 #:g36439 #:g36440 (setf slot-value) #:g36441 #:g36442 #:g36443 (setf slot-value) #:g36444 #:g36445 #:g36446 (setf slot-value) #:g36447 #:g36448 #:g36449 (setf slot-value) 0 0 #:g36450 #:g36451 #:g36452 (setf slot-value) #:g36453 #:g36454 "name" #:g36455 (setf slot-value) #:g36456 #:g36457 "meshtastic.ChannelSettings.name" #:g36458 (setf slot-value) #:g36459 #:g36460 #:g36461 (setf slot-value) #:g36462 #:g36463 #:g36464 (setf slot-value) #:g36465 #:g36466 #:g36467 (setf slot-value) #:g36468 #:g36469 #:g36470 (setf slot-value) #:g36471 #:g36472 #:g36473 (setf slot-value) #:g36474 #:g36475 #:g36476 (setf slot-value) #:g36477 #:g36478 #:g36479 (setf slot-value) #:g36480 #:g36481 #:g36482 (setf slot-value) #:g36483 #:g36484 #:g36485 (setf slot-value) #:g36486 #:g36487 "name" #:g36488 (setf slot-value) #:g36489 #:g36490 #:g36491 (setf slot-value) #:g36492 #:g36493 #:g36494 (setf slot-value) #:g36495 #:g36496 #:g36497 (setf slot-value) #:g36498 #:g36499 #:g36500 (setf slot-value) #:g36501 #:g36502 #:g36503 (setf slot-value) 0 0 #:g36504 #:g36505 #:g36506 (setf slot-value) #:g36507 #:g36508 "id" #:g36509 (setf slot-value) #:g36510 #:g36511 "meshtastic.ChannelSettings.id" #:g36512 (setf slot-value) #:g36513 #:g36514 #:g36515 (setf slot-value) #:g36516 #:g36517 #:g36518 (setf slot-value) #:g36519 #:g36520 #:g36521 (setf slot-value) #:g36522 #:g36523 #:g36524 (setf slot-value) #:g36525 #:g36526 #:g36527 (setf slot-value) #:g36528 #:g36529 #:g36530 (setf slot-value) #:g36531 #:g36532 #:g36533 (setf slot-value) #:g36534 #:g36535 #:g36536 (setf slot-value) #:g36537 #:g36538 #:g36539 (setf slot-value) #:g36540 #:g36541 "id" #:g36542 (setf slot-value) #:g36543 #:g36544 #:g36545 (setf slot-value) #:g36546 #:g36547 #:g36548 (setf slot-value) #:g36549 #:g36550 #:g36551 (setf slot-value) #:g36552 #:g36553 #:g36554 (setf slot-value) #:g36555 #:g36556 #:g36557 (setf slot-value) 0 0 #:g36558 #:g36559 boolean #:g36560 (setf slot-value) #:g36561 #:g36562 "uplink_enabled" #:g36563 (setf slot-value) #:g36564 #:g36565 "meshtastic.ChannelSettings.uplink_enabled" #:g36566 (setf slot-value) #:g36567 #:g36568 #:g36569 (setf slot-value) #:g36570 #:g36571 #:g36572 (setf slot-value) #:g36573 #:g36574 #:g36575 (setf slot-value) #:g36576 #:g36577 #:g36578 (setf slot-value) #:g36579 #:g36580 #:g36581 (setf slot-value) #:g36582 #:g36583 #:g36584 (setf slot-value) #:g36585 #:g36586 #:g36587 (setf slot-value) #:g36588 #:g36589 cl-protobufs.meshtastic::%uplink-enabled #:g36590 (setf slot-value) #:g36591 #:g36592 #:g36593 (setf slot-value) #:g36594 #:g36595 "uplinkEnabled" #:g36596 (setf slot-value) #:g36597 #:g36598 #:g36599 (setf slot-value) #:g36600 #:g36601 #:g36602 (setf slot-value) #:g36603 #:g36604 #:g36605 (setf slot-value) #:g36606 #:g36607 #:g36608 (setf slot-value) #:g36609 #:g36610 #:g36611 (setf slot-value) 0 #:g36612 #:g36613 #:g36614 (setf slot-value) #:g36615 #:g36616 "downlink_enabled" #:g36617 (setf slot-value) #:g36618 #:g36619 "meshtastic.ChannelSettings.downlink_enabled" #:g36620 (setf slot-value) #:g36621 #:g36622 #:g36623 (setf slot-value) #:g36624 #:g36625 #:g36626 (setf slot-value) #:g36627 #:g36628 #:g36629 (setf slot-value) #:g36630 #:g36631 #:g36632 (setf slot-value) #:g36633 #:g36634 #:g36635 (setf slot-value) #:g36636 #:g36637 #:g36638 (setf slot-value) #:g36639 #:g36640 #:g36641 (setf slot-value) #:g36642 #:g36643 cl-protobufs.meshtastic::%downlink-enabled #:g36644 (setf slot-value) #:g36645 #:g36646 #:g36647 (setf slot-value) #:g36648 #:g36649 "downlinkEnabled" #:g36650 (setf slot-value) #:g36651 #:g36652 #:g36653 (setf slot-value) #:g36654 #:g36655 #:g36656 (setf slot-value) #:g36657 #:g36658 #:g36659 (setf slot-value) #:g36660 #:g36661 #:g36662 (setf slot-value) #:g36663 #:g36664 #:g36665 (setf slot-value) cl-protobufs.meshtastic::%%%%channel.role (deftype cl-protobufs.meshtastic::%%%%channel.role nil (quote #97=(or (member . #98=(:disabled :primary :secondary)) (satisfies cl-protobufs.implementation::keyword-contains-%undefined-int-p)))) #97# si::do-deftype cl-protobufs.meshtastic::channel.role (deftype cl-protobufs.meshtastic::channel.role nil (quote #99=(member . #98#))) #99# cl-protobufs.meshtastic::channel.role-keyword-to-int (defun cl-protobufs.meshtastic::channel.role-keyword-to-int) (#14# . 1417) (cl-protobufs.implementation::enum) cl-protobufs.implementation::enum :disabled :primary :secondary symbol-name cl-protobufs.implementation::+%undefined--length+ subseq :junk-allowed parse-integer cl-protobufs.implementation::int #Y(cl-protobufs.meshtastic::channel.role-keyword-to-int nil nil (24 45 1053 26 10 0 42 1054 5 8 0 38 33 42 1055 5 8 1 38 26 42 1056 5 8 2 38 19 10 0 16 1057 12 14 1058 19 2 1059 12 14 1060 14 39 19 3 1061 45 1062 10 0 73 43 1 29) #1# #14# 1417) cl-protobufs.meshtastic::channel.role-int-to-keyword (defun cl-protobufs.meshtastic::channel.role-int-to-keyword) (#14# . 1417) (cl-protobufs.implementation::numeral) cl-protobufs.implementation::numeral 0 1 2 cl-protobufs.implementation::key #Y(cl-protobufs.meshtastic::channel.role-int-to-keyword nil nil (24 45 1068 26 10 0 42 1069 5 11 1054 38 16 42 1070 5 11 1055 38 9 42 1071 5 11 1056 38 2 75 45 1072 10 0 73 43 1 29) #1# #14# 1417) #:g36683 cl-protobufs::enum-int-to-keyword #:g36684 #:g36685 si::putprop #:g36686 cl-protobufs::enum-keyword-to-int #:g36687 #:g36688 (defmethod cl-protobufs::enum-keyword-to-int (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::channel.role))) keyword) (#14# . 1417) ((eql cl-protobufs.meshtastic::channel.role) t) (cl-protobufs.implementation::e keyword) cl-protobufs.implementation::e keyword #Y(cl-protobufs::enum-keyword-to-int nil nil (24 45 1087 24 45 1088 26 13 0 19 1 1049 29) #1# #14# 1417) (defmethod cl-protobufs::enum-int-to-keyword (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::channel.role))) cl-protobufs.implementation::numeral) (#14# . 1417) ((eql cl-protobufs.meshtastic::channel.role) t) (cl-protobufs.implementation::e cl-protobufs.implementation::numeral) #Y(cl-protobufs::enum-int-to-keyword nil nil (24 45 1087 24 45 1068 26 13 0 19 1 1064 29) #1# #14# 1417) cl-protobufs.meshtastic::+channel.disabled+ si::*make-constant (defconstant cl-protobufs.meshtastic::+channel.disabled+) (#14# . 1417) cl-protobufs.meshtastic::+channel.primary+ (defconstant cl-protobufs.meshtastic::+channel.primary+) (#14# . 1417) cl-protobufs.meshtastic::+channel.secondary+ (defconstant cl-protobufs.meshtastic::+channel.secondary+) (#14# . 1417) (cl-protobufs.meshtastic::+channel.disabled+ cl-protobufs.meshtastic::+channel.primary+ cl-protobufs.meshtastic::+channel.secondary+) cl-protobufs.implementation::enum-default-value (defmethod cl-protobufs.implementation::enum-default-value (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::channel.role)))) (#14# . 1417) ((eql cl-protobufs.meshtastic::channel.role)) (cl-protobufs.implementation::e) #Y(cl-protobufs.implementation::enum-default-value nil nil (24 45 1087 26 11 1054 73 29) #1# #14# 1417) 0 :enum 0 cl-protobufs::enum-descriptor "Role" 0 0 0 0 cl-protobufs::enum-value-descriptor 0 0 0 (cl-protobufs.meshtastic::%%%%channel.role) ((inline cl-protobufs.meshtastic::%make-channel)) "CHANNEL-" ((cl-protobufs.meshtastic::%index 0 :type cl-protobufs::int32) (cl-protobufs.meshtastic::%settings nil :type #100=(or null cl-protobufs.meshtastic::channel-settings)) (cl-protobufs.meshtastic::%role :disabled :type keyword) (cl-protobufs.implementation::%%bytes nil :type #4#) (cl-protobufs.implementation::%%is-set #101=(make-array 0 . #9#) :type #102=(bit-vector 0))) (#11# (cl-protobufs.meshtastic::%index 0 cl-protobufs::int32 nil 1 nil) (cl-protobufs.meshtastic::%settings nil #100# nil 2 nil) (cl-protobufs.meshtastic::%role :disabled keyword nil 3 nil) (cl-protobufs.implementation::%%bytes nil #4# nil 4 nil) (cl-protobufs.implementation::%%is-set #101# #102# nil 5 nil)) cl-protobufs.meshtastic::copy-channel (cl-protobufs.meshtastic::%make-channel) #103=(cl-protobufs.meshtastic::channel (:constructor cl-protobufs.meshtastic::%make-channel) . #13#) (defstruct #103#) (#14# . 1417) cl-protobufs.meshtastic::%make-channel (defun cl-protobufs.meshtastic::%make-channel) (#14# . 1417) #104=(&key #105=#:%%skipped-bytes (#106=#:%index 0) #107=#:%settings (#108=#:%role :disabled) #109=#:%%bytes (#110=#:%%is-set (make-array 0 :element-type (quote bit) :initial-element 0))) (nil :%%is-set :%%bytes :%role :%settings :%index :%%skipped-bytes) #105# #106# #107# #108# #109# #110# #111=(bit-vector 0) #112=(bit-vector 0) #113=(or null (simple-array (unsigned-byte 8))) #114=(or null (simple-array (unsigned-byte 8))) cl-protobufs.meshtastic::%role #115=(or null cl-protobufs.meshtastic::channel-settings) #116=(or null cl-protobufs.meshtastic::channel-settings) cl-protobufs.meshtastic::%settings cl-protobufs::int32 cl-protobufs.meshtastic::%index #117=(or null cl-protobufs::byte-vector) #118=(or null cl-protobufs::byte-vector) 0 #Y(cl-protobufs.meshtastic::%make-channel nil nil (28 1139 22 40 2 77 46 1140 22 40 3 9 0 46 1141 22 40 2 77 46 1142 22 40 3 14 1054 46 1143 22 40 2 77 46 1144 22 40 15 9 0 14 46 15 47 14 52 9 0 19 5 50 12 46 1145 13 0 15 1146 19 2 55 76 39 12 13 0 15 1147 15 8 15 57 19 4 58 13 1 15 1148 19 2 55 76 39 12 13 1 15 1149 15 8 15 64 19 4 58 13 2 15 1088 19 2 55 76 39 12 13 2 15 1088 15 8 15 1150 19 4 58 13 3 15 1151 19 2 55 76 39 12 13 3 15 1152 15 8 15 1153 19 4 58 13 4 15 1154 19 2 55 76 39 12 13 4 15 1154 15 8 15 1155 19 4 58 13 5 15 1156 19 2 55 76 39 12 13 5 15 1157 15 8 15 76 19 4 58 15 1158 13 5 13 4 13 3 13 2 13 1 13 0 19 7 78 29) #1# #14# 1417) (function (ext::lambda-block cl-protobufs.meshtastic::%make-channel #104# #33# (unless (typep #110# (quote #111#)) (si::structure-type-error #110# (quote #112#) (quote cl-protobufs.meshtastic::channel) (quote cl-protobufs.implementation::%%is-set))) (unless (typep #109# (quote #113#)) (si::structure-type-error #109# (quote #114#) (quote cl-protobufs.meshtastic::channel) (quote cl-protobufs.implementation::%%bytes))) (unless (typep #108# (quote keyword)) (si::structure-type-error #108# (quote keyword) (quote cl-protobufs.meshtastic::channel) (quote cl-protobufs.meshtastic::%role))) (unless (typep #107# (quote #115#)) (si::structure-type-error #107# (quote #116#) (quote cl-protobufs.meshtastic::channel) (quote cl-protobufs.meshtastic::%settings))) (unless (typep #106# (quote cl-protobufs::int32)) (si::structure-type-error #106# (quote cl-protobufs::int32) (quote cl-protobufs.meshtastic::channel) (quote cl-protobufs.meshtastic::%index))) (unless (typep #105# (quote #117#)) (si::structure-type-error #105# (quote #118#) (quote cl-protobufs.meshtastic::channel) (quote cl-protobufs.implementation::%%skipped-bytes))) (si::make-structure (load-time-value (find-class (quote cl-protobufs.meshtastic::channel))) #105# #106# #107# #108# #109# #110#))) cl-protobufs.meshtastic::channel-%%is-set (cl-protobufs.meshtastic::channel-%%is-set) #:g36695 #Y(nil nil nil (24 45 1163 24 45 97 26 19 0 98 12 19 0 98 12 46 99 46 100 77 77 13 0 13 1 15 101 13 2 15 102 1 8 6 2 12 9 5 13 0 10 1 6 6 12 15 103 13 2 15 102 1 8 6 2 12 8 5 6 4 12 72 6 43 2 29) #1# #14# 1417) cl-protobufs.meshtastic::channel-%%bytes (cl-protobufs.meshtastic::channel-%%bytes) #:g36696 #Y(nil nil nil (24 45 1167 24 45 97 26 19 0 98 12 19 0 98 12 46 99 46 100 77 77 13 0 13 1 15 101 13 2 15 102 1 8 6 2 12 9 4 13 0 10 1 6 6 12 15 103 13 2 15 102 1 8 6 2 12 8 4 6 4 12 72 6 43 2 29) #1# #14# 1417) cl-protobufs.meshtastic::channel-%role (cl-protobufs.meshtastic::channel-%role) #:g36697 #Y(nil nil nil (24 45 1171 24 45 97 26 19 0 98 12 19 0 98 12 46 99 46 100 77 77 13 0 13 1 15 101 13 2 15 102 1 8 6 2 12 9 3 13 0 10 1 6 6 12 15 103 13 2 15 102 1 8 6 2 12 8 3 6 4 12 72 6 43 2 29) #1# #14# 1417) cl-protobufs.meshtastic::channel-%settings (cl-protobufs.meshtastic::channel-%settings) #:g36698 #Y(nil nil nil (24 45 1175 24 45 97 26 19 0 98 12 19 0 98 12 46 99 46 100 77 77 13 0 13 1 15 101 13 2 15 102 1 8 6 2 12 9 2 13 0 10 1 6 6 12 15 103 13 2 15 102 1 8 6 2 12 8 2 6 4 12 72 6 43 2 29) #1# #14# 1417) cl-protobufs.meshtastic::channel-%index (cl-protobufs.meshtastic::channel-%index) #:g36699 #Y(nil nil nil (24 45 1179 24 45 97 26 19 0 98 12 19 0 98 12 46 99 46 100 77 77 13 0 13 1 15 101 13 2 15 102 1 8 6 2 12 9 1 13 0 10 1 6 6 12 15 103 13 2 15 102 1 8 6 2 12 8 1 6 4 12 72 6 43 2 29) #1# #14# 1417) cl-protobufs.meshtastic::channel-%%skipped-bytes (cl-protobufs.meshtastic::channel-%%skipped-bytes) #:g36700 #Y(nil nil nil (24 45 1183 24 45 97 26 19 0 98 12 19 0 98 12 46 99 46 100 77 77 13 0 13 1 15 101 13 2 15 102 1 8 6 2 12 9 0 13 0 10 1 6 6 12 15 103 13 2 15 102 1 8 6 2 12 8 0 6 4 12 72 6 43 2 29) #1# #14# 1417) ((inline cl-protobufs.meshtastic::channel.index)) cl-protobufs.meshtastic::channel.index (defun cl-protobufs.meshtastic::channel.index) (#14# . 1417) #119=(#120=#:obj36667) #120# #Y(cl-protobufs.meshtastic::channel.index nil nil (24 45 1190 26 13 0 19 1 1177 29) #1# #14# 1417) (function (ext::lambda-block cl-protobufs.meshtastic::channel.index #119# #33# (the cl-protobufs::int32 (cl-protobufs.meshtastic::channel-%index #120#)))) ((inline #121=(setf cl-protobufs.meshtastic::channel.index))) #121# (defun #121#) (#14# . 1417) #122=(#123=#:new-value36669 #124=#:obj36668) #123# #124# #:g36703 #:g36704 #Y(#121# nil nil (24 45 1198 24 45 1199 26 10 0 45 1200 10 2 45 1201 13 1 15 8 9 1 13 0 19 4 150 43 1 43 1 29) #1# #14# 1417) (function (ext::lambda-block #121# #122# #33# (declare (type cl-protobufs::int32 #123#)) nil (setf (cl-protobufs.meshtastic::channel-%index #124#) #123#))) ((inline cl-protobufs.meshtastic::channel.%%has-index)) cl-protobufs.meshtastic::channel.%%has-index (defun cl-protobufs.meshtastic::channel.%%has-index) (#14# . 1417) #125=(#124#) #126=#:cur-value36670 #Y(cl-protobufs.meshtastic::channel.%%has-index nil nil (24 45 1199 26 13 0 19 1 1177 45 1209 13 0 8 0 17 159 76 73 43 1 29) #1# #14# 1417) (function (ext::lambda-block cl-protobufs.meshtastic::channel.%%has-index #125# #33# (let ((#126# (cl-protobufs.meshtastic::channel-%index #124#))) (not (eq #126# 0))))) ((inline cl-protobufs.meshtastic::channel.clear-index)) cl-protobufs.meshtastic::channel.clear-index (defun cl-protobufs.meshtastic::channel.clear-index) (#14# . 1417) #127=(#124#) #:g36707 #:g36708 #Y(cl-protobufs.meshtastic::channel.clear-index nil nil (24 45 1199 26 10 0 45 1217 8 0 45 1218 13 1 15 8 9 1 13 0 19 4 150 43 1 43 1 29) #1# #14# 1417) (function (ext::lambda-block cl-protobufs.meshtastic::channel.clear-index #127# #33# nil (setf (cl-protobufs.meshtastic::channel-%index #124#) 0))) cl-protobufs.meshtastic::index (defmethod cl-protobufs.meshtastic::index (#124# cl-protobufs.meshtastic::channel)) (#14# . 1417) (cl-protobufs.meshtastic::channel) (#124#) #Y(cl-protobufs.meshtastic::index nil nil (24 45 1199 26 13 0 19 1 1186 29) #1# #14# 1417) #128=(setf cl-protobufs.meshtastic::index) (defmethod #128# #123# (#124# cl-protobufs.meshtastic::channel)) (#14# . 1417) (t cl-protobufs.meshtastic::channel) (#123# #124#) #:g36715 #:g36716 (setf cl-protobufs.meshtastic::channel.index) #Y(#128# nil nil (24 45 1198 24 45 1199 26 10 0 45 1232 10 2 45 1233 13 0 13 1 33 1234 18 2 43 1 43 1 29) #1# #14# 1417) (cl-protobufs.meshtastic::channel.clear-index) (cl-protobufs.meshtastic::channel.index) ((inline cl-protobufs.meshtastic::channel.settings)) cl-protobufs.meshtastic::channel.settings (defun cl-protobufs.meshtastic::channel.settings) (#14# . 1417) #129=(#130=#:obj36671) #130# #Y(cl-protobufs.meshtastic::channel.settings nil nil (24 45 1243 26 13 0 19 1 1173 29) #1# #14# 1417) (function (ext::lambda-block cl-protobufs.meshtastic::channel.settings #129# #33# (the (or null cl-protobufs.meshtastic::channel-settings) (cl-protobufs.meshtastic::channel-%settings #130#)))) ((inline #131=(setf cl-protobufs.meshtastic::channel.settings))) #131# (defun #131#) (#14# . 1417) #132=(#133=#:new-value36673 #134=#:obj36672) #133# #134# #:g36719 #:g36720 #Y(#131# nil nil (24 45 1251 24 45 1252 26 10 0 45 1253 10 2 45 1254 13 1 15 8 9 2 13 0 19 4 150 43 1 43 1 29) #1# #14# 1417) (function (ext::lambda-block #131# #132# #33# (declare (type cl-protobufs.meshtastic::channel-settings #133#)) nil (setf (cl-protobufs.meshtastic::channel-%settings #134#) #133#))) ((inline cl-protobufs.meshtastic::channel.%%has-settings)) cl-protobufs.meshtastic::channel.%%has-settings (defun cl-protobufs.meshtastic::channel.%%has-settings) (#14# . 1417) #135=(#134#) #136=#:cur-value36674 #Y(cl-protobufs.meshtastic::channel.%%has-settings nil nil (24 45 1252 26 13 0 19 1 1173 45 1262 13 0 75 17 159 76 73 43 1 29) #1# #14# 1417) (function (ext::lambda-block cl-protobufs.meshtastic::channel.%%has-settings #135# #33# (let ((#136# (cl-protobufs.meshtastic::channel-%settings #134#))) (not (eq #136# nil))))) ((inline cl-protobufs.meshtastic::channel.clear-settings)) cl-protobufs.meshtastic::channel.clear-settings (defun cl-protobufs.meshtastic::channel.clear-settings) (#14# . 1417) #137=(#134#) #:g36723 #:g36724 #Y(cl-protobufs.meshtastic::channel.clear-settings nil nil (24 45 1252 26 10 0 45 1270 75 45 1271 13 1 15 8 9 2 13 0 19 4 150 43 1 43 1 29) #1# #14# 1417) (function (ext::lambda-block cl-protobufs.meshtastic::channel.clear-settings #137# #33# nil (setf (cl-protobufs.meshtastic::channel-%settings #134#) nil))) cl-protobufs.meshtastic::settings (defmethod cl-protobufs.meshtastic::settings (#134# cl-protobufs.meshtastic::channel)) (#14# . 1417) (cl-protobufs.meshtastic::channel) (#134#) #Y(cl-protobufs.meshtastic::settings nil nil (24 45 1252 26 13 0 19 1 1239 29) #1# #14# 1417) #138=(setf cl-protobufs.meshtastic::settings) (defmethod #138# #133# (#134# cl-protobufs.meshtastic::channel)) (#14# . 1417) (t cl-protobufs.meshtastic::channel) (#133# #134#) #:g36731 #:g36732 (setf cl-protobufs.meshtastic::channel.settings) #Y(#138# nil nil (24 45 1251 24 45 1252 26 10 0 45 1285 10 2 45 1286 13 0 13 1 33 1287 18 2 43 1 43 1 29) #1# #14# 1417) (cl-protobufs.meshtastic::channel.clear-settings) (cl-protobufs.meshtastic::channel.settings) ((inline cl-protobufs.meshtastic::channel.role)) (defun cl-protobufs.meshtastic::channel.role) (#14# . 1417) #139=(#140=#:obj36675) #140# #Y(cl-protobufs.meshtastic::channel.role nil nil (24 45 1295 26 13 0 19 1 1169 29) #1# #14# 1417) (function (ext::lambda-block cl-protobufs.meshtastic::channel.role #139# #33# (the cl-protobufs.meshtastic::%%%%channel.role (cl-protobufs.meshtastic::channel-%role #140#)))) ((inline #141=(setf cl-protobufs.meshtastic::channel.role))) #141# (defun #141#) (#14# . 1417) #142=(#143=#:new-value36677 #144=#:obj36676) #143# #144# #:g36735 #:g36736 #Y(#141# nil nil (24 45 1303 24 45 1304 26 10 0 45 1305 10 2 45 1306 13 1 15 8 9 3 13 0 19 4 150 43 1 43 1 29) #1# #14# 1417) (function (ext::lambda-block #141# #142# #33# (declare (type cl-protobufs.meshtastic::%%%%channel.role #143#)) nil (setf (cl-protobufs.meshtastic::channel-%role #144#) #143#))) ((inline cl-protobufs.meshtastic::channel.%%has-role)) cl-protobufs.meshtastic::channel.%%has-role (defun cl-protobufs.meshtastic::channel.%%has-role) (#14# . 1417) #145=(#144#) #146=#:cur-value36678 #Y(cl-protobufs.meshtastic::channel.%%has-role nil nil (24 45 1304 26 13 0 19 1 1169 45 1314 13 0 11 1054 17 159 76 73 43 1 29) #1# #14# 1417) (function (ext::lambda-block cl-protobufs.meshtastic::channel.%%has-role #145# #33# (let ((#146# (cl-protobufs.meshtastic::channel-%role #144#))) (not (eq #146# :disabled))))) ((inline cl-protobufs.meshtastic::channel.clear-role)) cl-protobufs.meshtastic::channel.clear-role (defun cl-protobufs.meshtastic::channel.clear-role) (#14# . 1417) #147=(#144#) #:g36739 #:g36740 #Y(cl-protobufs.meshtastic::channel.clear-role nil nil (24 45 1304 26 10 0 45 1322 11 1054 45 1323 13 1 15 8 9 3 13 0 19 4 150 43 1 43 1 29) #1# #14# 1417) (function (ext::lambda-block cl-protobufs.meshtastic::channel.clear-role #147# #33# nil (setf (cl-protobufs.meshtastic::channel-%role #144#) :disabled))) cl-protobufs.meshtastic::role (defmethod cl-protobufs.meshtastic::role (#144# cl-protobufs.meshtastic::channel)) (#14# . 1417) (cl-protobufs.meshtastic::channel) (#144#) #Y(cl-protobufs.meshtastic::role nil nil (24 45 1304 26 13 0 19 1 1046 29) #1# #14# 1417) #148=(setf cl-protobufs.meshtastic::role) (defmethod #148# #143# (#144# cl-protobufs.meshtastic::channel)) (#14# . 1417) (t cl-protobufs.meshtastic::channel) (#143# #144#) #:g36747 #:g36748 (setf cl-protobufs.meshtastic::channel.role) #Y(#148# nil nil (24 45 1303 24 45 1304 26 10 0 45 1337 10 2 45 1338 13 0 13 1 33 1339 18 2 43 1 43 1 29) #1# #14# 1417) (cl-protobufs.meshtastic::channel.clear-role) (cl-protobufs.meshtastic::channel.role) ((inline cl-protobufs.meshtastic::make-channel)) cl-protobufs.meshtastic::make-channel (defun cl-protobufs.meshtastic::make-channel) (#14# . 1417) #149=(&key (cl-protobufs.meshtastic::index :%unset) (cl-protobufs.meshtastic::settings :%unset) (cl-protobufs.meshtastic::role :%unset)) (nil :role :settings :index) #150=#:obj36666 #:g36755 #:g36756 (setf cl-protobufs.meshtastic::channel.index) #:g36757 #:g36758 (setf cl-protobufs.meshtastic::channel.settings) #:g36759 #:g36760 (setf cl-protobufs.meshtastic::channel.role) #Y(cl-protobufs.meshtastic::make-channel nil nil (28 1348 22 40 3 14 458 46 1221 22 40 3 14 458 46 1274 22 40 3 14 458 46 1326 19 0 1135 45 1349 13 3 11 458 17 159 40 4 10 3 76 76 39 21 10 0 45 1350 10 4 45 1351 13 0 13 1 33 1352 18 2 43 1 43 1 13 2 11 458 17 159 40 4 10 2 76 76 39 21 10 0 45 1353 10 3 45 1354 13 0 13 1 33 1355 18 2 43 1 43 1 13 1 11 458 17 159 40 4 10 1 76 76 39 21 10 0 45 1356 10 2 45 1357 13 0 13 1 33 1358 18 2 43 1 43 1 10 0 73 43 1 29) #1# #14# 1417) (function (ext::lambda-block cl-protobufs.meshtastic::make-channel #149# #33# (let ((#150# (cl-protobufs.meshtastic::%make-channel))) (unless (or (eq cl-protobufs.meshtastic::index :%unset) (not cl-protobufs.meshtastic::index)) (setf (cl-protobufs.meshtastic::channel.index #150#) cl-protobufs.meshtastic::index)) (unless (or (eq cl-protobufs.meshtastic::settings :%unset) (not cl-protobufs.meshtastic::settings)) (setf (cl-protobufs.meshtastic::channel.settings #150#) cl-protobufs.meshtastic::settings)) (unless (or (eq cl-protobufs.meshtastic::role :%unset) (not cl-protobufs.meshtastic::role)) (setf (cl-protobufs.meshtastic::channel.role #150#) cl-protobufs.meshtastic::role)) #150#))) cl-protobufs.meshtastic::channel.clear-%%is-set (defun cl-protobufs.meshtastic::channel.clear-%%is-set) (#14# . 1417) (#150#) #Y(cl-protobufs.meshtastic::channel.clear-%%is-set nil nil (24 45 1349 26 13 0 19 1 1161 12 9 0 19 2 484 29) #1# #14# 1417) (cl-protobufs.meshtastic::make-channel cl-protobufs.meshtastic::channel-%%is-set) (defmethod cl-protobufs::clear (#150# cl-protobufs.meshtastic::channel)) (#14# . 1417) (cl-protobufs.meshtastic::channel) (#150#) #:g36767 #:g36768 #Y(cl-protobufs::clear nil nil (24 45 1349 26 10 0 45 1371 75 45 1372 13 1 15 22 9 0 13 0 19 4 150 43 1 43 1 13 0 19 1 1213 13 0 19 1 1266 13 0 19 1 1318 13 0 19 1 1361 29) #1# #14# 1417) 0 #:g36769 #:g36770 #:g36771 (setf slot-value) #:g36772 #:g36773 "Channel" #:g36774 (setf slot-value) #:g36775 #:g36776 "meshtastic.Channel" #:g36777 (setf slot-value) #:g36778 #:g36779 #:g36780 (setf slot-value) #:g36781 #:g36782 #:g36783 (setf slot-value) #:g36784 #:g36785 0 #:g36786 (setf slot-value) #:g36787 #:g36788 #:g36789 (setf slot-value) #:g36790 #:g36791 #:g36792 (setf slot-value) #:g36793 #:g36794 #:g36795 (setf slot-value) #:g36796 #:g36797 #:g36798 (setf slot-value) 0 0 #:g36799 #:g36800 #:g36801 (setf slot-value) #:g36802 #:g36803 "index" #:g36804 (setf slot-value) #:g36805 #:g36806 "meshtastic.Channel.index" #:g36807 (setf slot-value) #:g36808 #:g36809 #:g36810 (setf slot-value) #:g36811 #:g36812 #:g36813 (setf slot-value) #:g36814 #:g36815 #:g36816 (setf slot-value) #:g36817 #:g36818 #:g36819 (setf slot-value) #:g36820 #:g36821 #:g36822 (setf slot-value) #:g36823 #:g36824 #:g36825 (setf slot-value) #:g36826 #:g36827 #:g36828 (setf slot-value) #:g36829 #:g36830 #:g36831 (setf slot-value) #:g36832 #:g36833 #:g36834 (setf slot-value) #:g36835 #:g36836 "index" #:g36837 (setf slot-value) #:g36838 #:g36839 #:g36840 (setf slot-value) #:g36841 #:g36842 #:g36843 (setf slot-value) #:g36844 #:g36845 #:g36846 (setf slot-value) #:g36847 #:g36848 #:g36849 (setf slot-value) #:g36850 #:g36851 #:g36852 (setf slot-value) 0 0 #:g36853 #:g36854 #:g36855 (setf slot-value) #:g36856 #:g36857 "settings" #:g36858 (setf slot-value) #:g36859 #:g36860 "meshtastic.Channel.settings" #:g36861 (setf slot-value) #:g36862 #:g36863 #:g36864 (setf slot-value) #:g36865 #:g36866 #:g36867 (setf slot-value) #:g36868 #:g36869 #:g36870 (setf slot-value) #:g36871 #:g36872 #:g36873 (setf slot-value) #:g36874 #:g36875 #:g36876 (setf slot-value) #:g36877 #:g36878 #:g36879 (setf slot-value) #:g36880 #:g36881 #:g36882 (setf slot-value) #:g36883 #:g36884 #:g36885 (setf slot-value) #:g36886 #:g36887 #:g36888 (setf slot-value) #:g36889 #:g36890 "settings" #:g36891 (setf slot-value) #:g36892 #:g36893 #:g36894 (setf slot-value) #:g36895 #:g36896 #:g36897 (setf slot-value) #:g36898 #:g36899 #:g36900 (setf slot-value) #:g36901 #:g36902 #:g36903 (setf slot-value) #:g36904 #:g36905 #:g36906 (setf slot-value) 0 #:g36907 #:g36908 #:g36909 (setf slot-value) #:g36910 #:g36911 "role" #:g36912 (setf slot-value) #:g36913 #:g36914 "meshtastic.Channel.role" #:g36915 (setf slot-value) #:g36916 #:g36917 #:g36918 (setf slot-value) #:g36919 #:g36920 #:g36921 (setf slot-value) #:g36922 #:g36923 #:g36924 (setf slot-value) #:g36925 #:g36926 #:g36927 (setf slot-value) #:g36928 #:g36929 #:g36930 (setf slot-value) #:g36931 #:g36932 #:g36933 (setf slot-value) #:g36934 #:g36935 #:g36936 (setf slot-value) #:g36937 #:g36938 #:g36939 (setf slot-value) #:g36940 #:g36941 #:g36942 (setf slot-value) #:g36943 #:g36944 "role" #:g36945 (setf slot-value) #:g36946 #:g36947 #:g36948 (setf slot-value) #:g36949 #:g36950 #:g36951 (setf slot-value) #:g36952 #:g36953 #:g36954 (setf slot-value) #:g36955 #:g36956 #:g36957 (setf slot-value) #:g36958 #:g36959 #:g36960 (setf slot-value) (cl-protobufs.meshtastic::channel cl-protobufs.meshtastic::channel-num cl-protobufs.meshtastic::channel-settings cl-protobufs.meshtastic::channel.role cl-protobufs.meshtastic::channel.role-int-to-keyword cl-protobufs.meshtastic::channel.role-keyword-to-int cl-protobufs.meshtastic::downlink-enabled cl-protobufs.meshtastic::id cl-protobufs.meshtastic::index cl-protobufs.meshtastic::name cl-protobufs.meshtastic::psk cl-protobufs.meshtastic::role cl-protobufs.meshtastic::settings cl-protobufs.meshtastic::uplink-enabled))) #14# 0) #Y(si::bytecodes nil nil (1 2 16 3 76 73 39 18 15 4 77 77 77 77 15 5 77 77 77 77 77 77 19 12 6 29) #1# #14# 134) #Y(si::bytecodes nil nil (1 7 16 1 29) #1# #14# 540) #Y(si::bytecodes nil nil (15 8 14 9 14 10 14 11 15 12 19 5 13 29) #1# #14# 583) #Y(si::bytecodes nil nilsi::bytecodes nil nil (15 1042 15 1043 15 1044 19 3 1045 15 1046 15 1047 15 1048 19 3 1045 15 1049 15 26 15 1050 15 1051 19 4 29 15 1049 14 33 77 15 1052 19 4 29 15 1049 1 1063 12 19 2 80 15 1064 15 26 15 1065 15 1066 19 4 29 15 1064 14 33 77 15 1067 19 4 29 15 1064 1 1073 12 19 2 80 1 1046 45 1074 1 1075 45 1076 1 1064 45 1077 13 2 13 0 13 1 19 3 1078 43 1 43 2 1 1046 45 1079 1 1080 45 1081 1 1049 45 1082 13 2 13 0 13 1 19 3 1078 43 1 43 2 15 1080 15 26 15 1083 15 1084 19 4 29 15 1080 77 15 1085 15 1086 1 1089 12 19 5 177 15 1075 15 26 15 1090 15 1091 19 4 29 15 1075 77 15 1092 15 1093 1 1094 12 19 5 177 15 1095 8 0 17 1096 15 1095 15 26 15 1097 15 1098 19 4 29 15 1099 8 1 17 1096 15 1099 15 26 15 1100 15 1101 19 4 29 15 1102 8 2 17 1096 15 1102 15 26 15 1103 15 1104 19 4 29 15 1105 19 1 189 15 1106 15 26 15 1107 15 1108 19 4 29 15 1106 77 15 1109 15 1110 1 1111 12 19 5 177 15 1115 19 1 81 78 1114 15 1114 19 1 499 78 1112 77 75 3 78 1117 15 1121 19 1 81 78 1120 15 1120 19 1 499 78 1118 15 1118 15 1121 9 0 15 1054 19 4 150 15 1118 15 1121 9 1 9 0 19 4 150 77 75 3 78 1119 15 1120 19 1 499 78 1122 15 1122 15 1121 9 0 15 1055 19 4 150 15 1122 15 1121 9 1 9 1 19 4 150 77 75 3 78 1123 15 1120 19 1 499 78 1124 15 1124 15 1121 9 0 15 1056 19 4 150 15 1124 15 1121 9 1 9 2 19 4 150 15 1123 1 1124 17 558 15 1123 75 17 560 15 1119 1 1122 17 558 15 1119 1 1123 17 560 15 1117 1 1118 17 558 15 1117 1 1119 17 560 15 1112 15 1115 9 0 15 1046 19 4 150 15 1112 15 1115 9 1 15 1116 19 4 150 15 1112 15 1115 9 2 15 1117 19 4 150 15 1046 15 1112 14 1113 19 3 497 15 1125 19 1 189 15 14 15 1126 19 2 16 15 8 15 1127 77 77 15 1128 15 1129 15 1130 15 22 77 77 15 1131 9 6 77 77 77 19 15 24 15 1132 15 26 15 1133 15 1134 19 4 29 15 1135 15 26 15 1136 15 1137 19 4 29 15 1135 14 33 77 15 1138 19 4 29 15 8 19 1 81 78 1158 15 1135 1 1159 12 19 2 80 15 1135 15 82 15 1160 19 3 84 1 1161 16 86 45 87 10 0 39 10 10 0 16 88 39 4 11 89 76 39 16 15 90 15 91 15 92 15 1162 14 11 13 0 19 6 94 43 1 15 1161 15 95 1 1164 12 19 3 84 1 1165 16 86 45 87 10 0 39 10 10 0 16 88 39 4 11 89 76 39 16 15 90 15 91 15 92 15 1166 14 11 13 0 19 6 94 43 1 15 1165 15 95 1 1168 12 19 3 84 1 1169 16 86 45 87 10 0 39 10 10 0 16 88 39 4 11 89 76 39 16 15 90 15 91 15 92 15 1170 14 11 13 0 19 6 94 43 1 15 1169 15 95 1 1172 12 19 3 84 1 1173 16 86 45 87 10 0 39 10 10 0 16 88 39 4 11 89 76 39 16 15 90 15 91 15 92 15 1174 14 11 13 0 19 6 94 43 1 15 1173 15 95 1 1176 12 19 3 84 1 1177 16 86 45 87 10 0 39 10 10 0 16 88 39 4 11 89 76 39 16 15 90 15 91 15 92 15 1178 14 11 13 0 19 6 94 43 1 15 1177 15 95 1 1180 12 19 3 84 1 1181 16 86 45 87 10 0 39 10 10 0 16 88 39 4 11 89 76 39 16 15 90 15 91 15 92 15 1182 14 11 13 0 19 6 94 43 1 15 1181 15 95 1 1184 12 19 3 84 15 14 15 1185 19 2 16 15 1186 15 26 15 1187 15 1188 19 4 29 15 1186 14 33 77 15 1189 19 4 29 15 1186 1 1191 12 19 2 80 15 1186 15 82 15 1192 19 3 84 15 14 15 1193 19 2 16 15 1194 15 26 15 1195 15 1196 19 4 29 15 1194 14 33 77 15 1197 19 4 29 15 1194 1 1202 12 19 2 80 15 1194 15 82 15 1203 19 3 84 15 14 15 1204 19 2 16 15 1205 15 26 15 1206 15 1207 19 4 29 15 1205 14 33 77 15 1208 19 4 29 15 1205 1 1210 12 19 2 80 15 1205 15 82 15 1211 19 3 84 15 14 15 1212 19 2 16 15 1213 15 26 15 1214 15 1215 19 4 29 15 1213 14 33 77 15 1216 19 4 29 15 1213 1 1219 12 19 2 80 15 1213 15 82 15 1220 19 3 84 15 1221 15 26 15 1222 15 1223 19 4 29 15 1221 77 15 1224 15 1225 1 1226 12 19 5 177 15 1227 15 26 15 1228 15 1229 19 4 29 15 1227 77 15 1230 15 1231 1 1235 12 19 5 177 15 8 15 1221 19 2 187 15 1236 19 1 189 15 1237 19 1 189 15 14 15 1238 19 2 16 15 1239 15 26 15 1240 15 1241 19 4 29 15 1239 14 33 77 15 1242 19 4 29 15 1239 1 1244 12 19 2 80 15 1239 15 82 15 1245 19 3 84 15 14 15 1246 19 2 16 15 1247 15 26 15 1248 15 1249 19 4 29 15 1247 14 33 77 15 1250 19 4 29 15 1247 1 1255 12 19 2 80 15 1247 15 82 15 1256 19 3 84 15 14 15 1257 19 2 16 15 1258 15 26 15 1259 15 1260 19 4 29 15 1258 14 33 77 15 1261 19 4 29 15 1258 1 1263 12 19 2 80 15 1258 15 82 15 1264 19 3 84 15 14 15 1265 19 2 16 15 1266 15 26 15 1267 15 1268 19 4 29 15 1266 14 33 77 15 1269 19 4 29 15 1266 1 1272 12 19 2 80 15 1266 15 82 15 1273 19 3 84 15 1274 15 26 15 1275 15 1276 19 4 29 15 1274 77 15 1277 15 1278 1 1279 12 19 5 177 15 1280 15 26 15 1281 15 1282 19 4 29 15 1280 77 15 1283 15 1284 1 1288 12 19 5 177 15 8 15 1274 19 2 187 15 1289 19 1 189 15 1290 19 1 189 15 14 15 1291 19 2 16 15 1046 15 26 15 1292 15 1293 19 4 29 15 1046 14 33 77 15 1294 19 4 29 15 1046 1 1296 12 19 2 80 15 1046 15 82 15 1297 19 3 84 15 14 15 1298 19 2 16 15 1299 15 26 15 1300 15 1301 19 4 29 15 1299 14 33 77 15 1302 19 4 29 15 1299 1 1307 12 19 2 80 15 1299 15 82 15 1308 19 3 84 15 14 15 1309 19 2 16 15 1310 15 26 15 1311 15 1312 19 4 29 15 1310 14 33 77 15 1313 19 4 29 15 1310 1 1315 12 19 2 80 15 1310 15 82 15 1316 19 3 84 15 14 15 1317 19 2 16 15 1318 15 26 15 1319 15 1320 19 4 29 15 1318 14 33 77 15 1321 19 4 29 15 1318 1 1324 12 19 2 80 15 1318 15 82 15 1325 19 3 84 15 1326 15 26 15 1327 15 1328 19 4 29 15 1326 77 15 1329 15 1330 1 1331 12 19 5 177 15 1332 15 26 15 1333 15 1334 19 4 29 15 1332 77 15 1335 15 1336 1 1340 12 19 5 177 15 8 15 1326 19 2 187 15 1341 19 1 189 15 1342 19 1 189 15 14 15 1343 19 2 16 15 1344 15 26 15 1345 15 1346 19 4 29 15 1344 14 33 77 15 1347 19 4 29 15 1344 1 1359 12 19 2 80 15 1344 15 82 15 1360 19 3 84 15 1361 15 26 15 1362 15 1363 19 4 29 15 1361 14 33 77 15 1364 19 4 29 15 1361 1 1365 12 19 2 80 15 1366 19 1 189 15 487 15 26 15 1367 15 1368 19 4 29 15 487 77 15 1369 15 1370 1 1373 12 19 5 177 15 498 19 1 499 45 500 15 496 13 0 14 496 19 3 497 10 0 43 1 78 1374 77 75 3 78 1399 15 561 19 1 499 78 1418 1 1418 45 1420 1 503 45 1421 1 1154 45 1422 13 0 13 2 13 1 33 1423 18 3 43 1 43 2 1 1418 45 1424 1 508 45 1425 1 1426 45 1427 13 0 13 2 13 1 33 1428 18 3 43 1 43 2 1 1418 45 1429 1 514 45 1430 1 1431 45 1432 13 0 13 2 13 1 33 1433 18 3 43 1 43 2 1 1418 45 1434 1 520 45 1435 75 45 1436 13 0 13 2 13 1 33 1437 18 3 43 1 43 2 1 1418 45 1438 1 582 45 1439 1 584 45 1440 13 0 13 2 13 1 33 1441 18 3 43 1 43 2 1 1418 45 1442 1 588 45 1443 1 1154 45 1444 13 0 13 2 13 1 33 1445 18 3 43 1 43 2 1 1418 45 1446 1 593 45 1447 1 595 45 1448 13 0 13 2 13 1 33 1449 18 3 43 1 43 2 1 1418 45 1450 1 599 45 1451 8 1 45 1452 13 0 13 2 13 1 33 1453 18 3 43 1 43 2 1 1418 45 1454 1 604 45 1455 75 45 1456 13 0 13 2 13 1 33 1457 18 3 43 1 43 2 1 1418 45 1458 1 609 45 1459 75 45 1460 13 0 13 2 13 1 33 1461 18 3 43 1 43 2 1 1418 45 1462 1 614 45 1463 1 1155 45 1464 13 0 13 2 13 1 33 1465 18 3 43 1 43 2 1 1418 45 1466 1 619 45 1467 1 1221 45 1468 13 0 13 2 13 1 33 1469 18 3 43 1 43 2 1 1418 45 1470 1 624 45 1471 1 1472 45 1473 13 0 13 2 13 1 33 1474 18 3 43 1 43 2 1 1418 45 1475 1 630 45 1476 1 632 45 1477 13 0 13 2 13 1 33 1478 18 3 43 1 43 2 1 1418 45 1479 1 636 45 1480 75 45 1481 13 0 13 2 13 1 33 1482 18 3 43 1 43 2 1 1418 45 1483 1 641 45 1484 75 45 1485 13 0 13 2 13 1 33 1486 18 3 43 1 43 2 1 1418 45 1487 1 646 45 1488 75 45 1489 13 0 13 2 13 1 33 1490 18 3 43 1 43 2 1 1418 45 1491 1 651 45 1492 75 45 1493 13 0 13 2 13 1 33 1494 18 3 43 1 43 2 77 75 3 78 1419 15 561 19 1 499 78 1495 1 1495 45 1497 1 503 45 1498 1 17 45 1499 13 0 13 2 13 1 33 1500 18 3 43 1 43 2 1 1495 45 1501 1 508 45 1502 1 1503 45 1504 13 0 13 2 13 1 33 1505 18 3 43 1 43 2 1 1495 45 1506 1 514 45 1507 1 1508 45 1509 13 0 13 2 13 1 33 1510 18 3 43 1 43 2 1 1495 45 1511 1 520 45 1512 75 45 1513 13 0 13 2 13 1 33 1514 18 3 43 1 43 2 1 1495 45 1515 1 582 45 1516 1 496 45 1517 13 0 13 2 13 1 33 1518 18 3 43 1 43 2 1 1495 45 1519 1 588 45 1520 1 17 45 1521 13 0 13 2 13 1 33 1522 18 3 43 1 43 2 1 1495 45 1523 1 593 45 1524 1 595 45 1525 13 0 13 2 13 1 33 1526 18 3 43 1 43 2 1 1495 45 1527 1 599 45 1528 8 2 45 1529 13 0 13 2 13 1 33 1530 18 3 43 1 43 2 1 1495 45 1531 1 604 45 1532 75 45 1533 13 0 13 2 13 1 33 1534 18 3 43 1 43 2 1 1495 45 1535 1 609 45 1536 75 45 1537 13 0 13 2 13 1 33 1538 18 3 43 1 43 2 1 1495 45 1539 1 614 45 1540 1 1153 45 1541 13 0 13 2 13 1 33 1542 18 3 43 1 43 2 1 1495 45 1543 1 619 45 1544 1 1274 45 1545 13 0 13 2 13 1 33 1546 18 3 43 1 43 2 1 1495 45 1547 1 624 45 1548 1 1549 45 1550 13 0 13 2 13 1 33 1551 18 3 43 1 43 2 1 1495 45 1552 1 630 45 1553 1 632 45 1554 13 0 13 2 13 1 33 1555 18 3 43 1 43 2 1 1495 45 1556 1 636 45 1557 75 45 1558 13 0 13 2 13 1 33 1559 18 3 43 1 43 2 1 1495 45 1560 1 641 45 1561 75 45 1562 13 0 13 2 13 1 33 1563 18 3 43 1 43 2 1 1495 45 1564 1 646 45 1565 75 45 1566 13 0 13 2 13 1 33 1567 18 3 43 1 43 2 1 1495 45 1568 1 651 45 1569 75 45 1570 13 0 13 2 13 1 33 1571 18 3 43 1 43 2 77 75 3 78 1496 15 561 19 1 499 78 1572 1 1572 45 1573 1 503 45 1574 1 1046 45 1575 13 0 13 2 13 1 33 1576 18 3 43 1 43 2 1 1572 45 1577 1 508 45 1578 1 1579 45 1580 13 0 13 2 13 1 33 1581 18 3 43 1 43 2 1 1572 45 1582 1 514 45 1583 1 1584 45 1585 13 0 13 2 13 1 33 1586 18 3 43 1 43 2 1 1572 45 1587 1 520 45 1588 75 45 1589 13 0 13 2 13 1 33 1590 18 3 43 1 43 2 1 1572 45 1591 1 582 45 1592 1 1113 45 1593 13 0 13 2 13 1 33 1594 18 3 43 1 43 2 1 1572 45 1595 1 588 45 1596 1 1042 45 1597 13 0 13 2 13 1 33 1598 18 3 43 1 43 2 1 1572 45 1599 1 593 45 1600 1 595 45 1601 13 0 13 2 13 1 33 1602 18 3 43 1 43 2 1 1572 45 1603 1 599 45 1604 8 3 45 1605 13 0 13 2 13 1 33 1606 18 3 43 1 43 2 1 1572 45 1607 1 604 45 1608 75 45 1609 13 0 13 2 13 1 33 1610 18 3 43 1 43 2 1 1572 45 1611 1 609 45 1612 75 45 1613 13 0 13 2 13 1 33 1614 18 3 43 1 43 2 1 1572 45 1615 1 614 45 1616 1 1150 45 1617 13 0 13 2 13 1 33 1618 18 3 43 1 43 2 1 1572 45 1619 1 619 45 1620 1 1326 45 1621 13 0 13 2 13 1 33 1622 18 3 43 1 43 2 1 1572 45 1623 1 624 45 1624 1 1625 45 1626 13 0 13 2 13 1 33 1627 18 3 43 1 43 2 1 1572 45 1628 1 630 45 1629 1 1054 45 1630 13 0 13 2 13 1 33 1631 18 3 43 1 43 2 1 1572 45 1632 1 636 45 1633 75 45 1634 13 0 13 2 13 1 33 1635 18 3 43 1 43 2 1 1572 45 1636 1 641 45 1637 75 45 1638 13 0 13 2 13 1 33 1639 18 3 43 1 43 2 1 1572 45 1640 1 646 45 1641 75 45 1642 13 0 13 2 13 1 33 1643 18 3 43 1 43 2 1 1572 45 1644 1 651 45 1645 75 45 1646 13 0 13 2 13 1 33 1647 18 3 43 1 43 2 15 1496 1 1572 17 558 15 1496 75 17 560 15 1419 1 1495 17 558 15 1419 1 1496 17 560 15 1399 1 1418 17 558 15 1399 1 1419 17 560 1 1374 45 1375 1 503 45 1376 1 8 45 1377 13 0 13 2 13 1 33 1378 18 3 43 1 43 2 1 1374 45 1379 1 508 45 1380 1 1381 45 1382 13 0 13 2 13 1 33 1383 18 3 43 1 43 2 1 1374 45 1384 1 514 45 1385 1 1386 45 1387 13 0 13 2 13 1 33 1388 18 3 43 1 43 2 1 1374 45 1389 1 520 45 1390 75 45 1391 13 0 13 2 13 1 33 1392 18 3 43 1 43 2 1 1374 45 1393 1 525 45 1394 75 45 1395 13 0 13 2 13 1 33 1396 18 3 43 1 43 2 1 1374 45 1397 1 530 45 1398 1 1399 45 1400 13 0 13 2 13 1 33 1401 18 3 43 1 43 2 1 1374 45 1402 1 536 45 1403 75 45 1404 13 0 13 2 13 1 33 1405 18 3 43 1 43 2 15 1374 1 540 17 541 1 1374 45 1406 1 543 45 1407 75 45 1408 13 0 13 2 13 1 33 1409 18 3 43 1 43 2 1 1374 45 1410 1 548 45 1411 75 45 1412 13 0 13 2 13 1 33 1413 18 3 43 1 43 2 1 1374 45 1414 1 553 45 1415 1 496 45 1416 13 0 13 2 13 1 33 1417 18 3 43 1 43 2 15 8 15 1374 14 496 19 3 497 29) #1# #14# 1417) #Y(si::bytecodes nil nil (15 1648 19 1 189 29) #1# #14# 1911))
