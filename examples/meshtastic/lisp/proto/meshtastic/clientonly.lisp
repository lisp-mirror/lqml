;;; meshtastic/clientonly.proto.lisp
;;;
;;; Generated by the protocol buffer compiler. DO NOT EDIT!

(cl:in-package #:common-lisp-user)

#+sbcl
(cl:progn
 (cl:eval-when (:compile-toplevel) (sb-ext:restrict-compiler-policy 'cl:debug 0 1))
 (cl:declaim (cl:optimize (sb-c:store-coverage-data 0))))

(cl:eval-when (:compile-toplevel :load-toplevel :execute)
  (cl:unless (cl:find-package "CL-PROTOBUFS.MESHTASTIC")
    (cl:defpackage "CL-PROTOBUFS.MESHTASTIC" (:use)
                   (:local-nicknames (#:pi #:cl-protobufs.implementation)))))

(cl:in-package "CL-PROTOBUFS.MESHTASTIC")

(cl:eval-when (:compile-toplevel :load-toplevel :execute)
(pi:define-schema 'clientonly
    :syntax :proto3

     :package "meshtastic"
     :import '(;;"meshtastic/localonly.proto"
               ))
)


;;; Top-Level messages

(pi:define-message device-profile
    ()
  ;; Fields
  (pi:define-oneof -long-name (:synthetic-p t)
    (long-name
     :index 1 :type cl:string :kind :scalar :label (:optional) :json-name "longName"))
  (pi:define-oneof -short-name (:synthetic-p t)
    (short-name
     :index 2 :type cl:string :kind :scalar :label (:optional) :json-name "shortName"))
  (pi:define-oneof -channel-url (:synthetic-p t)
    (channel-url
     :index 3 :type cl:string :kind :scalar :label (:optional) :json-name "channelUrl"))
  (pi:define-oneof -config (:synthetic-p t)
    (config
     :index 4 :type cl-protobufs.meshtastic::local-config :kind :message :label (:optional) :json-name "config"))
  (pi:define-oneof -module-config (:synthetic-p t)
    (module-config
     :index 5 :type cl-protobufs.meshtastic::local-module-config :kind :message :label (:optional) :json-name "moduleConfig")))

(cl:export '(channel-url
             clientonly
             config
             device-profile
             long-name
             module-config
             short-name))
