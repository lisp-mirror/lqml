(#Y(si::bytecodes nil nil (1 0 16 1 29) #1=#A(t (3387) ("COMMON-LISP-USER" si::select-package "CL-PROTOBUFS.MESHTASTIC" find-package "CL-PROTOBUFS.MESHTASTIC" ((#:pi . #:cl-protobufs.implementation)) si::dodefpackage "CL-PROTOBUFS.MESHTASTIC" cl-protobufs.meshtastic::storeforward :syntax :proto3 :package "meshtastic" cl-protobufs.implementation::define-schema cl-protobufs.meshtastic::%%%%store-and-forward.request-response (deftype cl-protobufs.meshtastic::%%%%store-and-forward.request-response nil (quote #2=(or (member . #3=(:unset :router-error :router-heartbeat :router-ping :router-pong :router-busy :router-history :router-stats :client-error :client-history :client-stats :client-ping :client-pong :client-abort)) (satisfies cl-protobufs.implementation::keyword-contains-%undefined-int-p)))) #2# si::do-deftype cl-protobufs.meshtastic::store-and-forward.request-response (deftype cl-protobufs.meshtastic::store-and-forward.request-response nil (quote #4=(member . #3#))) #4# cl-protobufs.meshtastic::store-and-forward.request-response-keyword-to-int ext::location (defun cl-protobufs.meshtastic::store-and-forward.request-response-keyword-to-int) (#5=#P"/home/polos/lqml/examples/meshtastic/lisp/proto/meshtastic/storeforward.lisp" . 730) ext::annotate :lambda-list (cl-protobufs.implementation::enum) cl-protobufs.implementation::enum :unset :router-error :router-heartbeat :router-ping :router-pong :router-busy :router-history :router-stats :client-error :client-history :client-stats :client-ping :client-pong :client-abort symbol-name cl-protobufs.implementation::+%undefined--length+ subseq :junk-allowed t parse-integer cl-protobufs.implementation::int #Y(cl-protobufs.meshtastic::store-and-forward.request-response-keyword-to-int nil nil (24 45 28 26 10 0 42 29 5 8 0 38 110 42 30 5 8 1 38 103 42 31 5 8 2 38 96 42 32 5 8 3 38 89 42 33 5 8 4 38 82 42 34 5 8 5 38 75 42 35 5 8 6 38 68 42 36 5 8 7 38 61 42 37 5 8 64 38 54 42 38 5 8 65 38 47 42 39 5 8 66 38 40 42 40 5 8 67 38 33 42 41 5 8 68 38 26 42 42 5 8 106 38 19 10 0 16 43 12 14 44 19 2 45 12 14 46 14 47 19 3 48 45 49 10 0 73 43 1 29) #1# #5# 730) si::fset cl-protobufs.meshtastic::store-and-forward.request-response-int-to-keyword (defun cl-protobufs.meshtastic::store-and-forward.request-response-int-to-keyword) (#5# . 730) (cl-protobufs.implementation::numeral) cl-protobufs.implementation::numeral 0 1 2 3 4 5 6 7 64 65 66 67 68 106 cl-protobufs.implementation::key #Y(cl-protobufs.meshtastic::store-and-forward.request-response-int-to-keyword nil nil (24 45 56 26 10 0 42 57 5 11 29 38 93 42 58 5 11 30 38 86 42 59 5 11 31 38 79 42 60 5 11 32 38 72 42 61 5 11 33 38 65 42 62 5 11 34 38 58 42 63 5 11 35 38 51 42 64 5 11 36 38 44 42 65 5 11 37 38 37 42 66 5 11 38 38 30 42 67 5 11 39 38 23 42 68 5 11 40 38 16 42 69 5 11 41 38 9 42 70 5 11 42 38 2 75 45 71 10 0 73 43 1 29) #1# #5# 730) #:g60388 cl-protobufs::enum-int-to-keyword #:g60389 #:g60390 si::putprop #:g60391 cl-protobufs::enum-keyword-to-int #:g60392 #:g60393 (defmethod cl-protobufs::enum-keyword-to-int (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::store-and-forward.request-response))) keyword) (#5# . 730) ((eql cl-protobufs.meshtastic::store-and-forward.request-response) t) (cl-protobufs.implementation::e keyword) cl-protobufs.implementation::e keyword #Y(cl-protobufs::enum-keyword-to-int nil nil (24 45 86 24 45 87 26 13 0 19 1 21 29) #1# #5# 730) clos::install-method (defmethod cl-protobufs::enum-int-to-keyword (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::store-and-forward.request-response))) cl-protobufs.implementation::numeral) (#5# . 730) ((eql cl-protobufs.meshtastic::store-and-forward.request-response) t) (cl-protobufs.implementation::e cl-protobufs.implementation::numeral) #Y(cl-protobufs::enum-int-to-keyword nil nil (24 45 86 24 45 56 26 13 0 19 1 52 29) #1# #5# 730) cl-protobufs.meshtastic::+store-and-forward.unset+ si::*make-constant (defconstant cl-protobufs.meshtastic::+store-and-forward.unset+) (#5# . 730) cl-protobufs.meshtastic::+store-and-forward.router-error+ (defconstant cl-protobufs.meshtastic::+store-and-forward.router-error+) (#5# . 730) cl-protobufs.meshtastic::+store-and-forward.router-heartbeat+ (defconstant cl-protobufs.meshtastic::+store-and-forward.router-heartbeat+) (#5# . 730) cl-protobufs.meshtastic::+store-and-forward.router-ping+ (defconstant cl-protobufs.meshtastic::+store-and-forward.router-ping+) (#5# . 730) cl-protobufs.meshtastic::+store-and-forward.router-pong+ (defconstant cl-protobufs.meshtastic::+store-and-forward.router-pong+) (#5# . 730) cl-protobufs.meshtastic::+store-and-forward.router-busy+ (defconstant cl-protobufs.meshtastic::+store-and-forward.router-busy+) (#5# . 730) cl-protobufs.meshtastic::+store-and-forward.router-history+ (defconstant cl-protobufs.meshtastic::+store-and-forward.router-history+) (#5# . 730) cl-protobufs.meshtastic::+store-and-forward.router-stats+ (defconstant cl-protobufs.meshtastic::+store-and-forward.router-stats+) (#5# . 730) cl-protobufs.meshtastic::+store-and-forward.client-error+ (defconstant cl-protobufs.meshtastic::+store-and-forward.client-error+) (#5# . 730) cl-protobufs.meshtastic::+store-and-forward.client-history+ (defconstant cl-protobufs.meshtastic::+store-and-forward.client-history+) (#5# . 730) cl-protobufs.meshtastic::+store-and-forward.client-stats+ (defconstant cl-protobufs.meshtastic::+store-and-forward.client-stats+) (#5# . 730) cl-protobufs.meshtastic::+store-and-forward.client-ping+ (defconstant cl-protobufs.meshtastic::+store-and-forward.client-ping+) (#5# . 730) cl-protobufs.meshtastic::+store-and-forward.client-pong+ (defconstant cl-protobufs.meshtastic::+store-and-forward.client-pong+) (#5# . 730) cl-protobufs.meshtastic::+store-and-forward.client-abort+ (defconstant cl-protobufs.meshtastic::+store-and-forward.client-abort+) (#5# . 730) (cl-protobufs.meshtastic::+store-and-forward.unset+ cl-protobufs.meshtastic::+store-and-forward.router-error+ cl-protobufs.meshtastic::+store-and-forward.router-heartbeat+ cl-protobufs.meshtastic::+store-and-forward.router-ping+ cl-protobufs.meshtastic::+store-and-forward.router-pong+ cl-protobufs.meshtastic::+store-and-forward.router-busy+ cl-protobufs.meshtastic::+store-and-forward.router-history+ cl-protobufs.meshtastic::+store-and-forward.router-stats+ cl-protobufs.meshtastic::+store-and-forward.client-error+ cl-protobufs.meshtastic::+store-and-forward.client-history+ cl-protobufs.meshtastic::+store-and-forward.client-stats+ cl-protobufs.meshtastic::+store-and-forward.client-ping+ cl-protobufs.meshtastic::+store-and-forward.client-pong+ cl-protobufs.meshtastic::+store-and-forward.client-abort+) export cl-protobufs.implementation::enum-default-value (defmethod cl-protobufs.implementation::enum-default-value (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::store-and-forward.request-response)))) (#5# . 730) ((eql cl-protobufs.meshtastic::store-and-forward.request-response)) (cl-protobufs.implementation::e) #Y(cl-protobufs.implementation::enum-default-value nil nil (24 45 86 26 11 29 73 29) #1# #5# 730) 0 :enum cl-protobufs.implementation::record-protobuf-object 0 allocate-instance cl-protobufs::enum-descriptor find-class si::structure-set "RequestResponse" 0 0 rplaca 0 rplacd 0 cl-protobufs::enum-value-descriptor 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 (cl-protobufs.meshtastic::%%%%store-and-forward.request-response) proclaim ((inline cl-protobufs.meshtastic::%make-store-and-forward.statistics)) mapc cl-protobufs.meshtastic::store-and-forward.statistics "STORE-AND-FORWARD.STATISTICS-" ((cl-protobufs.meshtastic::%messages-total 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%messages-saved 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%messages-max 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%up-time 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%requests 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%requests-history 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%return-max 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%return-window 0 :type cl-protobufs::uint32) (cl-protobufs.implementation::%%bytes nil :type #6=(or null (simple-array (unsigned-byte 8)))) (cl-protobufs.implementation::%%bool-values #7=(make-array 1 :element-type (quote bit) :initial-contents #8=#*0) :type #9=(bit-vector 1)) (cl-protobufs.implementation::%%is-set #10=(make-array 0 . #11=(:element-type (quote bit) :initial-element 0)) :type #12=(bit-vector 0))) (#13=(cl-protobufs.implementation::%%skipped-bytes nil (or null cl-protobufs::byte-vector) nil 0 cl-protobufs.implementation::message-%%skipped-bytes) (cl-protobufs.meshtastic::%messages-total 0 cl-protobufs::uint32 nil 1 nil) (cl-protobufs.meshtastic::%messages-saved 0 cl-protobufs::uint32 nil 2 nil) (cl-protobufs.meshtastic::%messages-max 0 cl-protobufs::uint32 nil 3 nil) (cl-protobufs.meshtastic::%up-time 0 cl-protobufs::uint32 nil 4 nil) (cl-protobufs.meshtastic::%requests 0 cl-protobufs::uint32 nil 5 nil) (cl-protobufs.meshtastic::%requests-history 0 cl-protobufs::uint32 nil 6 nil) (cl-protobufs.meshtastic::%return-max 0 cl-protobufs::uint32 nil 7 nil) (cl-protobufs.meshtastic::%return-window 0 cl-protobufs::uint32 nil 8 nil) (cl-protobufs.implementation::%%bytes nil #6# nil 9 nil) (cl-protobufs.implementation::%%bool-values #7# #9# nil 10 nil) (cl-protobufs.implementation::%%is-set #10# #12# nil 11 nil)) cl-protobufs.meshtastic::copy-store-and-forward.statistics cl-protobufs::message (cl-protobufs.meshtastic::%make-store-and-forward.statistics) si::define-structure #14=(cl-protobufs.meshtastic::store-and-forward.statistics (:constructor cl-protobufs.meshtastic::%make-store-and-forward.statistics) . #15=((:include cl-protobufs::message) (:predicate nil))) (defstruct #14#) (#5# . 730) cl-protobufs.meshtastic::%make-store-and-forward.statistics (defun cl-protobufs.meshtastic::%make-store-and-forward.statistics) (#5# . 730) #16=(&key #17=#:%%skipped-bytes (#18=#:%messages-total 0) (#19=#:%messages-saved 0) (#20=#:%messages-max 0) (#21=#:%up-time 0) (#22=#:%requests 0) (#23=#:%requests-history 0) (#24=#:%return-max 0) (#25=#:%return-window 0) #26=#:%%bytes (#27=#:%%bool-values (make-array 1 :element-type (quote bit) :initial-contents #8#)) (#28=#:%%is-set (make-array 0 :element-type (quote bit) :initial-element 0))) (nil :%%is-set :%%bool-values :%%bytes :%return-window :%return-max :%requests-history :%requests :%up-time :%messages-max :%messages-saved :%messages-total :%%skipped-bytes) #17# #18# #19# #20# #21# #22# #23# #24# #25# #26# :element-type bit :initial-contents #8# make-array #27# :initial-element #28# #29=(bit-vector 0) typep #30=(bit-vector 0) cl-protobufs.implementation::%%is-set si::structure-type-error #31=(bit-vector 1) #32=(bit-vector 1) cl-protobufs.implementation::%%bool-values #33=(or null (simple-array (unsigned-byte 8))) #34=(or null (simple-array (unsigned-byte 8))) cl-protobufs.implementation::%%bytes cl-protobufs::uint32 cl-protobufs.meshtastic::%return-window cl-protobufs.meshtastic::%return-max cl-protobufs.meshtastic::%requests-history cl-protobufs.meshtastic::%requests cl-protobufs.meshtastic::%up-time cl-protobufs.meshtastic::%messages-max cl-protobufs.meshtastic::%messages-saved cl-protobufs.meshtastic::%messages-total #35=(or null cl-protobufs::byte-vector) #36=(or null cl-protobufs::byte-vector) cl-protobufs.implementation::%%skipped-bytes 0 si::make-structure #Y(cl-protobufs.meshtastic::%make-store-and-forward.statistics nil nil (28 206 22 40 2 77 46 207 22 40 3 9 0 46 208 22 40 3 9 0 46 209 22 40 3 9 0 46 210 22 40 3 9 0 46 211 22 40 3 9 0 46 212 22 40 3 9 0 46 213 22 40 3 9 0 46 214 22 40 3 9 0 46 215 22 40 2 77 46 216 22 40 15 9 1 14 217 15 218 14 219 15 220 19 5 221 12 46 222 22 40 15 9 0 14 217 15 218 14 223 9 0 19 5 221 12 46 224 13 0 15 225 19 2 226 76 39 12 13 0 15 227 15 191 15 228 19 4 229 13 1 15 230 19 2 226 76 39 12 13 1 15 231 15 191 15 232 19 4 229 13 2 15 233 19 2 226 76 39 12 13 2 15 234 15 191 15 235 19 4 229 13 3 15 236 19 2 226 76 39 12 13 3 15 236 15 191 15 237 19 4 229 13 4 15 236 19 2 226 76 39 12 13 4 15 236 15 191 15 238 19 4 229 13 5 15 236 19 2 226 76 39 12 13 5 15 236 15 191 15 239 19 4 229 13 6 15 236 19 2 226 76 39 12 13 6 15 236 15 191 15 240 19 4 229 13 7 15 236 19 2 226 76 39 12 13 7 15 236 15 191 15 241 19 4 229 13 8 15 236 19 2 226 76 39 12 13 8 15 236 15 191 15 242 19 4 229 13 9 15 236 19 2 226 76 39 12 13 9 15 236 15 191 15 243 19 4 229 13 10 15 236 19 2 226 76 39 12 13 10 15 236 15 191 15 244 19 4 229 13 11 15 245 19 2 226 76 39 12 13 11 15 246 15 191 15 247 19 4 229 15 248 13 11 13 10 13 9 13 8 13 7 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 13 249 29) #1# #5# 730) inline (function (ext::lambda-block cl-protobufs.meshtastic::%make-store-and-forward.statistics #16# #37=(declare (si::c-global)) (unless (typep #28# (quote #29#)) (si::structure-type-error #28# (quote #30#) (quote cl-protobufs.meshtastic::store-and-forward.statistics) (quote cl-protobufs.implementation::%%is-set))) (unless (typep #27# (quote #31#)) (si::structure-type-error #27# (quote #32#) (quote cl-protobufs.meshtastic::store-and-forward.statistics) (quote cl-protobufs.implementation::%%bool-values))) (unless (typep #26# (quote #33#)) (si::structure-type-error #26# (quote #34#) (quote cl-protobufs.meshtastic::store-and-forward.statistics) (quote cl-protobufs.implementation::%%bytes))) (unless (typep #25# (quote cl-protobufs::uint32)) (si::structure-type-error #25# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::store-and-forward.statistics) (quote cl-protobufs.meshtastic::%return-window))) (unless (typep #24# (quote cl-protobufs::uint32)) (si::structure-type-error #24# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::store-and-forward.statistics) (quote cl-protobufs.meshtastic::%return-max))) (unless (typep #23# (quote cl-protobufs::uint32)) (si::structure-type-error #23# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::store-and-forward.statistics) (quote cl-protobufs.meshtastic::%requests-history))) (unless (typep #22# (quote cl-protobufs::uint32)) (si::structure-type-error #22# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::store-and-forward.statistics) (quote cl-protobufs.meshtastic::%requests))) (unless (typep #21# (quote cl-protobufs::uint32)) (si::structure-type-error #21# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::store-and-forward.statistics) (quote cl-protobufs.meshtastic::%up-time))) (unless (typep #20# (quote cl-protobufs::uint32)) (si::structure-type-error #20# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::store-and-forward.statistics) (quote cl-protobufs.meshtastic::%messages-max))) (unless (typep #19# (quote cl-protobufs::uint32)) (si::structure-type-error #19# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::store-and-forward.statistics) (quote cl-protobufs.meshtastic::%messages-saved))) (unless (typep #18# (quote cl-protobufs::uint32)) (si::structure-type-error #18# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::store-and-forward.statistics) (quote cl-protobufs.meshtastic::%messages-total))) (unless (typep #17# (quote #35#)) (si::structure-type-error #17# (quote #36#) (quote cl-protobufs.meshtastic::store-and-forward.statistics) (quote cl-protobufs.implementation::%%skipped-bytes))) (si::make-structure (load-time-value (find-class (quote cl-protobufs.meshtastic::store-and-forward.statistics))) #17# #18# #19# #20# #21# #22# #23# #24# #25# #26# #27# #28#))) si::put-sysprop cl-protobufs.meshtastic::store-and-forward.statistics-%%is-set symbol-package package ext::package-locked-p si::*ignore-package-locks* package-error "Ignore lock and proceed." "Attempt to define CAS accessor ~S in locked package." (cl-protobufs.meshtastic::store-and-forward.statistics-%%is-set) si::signal-simple-error mp::cas-expander #:g60406 si::x gensym si::new si::old mp::compare-and-swap-structure quote si::structure-ref #Y(nil nil nil (24 45 265 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 191 6 2 12 9 11 13 0 10 1 6 6 12 15 272 13 2 15 271 1 191 6 2 12 8 11 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.statistics-%%bool-values (cl-protobufs.meshtastic::store-and-forward.statistics-%%bool-values) #:g60407 #Y(nil nil nil (24 45 276 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 191 6 2 12 9 10 13 0 10 1 6 6 12 15 272 13 2 15 271 1 191 6 2 12 8 10 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.statistics-%%bytes (cl-protobufs.meshtastic::store-and-forward.statistics-%%bytes) #:g60408 #Y(nil nil nil (24 45 280 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 191 6 2 12 9 9 13 0 10 1 6 6 12 15 272 13 2 15 271 1 191 6 2 12 8 9 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.statistics-%return-window (cl-protobufs.meshtastic::store-and-forward.statistics-%return-window) #:g60409 #Y(nil nil nil (24 45 284 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 191 6 2 12 9 8 13 0 10 1 6 6 12 15 272 13 2 15 271 1 191 6 2 12 8 8 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.statistics-%return-max (cl-protobufs.meshtastic::store-and-forward.statistics-%return-max) #:g60410 #Y(nil nil nil (24 45 288 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 191 6 2 12 9 7 13 0 10 1 6 6 12 15 272 13 2 15 271 1 191 6 2 12 8 7 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.statistics-%requests-history (cl-protobufs.meshtastic::store-and-forward.statistics-%requests-history) #:g60411 #Y(nil nil nil (24 45 292 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 191 6 2 12 9 6 13 0 10 1 6 6 12 15 272 13 2 15 271 1 191 6 2 12 8 6 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.statistics-%requests (cl-protobufs.meshtastic::store-and-forward.statistics-%requests) #:g60412 #Y(nil nil nil (24 45 296 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 191 6 2 12 9 5 13 0 10 1 6 6 12 15 272 13 2 15 271 1 191 6 2 12 8 5 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.statistics-%up-time (cl-protobufs.meshtastic::store-and-forward.statistics-%up-time) #:g60413 #Y(nil nil nil (24 45 300 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 191 6 2 12 9 4 13 0 10 1 6 6 12 15 272 13 2 15 271 1 191 6 2 12 8 4 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.statistics-%messages-max (cl-protobufs.meshtastic::store-and-forward.statistics-%messages-max) #:g60414 #Y(nil nil nil (24 45 304 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 191 6 2 12 9 3 13 0 10 1 6 6 12 15 272 13 2 15 271 1 191 6 2 12 8 3 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.statistics-%messages-saved (cl-protobufs.meshtastic::store-and-forward.statistics-%messages-saved) #:g60415 #Y(nil nil nil (24 45 308 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 191 6 2 12 9 2 13 0 10 1 6 6 12 15 272 13 2 15 271 1 191 6 2 12 8 2 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.statistics-%messages-total (cl-protobufs.meshtastic::store-and-forward.statistics-%messages-total) #:g60416 #Y(nil nil nil (24 45 312 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 191 6 2 12 9 1 13 0 10 1 6 6 12 15 272 13 2 15 271 1 191 6 2 12 8 1 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.statistics-%%skipped-bytes (cl-protobufs.meshtastic::store-and-forward.statistics-%%skipped-bytes) #:g60417 #Y(nil nil nil (24 45 316 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 191 6 2 12 9 0 13 0 10 1 6 6 12 15 272 13 2 15 271 1 191 6 2 12 8 0 6 4 12 72 6 43 2 29) #1# #5# 730) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.messages-total)) cl-protobufs.meshtastic::store-and-forward.statistics.messages-total (defun cl-protobufs.meshtastic::store-and-forward.statistics.messages-total) (#5# . 730) #38=(#39=#:obj60304) #39# #Y(cl-protobufs.meshtastic::store-and-forward.statistics.messages-total nil nil (24 45 323 26 13 0 19 1 310 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.messages-total #38# #37# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::store-and-forward.statistics-%messages-total #39#)))) ((inline #40=(setf cl-protobufs.meshtastic::store-and-forward.statistics.messages-total))) #40# (defun #40#) (#5# . 730) #41=(#42=#:new-value60306 #43=#:obj60305) #42# #43# #:g60420 #:g60421 #Y(#40# nil nil (24 45 331 24 45 332 26 10 0 45 333 10 2 45 334 13 1 15 191 9 1 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block #40# #41# #37# (declare (type cl-protobufs::uint32 #42#)) nil (setf (cl-protobufs.meshtastic::store-and-forward.statistics-%messages-total #43#) #42#))) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.%%has-messages-total)) cl-protobufs.meshtastic::store-and-forward.statistics.%%has-messages-total (defun cl-protobufs.meshtastic::store-and-forward.statistics.%%has-messages-total) (#5# . 730) #44=(#43#) #45=#:cur-value60307 eq #Y(cl-protobufs.meshtastic::store-and-forward.statistics.%%has-messages-total nil nil (24 45 332 26 13 0 19 1 310 45 342 13 0 8 0 17 343 76 73 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.%%has-messages-total #44# #37# (let ((#45# (cl-protobufs.meshtastic::store-and-forward.statistics-%messages-total #43#))) (not (eq #45# 0))))) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.clear-messages-total)) cl-protobufs.meshtastic::store-and-forward.statistics.clear-messages-total (defun cl-protobufs.meshtastic::store-and-forward.statistics.clear-messages-total) (#5# . 730) #46=(#43#) #:g60424 #:g60425 #Y(cl-protobufs.meshtastic::store-and-forward.statistics.clear-messages-total nil nil (24 45 332 26 10 0 45 351 8 0 45 352 13 1 15 191 9 1 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.clear-messages-total #46# #37# nil (setf (cl-protobufs.meshtastic::store-and-forward.statistics-%messages-total #43#) 0))) cl-protobufs.meshtastic::messages-total (defmethod cl-protobufs.meshtastic::messages-total (#43# cl-protobufs.meshtastic::store-and-forward.statistics)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward.statistics) (#43#) #Y(cl-protobufs.meshtastic::messages-total nil nil (24 45 332 26 13 0 19 1 319 29) #1# #5# 730) #47=(setf cl-protobufs.meshtastic::messages-total) (defmethod #47# #42# (#43# cl-protobufs.meshtastic::store-and-forward.statistics)) (#5# . 730) (t cl-protobufs.meshtastic::store-and-forward.statistics) (#42# #43#) #:g60432 #:g60433 (setf cl-protobufs.meshtastic::store-and-forward.statistics.messages-total) #Y(#47# nil nil (24 45 331 24 45 332 26 10 0 45 366 10 2 45 367 13 0 13 1 33 368 18 2 43 1 43 1 29) #1# #5# 730) cl-protobufs.implementation::set-field-accessor-functions (cl-protobufs.meshtastic::store-and-forward.statistics.clear-messages-total) (cl-protobufs.meshtastic::store-and-forward.statistics.messages-total) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.messages-saved)) cl-protobufs.meshtastic::store-and-forward.statistics.messages-saved (defun cl-protobufs.meshtastic::store-and-forward.statistics.messages-saved) (#5# . 730) #48=(#49=#:obj60308) #49# #Y(cl-protobufs.meshtastic::store-and-forward.statistics.messages-saved nil nil (24 45 378 26 13 0 19 1 306 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.messages-saved #48# #37# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::store-and-forward.statistics-%messages-saved #49#)))) ((inline #50=(setf cl-protobufs.meshtastic::store-and-forward.statistics.messages-saved))) #50# (defun #50#) (#5# . 730) #51=(#52=#:new-value60310 #53=#:obj60309) #52# #53# #:g60436 #:g60437 #Y(#50# nil nil (24 45 386 24 45 387 26 10 0 45 388 10 2 45 389 13 1 15 191 9 2 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block #50# #51# #37# (declare (type cl-protobufs::uint32 #52#)) nil (setf (cl-protobufs.meshtastic::store-and-forward.statistics-%messages-saved #53#) #52#))) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.%%has-messages-saved)) cl-protobufs.meshtastic::store-and-forward.statistics.%%has-messages-saved (defun cl-protobufs.meshtastic::store-and-forward.statistics.%%has-messages-saved) (#5# . 730) #54=(#53#) #55=#:cur-value60311 #Y(cl-protobufs.meshtastic::store-and-forward.statistics.%%has-messages-saved nil nil (24 45 387 26 13 0 19 1 306 45 397 13 0 8 0 17 343 76 73 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.%%has-messages-saved #54# #37# (let ((#55# (cl-protobufs.meshtastic::store-and-forward.statistics-%messages-saved #53#))) (not (eq #55# 0))))) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.clear-messages-saved)) cl-protobufs.meshtastic::store-and-forward.statistics.clear-messages-saved (defun cl-protobufs.meshtastic::store-and-forward.statistics.clear-messages-saved) (#5# . 730) #56=(#53#) #:g60440 #:g60441 #Y(cl-protobufs.meshtastic::store-and-forward.statistics.clear-messages-saved nil nil (24 45 387 26 10 0 45 405 8 0 45 406 13 1 15 191 9 2 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.clear-messages-saved #56# #37# nil (setf (cl-protobufs.meshtastic::store-and-forward.statistics-%messages-saved #53#) 0))) cl-protobufs.meshtastic::messages-saved (defmethod cl-protobufs.meshtastic::messages-saved (#53# cl-protobufs.meshtastic::store-and-forward.statistics)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward.statistics) (#53#) #Y(cl-protobufs.meshtastic::messages-saved nil nil (24 45 387 26 13 0 19 1 374 29) #1# #5# 730) #57=(setf cl-protobufs.meshtastic::messages-saved) (defmethod #57# #52# (#53# cl-protobufs.meshtastic::store-and-forward.statistics)) (#5# . 730) (t cl-protobufs.meshtastic::store-and-forward.statistics) (#52# #53#) #:g60448 #:g60449 (setf cl-protobufs.meshtastic::store-and-forward.statistics.messages-saved) #Y(#57# nil nil (24 45 386 24 45 387 26 10 0 45 420 10 2 45 421 13 0 13 1 33 422 18 2 43 1 43 1 29) #1# #5# 730) (cl-protobufs.meshtastic::store-and-forward.statistics.clear-messages-saved) (cl-protobufs.meshtastic::store-and-forward.statistics.messages-saved) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.messages-max)) cl-protobufs.meshtastic::store-and-forward.statistics.messages-max (defun cl-protobufs.meshtastic::store-and-forward.statistics.messages-max) (#5# . 730) #58=(#59=#:obj60312) #59# #Y(cl-protobufs.meshtastic::store-and-forward.statistics.messages-max nil nil (24 45 431 26 13 0 19 1 302 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.messages-max #58# #37# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::store-and-forward.statistics-%messages-max #59#)))) ((inline #60=(setf cl-protobufs.meshtastic::store-and-forward.statistics.messages-max))) #60# (defun #60#) (#5# . 730) #61=(#62=#:new-value60314 #63=#:obj60313) #62# #63# #:g60452 #:g60453 #Y(#60# nil nil (24 45 439 24 45 440 26 10 0 45 441 10 2 45 442 13 1 15 191 9 3 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block #60# #61# #37# (declare (type cl-protobufs::uint32 #62#)) nil (setf (cl-protobufs.meshtastic::store-and-forward.statistics-%messages-max #63#) #62#))) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.%%has-messages-max)) cl-protobufs.meshtastic::store-and-forward.statistics.%%has-messages-max (defun cl-protobufs.meshtastic::store-and-forward.statistics.%%has-messages-max) (#5# . 730) #64=(#63#) #65=#:cur-value60315 #Y(cl-protobufs.meshtastic::store-and-forward.statistics.%%has-messages-max nil nil (24 45 440 26 13 0 19 1 302 45 450 13 0 8 0 17 343 76 73 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.%%has-messages-max #64# #37# (let ((#65# (cl-protobufs.meshtastic::store-and-forward.statistics-%messages-max #63#))) (not (eq #65# 0))))) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.clear-messages-max)) cl-protobufs.meshtastic::store-and-forward.statistics.clear-messages-max (defun cl-protobufs.meshtastic::store-and-forward.statistics.clear-messages-max) (#5# . 730) #66=(#63#) #:g60456 #:g60457 #Y(cl-protobufs.meshtastic::store-and-forward.statistics.clear-messages-max nil nil (24 45 440 26 10 0 45 458 8 0 45 459 13 1 15 191 9 3 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.clear-messages-max #66# #37# nil (setf (cl-protobufs.meshtastic::store-and-forward.statistics-%messages-max #63#) 0))) cl-protobufs.meshtastic::messages-max (defmethod cl-protobufs.meshtastic::messages-max (#63# cl-protobufs.meshtastic::store-and-forward.statistics)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward.statistics) (#63#) #Y(cl-protobufs.meshtastic::messages-max nil nil (24 45 440 26 13 0 19 1 427 29) #1# #5# 730) #67=(setf cl-protobufs.meshtastic::messages-max) (defmethod #67# #62# (#63# cl-protobufs.meshtastic::store-and-forward.statistics)) (#5# . 730) (t cl-protobufs.meshtastic::store-and-forward.statistics) (#62# #63#) #:g60464 #:g60465 (setf cl-protobufs.meshtastic::store-and-forward.statistics.messages-max) #Y(#67# nil nil (24 45 439 24 45 440 26 10 0 45 473 10 2 45 474 13 0 13 1 33 475 18 2 43 1 43 1 29) #1# #5# 730) (cl-protobufs.meshtastic::store-and-forward.statistics.clear-messages-max) (cl-protobufs.meshtastic::store-and-forward.statistics.messages-max) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.up-time)) cl-protobufs.meshtastic::store-and-forward.statistics.up-time (defun cl-protobufs.meshtastic::store-and-forward.statistics.up-time) (#5# . 730) #68=(#69=#:obj60316) #69# #Y(cl-protobufs.meshtastic::store-and-forward.statistics.up-time nil nil (24 45 484 26 13 0 19 1 298 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.up-time #68# #37# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::store-and-forward.statistics-%up-time #69#)))) ((inline #70=(setf cl-protobufs.meshtastic::store-and-forward.statistics.up-time))) #70# (defun #70#) (#5# . 730) #71=(#72=#:new-value60318 #73=#:obj60317) #72# #73# #:g60468 #:g60469 #Y(#70# nil nil (24 45 492 24 45 493 26 10 0 45 494 10 2 45 495 13 1 15 191 9 4 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block #70# #71# #37# (declare (type cl-protobufs::uint32 #72#)) nil (setf (cl-protobufs.meshtastic::store-and-forward.statistics-%up-time #73#) #72#))) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.%%has-up-time)) cl-protobufs.meshtastic::store-and-forward.statistics.%%has-up-time (defun cl-protobufs.meshtastic::store-and-forward.statistics.%%has-up-time) (#5# . 730) #74=(#73#) #75=#:cur-value60319 #Y(cl-protobufs.meshtastic::store-and-forward.statistics.%%has-up-time nil nil (24 45 493 26 13 0 19 1 298 45 503 13 0 8 0 17 343 76 73 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.%%has-up-time #74# #37# (let ((#75# (cl-protobufs.meshtastic::store-and-forward.statistics-%up-time #73#))) (not (eq #75# 0))))) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.clear-up-time)) cl-protobufs.meshtastic::store-and-forward.statistics.clear-up-time (defun cl-protobufs.meshtastic::store-and-forward.statistics.clear-up-time) (#5# . 730) #76=(#73#) #:g60472 #:g60473 #Y(cl-protobufs.meshtastic::store-and-forward.statistics.clear-up-time nil nil (24 45 493 26 10 0 45 511 8 0 45 512 13 1 15 191 9 4 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.clear-up-time #76# #37# nil (setf (cl-protobufs.meshtastic::store-and-forward.statistics-%up-time #73#) 0))) cl-protobufs.meshtastic::up-time (defmethod cl-protobufs.meshtastic::up-time (#73# cl-protobufs.meshtastic::store-and-forward.statistics)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward.statistics) (#73#) #Y(cl-protobufs.meshtastic::up-time nil nil (24 45 493 26 13 0 19 1 480 29) #1# #5# 730) #77=(setf cl-protobufs.meshtastic::up-time) (defmethod #77# #72# (#73# cl-protobufs.meshtastic::store-and-forward.statistics)) (#5# . 730) (t cl-protobufs.meshtastic::store-and-forward.statistics) (#72# #73#) #:g60480 #:g60481 (setf cl-protobufs.meshtastic::store-and-forward.statistics.up-time) #Y(#77# nil nil (24 45 492 24 45 493 26 10 0 45 526 10 2 45 527 13 0 13 1 33 528 18 2 43 1 43 1 29) #1# #5# 730) (cl-protobufs.meshtastic::store-and-forward.statistics.clear-up-time) (cl-protobufs.meshtastic::store-and-forward.statistics.up-time) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.requests)) cl-protobufs.meshtastic::store-and-forward.statistics.requests (defun cl-protobufs.meshtastic::store-and-forward.statistics.requests) (#5# . 730) #78=(#79=#:obj60320) #79# #Y(cl-protobufs.meshtastic::store-and-forward.statistics.requests nil nil (24 45 537 26 13 0 19 1 294 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.requests #78# #37# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::store-and-forward.statistics-%requests #79#)))) ((inline #80=(setf cl-protobufs.meshtastic::store-and-forward.statistics.requests))) #80# (defun #80#) (#5# . 730) #81=(#82=#:new-value60322 #83=#:obj60321) #82# #83# #:g60484 #:g60485 #Y(#80# nil nil (24 45 545 24 45 546 26 10 0 45 547 10 2 45 548 13 1 15 191 9 5 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block #80# #81# #37# (declare (type cl-protobufs::uint32 #82#)) nil (setf (cl-protobufs.meshtastic::store-and-forward.statistics-%requests #83#) #82#))) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.%%has-requests)) cl-protobufs.meshtastic::store-and-forward.statistics.%%has-requests (defun cl-protobufs.meshtastic::store-and-forward.statistics.%%has-requests) (#5# . 730) #84=(#83#) #85=#:cur-value60323 #Y(cl-protobufs.meshtastic::store-and-forward.statistics.%%has-requests nil nil (24 45 546 26 13 0 19 1 294 45 556 13 0 8 0 17 343 76 73 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.%%has-requests #84# #37# (let ((#85# (cl-protobufs.meshtastic::store-and-forward.statistics-%requests #83#))) (not (eq #85# 0))))) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.clear-requests)) cl-protobufs.meshtastic::store-and-forward.statistics.clear-requests (defun cl-protobufs.meshtastic::store-and-forward.statistics.clear-requests) (#5# . 730) #86=(#83#) #:g60488 #:g60489 #Y(cl-protobufs.meshtastic::store-and-forward.statistics.clear-requests nil nil (24 45 546 26 10 0 45 564 8 0 45 565 13 1 15 191 9 5 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.clear-requests #86# #37# nil (setf (cl-protobufs.meshtastic::store-and-forward.statistics-%requests #83#) 0))) cl-protobufs.meshtastic::requests (defmethod cl-protobufs.meshtastic::requests (#83# cl-protobufs.meshtastic::store-and-forward.statistics)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward.statistics) (#83#) #Y(cl-protobufs.meshtastic::requests nil nil (24 45 546 26 13 0 19 1 533 29) #1# #5# 730) #87=(setf cl-protobufs.meshtastic::requests) (defmethod #87# #82# (#83# cl-protobufs.meshtastic::store-and-forward.statistics)) (#5# . 730) (t cl-protobufs.meshtastic::store-and-forward.statistics) (#82# #83#) #:g60496 #:g60497 (setf cl-protobufs.meshtastic::store-and-forward.statistics.requests) #Y(#87# nil nil (24 45 545 24 45 546 26 10 0 45 579 10 2 45 580 13 0 13 1 33 581 18 2 43 1 43 1 29) #1# #5# 730) (cl-protobufs.meshtastic::store-and-forward.statistics.clear-requests) (cl-protobufs.meshtastic::store-and-forward.statistics.requests) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.requests-history)) cl-protobufs.meshtastic::store-and-forward.statistics.requests-history (defun cl-protobufs.meshtastic::store-and-forward.statistics.requests-history) (#5# . 730) #88=(#89=#:obj60324) #89# #Y(cl-protobufs.meshtastic::store-and-forward.statistics.requests-history nil nil (24 45 590 26 13 0 19 1 290 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.requests-history #88# #37# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::store-and-forward.statistics-%requests-history #89#)))) ((inline #90=(setf cl-protobufs.meshtastic::store-and-forward.statistics.requests-history))) #90# (defun #90#) (#5# . 730) #91=(#92=#:new-value60326 #93=#:obj60325) #92# #93# #:g60500 #:g60501 #Y(#90# nil nil (24 45 598 24 45 599 26 10 0 45 600 10 2 45 601 13 1 15 191 9 6 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block #90# #91# #37# (declare (type cl-protobufs::uint32 #92#)) nil (setf (cl-protobufs.meshtastic::store-and-forward.statistics-%requests-history #93#) #92#))) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.%%has-requests-history)) cl-protobufs.meshtastic::store-and-forward.statistics.%%has-requests-history (defun cl-protobufs.meshtastic::store-and-forward.statistics.%%has-requests-history) (#5# . 730) #94=(#93#) #95=#:cur-value60327 #Y(cl-protobufs.meshtastic::store-and-forward.statistics.%%has-requests-history nil nil (24 45 599 26 13 0 19 1 290 45 609 13 0 8 0 17 343 76 73 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.%%has-requests-history #94# #37# (let ((#95# (cl-protobufs.meshtastic::store-and-forward.statistics-%requests-history #93#))) (not (eq #95# 0))))) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.clear-requests-history)) cl-protobufs.meshtastic::store-and-forward.statistics.clear-requests-history (defun cl-protobufs.meshtastic::store-and-forward.statistics.clear-requests-history) (#5# . 730) #96=(#93#) #:g60504 #:g60505 #Y(cl-protobufs.meshtastic::store-and-forward.statistics.clear-requests-history nil nil (24 45 599 26 10 0 45 617 8 0 45 618 13 1 15 191 9 6 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.clear-requests-history #96# #37# nil (setf (cl-protobufs.meshtastic::store-and-forward.statistics-%requests-history #93#) 0))) cl-protobufs.meshtastic::requests-history (defmethod cl-protobufs.meshtastic::requests-history (#93# cl-protobufs.meshtastic::store-and-forward.statistics)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward.statistics) (#93#) #Y(cl-protobufs.meshtastic::requests-history nil nil (24 45 599 26 13 0 19 1 586 29) #1# #5# 730) #97=(setf cl-protobufs.meshtastic::requests-history) (defmethod #97# #92# (#93# cl-protobufs.meshtastic::store-and-forward.statistics)) (#5# . 730) (t cl-protobufs.meshtastic::store-and-forward.statistics) (#92# #93#) #:g60512 #:g60513 (setf cl-protobufs.meshtastic::store-and-forward.statistics.requests-history) #Y(#97# nil nil (24 45 598 24 45 599 26 10 0 45 632 10 2 45 633 13 0 13 1 33 634 18 2 43 1 43 1 29) #1# #5# 730) (cl-protobufs.meshtastic::store-and-forward.statistics.clear-requests-history) (cl-protobufs.meshtastic::store-and-forward.statistics.requests-history) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.heartbeat)) cl-protobufs.meshtastic::store-and-forward.statistics.heartbeat (defun cl-protobufs.meshtastic::store-and-forward.statistics.heartbeat) (#5# . 730) #98=(#99=#:obj60328) #99# plusp #Y(cl-protobufs.meshtastic::store-and-forward.statistics.heartbeat nil nil (24 45 643 26 13 0 19 1 274 12 9 0 19 2 218 16 644 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.heartbeat #98# #37# (the boolean (plusp (bit (cl-protobufs.meshtastic::store-and-forward.statistics-%%bool-values #99#) 0))))) ((inline #100=(setf cl-protobufs.meshtastic::store-and-forward.statistics.heartbeat))) #100# (defun #100#) (#5# . 730) #101=(#102=#:new-value60330 #103=#:obj60329) #102# #103# si::aset #Y(#100# nil nil (24 45 652 24 45 653 26 13 0 19 1 274 12 9 0 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 654 29) #1# #5# 730) (function (ext::lambda-block #100# #101# #37# (declare (type boolean #102#)) nil (setf (bit (cl-protobufs.meshtastic::store-and-forward.statistics-%%bool-values #103#) 0) (if #102# 1 0)))) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.%%has-heartbeat)) cl-protobufs.meshtastic::store-and-forward.statistics.%%has-heartbeat (defun cl-protobufs.meshtastic::store-and-forward.statistics.%%has-heartbeat) (#5# . 730) #104=(#103#) #105=#:cur-value60331 #Y(cl-protobufs.meshtastic::store-and-forward.statistics.%%has-heartbeat nil nil (24 45 653 26 13 0 19 1 274 12 9 0 19 2 218 16 644 45 662 13 0 75 17 343 76 73 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.%%has-heartbeat #104# #37# (let ((#105# (plusp (bit (cl-protobufs.meshtastic::store-and-forward.statistics-%%bool-values #103#) 0)))) (not (eq #105# nil))))) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.clear-heartbeat)) cl-protobufs.meshtastic::store-and-forward.statistics.clear-heartbeat (defun cl-protobufs.meshtastic::store-and-forward.statistics.clear-heartbeat) (#5# . 730) #106=(#103#) #Y(cl-protobufs.meshtastic::store-and-forward.statistics.clear-heartbeat nil nil (24 45 653 26 13 0 19 1 274 12 9 0 9 0 19 3 654 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.clear-heartbeat #106# #37# nil (setf (bit (cl-protobufs.meshtastic::store-and-forward.statistics-%%bool-values #103#) 0) 0))) cl-protobufs.meshtastic::heartbeat (defmethod cl-protobufs.meshtastic::heartbeat (#103# cl-protobufs.meshtastic::store-and-forward.statistics)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward.statistics) (#103#) #Y(cl-protobufs.meshtastic::heartbeat nil nil (24 45 653 26 13 0 19 1 639 29) #1# #5# 730) #107=(setf cl-protobufs.meshtastic::heartbeat) (defmethod #107# #102# (#103# cl-protobufs.meshtastic::store-and-forward.statistics)) (#5# . 730) (t cl-protobufs.meshtastic::store-and-forward.statistics) (#102# #103#) #:g60528 #:g60529 (setf cl-protobufs.meshtastic::store-and-forward.statistics.heartbeat) #Y(#107# nil nil (24 45 652 24 45 653 26 10 0 45 683 10 2 45 684 13 0 13 1 33 685 18 2 43 1 43 1 29) #1# #5# 730) (cl-protobufs.meshtastic::store-and-forward.statistics.clear-heartbeat) (cl-protobufs.meshtastic::store-and-forward.statistics.heartbeat) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.return-max)) cl-protobufs.meshtastic::store-and-forward.statistics.return-max (defun cl-protobufs.meshtastic::store-and-forward.statistics.return-max) (#5# . 730) #108=(#109=#:obj60332) #109# #Y(cl-protobufs.meshtastic::store-and-forward.statistics.return-max nil nil (24 45 694 26 13 0 19 1 286 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.return-max #108# #37# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::store-and-forward.statistics-%return-max #109#)))) ((inline #110=(setf cl-protobufs.meshtastic::store-and-forward.statistics.return-max))) #110# (defun #110#) (#5# . 730) #111=(#112=#:new-value60334 #113=#:obj60333) #112# #113# #:g60532 #:g60533 #Y(#110# nil nil (24 45 702 24 45 703 26 10 0 45 704 10 2 45 705 13 1 15 191 9 7 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block #110# #111# #37# (declare (type cl-protobufs::uint32 #112#)) nil (setf (cl-protobufs.meshtastic::store-and-forward.statistics-%return-max #113#) #112#))) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.%%has-return-max)) cl-protobufs.meshtastic::store-and-forward.statistics.%%has-return-max (defun cl-protobufs.meshtastic::store-and-forward.statistics.%%has-return-max) (#5# . 730) #114=(#113#) #115=#:cur-value60335 #Y(cl-protobufs.meshtastic::store-and-forward.statistics.%%has-return-max nil nil (24 45 703 26 13 0 19 1 286 45 713 13 0 8 0 17 343 76 73 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.%%has-return-max #114# #37# (let ((#115# (cl-protobufs.meshtastic::store-and-forward.statistics-%return-max #113#))) (not (eq #115# 0))))) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.clear-return-max)) cl-protobufs.meshtastic::store-and-forward.statistics.clear-return-max (defun cl-protobufs.meshtastic::store-and-forward.statistics.clear-return-max) (#5# . 730) #116=(#113#) #:g60536 #:g60537 #Y(cl-protobufs.meshtastic::store-and-forward.statistics.clear-return-max nil nil (24 45 703 26 10 0 45 721 8 0 45 722 13 1 15 191 9 7 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.clear-return-max #116# #37# nil (setf (cl-protobufs.meshtastic::store-and-forward.statistics-%return-max #113#) 0))) cl-protobufs.meshtastic::return-max (defmethod cl-protobufs.meshtastic::return-max (#113# cl-protobufs.meshtastic::store-and-forward.statistics)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward.statistics) (#113#) #Y(cl-protobufs.meshtastic::return-max nil nil (24 45 703 26 13 0 19 1 690 29) #1# #5# 730) #117=(setf cl-protobufs.meshtastic::return-max) (defmethod #117# #112# (#113# cl-protobufs.meshtastic::store-and-forward.statistics)) (#5# . 730) (t cl-protobufs.meshtastic::store-and-forward.statistics) (#112# #113#) #:g60544 #:g60545 (setf cl-protobufs.meshtastic::store-and-forward.statistics.return-max) #Y(#117# nil nil (24 45 702 24 45 703 26 10 0 45 736 10 2 45 737 13 0 13 1 33 738 18 2 43 1 43 1 29) #1# #5# 730) (cl-protobufs.meshtastic::store-and-forward.statistics.clear-return-max) (cl-protobufs.meshtastic::store-and-forward.statistics.return-max) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.return-window)) cl-protobufs.meshtastic::store-and-forward.statistics.return-window (defun cl-protobufs.meshtastic::store-and-forward.statistics.return-window) (#5# . 730) #118=(#119=#:obj60336) #119# #Y(cl-protobufs.meshtastic::store-and-forward.statistics.return-window nil nil (24 45 747 26 13 0 19 1 282 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.return-window #118# #37# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::store-and-forward.statistics-%return-window #119#)))) ((inline #120=(setf cl-protobufs.meshtastic::store-and-forward.statistics.return-window))) #120# (defun #120#) (#5# . 730) #121=(#122=#:new-value60338 #123=#:obj60337) #122# #123# #:g60548 #:g60549 #Y(#120# nil nil (24 45 755 24 45 756 26 10 0 45 757 10 2 45 758 13 1 15 191 9 8 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block #120# #121# #37# (declare (type cl-protobufs::uint32 #122#)) nil (setf (cl-protobufs.meshtastic::store-and-forward.statistics-%return-window #123#) #122#))) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.%%has-return-window)) cl-protobufs.meshtastic::store-and-forward.statistics.%%has-return-window (defun cl-protobufs.meshtastic::store-and-forward.statistics.%%has-return-window) (#5# . 730) #124=(#123#) #125=#:cur-value60339 #Y(cl-protobufs.meshtastic::store-and-forward.statistics.%%has-return-window nil nil (24 45 756 26 13 0 19 1 282 45 766 13 0 8 0 17 343 76 73 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.%%has-return-window #124# #37# (let ((#125# (cl-protobufs.meshtastic::store-and-forward.statistics-%return-window #123#))) (not (eq #125# 0))))) ((inline cl-protobufs.meshtastic::store-and-forward.statistics.clear-return-window)) cl-protobufs.meshtastic::store-and-forward.statistics.clear-return-window (defun cl-protobufs.meshtastic::store-and-forward.statistics.clear-return-window) (#5# . 730) #126=(#123#) #:g60552 #:g60553 #Y(cl-protobufs.meshtastic::store-and-forward.statistics.clear-return-window nil nil (24 45 756 26 10 0 45 774 8 0 45 775 13 1 15 191 9 8 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.statistics.clear-return-window #126# #37# nil (setf (cl-protobufs.meshtastic::store-and-forward.statistics-%return-window #123#) 0))) cl-protobufs.meshtastic::return-window (defmethod cl-protobufs.meshtastic::return-window (#123# cl-protobufs.meshtastic::store-and-forward.statistics)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward.statistics) (#123#) #Y(cl-protobufs.meshtastic::return-window nil nil (24 45 756 26 13 0 19 1 743 29) #1# #5# 730) #127=(setf cl-protobufs.meshtastic::return-window) (defmethod #127# #122# (#123# cl-protobufs.meshtastic::store-and-forward.statistics)) (#5# . 730) (t cl-protobufs.meshtastic::store-and-forward.statistics) (#122# #123#) #:g60560 #:g60561 (setf cl-protobufs.meshtastic::store-and-forward.statistics.return-window) #Y(#127# nil nil (24 45 755 24 45 756 26 10 0 45 789 10 2 45 790 13 0 13 1 33 791 18 2 43 1 43 1 29) #1# #5# 730) (cl-protobufs.meshtastic::store-and-forward.statistics.clear-return-window) (cl-protobufs.meshtastic::store-and-forward.statistics.return-window) ((inline cl-protobufs.meshtastic::make-store-and-forward.statistics)) cl-protobufs.meshtastic::make-store-and-forward.statistics (defun cl-protobufs.meshtastic::make-store-and-forward.statistics) (#5# . 730) #128=(&key (cl-protobufs.meshtastic::messages-total :%unset) (cl-protobufs.meshtastic::messages-saved :%unset) (cl-protobufs.meshtastic::messages-max :%unset) (cl-protobufs.meshtastic::up-time :%unset) (cl-protobufs.meshtastic::requests :%unset) (cl-protobufs.meshtastic::requests-history :%unset) (cl-protobufs.meshtastic::heartbeat :%unset) (cl-protobufs.meshtastic::return-max :%unset) (cl-protobufs.meshtastic::return-window :%unset)) (nil :return-window :return-max :heartbeat :requests-history :requests :up-time :messages-max :messages-saved :messages-total) :%unset #129=#:obj60303 #:g60580 #:g60581 (setf cl-protobufs.meshtastic::store-and-forward.statistics.messages-total) #:g60582 #:g60583 (setf cl-protobufs.meshtastic::store-and-forward.statistics.messages-saved) #:g60584 #:g60585 (setf cl-protobufs.meshtastic::store-and-forward.statistics.messages-max) #:g60586 #:g60587 (setf cl-protobufs.meshtastic::store-and-forward.statistics.up-time) #:g60588 #:g60589 (setf cl-protobufs.meshtastic::store-and-forward.statistics.requests) #:g60590 #:g60591 (setf cl-protobufs.meshtastic::store-and-forward.statistics.requests-history) #:g60592 #:g60593 (setf cl-protobufs.meshtastic::store-and-forward.statistics.heartbeat) #:g60594 #:g60595 (setf cl-protobufs.meshtastic::store-and-forward.statistics.return-max) #:g60596 #:g60597 (setf cl-protobufs.meshtastic::store-and-forward.statistics.return-window) #Y(cl-protobufs.meshtastic::make-store-and-forward.statistics nil nil (28 800 22 40 3 14 801 46 355 22 40 3 14 801 46 409 22 40 3 14 801 46 462 22 40 3 14 801 46 515 22 40 3 14 801 46 568 22 40 3 14 801 46 621 22 40 3 14 801 46 672 22 40 3 14 801 46 725 22 40 3 14 801 46 778 19 0 202 45 802 13 9 11 801 17 343 40 4 10 9 76 76 39 21 10 0 45 803 10 10 45 804 13 0 13 1 33 805 18 2 43 1 43 1 13 8 11 801 17 343 40 4 10 8 76 76 39 21 10 0 45 806 10 9 45 807 13 0 13 1 33 808 18 2 43 1 43 1 13 7 11 801 17 343 40 4 10 7 76 76 39 21 10 0 45 809 10 8 45 810 13 0 13 1 33 811 18 2 43 1 43 1 13 6 11 801 17 343 40 4 10 6 76 76 39 21 10 0 45 812 10 7 45 813 13 0 13 1 33 814 18 2 43 1 43 1 13 5 11 801 17 343 40 4 10 5 76 76 39 21 10 0 45 815 10 6 45 816 13 0 13 1 33 817 18 2 43 1 43 1 13 4 11 801 17 343 40 4 10 4 76 76 39 21 10 0 45 818 10 5 45 819 13 0 13 1 33 820 18 2 43 1 43 1 13 3 11 801 17 343 76 39 21 10 0 45 821 10 4 45 822 13 0 13 1 33 823 18 2 43 1 43 1 13 2 11 801 17 343 40 4 10 2 76 76 39 21 10 0 45 824 10 3 45 825 13 0 13 1 33 826 18 2 43 1 43 1 13 1 11 801 17 343 40 4 10 1 76 76 39 21 10 0 45 827 10 2 45 828 13 0 13 1 33 829 18 2 43 1 43 1 10 0 73 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::make-store-and-forward.statistics #128# #37# (let ((#129# (cl-protobufs.meshtastic::%make-store-and-forward.statistics))) (unless (or (eq cl-protobufs.meshtastic::messages-total :%unset) (not cl-protobufs.meshtastic::messages-total)) (setf (cl-protobufs.meshtastic::store-and-forward.statistics.messages-total #129#) cl-protobufs.meshtastic::messages-total)) (unless (or (eq cl-protobufs.meshtastic::messages-saved :%unset) (not cl-protobufs.meshtastic::messages-saved)) (setf (cl-protobufs.meshtastic::store-and-forward.statistics.messages-saved #129#) cl-protobufs.meshtastic::messages-saved)) (unless (or (eq cl-protobufs.meshtastic::messages-max :%unset) (not cl-protobufs.meshtastic::messages-max)) (setf (cl-protobufs.meshtastic::store-and-forward.statistics.messages-max #129#) cl-protobufs.meshtastic::messages-max)) (unless (or (eq cl-protobufs.meshtastic::up-time :%unset) (not cl-protobufs.meshtastic::up-time)) (setf (cl-protobufs.meshtastic::store-and-forward.statistics.up-time #129#) cl-protobufs.meshtastic::up-time)) (unless (or (eq cl-protobufs.meshtastic::requests :%unset) (not cl-protobufs.meshtastic::requests)) (setf (cl-protobufs.meshtastic::store-and-forward.statistics.requests #129#) cl-protobufs.meshtastic::requests)) (unless (or (eq cl-protobufs.meshtastic::requests-history :%unset) (not cl-protobufs.meshtastic::requests-history)) (setf (cl-protobufs.meshtastic::store-and-forward.statistics.requests-history #129#) cl-protobufs.meshtastic::requests-history)) (unless (eq cl-protobufs.meshtastic::heartbeat :%unset) (setf (cl-protobufs.meshtastic::store-and-forward.statistics.heartbeat #129#) cl-protobufs.meshtastic::heartbeat)) (unless (or (eq cl-protobufs.meshtastic::return-max :%unset) (not cl-protobufs.meshtastic::return-max)) (setf (cl-protobufs.meshtastic::store-and-forward.statistics.return-max #129#) cl-protobufs.meshtastic::return-max)) (unless (or (eq cl-protobufs.meshtastic::return-window :%unset) (not cl-protobufs.meshtastic::return-window)) (setf (cl-protobufs.meshtastic::store-and-forward.statistics.return-window #129#) cl-protobufs.meshtastic::return-window)) #129#))) cl-protobufs.meshtastic::store-and-forward.statistics.clear-%%is-set (defun cl-protobufs.meshtastic::store-and-forward.statistics.clear-%%is-set) (#5# . 730) (#129#) fill #Y(cl-protobufs.meshtastic::store-and-forward.statistics.clear-%%is-set nil nil (24 45 802 26 13 0 19 1 254 12 9 0 19 2 836 29) #1# #5# 730) (cl-protobufs.meshtastic::make-store-and-forward.statistics cl-protobufs.meshtastic::store-and-forward.statistics-%%is-set) cl-protobufs::clear (defmethod cl-protobufs::clear (#129# cl-protobufs.meshtastic::store-and-forward.statistics)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward.statistics) (#129#) #:g60604 #:g60605 #Y(cl-protobufs::clear nil nil (24 45 802 26 10 0 45 844 75 45 845 13 1 15 196 9 0 13 0 19 4 153 43 1 43 1 13 0 19 1 347 13 0 19 1 401 13 0 19 1 454 13 0 19 1 507 13 0 19 1 560 13 0 19 1 613 13 0 19 1 666 13 0 19 1 717 13 0 19 1 770 13 0 19 1 832 29) #1# #5# 730) 0 :message 0 cl-protobufs.implementation::msg-desc cl-protobufs::message-descriptor #:g60606 class #:g60607 #:g60608 (setf slot-value) #:g60609 cl-protobufs.implementation::name #:g60610 "Statistics" #:g60611 (setf slot-value) #:g60612 cl-protobufs.implementation::qual-name #:g60613 "meshtastic.StoreAndForward.Statistics" #:g60614 (setf slot-value) #:g60615 cl-protobufs.implementation::options #:g60616 #:g60617 (setf slot-value) #:g60618 cl-protobufs.implementation::alias #:g60619 #:g60620 (setf slot-value) #:g60621 cl-protobufs.implementation::fields #:g60622 0 #:g60623 (setf slot-value) #:g60624 cl-protobufs.implementation::oneofs #:g60625 #:g60626 (setf slot-value) cl-protobufs.implementation::field-vect slot-makunbound #:g60627 cl-protobufs.implementation::extended-fields #:g60628 #:g60629 (setf slot-value) #:g60630 cl-protobufs.implementation::extensions #:g60631 #:g60632 (setf slot-value) #:g60633 cl-protobufs.implementation::message-type #:g60634 #:g60635 (setf slot-value) 0 0 0 cl-protobufs::field-descriptor #:g60636 #:g60637 #:g60638 (setf slot-value) #:g60639 #:g60640 "messages_total" #:g60641 (setf slot-value) #:g60642 #:g60643 "meshtastic.StoreAndForward.Statistics.messages_total" #:g60644 (setf slot-value) #:g60645 #:g60646 #:g60647 (setf slot-value) #:g60648 cl-protobufs.implementation::kind #:g60649 :scalar #:g60650 (setf slot-value) #:g60651 type #:g60652 #:g60653 (setf slot-value) #:g60654 cl-protobufs.implementation::label #:g60655 :optional #:g60656 (setf slot-value) #:g60657 cl-protobufs.implementation::index #:g60658 #:g60659 (setf slot-value) #:g60660 cl-protobufs.implementation::field-offset #:g60661 #:g60662 (setf slot-value) #:g60663 cl-protobufs.implementation::oneof-offset #:g60664 #:g60665 (setf slot-value) #:g60666 cl-protobufs.implementation::internal-field-name #:g60667 #:g60668 (setf slot-value) #:g60669 cl-protobufs.implementation::external-field-name #:g60670 #:g60671 (setf slot-value) #:g60672 cl-protobufs.implementation::json-name #:g60673 "messagesTotal" #:g60674 (setf slot-value) #:g60675 cl-protobufs.implementation::default #:g60676 cl-protobufs.implementation::empty-default #:g60677 (setf slot-value) #:g60678 cl-protobufs.implementation::packed #:g60679 #:g60680 (setf slot-value) #:g60681 cl-protobufs.implementation::container #:g60682 #:g60683 (setf slot-value) #:g60684 cl-protobufs.implementation::lazy #:g60685 #:g60686 (setf slot-value) #:g60687 cl-protobufs.implementation::bool-index #:g60688 #:g60689 (setf slot-value) 0 0 #:g60690 #:g60691 #:g60692 (setf slot-value) #:g60693 #:g60694 "messages_saved" #:g60695 (setf slot-value) #:g60696 #:g60697 "meshtastic.StoreAndForward.Statistics.messages_saved" #:g60698 (setf slot-value) #:g60699 #:g60700 #:g60701 (setf slot-value) #:g60702 #:g60703 #:g60704 (setf slot-value) #:g60705 #:g60706 #:g60707 (setf slot-value) #:g60708 #:g60709 #:g60710 (setf slot-value) #:g60711 #:g60712 #:g60713 (setf slot-value) #:g60714 #:g60715 #:g60716 (setf slot-value) #:g60717 #:g60718 #:g60719 (setf slot-value) #:g60720 #:g60721 #:g60722 (setf slot-value) #:g60723 #:g60724 #:g60725 (setf slot-value) #:g60726 #:g60727 "messagesSaved" #:g60728 (setf slot-value) #:g60729 #:g60730 #:g60731 (setf slot-value) #:g60732 #:g60733 #:g60734 (setf slot-value) #:g60735 #:g60736 #:g60737 (setf slot-value) #:g60738 #:g60739 #:g60740 (setf slot-value) #:g60741 #:g60742 #:g60743 (setf slot-value) 0 0 #:g60744 #:g60745 #:g60746 (setf slot-value) #:g60747 #:g60748 "messages_max" #:g60749 (setf slot-value) #:g60750 #:g60751 "meshtastic.StoreAndForward.Statistics.messages_max" #:g60752 (setf slot-value) #:g60753 #:g60754 #:g60755 (setf slot-value) #:g60756 #:g60757 #:g60758 (setf slot-value) #:g60759 #:g60760 #:g60761 (setf slot-value) #:g60762 #:g60763 #:g60764 (setf slot-value) #:g60765 #:g60766 #:g60767 (setf slot-value) #:g60768 #:g60769 #:g60770 (setf slot-value) #:g60771 #:g60772 #:g60773 (setf slot-value) #:g60774 #:g60775 #:g60776 (setf slot-value) #:g60777 #:g60778 #:g60779 (setf slot-value) #:g60780 #:g60781 "messagesMax" #:g60782 (setf slot-value) #:g60783 #:g60784 #:g60785 (setf slot-value) #:g60786 #:g60787 #:g60788 (setf slot-value) #:g60789 #:g60790 #:g60791 (setf slot-value) #:g60792 #:g60793 #:g60794 (setf slot-value) #:g60795 #:g60796 #:g60797 (setf slot-value) 0 0 #:g60798 #:g60799 #:g60800 (setf slot-value) #:g60801 #:g60802 "up_time" #:g60803 (setf slot-value) #:g60804 #:g60805 "meshtastic.StoreAndForward.Statistics.up_time" #:g60806 (setf slot-value) #:g60807 #:g60808 #:g60809 (setf slot-value) #:g60810 #:g60811 #:g60812 (setf slot-value) #:g60813 #:g60814 #:g60815 (setf slot-value) #:g60816 #:g60817 #:g60818 (setf slot-value) #:g60819 #:g60820 #:g60821 (setf slot-value) #:g60822 #:g60823 #:g60824 (setf slot-value) #:g60825 #:g60826 #:g60827 (setf slot-value) #:g60828 #:g60829 #:g60830 (setf slot-value) #:g60831 #:g60832 #:g60833 (setf slot-value) #:g60834 #:g60835 "upTime" #:g60836 (setf slot-value) #:g60837 #:g60838 #:g60839 (setf slot-value) #:g60840 #:g60841 #:g60842 (setf slot-value) #:g60843 #:g60844 #:g60845 (setf slot-value) #:g60846 #:g60847 #:g60848 (setf slot-value) #:g60849 #:g60850 #:g60851 (setf slot-value) 0 0 #:g60852 #:g60853 #:g60854 (setf slot-value) #:g60855 #:g60856 "requests" #:g60857 (setf slot-value) #:g60858 #:g60859 "meshtastic.StoreAndForward.Statistics.requests" #:g60860 (setf slot-value) #:g60861 #:g60862 #:g60863 (setf slot-value) #:g60864 #:g60865 #:g60866 (setf slot-value) #:g60867 #:g60868 #:g60869 (setf slot-value) #:g60870 #:g60871 #:g60872 (setf slot-value) #:g60873 #:g60874 #:g60875 (setf slot-value) #:g60876 #:g60877 #:g60878 (setf slot-value) #:g60879 #:g60880 #:g60881 (setf slot-value) #:g60882 #:g60883 #:g60884 (setf slot-value) #:g60885 #:g60886 #:g60887 (setf slot-value) #:g60888 #:g60889 "requests" #:g60890 (setf slot-value) #:g60891 #:g60892 #:g60893 (setf slot-value) #:g60894 #:g60895 #:g60896 (setf slot-value) #:g60897 #:g60898 #:g60899 (setf slot-value) #:g60900 #:g60901 #:g60902 (setf slot-value) #:g60903 #:g60904 #:g60905 (setf slot-value) 0 0 #:g60906 #:g60907 #:g60908 (setf slot-value) #:g60909 #:g60910 "requests_history" #:g60911 (setf slot-value) #:g60912 #:g60913 "meshtastic.StoreAndForward.Statistics.requests_history" #:g60914 (setf slot-value) #:g60915 #:g60916 #:g60917 (setf slot-value) #:g60918 #:g60919 #:g60920 (setf slot-value) #:g60921 #:g60922 #:g60923 (setf slot-value) #:g60924 #:g60925 #:g60926 (setf slot-value) #:g60927 #:g60928 #:g60929 (setf slot-value) #:g60930 #:g60931 #:g60932 (setf slot-value) #:g60933 #:g60934 #:g60935 (setf slot-value) #:g60936 #:g60937 #:g60938 (setf slot-value) #:g60939 #:g60940 #:g60941 (setf slot-value) #:g60942 #:g60943 "requestsHistory" #:g60944 (setf slot-value) #:g60945 #:g60946 #:g60947 (setf slot-value) #:g60948 #:g60949 #:g60950 (setf slot-value) #:g60951 #:g60952 #:g60953 (setf slot-value) #:g60954 #:g60955 #:g60956 (setf slot-value) #:g60957 #:g60958 #:g60959 (setf slot-value) 0 0 #:g60960 #:g60961 boolean #:g60962 (setf slot-value) #:g60963 #:g60964 "heartbeat" #:g60965 (setf slot-value) #:g60966 #:g60967 "meshtastic.StoreAndForward.Statistics.heartbeat" #:g60968 (setf slot-value) #:g60969 #:g60970 #:g60971 (setf slot-value) #:g60972 #:g60973 #:g60974 (setf slot-value) #:g60975 #:g60976 #:g60977 (setf slot-value) #:g60978 #:g60979 #:g60980 (setf slot-value) #:g60981 #:g60982 #:g60983 (setf slot-value) #:g60984 #:g60985 #:g60986 (setf slot-value) #:g60987 #:g60988 #:g60989 (setf slot-value) #:g60990 #:g60991 cl-protobufs.meshtastic::%heartbeat #:g60992 (setf slot-value) #:g60993 #:g60994 #:g60995 (setf slot-value) #:g60996 #:g60997 "heartbeat" #:g60998 (setf slot-value) #:g60999 #:g61000 #:g61001 (setf slot-value) #:g61002 #:g61003 #:g61004 (setf slot-value) #:g61005 #:g61006 #:g61007 (setf slot-value) #:g61008 #:g61009 #:g61010 (setf slot-value) #:g61011 #:g61012 #:g61013 (setf slot-value) 0 0 #:g61014 #:g61015 #:g61016 (setf slot-value) #:g61017 #:g61018 "return_max" #:g61019 (setf slot-value) #:g61020 #:g61021 "meshtastic.StoreAndForward.Statistics.return_max" #:g61022 (setf slot-value) #:g61023 #:g61024 #:g61025 (setf slot-value) #:g61026 #:g61027 #:g61028 (setf slot-value) #:g61029 #:g61030 #:g61031 (setf slot-value) #:g61032 #:g61033 #:g61034 (setf slot-value) #:g61035 #:g61036 #:g61037 (setf slot-value) #:g61038 #:g61039 #:g61040 (setf slot-value) #:g61041 #:g61042 #:g61043 (setf slot-value) #:g61044 #:g61045 #:g61046 (setf slot-value) #:g61047 #:g61048 #:g61049 (setf slot-value) #:g61050 #:g61051 "returnMax" #:g61052 (setf slot-value) #:g61053 #:g61054 #:g61055 (setf slot-value) #:g61056 #:g61057 #:g61058 (setf slot-value) #:g61059 #:g61060 #:g61061 (setf slot-value) #:g61062 #:g61063 #:g61064 (setf slot-value) #:g61065 #:g61066 #:g61067 (setf slot-value) 0 #:g61068 #:g61069 #:g61070 (setf slot-value) #:g61071 #:g61072 "return_window" #:g61073 (setf slot-value) #:g61074 #:g61075 "meshtastic.StoreAndForward.Statistics.return_window" #:g61076 (setf slot-value) #:g61077 #:g61078 #:g61079 (setf slot-value) #:g61080 #:g61081 #:g61082 (setf slot-value) #:g61083 #:g61084 #:g61085 (setf slot-value) #:g61086 #:g61087 #:g61088 (setf slot-value) #:g61089 #:g61090 #:g61091 (setf slot-value) #:g61092 #:g61093 #:g61094 (setf slot-value) #:g61095 #:g61096 #:g61097 (setf slot-value) #:g61098 #:g61099 #:g61100 (setf slot-value) #:g61101 #:g61102 #:g61103 (setf slot-value) #:g61104 #:g61105 "returnWindow" #:g61106 (setf slot-value) #:g61107 #:g61108 #:g61109 (setf slot-value) #:g61110 #:g61111 #:g61112 (setf slot-value) #:g61113 #:g61114 #:g61115 (setf slot-value) #:g61116 #:g61117 #:g61118 (setf slot-value) #:g61119 #:g61120 #:g61121 (setf slot-value) ((inline cl-protobufs.meshtastic::%make-store-and-forward.history)) cl-protobufs.meshtastic::store-and-forward.history "STORE-AND-FORWARD.HISTORY-" ((cl-protobufs.meshtastic::%history-messages 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%window 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%last-request 0 :type cl-protobufs::uint32) (cl-protobufs.implementation::%%bytes nil :type #6#) (cl-protobufs.implementation::%%is-set #130=(make-array 0 . #11#) :type #131=(bit-vector 0))) (#13# (cl-protobufs.meshtastic::%history-messages 0 cl-protobufs::uint32 nil 1 nil) (cl-protobufs.meshtastic::%window 0 cl-protobufs::uint32 nil 2 nil) (cl-protobufs.meshtastic::%last-request 0 cl-protobufs::uint32 nil 3 nil) (cl-protobufs.implementation::%%bytes nil #6# nil 4 nil) (cl-protobufs.implementation::%%is-set #130# #131# nil 5 nil)) cl-protobufs.meshtastic::copy-store-and-forward.history (cl-protobufs.meshtastic::%make-store-and-forward.history) #132=(cl-protobufs.meshtastic::store-and-forward.history (:constructor cl-protobufs.meshtastic::%make-store-and-forward.history) . #15#) (defstruct #132#) (#5# . 730) cl-protobufs.meshtastic::%make-store-and-forward.history (defun cl-protobufs.meshtastic::%make-store-and-forward.history) (#5# . 730) #133=(&key #134=#:%%skipped-bytes (#135=#:%history-messages 0) (#136=#:%window 0) (#137=#:%last-request 0) #138=#:%%bytes (#139=#:%%is-set (make-array 0 :element-type (quote bit) :initial-element 0))) (nil :%%is-set :%%bytes :%last-request :%window :%history-messages :%%skipped-bytes) #134# #135# #136# #137# #138# #139# #140=(bit-vector 0) #141=(bit-vector 0) #142=(or null (simple-array (unsigned-byte 8))) #143=(or null (simple-array (unsigned-byte 8))) cl-protobufs.meshtastic::%last-request cl-protobufs.meshtastic::%window cl-protobufs.meshtastic::%history-messages #144=(or null cl-protobufs::byte-vector) #145=(or null cl-protobufs::byte-vector) 0 #Y(cl-protobufs.meshtastic::%make-store-and-forward.history nil nil (28 1634 22 40 2 77 46 1635 22 40 3 9 0 46 1636 22 40 3 9 0 46 1637 22 40 3 9 0 46 1638 22 40 2 77 46 1639 22 40 15 9 0 14 217 15 218 14 223 9 0 19 5 221 12 46 1640 13 0 15 1641 19 2 226 76 39 12 13 0 15 1642 15 1621 15 228 19 4 229 13 1 15 1643 19 2 226 76 39 12 13 1 15 1644 15 1621 15 235 19 4 229 13 2 15 236 19 2 226 76 39 12 13 2 15 236 15 1621 15 1645 19 4 229 13 3 15 236 19 2 226 76 39 12 13 3 15 236 15 1621 15 1646 19 4 229 13 4 15 236 19 2 226 76 39 12 13 4 15 236 15 1621 15 1647 19 4 229 13 5 15 1648 19 2 226 76 39 12 13 5 15 1649 15 1621 15 247 19 4 229 15 1650 13 5 13 4 13 3 13 2 13 1 13 0 19 7 249 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::%make-store-and-forward.history #133# #37# (unless (typep #139# (quote #140#)) (si::structure-type-error #139# (quote #141#) (quote cl-protobufs.meshtastic::store-and-forward.history) (quote cl-protobufs.implementation::%%is-set))) (unless (typep #138# (quote #142#)) (si::structure-type-error #138# (quote #143#) (quote cl-protobufs.meshtastic::store-and-forward.history) (quote cl-protobufs.implementation::%%bytes))) (unless (typep #137# (quote cl-protobufs::uint32)) (si::structure-type-error #137# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::store-and-forward.history) (quote cl-protobufs.meshtastic::%last-request))) (unless (typep #136# (quote cl-protobufs::uint32)) (si::structure-type-error #136# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::store-and-forward.history) (quote cl-protobufs.meshtastic::%window))) (unless (typep #135# (quote cl-protobufs::uint32)) (si::structure-type-error #135# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::store-and-forward.history) (quote cl-protobufs.meshtastic::%history-messages))) (unless (typep #134# (quote #144#)) (si::structure-type-error #134# (quote #145#) (quote cl-protobufs.meshtastic::store-and-forward.history) (quote cl-protobufs.implementation::%%skipped-bytes))) (si::make-structure (load-time-value (find-class (quote cl-protobufs.meshtastic::store-and-forward.history))) #134# #135# #136# #137# #138# #139#))) cl-protobufs.meshtastic::store-and-forward.history-%%is-set (cl-protobufs.meshtastic::store-and-forward.history-%%is-set) #:g61128 #Y(nil nil nil (24 45 1655 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 1621 6 2 12 9 5 13 0 10 1 6 6 12 15 272 13 2 15 271 1 1621 6 2 12 8 5 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.history-%%bytes (cl-protobufs.meshtastic::store-and-forward.history-%%bytes) #:g61129 #Y(nil nil nil (24 45 1659 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 1621 6 2 12 9 4 13 0 10 1 6 6 12 15 272 13 2 15 271 1 1621 6 2 12 8 4 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.history-%last-request (cl-protobufs.meshtastic::store-and-forward.history-%last-request) #:g61130 #Y(nil nil nil (24 45 1663 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 1621 6 2 12 9 3 13 0 10 1 6 6 12 15 272 13 2 15 271 1 1621 6 2 12 8 3 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.history-%window (cl-protobufs.meshtastic::store-and-forward.history-%window) #:g61131 #Y(nil nil nil (24 45 1667 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 1621 6 2 12 9 2 13 0 10 1 6 6 12 15 272 13 2 15 271 1 1621 6 2 12 8 2 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.history-%history-messages (cl-protobufs.meshtastic::store-and-forward.history-%history-messages) #:g61132 #Y(nil nil nil (24 45 1671 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 1621 6 2 12 9 1 13 0 10 1 6 6 12 15 272 13 2 15 271 1 1621 6 2 12 8 1 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.history-%%skipped-bytes (cl-protobufs.meshtastic::store-and-forward.history-%%skipped-bytes) #:g61133 #Y(nil nil nil (24 45 1675 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 1621 6 2 12 9 0 13 0 10 1 6 6 12 15 272 13 2 15 271 1 1621 6 2 12 8 0 6 4 12 72 6 43 2 29) #1# #5# 730) ((inline cl-protobufs.meshtastic::store-and-forward.history.history-messages)) cl-protobufs.meshtastic::store-and-forward.history.history-messages (defun cl-protobufs.meshtastic::store-and-forward.history.history-messages) (#5# . 730) #146=(#147=#:obj60341) #147# #Y(cl-protobufs.meshtastic::store-and-forward.history.history-messages nil nil (24 45 1682 26 13 0 19 1 1669 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.history.history-messages #146# #37# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::store-and-forward.history-%history-messages #147#)))) ((inline #148=(setf cl-protobufs.meshtastic::store-and-forward.history.history-messages))) #148# (defun #148#) (#5# . 730) #149=(#150=#:new-value60343 #151=#:obj60342) #150# #151# #:g61136 #:g61137 #Y(#148# nil nil (24 45 1690 24 45 1691 26 10 0 45 1692 10 2 45 1693 13 1 15 1621 9 1 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block #148# #149# #37# (declare (type cl-protobufs::uint32 #150#)) nil (setf (cl-protobufs.meshtastic::store-and-forward.history-%history-messages #151#) #150#))) ((inline cl-protobufs.meshtastic::store-and-forward.history.%%has-history-messages)) cl-protobufs.meshtastic::store-and-forward.history.%%has-history-messages (defun cl-protobufs.meshtastic::store-and-forward.history.%%has-history-messages) (#5# . 730) #152=(#151#) #153=#:cur-value60344 #Y(cl-protobufs.meshtastic::store-and-forward.history.%%has-history-messages nil nil (24 45 1691 26 13 0 19 1 1669 45 1701 13 0 8 0 17 343 76 73 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.history.%%has-history-messages #152# #37# (let ((#153# (cl-protobufs.meshtastic::store-and-forward.history-%history-messages #151#))) (not (eq #153# 0))))) ((inline cl-protobufs.meshtastic::store-and-forward.history.clear-history-messages)) cl-protobufs.meshtastic::store-and-forward.history.clear-history-messages (defun cl-protobufs.meshtastic::store-and-forward.history.clear-history-messages) (#5# . 730) #154=(#151#) #:g61140 #:g61141 #Y(cl-protobufs.meshtastic::store-and-forward.history.clear-history-messages nil nil (24 45 1691 26 10 0 45 1709 8 0 45 1710 13 1 15 1621 9 1 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.history.clear-history-messages #154# #37# nil (setf (cl-protobufs.meshtastic::store-and-forward.history-%history-messages #151#) 0))) cl-protobufs.meshtastic::history-messages (defmethod cl-protobufs.meshtastic::history-messages (#151# cl-protobufs.meshtastic::store-and-forward.history)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward.history) (#151#) #Y(cl-protobufs.meshtastic::history-messages nil nil (24 45 1691 26 13 0 19 1 1678 29) #1# #5# 730) #155=(setf cl-protobufs.meshtastic::history-messages) (defmethod #155# #150# (#151# cl-protobufs.meshtastic::store-and-forward.history)) (#5# . 730) (t cl-protobufs.meshtastic::store-and-forward.history) (#150# #151#) #:g61148 #:g61149 (setf cl-protobufs.meshtastic::store-and-forward.history.history-messages) #Y(#155# nil nil (24 45 1690 24 45 1691 26 10 0 45 1724 10 2 45 1725 13 0 13 1 33 1726 18 2 43 1 43 1 29) #1# #5# 730) (cl-protobufs.meshtastic::store-and-forward.history.clear-history-messages) (cl-protobufs.meshtastic::store-and-forward.history.history-messages) ((inline cl-protobufs.meshtastic::store-and-forward.history.window)) cl-protobufs.meshtastic::store-and-forward.history.window (defun cl-protobufs.meshtastic::store-and-forward.history.window) (#5# . 730) #156=(#157=#:obj60345) #157# #Y(cl-protobufs.meshtastic::store-and-forward.history.window nil nil (24 45 1735 26 13 0 19 1 1665 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.history.window #156# #37# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::store-and-forward.history-%window #157#)))) ((inline #158=(setf cl-protobufs.meshtastic::store-and-forward.history.window))) #158# (defun #158#) (#5# . 730) #159=(#160=#:new-value60347 #161=#:obj60346) #160# #161# #:g61152 #:g61153 #Y(#158# nil nil (24 45 1743 24 45 1744 26 10 0 45 1745 10 2 45 1746 13 1 15 1621 9 2 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block #158# #159# #37# (declare (type cl-protobufs::uint32 #160#)) nil (setf (cl-protobufs.meshtastic::store-and-forward.history-%window #161#) #160#))) ((inline cl-protobufs.meshtastic::store-and-forward.history.%%has-window)) cl-protobufs.meshtastic::store-and-forward.history.%%has-window (defun cl-protobufs.meshtastic::store-and-forward.history.%%has-window) (#5# . 730) #162=(#161#) #163=#:cur-value60348 #Y(cl-protobufs.meshtastic::store-and-forward.history.%%has-window nil nil (24 45 1744 26 13 0 19 1 1665 45 1754 13 0 8 0 17 343 76 73 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.history.%%has-window #162# #37# (let ((#163# (cl-protobufs.meshtastic::store-and-forward.history-%window #161#))) (not (eq #163# 0))))) ((inline cl-protobufs.meshtastic::store-and-forward.history.clear-window)) cl-protobufs.meshtastic::store-and-forward.history.clear-window (defun cl-protobufs.meshtastic::store-and-forward.history.clear-window) (#5# . 730) #164=(#161#) #:g61156 #:g61157 #Y(cl-protobufs.meshtastic::store-and-forward.history.clear-window nil nil (24 45 1744 26 10 0 45 1762 8 0 45 1763 13 1 15 1621 9 2 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.history.clear-window #164# #37# nil (setf (cl-protobufs.meshtastic::store-and-forward.history-%window #161#) 0))) cl-protobufs.meshtastic::window (defmethod cl-protobufs.meshtastic::window (#161# cl-protobufs.meshtastic::store-and-forward.history)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward.history) (#161#) #Y(cl-protobufs.meshtastic::window nil nil (24 45 1744 26 13 0 19 1 1731 29) #1# #5# 730) #165=(setf cl-protobufs.meshtastic::window) (defmethod #165# #160# (#161# cl-protobufs.meshtastic::store-and-forward.history)) (#5# . 730) (t cl-protobufs.meshtastic::store-and-forward.history) (#160# #161#) #:g61164 #:g61165 (setf cl-protobufs.meshtastic::store-and-forward.history.window) #Y(#165# nil nil (24 45 1743 24 45 1744 26 10 0 45 1777 10 2 45 1778 13 0 13 1 33 1779 18 2 43 1 43 1 29) #1# #5# 730) (cl-protobufs.meshtastic::store-and-forward.history.clear-window) (cl-protobufs.meshtastic::store-and-forward.history.window) ((inline cl-protobufs.meshtastic::store-and-forward.history.last-request)) cl-protobufs.meshtastic::store-and-forward.history.last-request (defun cl-protobufs.meshtastic::store-and-forward.history.last-request) (#5# . 730) #166=(#167=#:obj60349) #167# #Y(cl-protobufs.meshtastic::store-and-forward.history.last-request nil nil (24 45 1788 26 13 0 19 1 1661 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.history.last-request #166# #37# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::store-and-forward.history-%last-request #167#)))) ((inline #168=(setf cl-protobufs.meshtastic::store-and-forward.history.last-request))) #168# (defun #168#) (#5# . 730) #169=(#170=#:new-value60351 #171=#:obj60350) #170# #171# #:g61168 #:g61169 #Y(#168# nil nil (24 45 1796 24 45 1797 26 10 0 45 1798 10 2 45 1799 13 1 15 1621 9 3 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block #168# #169# #37# (declare (type cl-protobufs::uint32 #170#)) nil (setf (cl-protobufs.meshtastic::store-and-forward.history-%last-request #171#) #170#))) ((inline cl-protobufs.meshtastic::store-and-forward.history.%%has-last-request)) cl-protobufs.meshtastic::store-and-forward.history.%%has-last-request (defun cl-protobufs.meshtastic::store-and-forward.history.%%has-last-request) (#5# . 730) #172=(#171#) #173=#:cur-value60352 #Y(cl-protobufs.meshtastic::store-and-forward.history.%%has-last-request nil nil (24 45 1797 26 13 0 19 1 1661 45 1807 13 0 8 0 17 343 76 73 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.history.%%has-last-request #172# #37# (let ((#173# (cl-protobufs.meshtastic::store-and-forward.history-%last-request #171#))) (not (eq #173# 0))))) ((inline cl-protobufs.meshtastic::store-and-forward.history.clear-last-request)) cl-protobufs.meshtastic::store-and-forward.history.clear-last-request (defun cl-protobufs.meshtastic::store-and-forward.history.clear-last-request) (#5# . 730) #174=(#171#) #:g61172 #:g61173 #Y(cl-protobufs.meshtastic::store-and-forward.history.clear-last-request nil nil (24 45 1797 26 10 0 45 1815 8 0 45 1816 13 1 15 1621 9 3 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.history.clear-last-request #174# #37# nil (setf (cl-protobufs.meshtastic::store-and-forward.history-%last-request #171#) 0))) cl-protobufs.meshtastic::last-request (defmethod cl-protobufs.meshtastic::last-request (#171# cl-protobufs.meshtastic::store-and-forward.history)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward.history) (#171#) #Y(cl-protobufs.meshtastic::last-request nil nil (24 45 1797 26 13 0 19 1 1784 29) #1# #5# 730) #175=(setf cl-protobufs.meshtastic::last-request) (defmethod #175# #170# (#171# cl-protobufs.meshtastic::store-and-forward.history)) (#5# . 730) (t cl-protobufs.meshtastic::store-and-forward.history) (#170# #171#) #:g61180 #:g61181 (setf cl-protobufs.meshtastic::store-and-forward.history.last-request) #Y(#175# nil nil (24 45 1796 24 45 1797 26 10 0 45 1830 10 2 45 1831 13 0 13 1 33 1832 18 2 43 1 43 1 29) #1# #5# 730) (cl-protobufs.meshtastic::store-and-forward.history.clear-last-request) (cl-protobufs.meshtastic::store-and-forward.history.last-request) ((inline cl-protobufs.meshtastic::make-store-and-forward.history)) cl-protobufs.meshtastic::make-store-and-forward.history (defun cl-protobufs.meshtastic::make-store-and-forward.history) (#5# . 730) #176=(&key (cl-protobufs.meshtastic::history-messages :%unset) (cl-protobufs.meshtastic::window :%unset) (cl-protobufs.meshtastic::last-request :%unset)) (nil :last-request :window :history-messages) #177=#:obj60340 #:g61188 #:g61189 (setf cl-protobufs.meshtastic::store-and-forward.history.history-messages) #:g61190 #:g61191 (setf cl-protobufs.meshtastic::store-and-forward.history.window) #:g61192 #:g61193 (setf cl-protobufs.meshtastic::store-and-forward.history.last-request) #Y(cl-protobufs.meshtastic::make-store-and-forward.history nil nil (28 1841 22 40 3 14 801 46 1713 22 40 3 14 801 46 1766 22 40 3 14 801 46 1819 19 0 1630 45 1842 13 3 11 801 17 343 40 4 10 3 76 76 39 21 10 0 45 1843 10 4 45 1844 13 0 13 1 33 1845 18 2 43 1 43 1 13 2 11 801 17 343 40 4 10 2 76 76 39 21 10 0 45 1846 10 3 45 1847 13 0 13 1 33 1848 18 2 43 1 43 1 13 1 11 801 17 343 40 4 10 1 76 76 39 21 10 0 45 1849 10 2 45 1850 13 0 13 1 33 1851 18 2 43 1 43 1 10 0 73 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::make-store-and-forward.history #176# #37# (let ((#177# (cl-protobufs.meshtastic::%make-store-and-forward.history))) (unless (or (eq cl-protobufs.meshtastic::history-messages :%unset) (not cl-protobufs.meshtastic::history-messages)) (setf (cl-protobufs.meshtastic::store-and-forward.history.history-messages #177#) cl-protobufs.meshtastic::history-messages)) (unless (or (eq cl-protobufs.meshtastic::window :%unset) (not cl-protobufs.meshtastic::window)) (setf (cl-protobufs.meshtastic::store-and-forward.history.window #177#) cl-protobufs.meshtastic::window)) (unless (or (eq cl-protobufs.meshtastic::last-request :%unset) (not cl-protobufs.meshtastic::last-request)) (setf (cl-protobufs.meshtastic::store-and-forward.history.last-request #177#) cl-protobufs.meshtastic::last-request)) #177#))) cl-protobufs.meshtastic::store-and-forward.history.clear-%%is-set (defun cl-protobufs.meshtastic::store-and-forward.history.clear-%%is-set) (#5# . 730) (#177#) #Y(cl-protobufs.meshtastic::store-and-forward.history.clear-%%is-set nil nil (24 45 1842 26 13 0 19 1 1653 12 9 0 19 2 836 29) #1# #5# 730) (cl-protobufs.meshtastic::make-store-and-forward.history cl-protobufs.meshtastic::store-and-forward.history-%%is-set) (defmethod cl-protobufs::clear (#177# cl-protobufs.meshtastic::store-and-forward.history)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward.history) (#177#) #:g61200 #:g61201 #Y(cl-protobufs::clear nil nil (24 45 1842 26 10 0 45 1864 75 45 1865 13 1 15 196 9 0 13 0 19 4 153 43 1 43 1 13 0 19 1 1705 13 0 19 1 1758 13 0 19 1 1811 13 0 19 1 1854 29) #1# #5# 730) 0 #:g61202 #:g61203 #:g61204 (setf slot-value) #:g61205 #:g61206 "History" #:g61207 (setf slot-value) #:g61208 #:g61209 "meshtastic.StoreAndForward.History" #:g61210 (setf slot-value) #:g61211 #:g61212 #:g61213 (setf slot-value) #:g61214 #:g61215 #:g61216 (setf slot-value) #:g61217 #:g61218 0 #:g61219 (setf slot-value) #:g61220 #:g61221 #:g61222 (setf slot-value) #:g61223 #:g61224 #:g61225 (setf slot-value) #:g61226 #:g61227 #:g61228 (setf slot-value) #:g61229 #:g61230 #:g61231 (setf slot-value) 0 0 #:g61232 #:g61233 #:g61234 (setf slot-value) #:g61235 #:g61236 "history_messages" #:g61237 (setf slot-value) #:g61238 #:g61239 "meshtastic.StoreAndForward.History.history_messages" #:g61240 (setf slot-value) #:g61241 #:g61242 #:g61243 (setf slot-value) #:g61244 #:g61245 #:g61246 (setf slot-value) #:g61247 #:g61248 #:g61249 (setf slot-value) #:g61250 #:g61251 #:g61252 (setf slot-value) #:g61253 #:g61254 #:g61255 (setf slot-value) #:g61256 #:g61257 #:g61258 (setf slot-value) #:g61259 #:g61260 #:g61261 (setf slot-value) #:g61262 #:g61263 #:g61264 (setf slot-value) #:g61265 #:g61266 #:g61267 (setf slot-value) #:g61268 #:g61269 "historyMessages" #:g61270 (setf slot-value) #:g61271 #:g61272 #:g61273 (setf slot-value) #:g61274 #:g61275 #:g61276 (setf slot-value) #:g61277 #:g61278 #:g61279 (setf slot-value) #:g61280 #:g61281 #:g61282 (setf slot-value) #:g61283 #:g61284 #:g61285 (setf slot-value) 0 0 #:g61286 #:g61287 #:g61288 (setf slot-value) #:g61289 #:g61290 "window" #:g61291 (setf slot-value) #:g61292 #:g61293 "meshtastic.StoreAndForward.History.window" #:g61294 (setf slot-value) #:g61295 #:g61296 #:g61297 (setf slot-value) #:g61298 #:g61299 #:g61300 (setf slot-value) #:g61301 #:g61302 #:g61303 (setf slot-value) #:g61304 #:g61305 #:g61306 (setf slot-value) #:g61307 #:g61308 #:g61309 (setf slot-value) #:g61310 #:g61311 #:g61312 (setf slot-value) #:g61313 #:g61314 #:g61315 (setf slot-value) #:g61316 #:g61317 #:g61318 (setf slot-value) #:g61319 #:g61320 #:g61321 (setf slot-value) #:g61322 #:g61323 "window" #:g61324 (setf slot-value) #:g61325 #:g61326 #:g61327 (setf slot-value) #:g61328 #:g61329 #:g61330 (setf slot-value) #:g61331 #:g61332 #:g61333 (setf slot-value) #:g61334 #:g61335 #:g61336 (setf slot-value) #:g61337 #:g61338 #:g61339 (setf slot-value) 0 #:g61340 #:g61341 #:g61342 (setf slot-value) #:g61343 #:g61344 "last_request" #:g61345 (setf slot-value) #:g61346 #:g61347 "meshtastic.StoreAndForward.History.last_request" #:g61348 (setf slot-value) #:g61349 #:g61350 #:g61351 (setf slot-value) #:g61352 #:g61353 #:g61354 (setf slot-value) #:g61355 #:g61356 #:g61357 (setf slot-value) #:g61358 #:g61359 #:g61360 (setf slot-value) #:g61361 #:g61362 #:g61363 (setf slot-value) #:g61364 #:g61365 #:g61366 (setf slot-value) #:g61367 #:g61368 #:g61369 (setf slot-value) #:g61370 #:g61371 #:g61372 (setf slot-value) #:g61373 #:g61374 #:g61375 (setf slot-value) #:g61376 #:g61377 "lastRequest" #:g61378 (setf slot-value) #:g61379 #:g61380 #:g61381 (setf slot-value) #:g61382 #:g61383 #:g61384 (setf slot-value) #:g61385 #:g61386 #:g61387 (setf slot-value) #:g61388 #:g61389 #:g61390 (setf slot-value) #:g61391 #:g61392 #:g61393 (setf slot-value) ((inline cl-protobufs.meshtastic::%make-store-and-forward.heartbeat)) cl-protobufs.meshtastic::store-and-forward.heartbeat "STORE-AND-FORWARD.HEARTBEAT-" ((cl-protobufs.meshtastic::%period 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%secondary 0 :type cl-protobufs::uint32) (cl-protobufs.implementation::%%bytes nil :type #6#) (cl-protobufs.implementation::%%is-set #178=(make-array 0 . #11#) :type #179=(bit-vector 0))) (#13# (cl-protobufs.meshtastic::%period 0 cl-protobufs::uint32 nil 1 nil) (cl-protobufs.meshtastic::%secondary 0 cl-protobufs::uint32 nil 2 nil) (cl-protobufs.implementation::%%bytes nil #6# nil 3 nil) (cl-protobufs.implementation::%%is-set #178# #179# nil 4 nil)) cl-protobufs.meshtastic::copy-store-and-forward.heartbeat (cl-protobufs.meshtastic::%make-store-and-forward.heartbeat) #180=(cl-protobufs.meshtastic::store-and-forward.heartbeat (:constructor cl-protobufs.meshtastic::%make-store-and-forward.heartbeat) . #15#) (defstruct #180#) (#5# . 730) cl-protobufs.meshtastic::%make-store-and-forward.heartbeat (defun cl-protobufs.meshtastic::%make-store-and-forward.heartbeat) (#5# . 730) #181=(&key #182=#:%%skipped-bytes (#183=#:%period 0) (#184=#:%secondary 0) #185=#:%%bytes (#186=#:%%is-set (make-array 0 :element-type (quote bit) :initial-element 0))) (nil :%%is-set :%%bytes :%secondary :%period :%%skipped-bytes) #182# #183# #184# #185# #186# #187=(bit-vector 0) #188=(bit-vector 0) #189=(or null (simple-array (unsigned-byte 8))) #190=(or null (simple-array (unsigned-byte 8))) cl-protobufs.meshtastic::%secondary cl-protobufs.meshtastic::%period #191=(or null cl-protobufs::byte-vector) #192=(or null cl-protobufs::byte-vector) 0 #Y(cl-protobufs.meshtastic::%make-store-and-forward.heartbeat nil nil (28 2155 22 40 2 77 46 2156 22 40 3 9 0 46 2157 22 40 3 9 0 46 2158 22 40 2 77 46 2159 22 40 15 9 0 14 217 15 218 14 223 9 0 19 5 221 12 46 2160 13 0 15 2161 19 2 226 76 39 12 13 0 15 2162 15 2142 15 228 19 4 229 13 1 15 2163 19 2 226 76 39 12 13 1 15 2164 15 2142 15 235 19 4 229 13 2 15 236 19 2 226 76 39 12 13 2 15 236 15 2142 15 2165 19 4 229 13 3 15 236 19 2 226 76 39 12 13 3 15 236 15 2142 15 2166 19 4 229 13 4 15 2167 19 2 226 76 39 12 13 4 15 2168 15 2142 15 247 19 4 229 15 2169 13 4 13 3 13 2 13 1 13 0 19 6 249 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::%make-store-and-forward.heartbeat #181# #37# (unless (typep #186# (quote #187#)) (si::structure-type-error #186# (quote #188#) (quote cl-protobufs.meshtastic::store-and-forward.heartbeat) (quote cl-protobufs.implementation::%%is-set))) (unless (typep #185# (quote #189#)) (si::structure-type-error #185# (quote #190#) (quote cl-protobufs.meshtastic::store-and-forward.heartbeat) (quote cl-protobufs.implementation::%%bytes))) (unless (typep #184# (quote cl-protobufs::uint32)) (si::structure-type-error #184# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::store-and-forward.heartbeat) (quote cl-protobufs.meshtastic::%secondary))) (unless (typep #183# (quote cl-protobufs::uint32)) (si::structure-type-error #183# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::store-and-forward.heartbeat) (quote cl-protobufs.meshtastic::%period))) (unless (typep #182# (quote #191#)) (si::structure-type-error #182# (quote #192#) (quote cl-protobufs.meshtastic::store-and-forward.heartbeat) (quote cl-protobufs.implementation::%%skipped-bytes))) (si::make-structure (load-time-value (find-class (quote cl-protobufs.meshtastic::store-and-forward.heartbeat))) #182# #183# #184# #185# #186#))) cl-protobufs.meshtastic::store-and-forward.heartbeat-%%is-set (cl-protobufs.meshtastic::store-and-forward.heartbeat-%%is-set) #:g61399 #Y(nil nil nil (24 45 2174 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 2142 6 2 12 9 4 13 0 10 1 6 6 12 15 272 13 2 15 271 1 2142 6 2 12 8 4 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.heartbeat-%%bytes (cl-protobufs.meshtastic::store-and-forward.heartbeat-%%bytes) #:g61400 #Y(nil nil nil (24 45 2178 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 2142 6 2 12 9 3 13 0 10 1 6 6 12 15 272 13 2 15 271 1 2142 6 2 12 8 3 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.heartbeat-%secondary (cl-protobufs.meshtastic::store-and-forward.heartbeat-%secondary) #:g61401 #Y(nil nil nil (24 45 2182 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 2142 6 2 12 9 2 13 0 10 1 6 6 12 15 272 13 2 15 271 1 2142 6 2 12 8 2 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.heartbeat-%period (cl-protobufs.meshtastic::store-and-forward.heartbeat-%period) #:g61402 #Y(nil nil nil (24 45 2186 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 2142 6 2 12 9 1 13 0 10 1 6 6 12 15 272 13 2 15 271 1 2142 6 2 12 8 1 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward.heartbeat-%%skipped-bytes (cl-protobufs.meshtastic::store-and-forward.heartbeat-%%skipped-bytes) #:g61403 #Y(nil nil nil (24 45 2190 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 2142 6 2 12 9 0 13 0 10 1 6 6 12 15 272 13 2 15 271 1 2142 6 2 12 8 0 6 4 12 72 6 43 2 29) #1# #5# 730) ((inline cl-protobufs.meshtastic::store-and-forward.heartbeat.period)) cl-protobufs.meshtastic::store-and-forward.heartbeat.period (defun cl-protobufs.meshtastic::store-and-forward.heartbeat.period) (#5# . 730) #193=(#194=#:obj60354) #194# #Y(cl-protobufs.meshtastic::store-and-forward.heartbeat.period nil nil (24 45 2197 26 13 0 19 1 2184 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.heartbeat.period #193# #37# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::store-and-forward.heartbeat-%period #194#)))) ((inline #195=(setf cl-protobufs.meshtastic::store-and-forward.heartbeat.period))) #195# (defun #195#) (#5# . 730) #196=(#197=#:new-value60356 #198=#:obj60355) #197# #198# #:g61406 #:g61407 #Y(#195# nil nil (24 45 2205 24 45 2206 26 10 0 45 2207 10 2 45 2208 13 1 15 2142 9 1 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block #195# #196# #37# (declare (type cl-protobufs::uint32 #197#)) nil (setf (cl-protobufs.meshtastic::store-and-forward.heartbeat-%period #198#) #197#))) ((inline cl-protobufs.meshtastic::store-and-forward.heartbeat.%%has-period)) cl-protobufs.meshtastic::store-and-forward.heartbeat.%%has-period (defun cl-protobufs.meshtastic::store-and-forward.heartbeat.%%has-period) (#5# . 730) #199=(#198#) #200=#:cur-value60357 #Y(cl-protobufs.meshtastic::store-and-forward.heartbeat.%%has-period nil nil (24 45 2206 26 13 0 19 1 2184 45 2216 13 0 8 0 17 343 76 73 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.heartbeat.%%has-period #199# #37# (let ((#200# (cl-protobufs.meshtastic::store-and-forward.heartbeat-%period #198#))) (not (eq #200# 0))))) ((inline cl-protobufs.meshtastic::store-and-forward.heartbeat.clear-period)) cl-protobufs.meshtastic::store-and-forward.heartbeat.clear-period (defun cl-protobufs.meshtastic::store-and-forward.heartbeat.clear-period) (#5# . 730) #201=(#198#) #:g61410 #:g61411 #Y(cl-protobufs.meshtastic::store-and-forward.heartbeat.clear-period nil nil (24 45 2206 26 10 0 45 2224 8 0 45 2225 13 1 15 2142 9 1 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.heartbeat.clear-period #201# #37# nil (setf (cl-protobufs.meshtastic::store-and-forward.heartbeat-%period #198#) 0))) cl-protobufs.meshtastic::period (defmethod cl-protobufs.meshtastic::period (#198# cl-protobufs.meshtastic::store-and-forward.heartbeat)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward.heartbeat) (#198#) #Y(cl-protobufs.meshtastic::period nil nil (24 45 2206 26 13 0 19 1 2193 29) #1# #5# 730) #202=(setf cl-protobufs.meshtastic::period) (defmethod #202# #197# (#198# cl-protobufs.meshtastic::store-and-forward.heartbeat)) (#5# . 730) (t cl-protobufs.meshtastic::store-and-forward.heartbeat) (#197# #198#) #:g61418 #:g61419 (setf cl-protobufs.meshtastic::store-and-forward.heartbeat.period) #Y(#202# nil nil (24 45 2205 24 45 2206 26 10 0 45 2239 10 2 45 2240 13 0 13 1 33 2241 18 2 43 1 43 1 29) #1# #5# 730) (cl-protobufs.meshtastic::store-and-forward.heartbeat.clear-period) (cl-protobufs.meshtastic::store-and-forward.heartbeat.period) ((inline cl-protobufs.meshtastic::store-and-forward.heartbeat.secondary)) cl-protobufs.meshtastic::store-and-forward.heartbeat.secondary (defun cl-protobufs.meshtastic::store-and-forward.heartbeat.secondary) (#5# . 730) #203=(#204=#:obj60358) #204# #Y(cl-protobufs.meshtastic::store-and-forward.heartbeat.secondary nil nil (24 45 2250 26 13 0 19 1 2180 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.heartbeat.secondary #203# #37# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::store-and-forward.heartbeat-%secondary #204#)))) ((inline #205=(setf cl-protobufs.meshtastic::store-and-forward.heartbeat.secondary))) #205# (defun #205#) (#5# . 730) #206=(#207=#:new-value60360 #208=#:obj60359) #207# #208# #:g61422 #:g61423 #Y(#205# nil nil (24 45 2258 24 45 2259 26 10 0 45 2260 10 2 45 2261 13 1 15 2142 9 2 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block #205# #206# #37# (declare (type cl-protobufs::uint32 #207#)) nil (setf (cl-protobufs.meshtastic::store-and-forward.heartbeat-%secondary #208#) #207#))) ((inline cl-protobufs.meshtastic::store-and-forward.heartbeat.%%has-secondary)) cl-protobufs.meshtastic::store-and-forward.heartbeat.%%has-secondary (defun cl-protobufs.meshtastic::store-and-forward.heartbeat.%%has-secondary) (#5# . 730) #209=(#208#) #210=#:cur-value60361 #Y(cl-protobufs.meshtastic::store-and-forward.heartbeat.%%has-secondary nil nil (24 45 2259 26 13 0 19 1 2180 45 2269 13 0 8 0 17 343 76 73 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.heartbeat.%%has-secondary #209# #37# (let ((#210# (cl-protobufs.meshtastic::store-and-forward.heartbeat-%secondary #208#))) (not (eq #210# 0))))) ((inline cl-protobufs.meshtastic::store-and-forward.heartbeat.clear-secondary)) cl-protobufs.meshtastic::store-and-forward.heartbeat.clear-secondary (defun cl-protobufs.meshtastic::store-and-forward.heartbeat.clear-secondary) (#5# . 730) #211=(#208#) #:g61426 #:g61427 #Y(cl-protobufs.meshtastic::store-and-forward.heartbeat.clear-secondary nil nil (24 45 2259 26 10 0 45 2277 8 0 45 2278 13 1 15 2142 9 2 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.heartbeat.clear-secondary #211# #37# nil (setf (cl-protobufs.meshtastic::store-and-forward.heartbeat-%secondary #208#) 0))) cl-protobufs.meshtastic::secondary (defmethod cl-protobufs.meshtastic::secondary (#208# cl-protobufs.meshtastic::store-and-forward.heartbeat)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward.heartbeat) (#208#) #Y(cl-protobufs.meshtastic::secondary nil nil (24 45 2259 26 13 0 19 1 2246 29) #1# #5# 730) #212=(setf cl-protobufs.meshtastic::secondary) (defmethod #212# #207# (#208# cl-protobufs.meshtastic::store-and-forward.heartbeat)) (#5# . 730) (t cl-protobufs.meshtastic::store-and-forward.heartbeat) (#207# #208#) #:g61434 #:g61435 (setf cl-protobufs.meshtastic::store-and-forward.heartbeat.secondary) #Y(#212# nil nil (24 45 2258 24 45 2259 26 10 0 45 2292 10 2 45 2293 13 0 13 1 33 2294 18 2 43 1 43 1 29) #1# #5# 730) (cl-protobufs.meshtastic::store-and-forward.heartbeat.clear-secondary) (cl-protobufs.meshtastic::store-and-forward.heartbeat.secondary) ((inline cl-protobufs.meshtastic::make-store-and-forward.heartbeat)) cl-protobufs.meshtastic::make-store-and-forward.heartbeat (defun cl-protobufs.meshtastic::make-store-and-forward.heartbeat) (#5# . 730) #213=(&key (cl-protobufs.meshtastic::period :%unset) (cl-protobufs.meshtastic::secondary :%unset)) (nil :secondary :period) #214=#:obj60353 #:g61440 #:g61441 (setf cl-protobufs.meshtastic::store-and-forward.heartbeat.period) #:g61442 #:g61443 (setf cl-protobufs.meshtastic::store-and-forward.heartbeat.secondary) #Y(cl-protobufs.meshtastic::make-store-and-forward.heartbeat nil nil (28 2303 22 40 3 14 801 46 2228 22 40 3 14 801 46 2281 19 0 2151 45 2304 13 2 11 801 17 343 40 4 10 2 76 76 39 21 10 0 45 2305 10 3 45 2306 13 0 13 1 33 2307 18 2 43 1 43 1 13 1 11 801 17 343 40 4 10 1 76 76 39 21 10 0 45 2308 10 2 45 2309 13 0 13 1 33 2310 18 2 43 1 43 1 10 0 73 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::make-store-and-forward.heartbeat #213# #37# (let ((#214# (cl-protobufs.meshtastic::%make-store-and-forward.heartbeat))) (unless (or (eq cl-protobufs.meshtastic::period :%unset) (not cl-protobufs.meshtastic::period)) (setf (cl-protobufs.meshtastic::store-and-forward.heartbeat.period #214#) cl-protobufs.meshtastic::period)) (unless (or (eq cl-protobufs.meshtastic::secondary :%unset) (not cl-protobufs.meshtastic::secondary)) (setf (cl-protobufs.meshtastic::store-and-forward.heartbeat.secondary #214#) cl-protobufs.meshtastic::secondary)) #214#))) cl-protobufs.meshtastic::store-and-forward.heartbeat.clear-%%is-set (defun cl-protobufs.meshtastic::store-and-forward.heartbeat.clear-%%is-set) (#5# . 730) (#214#) #Y(cl-protobufs.meshtastic::store-and-forward.heartbeat.clear-%%is-set nil nil (24 45 2304 26 13 0 19 1 2172 12 9 0 19 2 836 29) #1# #5# 730) (cl-protobufs.meshtastic::make-store-and-forward.heartbeat cl-protobufs.meshtastic::store-and-forward.heartbeat-%%is-set) (defmethod cl-protobufs::clear (#214# cl-protobufs.meshtastic::store-and-forward.heartbeat)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward.heartbeat) (#214#) #:g61450 #:g61451 #Y(cl-protobufs::clear nil nil (24 45 2304 26 10 0 45 2323 75 45 2324 13 1 15 196 9 0 13 0 19 4 153 43 1 43 1 13 0 19 1 2220 13 0 19 1 2273 13 0 19 1 2313 29) #1# #5# 730) 0 #:g61452 #:g61453 #:g61454 (setf slot-value) #:g61455 #:g61456 "Heartbeat" #:g61457 (setf slot-value) #:g61458 #:g61459 "meshtastic.StoreAndForward.Heartbeat" #:g61460 (setf slot-value) #:g61461 #:g61462 #:g61463 (setf slot-value) #:g61464 #:g61465 #:g61466 (setf slot-value) #:g61467 #:g61468 0 #:g61469 (setf slot-value) #:g61470 #:g61471 #:g61472 (setf slot-value) #:g61473 #:g61474 #:g61475 (setf slot-value) #:g61476 #:g61477 #:g61478 (setf slot-value) #:g61479 #:g61480 #:g61481 (setf slot-value) 0 0 #:g61482 #:g61483 #:g61484 (setf slot-value) #:g61485 #:g61486 "period" #:g61487 (setf slot-value) #:g61488 #:g61489 "meshtastic.StoreAndForward.Heartbeat.period" #:g61490 (setf slot-value) #:g61491 #:g61492 #:g61493 (setf slot-value) #:g61494 #:g61495 #:g61496 (setf slot-value) #:g61497 #:g61498 #:g61499 (setf slot-value) #:g61500 #:g61501 #:g61502 (setf slot-value) #:g61503 #:g61504 #:g61505 (setf slot-value) #:g61506 #:g61507 #:g61508 (setf slot-value) #:g61509 #:g61510 #:g61511 (setf slot-value) #:g61512 #:g61513 #:g61514 (setf slot-value) #:g61515 #:g61516 #:g61517 (setf slot-value) #:g61518 #:g61519 "period" #:g61520 (setf slot-value) #:g61521 #:g61522 #:g61523 (setf slot-value) #:g61524 #:g61525 #:g61526 (setf slot-value) #:g61527 #:g61528 #:g61529 (setf slot-value) #:g61530 #:g61531 #:g61532 (setf slot-value) #:g61533 #:g61534 #:g61535 (setf slot-value) 0 #:g61536 #:g61537 #:g61538 (setf slot-value) #:g61539 #:g61540 "secondary" #:g61541 (setf slot-value) #:g61542 #:g61543 "meshtastic.StoreAndForward.Heartbeat.secondary" #:g61544 (setf slot-value) #:g61545 #:g61546 #:g61547 (setf slot-value) #:g61548 #:g61549 #:g61550 (setf slot-value) #:g61551 #:g61552 #:g61553 (setf slot-value) #:g61554 #:g61555 #:g61556 (setf slot-value) #:g61557 #:g61558 #:g61559 (setf slot-value) #:g61560 #:g61561 #:g61562 (setf slot-value) #:g61563 #:g61564 #:g61565 (setf slot-value) #:g61566 #:g61567 #:g61568 (setf slot-value) #:g61569 #:g61570 #:g61571 (setf slot-value) #:g61572 #:g61573 "secondary" #:g61574 (setf slot-value) #:g61575 #:g61576 #:g61577 (setf slot-value) #:g61578 #:g61579 #:g61580 (setf slot-value) #:g61581 #:g61582 #:g61583 (setf slot-value) #:g61584 #:g61585 #:g61586 (setf slot-value) #:g61587 #:g61588 #:g61589 (setf slot-value) ((inline cl-protobufs.meshtastic::%make-store-and-forward)) cl-protobufs.meshtastic::store-and-forward "STORE-AND-FORWARD-" ((cl-protobufs.meshtastic::%rr :unset :type keyword) (cl-protobufs.implementation::%%bytes nil :type #6#) (cl-protobufs.implementation::%%is-set #215=(make-array 0 . #11#) :type #216=(bit-vector 0)) (cl-protobufs.meshtastic::%variant #217=(cl-protobufs.implementation::make-oneof) :type cl-protobufs.implementation::oneof)) (#13# (cl-protobufs.meshtastic::%rr :unset keyword nil 1 nil) (cl-protobufs.implementation::%%bytes nil #6# nil 2 nil) (cl-protobufs.implementation::%%is-set #215# #216# nil 3 nil) (cl-protobufs.meshtastic::%variant #217# cl-protobufs.implementation::oneof nil 4 nil)) cl-protobufs.meshtastic::copy-store-and-forward (cl-protobufs.meshtastic::%make-store-and-forward) #218=(cl-protobufs.meshtastic::store-and-forward (:constructor cl-protobufs.meshtastic::%make-store-and-forward) . #15#) (defstruct #218#) (#5# . 730) cl-protobufs.meshtastic::%make-store-and-forward (defun cl-protobufs.meshtastic::%make-store-and-forward) (#5# . 730) #219=(&key #220=#:%%skipped-bytes (#221=#:%rr :unset) #222=#:%%bytes (#223=#:%%is-set (make-array 0 :element-type (quote bit) :initial-element 0)) (#224=#:%variant (cl-protobufs.implementation::make-oneof))) (nil :%variant :%%is-set :%%bytes :%rr :%%skipped-bytes) #220# #221# #222# #223# cl-protobufs.implementation::make-oneof #224# cl-protobufs.implementation::oneof cl-protobufs.meshtastic::%variant #225=(bit-vector 0) #226=(bit-vector 0) #227=(or null (simple-array (unsigned-byte 8))) #228=(or null (simple-array (unsigned-byte 8))) cl-protobufs.meshtastic::%rr #229=(or null cl-protobufs::byte-vector) #230=(or null cl-protobufs::byte-vector) 0 #Y(cl-protobufs.meshtastic::%make-store-and-forward nil nil (28 2537 22 40 2 77 46 2538 22 40 3 14 29 46 2539 22 40 2 77 46 2540 22 40 15 9 0 14 217 15 218 14 223 9 0 19 5 221 12 46 2541 22 40 5 19 0 2542 12 46 2543 13 0 15 2544 19 2 226 76 39 12 13 0 15 2544 15 2524 15 2545 19 4 229 13 1 15 2546 19 2 226 76 39 12 13 1 15 2547 15 2524 15 228 19 4 229 13 2 15 2548 19 2 226 76 39 12 13 2 15 2549 15 2524 15 235 19 4 229 13 3 15 87 19 2 226 76 39 12 13 3 15 87 15 2524 15 2550 19 4 229 13 4 15 2551 19 2 226 76 39 12 13 4 15 2552 15 2524 15 247 19 4 229 15 2553 13 4 13 3 13 2 13 1 13 0 19 6 249 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::%make-store-and-forward #219# #37# (unless (typep #224# (quote cl-protobufs.implementation::oneof)) (si::structure-type-error #224# (quote cl-protobufs.implementation::oneof) (quote cl-protobufs.meshtastic::store-and-forward) (quote cl-protobufs.meshtastic::%variant))) (unless (typep #223# (quote #225#)) (si::structure-type-error #223# (quote #226#) (quote cl-protobufs.meshtastic::store-and-forward) (quote cl-protobufs.implementation::%%is-set))) (unless (typep #222# (quote #227#)) (si::structure-type-error #222# (quote #228#) (quote cl-protobufs.meshtastic::store-and-forward) (quote cl-protobufs.implementation::%%bytes))) (unless (typep #221# (quote keyword)) (si::structure-type-error #221# (quote keyword) (quote cl-protobufs.meshtastic::store-and-forward) (quote cl-protobufs.meshtastic::%rr))) (unless (typep #220# (quote #229#)) (si::structure-type-error #220# (quote #230#) (quote cl-protobufs.meshtastic::store-and-forward) (quote cl-protobufs.implementation::%%skipped-bytes))) (si::make-structure (load-time-value (find-class (quote cl-protobufs.meshtastic::store-and-forward))) #220# #221# #222# #223# #224#))) cl-protobufs.meshtastic::store-and-forward-%variant (cl-protobufs.meshtastic::store-and-forward-%variant) #:g61595 #Y(nil nil nil (24 45 2558 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 2524 6 2 12 9 4 13 0 10 1 6 6 12 15 272 13 2 15 271 1 2524 6 2 12 8 4 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward-%%is-set (cl-protobufs.meshtastic::store-and-forward-%%is-set) #:g61596 #Y(nil nil nil (24 45 2562 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 2524 6 2 12 9 3 13 0 10 1 6 6 12 15 272 13 2 15 271 1 2524 6 2 12 8 3 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward-%%bytes (cl-protobufs.meshtastic::store-and-forward-%%bytes) #:g61597 #Y(nil nil nil (24 45 2566 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 2524 6 2 12 9 2 13 0 10 1 6 6 12 15 272 13 2 15 271 1 2524 6 2 12 8 2 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward-%rr (cl-protobufs.meshtastic::store-and-forward-%rr) #:g61598 #Y(nil nil nil (24 45 2570 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 2524 6 2 12 9 1 13 0 10 1 6 6 12 15 272 13 2 15 271 1 2524 6 2 12 8 1 6 4 12 72 6 43 2 29) #1# #5# 730) cl-protobufs.meshtastic::store-and-forward-%%skipped-bytes (cl-protobufs.meshtastic::store-and-forward-%%skipped-bytes) #:g61599 #Y(nil nil nil (24 45 2574 24 45 266 26 19 0 267 12 19 0 267 12 46 268 46 269 77 77 13 0 13 1 15 270 13 2 15 271 1 2524 6 2 12 9 0 13 0 10 1 6 6 12 15 272 13 2 15 271 1 2524 6 2 12 8 0 6 4 12 72 6 43 2 29) #1# #5# 730) ((inline cl-protobufs.meshtastic::store-and-forward.rr)) cl-protobufs.meshtastic::store-and-forward.rr (defun cl-protobufs.meshtastic::store-and-forward.rr) (#5# . 730) #231=(#232=#:obj60363) #232# #Y(cl-protobufs.meshtastic::store-and-forward.rr nil nil (24 45 2581 26 13 0 19 1 2568 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.rr #231# #37# (the cl-protobufs.meshtastic::%%%%store-and-forward.request-response (cl-protobufs.meshtastic::store-and-forward-%rr #232#)))) ((inline #233=(setf cl-protobufs.meshtastic::store-and-forward.rr))) #233# (defun #233#) (#5# . 730) #234=(#235=#:new-value60365 #236=#:obj60364) #235# #236# #:g61602 #:g61603 #Y(#233# nil nil (24 45 2589 24 45 2590 26 10 0 45 2591 10 2 45 2592 13 1 15 2524 9 1 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block #233# #234# #37# (declare (type cl-protobufs.meshtastic::%%%%store-and-forward.request-response #235#)) nil (setf (cl-protobufs.meshtastic::store-and-forward-%rr #236#) #235#))) ((inline cl-protobufs.meshtastic::store-and-forward.%%has-rr)) cl-protobufs.meshtastic::store-and-forward.%%has-rr (defun cl-protobufs.meshtastic::store-and-forward.%%has-rr) (#5# . 730) #237=(#236#) #238=#:cur-value60366 #Y(cl-protobufs.meshtastic::store-and-forward.%%has-rr nil nil (24 45 2590 26 13 0 19 1 2568 45 2600 13 0 11 29 17 343 76 73 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.%%has-rr #237# #37# (let ((#238# (cl-protobufs.meshtastic::store-and-forward-%rr #236#))) (not (eq #238# :unset))))) ((inline cl-protobufs.meshtastic::store-and-forward.clear-rr)) cl-protobufs.meshtastic::store-and-forward.clear-rr (defun cl-protobufs.meshtastic::store-and-forward.clear-rr) (#5# . 730) #239=(#236#) #:g61606 #:g61607 #Y(cl-protobufs.meshtastic::store-and-forward.clear-rr nil nil (24 45 2590 26 10 0 45 2608 11 29 45 2609 13 1 15 2524 9 1 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.clear-rr #239# #37# nil (setf (cl-protobufs.meshtastic::store-and-forward-%rr #236#) :unset))) cl-protobufs.meshtastic::rr (defmethod cl-protobufs.meshtastic::rr (#236# cl-protobufs.meshtastic::store-and-forward)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward) (#236#) #Y(cl-protobufs.meshtastic::rr nil nil (24 45 2590 26 13 0 19 1 2577 29) #1# #5# 730) #240=(setf cl-protobufs.meshtastic::rr) (defmethod #240# #235# (#236# cl-protobufs.meshtastic::store-and-forward)) (#5# . 730) (t cl-protobufs.meshtastic::store-and-forward) (#235# #236#) #:g61614 #:g61615 (setf cl-protobufs.meshtastic::store-and-forward.rr) #Y(#240# nil nil (24 45 2589 24 45 2590 26 10 0 45 2623 10 2 45 2624 13 0 13 1 33 2625 18 2 43 1 43 1 29) #1# #5# 730) (cl-protobufs.meshtastic::store-and-forward.clear-rr) (cl-protobufs.meshtastic::store-and-forward.rr) ((inline cl-protobufs.meshtastic::store-and-forward.variant-case)) cl-protobufs.meshtastic::store-and-forward.variant-case (defun cl-protobufs.meshtastic::store-and-forward.variant-case) (#5# . 730) #241=(#242=#:obj60367) #242# cl-protobufs.implementation::oneof-set-field #:g61617 cl-protobufs.meshtastic::stats cl-protobufs.meshtastic::history cl-protobufs.meshtastic::empty nil (0 1 2 3 nil) si::ecase-error #Y(cl-protobufs.meshtastic::store-and-forward.variant-case nil nil (24 45 2634 26 13 0 19 1 2556 12 19 1 2635 45 2636 10 0 42 57 6 1 2637 73 38 38 42 58 6 1 2638 73 38 30 42 59 6 1 672 73 38 22 42 60 6 1 2639 73 38 14 42 2640 5 75 73 38 7 13 0 1 2641 17 2642 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.variant-case #241# #37# (ecase (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::store-and-forward-%variant #242#)) (0 (quote cl-protobufs.meshtastic::stats)) (1 (quote cl-protobufs.meshtastic::history)) (2 (quote cl-protobufs.meshtastic::heartbeat)) (3 (quote cl-protobufs.meshtastic::empty)) ((nil) nil)))) ((inline cl-protobufs.meshtastic::store-and-forward.%%has-variant)) cl-protobufs.meshtastic::store-and-forward.%%has-variant (defun cl-protobufs.meshtastic::store-and-forward.%%has-variant) (#5# . 730) #243=(#242#) eql #Y(cl-protobufs.meshtastic::store-and-forward.%%has-variant nil nil (24 45 2634 26 13 0 19 1 2556 12 19 1 2635 12 75 17 2650 76 73 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.%%has-variant #243# #37# (not (eql (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::store-and-forward-%variant #242#)) nil)))) ((inline cl-protobufs.meshtastic::store-and-forward.has-variant)) cl-protobufs.meshtastic::store-and-forward.has-variant (defun cl-protobufs.meshtastic::store-and-forward.has-variant) (#5# . 730) #244=(#242#) #Y(cl-protobufs.meshtastic::store-and-forward.has-variant nil nil (24 45 2634 26 13 0 19 1 2646 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.has-variant #244# #37# (cl-protobufs.meshtastic::store-and-forward.%%has-variant #242#))) ((inline cl-protobufs.meshtastic::store-and-forward.clear-variant)) cl-protobufs.meshtastic::store-and-forward.clear-variant (defun cl-protobufs.meshtastic::store-and-forward.clear-variant) (#5# . 730) #245=(#242#) #:g61622 #:g61623 #:g61624 #:g61625 #Y(cl-protobufs.meshtastic::store-and-forward.clear-variant nil nil (24 45 2634 26 13 0 19 1 2556 45 2665 75 45 2666 13 1 15 2544 9 0 13 0 19 4 153 43 1 43 1 13 0 19 1 2556 45 2667 75 45 2668 13 1 15 2544 9 1 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.clear-variant #245# #37# (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::store-and-forward-%variant #242#)) nil) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::store-and-forward-%variant #242#)) nil))) (cl-protobufs.meshtastic::store-and-forward.variant-case cl-protobufs.meshtastic::store-and-forward.has-variant cl-protobufs.meshtastic::store-and-forward.clear-variant) ((inline cl-protobufs.meshtastic::store-and-forward.stats)) cl-protobufs.meshtastic::store-and-forward.stats (defun cl-protobufs.meshtastic::store-and-forward.stats) (#5# . 730) #246=(#247=#:obj60368) #247# cl-protobufs.implementation::oneof-value #Y(cl-protobufs.meshtastic::store-and-forward.stats nil nil (24 45 2677 26 13 0 19 1 2556 12 19 1 2635 12 8 0 17 343 39 12 13 0 19 1 2556 12 19 1 2678 38 3 75 73 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.stats #246# #37# (if (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::store-and-forward-%variant #247#)) 0) (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::store-and-forward-%variant #247#)) nil))) ((inline #248=(setf cl-protobufs.meshtastic::store-and-forward.stats))) #248# (defun #248#) (#5# . 730) #249=(#250=#:new-value60369 #247#) #250# #:g61630 #:g61631 #:g61632 #:g61633 #Y(#248# nil nil (24 45 2686 24 45 2677 26 13 0 19 1 2556 45 2687 8 0 45 2688 13 1 15 2544 9 1 13 0 19 4 153 43 1 43 1 13 0 19 1 2556 45 2689 10 2 45 2690 13 1 15 2544 9 0 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block #248# #249# #37# (declare (type cl-protobufs.meshtastic::store-and-forward.statistics #250#)) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::store-and-forward-%variant #247#)) 0) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::store-and-forward-%variant #247#)) #250#))) ((inline cl-protobufs.meshtastic::store-and-forward.%%has-stats)) cl-protobufs.meshtastic::store-and-forward.%%has-stats (defun cl-protobufs.meshtastic::store-and-forward.%%has-stats) (#5# . 730) #251=(#247#) #Y(cl-protobufs.meshtastic::store-and-forward.%%has-stats nil nil (24 45 2677 26 13 0 19 1 2556 12 19 1 2635 12 8 0 17 343 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.%%has-stats #251# #37# (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::store-and-forward-%variant #247#)) 0))) ((inline cl-protobufs.meshtastic::store-and-forward.has-stats)) cl-protobufs.meshtastic::store-and-forward.has-stats (defun cl-protobufs.meshtastic::store-and-forward.has-stats) (#5# . 730) #252=(#247#) #Y(cl-protobufs.meshtastic::store-and-forward.has-stats nil nil (24 45 2677 26 13 0 19 1 2694 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.has-stats #252# #37# (cl-protobufs.meshtastic::store-and-forward.%%has-stats #247#))) ((inline cl-protobufs.meshtastic::store-and-forward.clear-stats)) cl-protobufs.meshtastic::store-and-forward.clear-stats (defun cl-protobufs.meshtastic::store-and-forward.clear-stats) (#5# . 730) #253=(#247#) #:g61638 #:g61639 #:g61640 #:g61641 #Y(cl-protobufs.meshtastic::store-and-forward.clear-stats nil nil (24 45 2677 26 13 0 19 1 2694 73 39 51 13 0 19 1 2556 45 2712 75 45 2713 13 1 15 2544 9 0 13 0 19 4 153 43 1 43 1 13 0 19 1 2556 45 2714 75 45 2715 13 1 15 2544 9 1 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.clear-stats #253# #37# (when (cl-protobufs.meshtastic::store-and-forward.%%has-stats #247#) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::store-and-forward-%variant #247#)) nil) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::store-and-forward-%variant #247#)) nil)))) (defmethod cl-protobufs.meshtastic::stats (#247# cl-protobufs.meshtastic::store-and-forward)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward) (#247#) #Y(cl-protobufs.meshtastic::stats nil nil (24 45 2677 26 13 0 19 1 2673 29) #1# #5# 730) #254=(setf cl-protobufs.meshtastic::stats) (defmethod #254# #250# (#247# cl-protobufs.meshtastic::store-and-forward)) (#5# . 730) (t cl-protobufs.meshtastic::store-and-forward) (#250# #247#) #:g61648 #:g61649 (setf cl-protobufs.meshtastic::store-and-forward.stats) #Y(#254# nil nil (24 45 2686 24 45 2677 26 10 0 45 2728 10 2 45 2729 13 0 13 1 33 2730 18 2 43 1 43 1 29) #1# #5# 730) (cl-protobufs.meshtastic::store-and-forward.has-stats cl-protobufs.meshtastic::store-and-forward.clear-stats cl-protobufs.meshtastic::store-and-forward.stats) ((inline cl-protobufs.meshtastic::store-and-forward.history)) (defun cl-protobufs.meshtastic::store-and-forward.history) (#5# . 730) #255=(#256=#:obj60372) #256# #Y(cl-protobufs.meshtastic::store-and-forward.history nil nil (24 45 2737 26 13 0 19 1 2556 12 19 1 2635 12 8 1 17 343 39 12 13 0 19 1 2556 12 19 1 2678 38 3 75 73 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.history #255# #37# (if (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::store-and-forward-%variant #256#)) 1) (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::store-and-forward-%variant #256#)) nil))) ((inline #257=(setf cl-protobufs.meshtastic::store-and-forward.history))) #257# (defun #257#) (#5# . 730) #258=(#259=#:new-value60373 #256#) #259# #:g61654 #:g61655 #:g61656 #:g61657 #Y(#257# nil nil (24 45 2745 24 45 2737 26 13 0 19 1 2556 45 2746 8 1 45 2747 13 1 15 2544 9 1 13 0 19 4 153 43 1 43 1 13 0 19 1 2556 45 2748 10 2 45 2749 13 1 15 2544 9 0 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block #257# #258# #37# (declare (type cl-protobufs.meshtastic::store-and-forward.history #259#)) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::store-and-forward-%variant #256#)) 1) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::store-and-forward-%variant #256#)) #259#))) ((inline cl-protobufs.meshtastic::store-and-forward.%%has-history)) cl-protobufs.meshtastic::store-and-forward.%%has-history (defun cl-protobufs.meshtastic::store-and-forward.%%has-history) (#5# . 730) #260=(#256#) #Y(cl-protobufs.meshtastic::store-and-forward.%%has-history nil nil (24 45 2737 26 13 0 19 1 2556 12 19 1 2635 12 8 1 17 343 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.%%has-history #260# #37# (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::store-and-forward-%variant #256#)) 1))) ((inline cl-protobufs.meshtastic::store-and-forward.has-history)) cl-protobufs.meshtastic::store-and-forward.has-history (defun cl-protobufs.meshtastic::store-and-forward.has-history) (#5# . 730) #261=(#256#) #Y(cl-protobufs.meshtastic::store-and-forward.has-history nil nil (24 45 2737 26 13 0 19 1 2753 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.has-history #261# #37# (cl-protobufs.meshtastic::store-and-forward.%%has-history #256#))) ((inline cl-protobufs.meshtastic::store-and-forward.clear-history)) cl-protobufs.meshtastic::store-and-forward.clear-history (defun cl-protobufs.meshtastic::store-and-forward.clear-history) (#5# . 730) #262=(#256#) #:g61662 #:g61663 #:g61664 #:g61665 #Y(cl-protobufs.meshtastic::store-and-forward.clear-history nil nil (24 45 2737 26 13 0 19 1 2753 73 39 51 13 0 19 1 2556 45 2771 75 45 2772 13 1 15 2544 9 0 13 0 19 4 153 43 1 43 1 13 0 19 1 2556 45 2773 75 45 2774 13 1 15 2544 9 1 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.clear-history #262# #37# (when (cl-protobufs.meshtastic::store-and-forward.%%has-history #256#) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::store-and-forward-%variant #256#)) nil) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::store-and-forward-%variant #256#)) nil)))) (defmethod cl-protobufs.meshtastic::history (#256# cl-protobufs.meshtastic::store-and-forward)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward) (#256#) #Y(cl-protobufs.meshtastic::history nil nil (24 45 2737 26 13 0 19 1 1621 29) #1# #5# 730) #263=(setf cl-protobufs.meshtastic::history) (defmethod #263# #259# (#256# cl-protobufs.meshtastic::store-and-forward)) (#5# . 730) (t cl-protobufs.meshtastic::store-and-forward) (#259# #256#) #:g61672 #:g61673 (setf cl-protobufs.meshtastic::store-and-forward.history) #Y(#263# nil nil (24 45 2745 24 45 2737 26 10 0 45 2787 10 2 45 2788 13 0 13 1 33 2789 18 2 43 1 43 1 29) #1# #5# 730) (cl-protobufs.meshtastic::store-and-forward.has-history cl-protobufs.meshtastic::store-and-forward.clear-history cl-protobufs.meshtastic::store-and-forward.history) ((inline cl-protobufs.meshtastic::store-and-forward.heartbeat)) (defun cl-protobufs.meshtastic::store-and-forward.heartbeat) (#5# . 730) #264=(#265=#:obj60376) #265# #Y(cl-protobufs.meshtastic::store-and-forward.heartbeat nil nil (24 45 2796 26 13 0 19 1 2556 12 19 1 2635 12 8 2 17 343 39 12 13 0 19 1 2556 12 19 1 2678 38 3 75 73 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.heartbeat #264# #37# (if (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::store-and-forward-%variant #265#)) 2) (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::store-and-forward-%variant #265#)) nil))) ((inline #266=(setf cl-protobufs.meshtastic::store-and-forward.heartbeat))) #266# (defun #266#) (#5# . 730) #267=(#268=#:new-value60377 #265#) #268# #:g61678 #:g61679 #:g61680 #:g61681 #Y(#266# nil nil (24 45 2804 24 45 2796 26 13 0 19 1 2556 45 2805 8 2 45 2806 13 1 15 2544 9 1 13 0 19 4 153 43 1 43 1 13 0 19 1 2556 45 2807 10 2 45 2808 13 1 15 2544 9 0 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block #266# #267# #37# (declare (type cl-protobufs.meshtastic::store-and-forward.heartbeat #268#)) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::store-and-forward-%variant #265#)) 2) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::store-and-forward-%variant #265#)) #268#))) ((inline cl-protobufs.meshtastic::store-and-forward.%%has-heartbeat)) cl-protobufs.meshtastic::store-and-forward.%%has-heartbeat (defun cl-protobufs.meshtastic::store-and-forward.%%has-heartbeat) (#5# . 730) #269=(#265#) #Y(cl-protobufs.meshtastic::store-and-forward.%%has-heartbeat nil nil (24 45 2796 26 13 0 19 1 2556 12 19 1 2635 12 8 2 17 343 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.%%has-heartbeat #269# #37# (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::store-and-forward-%variant #265#)) 2))) ((inline cl-protobufs.meshtastic::store-and-forward.has-heartbeat)) cl-protobufs.meshtastic::store-and-forward.has-heartbeat (defun cl-protobufs.meshtastic::store-and-forward.has-heartbeat) (#5# . 730) #270=(#265#) #Y(cl-protobufs.meshtastic::store-and-forward.has-heartbeat nil nil (24 45 2796 26 13 0 19 1 2812 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.has-heartbeat #270# #37# (cl-protobufs.meshtastic::store-and-forward.%%has-heartbeat #265#))) ((inline cl-protobufs.meshtastic::store-and-forward.clear-heartbeat)) cl-protobufs.meshtastic::store-and-forward.clear-heartbeat (defun cl-protobufs.meshtastic::store-and-forward.clear-heartbeat) (#5# . 730) #271=(#265#) #:g61686 #:g61687 #:g61688 #:g61689 #Y(cl-protobufs.meshtastic::store-and-forward.clear-heartbeat nil nil (24 45 2796 26 13 0 19 1 2812 73 39 51 13 0 19 1 2556 45 2830 75 45 2831 13 1 15 2544 9 0 13 0 19 4 153 43 1 43 1 13 0 19 1 2556 45 2832 75 45 2833 13 1 15 2544 9 1 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.clear-heartbeat #271# #37# (when (cl-protobufs.meshtastic::store-and-forward.%%has-heartbeat #265#) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::store-and-forward-%variant #265#)) nil) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::store-and-forward-%variant #265#)) nil)))) (defmethod cl-protobufs.meshtastic::heartbeat (#265# cl-protobufs.meshtastic::store-and-forward)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward) (#265#) #Y(cl-protobufs.meshtastic::heartbeat nil nil (24 45 2796 26 13 0 19 1 2142 29) #1# #5# 730) #272=(setf cl-protobufs.meshtastic::heartbeat) (defmethod #272# #268# (#265# cl-protobufs.meshtastic::store-and-forward)) (#5# . 730) (t cl-protobufs.meshtastic::store-and-forward) (#268# #265#) #:g61696 #:g61697 (setf cl-protobufs.meshtastic::store-and-forward.heartbeat) #Y(#272# nil nil (24 45 2804 24 45 2796 26 10 0 45 2846 10 2 45 2847 13 0 13 1 33 2848 18 2 43 1 43 1 29) #1# #5# 730) (cl-protobufs.meshtastic::store-and-forward.has-heartbeat cl-protobufs.meshtastic::store-and-forward.clear-heartbeat cl-protobufs.meshtastic::store-and-forward.heartbeat) ((inline cl-protobufs.meshtastic::store-and-forward.empty)) cl-protobufs.meshtastic::store-and-forward.empty (defun cl-protobufs.meshtastic::store-and-forward.empty) (#5# . 730) #273=(#274=#:obj60380) #274# #Y(cl-protobufs.meshtastic::store-and-forward.empty nil nil (24 45 2856 26 13 0 19 1 2556 12 19 1 2635 12 8 3 17 343 39 12 13 0 19 1 2556 12 19 1 2678 38 3 75 73 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.empty #273# #37# (if (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::store-and-forward-%variant #274#)) 3) (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::store-and-forward-%variant #274#)) nil))) ((inline #275=(setf cl-protobufs.meshtastic::store-and-forward.empty))) #275# (defun #275#) (#5# . 730) #276=(#277=#:new-value60381 #274#) #277# #:g61702 #:g61703 #:g61704 #:g61705 #Y(#275# nil nil (24 45 2864 24 45 2856 26 13 0 19 1 2556 45 2865 8 3 45 2866 13 1 15 2544 9 1 13 0 19 4 153 43 1 43 1 13 0 19 1 2556 45 2867 10 2 45 2868 13 1 15 2544 9 0 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block #275# #276# #37# (declare (type boolean #277#)) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::store-and-forward-%variant #274#)) 3) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::store-and-forward-%variant #274#)) #277#))) ((inline cl-protobufs.meshtastic::store-and-forward.%%has-empty)) cl-protobufs.meshtastic::store-and-forward.%%has-empty (defun cl-protobufs.meshtastic::store-and-forward.%%has-empty) (#5# . 730) #278=(#274#) #Y(cl-protobufs.meshtastic::store-and-forward.%%has-empty nil nil (24 45 2856 26 13 0 19 1 2556 12 19 1 2635 12 8 3 17 343 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.%%has-empty #278# #37# (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::store-and-forward-%variant #274#)) 3))) ((inline cl-protobufs.meshtastic::store-and-forward.has-empty)) cl-protobufs.meshtastic::store-and-forward.has-empty (defun cl-protobufs.meshtastic::store-and-forward.has-empty) (#5# . 730) #279=(#274#) #Y(cl-protobufs.meshtastic::store-and-forward.has-empty nil nil (24 45 2856 26 13 0 19 1 2872 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.has-empty #279# #37# (cl-protobufs.meshtastic::store-and-forward.%%has-empty #274#))) ((inline cl-protobufs.meshtastic::store-and-forward.clear-empty)) cl-protobufs.meshtastic::store-and-forward.clear-empty (defun cl-protobufs.meshtastic::store-and-forward.clear-empty) (#5# . 730) #280=(#274#) #:g61710 #:g61711 #:g61712 #:g61713 #Y(cl-protobufs.meshtastic::store-and-forward.clear-empty nil nil (24 45 2856 26 13 0 19 1 2872 73 39 51 13 0 19 1 2556 45 2890 75 45 2891 13 1 15 2544 9 0 13 0 19 4 153 43 1 43 1 13 0 19 1 2556 45 2892 75 45 2893 13 1 15 2544 9 1 13 0 19 4 153 43 1 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::store-and-forward.clear-empty #280# #37# (when (cl-protobufs.meshtastic::store-and-forward.%%has-empty #274#) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::store-and-forward-%variant #274#)) nil) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::store-and-forward-%variant #274#)) nil)))) (defmethod cl-protobufs.meshtastic::empty (#274# cl-protobufs.meshtastic::store-and-forward)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward) (#274#) #Y(cl-protobufs.meshtastic::empty nil nil (24 45 2856 26 13 0 19 1 2852 29) #1# #5# 730) #281=(setf cl-protobufs.meshtastic::empty) (defmethod #281# #277# (#274# cl-protobufs.meshtastic::store-and-forward)) (#5# . 730) (t cl-protobufs.meshtastic::store-and-forward) (#277# #274#) #:g61720 #:g61721 (setf cl-protobufs.meshtastic::store-and-forward.empty) #Y(#281# nil nil (24 45 2864 24 45 2856 26 10 0 45 2906 10 2 45 2907 13 0 13 1 33 2908 18 2 43 1 43 1 29) #1# #5# 730) (cl-protobufs.meshtastic::store-and-forward.has-empty cl-protobufs.meshtastic::store-and-forward.clear-empty cl-protobufs.meshtastic::store-and-forward.empty) ((inline cl-protobufs.meshtastic::make-store-and-forward)) cl-protobufs.meshtastic::make-store-and-forward (defun cl-protobufs.meshtastic::make-store-and-forward) (#5# . 730) #282=(&key (cl-protobufs.meshtastic::rr :%unset) (cl-protobufs.meshtastic::variant :%unset) (cl-protobufs.meshtastic::stats :%unset) (cl-protobufs.meshtastic::history :%unset) (cl-protobufs.meshtastic::heartbeat :%unset) (cl-protobufs.meshtastic::empty :%unset)) (nil :empty :heartbeat :history :stats :variant :rr) cl-protobufs.meshtastic::variant #283=#:obj60362 #:g61735 #:g61736 (setf cl-protobufs.meshtastic::store-and-forward.rr) #:g61737 #:g61738 (setf cl-protobufs.meshtastic::store-and-forward.stats) #:g61739 #:g61740 (setf cl-protobufs.meshtastic::store-and-forward.history) #:g61741 #:g61742 (setf cl-protobufs.meshtastic::store-and-forward.heartbeat) #:g61743 #:g61744 (setf cl-protobufs.meshtastic::store-and-forward.empty) #:g61745 #:g61746 #:g61747 (setf slot-value) #Y(cl-protobufs.meshtastic::make-store-and-forward nil nil (28 2916 22 40 3 14 801 46 2612 22 40 3 14 801 46 2917 22 40 3 14 801 46 2637 22 40 3 14 801 46 2638 22 40 3 14 801 46 672 22 40 3 14 801 46 2639 19 0 2533 45 2918 13 6 11 801 17 343 40 4 10 6 76 76 39 21 10 0 45 2919 10 7 45 2920 13 0 13 1 33 2921 18 2 43 1 43 1 13 4 11 801 17 343 40 4 10 4 76 76 39 21 10 0 45 2922 10 5 45 2923 13 0 13 1 33 2924 18 2 43 1 43 1 13 3 11 801 17 343 40 4 10 3 76 76 39 21 10 0 45 2925 10 4 45 2926 13 0 13 1 33 2927 18 2 43 1 43 1 13 2 11 801 17 343 40 4 10 2 76 76 39 21 10 0 45 2928 10 3 45 2929 13 0 13 1 33 2930 18 2 43 1 43 1 13 1 11 801 17 343 76 39 21 10 0 45 2931 10 2 45 2932 13 0 13 1 33 2933 18 2 43 1 43 1 13 5 11 801 17 343 40 4 10 5 76 76 39 27 10 0 45 2934 1 2545 45 2935 10 7 45 2936 13 0 13 2 13 1 33 2937 18 3 43 1 43 2 10 0 73 43 1 29) #1# #5# 730) (function (ext::lambda-block cl-protobufs.meshtastic::make-store-and-forward #282# #37# (let ((#283# (cl-protobufs.meshtastic::%make-store-and-forward))) (unless (or (eq cl-protobufs.meshtastic::rr :%unset) (not cl-protobufs.meshtastic::rr)) (setf (cl-protobufs.meshtastic::store-and-forward.rr #283#) cl-protobufs.meshtastic::rr)) (unless (or (eq cl-protobufs.meshtastic::stats :%unset) (not cl-protobufs.meshtastic::stats)) (setf (cl-protobufs.meshtastic::store-and-forward.stats #283#) cl-protobufs.meshtastic::stats)) (unless (or (eq cl-protobufs.meshtastic::history :%unset) (not cl-protobufs.meshtastic::history)) (setf (cl-protobufs.meshtastic::store-and-forward.history #283#) cl-protobufs.meshtastic::history)) (unless (or (eq cl-protobufs.meshtastic::heartbeat :%unset) (not cl-protobufs.meshtastic::heartbeat)) (setf (cl-protobufs.meshtastic::store-and-forward.heartbeat #283#) cl-protobufs.meshtastic::heartbeat)) (unless (eq cl-protobufs.meshtastic::empty :%unset) (setf (cl-protobufs.meshtastic::store-and-forward.empty #283#) cl-protobufs.meshtastic::empty)) (unless (or (eq cl-protobufs.meshtastic::variant :%unset) (not cl-protobufs.meshtastic::variant)) (setf (slot-value #283# (quote cl-protobufs.meshtastic::%variant)) cl-protobufs.meshtastic::variant)) #283#))) cl-protobufs.meshtastic::store-and-forward.clear-%%is-set (defun cl-protobufs.meshtastic::store-and-forward.clear-%%is-set) (#5# . 730) (#283#) #Y(cl-protobufs.meshtastic::store-and-forward.clear-%%is-set nil nil (24 45 2918 26 13 0 19 1 2560 12 9 0 19 2 836 29) #1# #5# 730) (cl-protobufs.meshtastic::make-store-and-forward cl-protobufs.meshtastic::store-and-forward-%%is-set) (defmethod cl-protobufs::clear (#283# cl-protobufs.meshtastic::store-and-forward)) (#5# . 730) (cl-protobufs.meshtastic::store-and-forward) (#283#) #:g61754 #:g61755 #Y(cl-protobufs::clear nil nil (24 45 2918 26 10 0 45 2950 75 45 2951 13 1 15 196 9 0 13 0 19 4 153 43 1 43 1 13 0 19 1 2604 13 0 19 1 2940 13 0 19 1 2661 29) #1# #5# 730) 0 #:g61756 #:g61757 #:g61758 (setf slot-value) #:g61759 #:g61760 "StoreAndForward" #:g61761 (setf slot-value) #:g61762 #:g61763 "meshtastic.StoreAndForward" #:g61764 (setf slot-value) #:g61765 #:g61766 #:g61767 (setf slot-value) #:g61768 #:g61769 #:g61770 (setf slot-value) #:g61771 #:g61772 0 #:g61773 (setf slot-value) #:g61774 #:g61775 0 #:g61776 (setf slot-value) #:g61777 #:g61778 #:g61779 (setf slot-value) #:g61780 #:g61781 #:g61782 (setf slot-value) #:g61783 #:g61784 #:g61785 (setf slot-value) 0 #:g61786 #:g61787 #:g61788 (setf slot-value) #:g61789 #:g61790 "rr" #:g61791 (setf slot-value) #:g61792 #:g61793 "meshtastic.StoreAndForward.rr" #:g61794 (setf slot-value) #:g61795 #:g61796 #:g61797 (setf slot-value) #:g61798 #:g61799 #:g61800 (setf slot-value) #:g61801 #:g61802 #:g61803 (setf slot-value) #:g61804 #:g61805 #:g61806 (setf slot-value) #:g61807 #:g61808 #:g61809 (setf slot-value) #:g61810 #:g61811 #:g61812 (setf slot-value) #:g61813 #:g61814 #:g61815 (setf slot-value) #:g61816 #:g61817 #:g61818 (setf slot-value) #:g61819 #:g61820 #:g61821 (setf slot-value) #:g61822 #:g61823 "rr" #:g61824 (setf slot-value) #:g61825 #:g61826 #:g61827 (setf slot-value) #:g61828 #:g61829 #:g61830 (setf slot-value) #:g61831 #:g61832 #:g61833 (setf slot-value) #:g61834 #:g61835 #:g61836 (setf slot-value) #:g61837 #:g61838 #:g61839 (setf slot-value) 0 0 cl-protobufs.implementation::oneof-descriptor 0 (4) :adjustable (0 0 0 0) 0 si::row-major-aset 0 0 0 #:g61848 #:g61849 #:g61850 (setf slot-value) #:g61851 #:g61852 "empty" #:g61853 (setf slot-value) #:g61854 #:g61855 "meshtastic.StoreAndForward.empty" #:g61856 (setf slot-value) #:g61857 #:g61858 #:g61859 (setf slot-value) #:g61860 #:g61861 #:g61862 (setf slot-value) #:g61863 #:g61864 #:g61865 (setf slot-value) #:g61866 #:g61867 #:g61868 (setf slot-value) #:g61869 #:g61870 #:g61871 (setf slot-value) #:g61872 #:g61873 #:g61874 (setf slot-value) #:g61875 #:g61876 #:g61877 (setf slot-value) #:g61878 #:g61879 #:g61880 (setf slot-value) #:g61881 #:g61882 #:g61883 (setf slot-value) #:g61884 #:g61885 "empty" #:g61886 (setf slot-value) #:g61887 #:g61888 #:g61889 (setf slot-value) #:g61890 #:g61891 #:g61892 (setf slot-value) #:g61893 #:g61894 #:g61895 (setf slot-value) #:g61896 #:g61897 #:g61898 (setf slot-value) #:g61899 #:g61900 #:g61901 (setf slot-value) #:g61902 #:g61903 #:g61904 (setf slot-value) #:g61905 #:g61906 "heartbeat" #:g61907 (setf slot-value) #:g61908 #:g61909 "meshtastic.StoreAndForward.heartbeat" #:g61910 (setf slot-value) #:g61911 #:g61912 #:g61913 (setf slot-value) #:g61914 #:g61915 #:g61916 (setf slot-value) #:g61917 #:g61918 #:g61919 (setf slot-value) #:g61920 #:g61921 #:g61922 (setf slot-value) #:g61923 #:g61924 #:g61925 (setf slot-value) #:g61926 #:g61927 #:g61928 (setf slot-value) #:g61929 #:g61930 #:g61931 (setf slot-value) #:g61932 #:g61933 #:g61934 (setf slot-value) #:g61935 #:g61936 #:g61937 (setf slot-value) #:g61938 #:g61939 "heartbeat" #:g61940 (setf slot-value) #:g61941 #:g61942 #:g61943 (setf slot-value) #:g61944 #:g61945 #:g61946 (setf slot-value) #:g61947 #:g61948 #:g61949 (setf slot-value) #:g61950 #:g61951 #:g61952 (setf slot-value) #:g61953 #:g61954 #:g61955 (setf slot-value) #:g61956 #:g61957 #:g61958 (setf slot-value) #:g61959 #:g61960 "history" #:g61961 (setf slot-value) #:g61962 #:g61963 "meshtastic.StoreAndForward.history" #:g61964 (setf slot-value) #:g61965 #:g61966 #:g61967 (setf slot-value) #:g61968 #:g61969 #:g61970 (setf slot-value) #:g61971 #:g61972 #:g61973 (setf slot-value) #:g61974 #:g61975 #:g61976 (setf slot-value) #:g61977 #:g61978 #:g61979 (setf slot-value) #:g61980 #:g61981 #:g61982 (setf slot-value) #:g61983 #:g61984 #:g61985 (setf slot-value) #:g61986 #:g61987 #:g61988 (setf slot-value) #:g61989 #:g61990 #:g61991 (setf slot-value) #:g61992 #:g61993 "history" #:g61994 (setf slot-value) #:g61995 #:g61996 #:g61997 (setf slot-value) #:g61998 #:g61999 #:g62000 (setf slot-value) #:g62001 #:g62002 #:g62003 (setf slot-value) #:g62004 #:g62005 #:g62006 (setf slot-value) #:g62007 #:g62008 #:g62009 (setf slot-value) #:g62010 #:g62011 #:g62012 (setf slot-value) #:g62013 #:g62014 "stats" #:g62015 (setf slot-value) #:g62016 #:g62017 "meshtastic.StoreAndForward.stats" #:g62018 (setf slot-value) #:g62019 #:g62020 #:g62021 (setf slot-value) #:g62022 #:g62023 #:g62024 (setf slot-value) #:g62025 #:g62026 #:g62027 (setf slot-value) #:g62028 #:g62029 #:g62030 (setf slot-value) #:g62031 #:g62032 #:g62033 (setf slot-value) #:g62034 #:g62035 #:g62036 (setf slot-value) #:g62037 #:g62038 #:g62039 (setf slot-value) #:g62040 #:g62041 #:g62042 (setf slot-value) #:g62043 #:g62044 #:g62045 (setf slot-value) #:g62046 #:g62047 "stats" #:g62048 (setf slot-value) #:g62049 #:g62050 #:g62051 (setf slot-value) #:g62052 #:g62053 #:g62054 (setf slot-value) #:g62055 #:g62056 #:g62057 (setf slot-value) #:g62058 #:g62059 #:g62060 (setf slot-value) #:g62061 #:g62062 #:g62063 (setf slot-value) (cl-protobufs.meshtastic::empty cl-protobufs.meshtastic::heartbeat cl-protobufs.meshtastic::history cl-protobufs.meshtastic::history-messages cl-protobufs.meshtastic::last-request cl-protobufs.meshtastic::messages-max cl-protobufs.meshtastic::messages-saved cl-protobufs.meshtastic::messages-total cl-protobufs.meshtastic::period cl-protobufs.meshtastic::requests cl-protobufs.meshtastic::requests-history cl-protobufs.meshtastic::return-max cl-protobufs.meshtastic::return-window cl-protobufs.meshtastic::rr cl-protobufs.meshtastic::secondary cl-protobufs.meshtastic::stats cl-protobufs.meshtastic::store-and-forward cl-protobufs.meshtastic::store-and-forward.heartbeat cl-protobufs.meshtastic::store-and-forward.history cl-protobufs.meshtastic::store-and-forward.request-response cl-protobufs.meshtastic::store-and-forward.request-response-int-to-keyword cl-protobufs.meshtastic::store-and-forward.request-response-keyword-to-int cl-protobufs.meshtastic::store-and-forward.statistics cl-protobufs.meshtastic::storeforward cl-protobufs.meshtastic::up-time cl-protobufs.meshtastic::window))) #5# 0) #Y(si::bytecodes nil nil (1 2 16 3 76 73 39 18 15 4 77 77 77 77 15 5 77 77 77 77 77 77 19 12 6 29) #1# #5# 139) #Y(si::bytecodes nil nil (1 7 16 1 29) #1# #5# 545) #Y(si::bytecodes nil nil (15 8 14 9 14 10 14 11 15 12 19 5 13 29) #1# #5# 588) #Y(si::bytecodes nil nil (15 14 15 15 15 16 19 3 17 15 18 15 19 15 20 19 3 17 15 21 15 22 15 23 15 24 19 4 25 15 21 14 26 77 15 27 19 4 25 15 21 1 50 12 19 2 51 15 52 15 22 15 53 15 54 19 4 25 15 52 14 26 77 15 55 19 4 25 15 52 1 72 12 19 2 51 1 18 45 73 1 74 45 75 1 52 45 76 13 2 13 0 13 1 19 3 77 43 1 43 2 1 18 45 78 1 79 45 80 1 21 45 81 13 2 13 0 13 1 19 3 77 43 1 43 2 15 79 15 22 15 82 15 83 19 4 25 15 79 77 15 84 15 85 1 88 12 19 5 89 15 74 15 22 15 90 15 91 19 4 25 15 74 77 15 92 15 93 1 94 12 19 5 89 15 95 8 0 17 96 15 95 15 22 15 97 15 98 19 4 25 15 99 8 1 17 96 15 99 15 22 15 100 15 101 19 4 25 15 102 8 2 17 96 15 102 15 22 15 103 15 104 19 4 25 15 105 8 3 17 96 15 105 15 22 15 106 15 107 19 4 25 15 108 8 4 17 96 15 108 15 22 15 109 15 110 19 4 25 15 111 8 5 17 96 15 111 15 22 15 112 15 113 19 4 25 15 114 8 6 17 96 15 114 15 22 15 115 15 116 19 4 25 15 117 8 7 17 96 15 117 15 22 15 118 15 119 19 4 25 15 120 8 64 17 96 15 120 15 22 15 121 15 122 19 4 25 15 123 8 65 17 96 15 123 15 22 15 124 15 125 19 4 25 15 126 8 66 17 96 15 126 15 22 15 127 15 128 19 4 25 15 129 8 67 17 96 15 129 15 22 15 130 15 131 19 4 25 15 132 8 68 17 96 15 132 15 22 15 133 15 134 19 4 25 15 135 8 106 17 96 15 135 15 22 15 136 15 137 19 4 25 15 138 19 1 139 15 140 15 22 15 141 15 142 19 4 25 15 140 77 15 143 15 144 1 145 12 19 5 89 15 151 19 1 152 78 149 15 149 19 1 150 78 146 77 75 3 78 155 15 161 19 1 152 78 160 15 160 19 1 150 78 156 15 156 15 161 9 0 15 29 19 4 153 15 156 15 161 9 1 9 0 19 4 153 77 75 3 78 158 15 160 19 1 150 78 162 15 162 15 161 9 0 15 30 19 4 153 15 162 15 161 9 1 9 1 19 4 153 77 75 3 78 163 15 160 19 1 150 78 164 15 164 15 161 9 0 15 31 19 4 153 15 164 15 161 9 1 9 2 19 4 153 77 75 3 78 165 15 160 19 1 150 78 166 15 166 15 161 9 0 15 32 19 4 153 15 166 15 161 9 1 9 3 19 4 153 77 75 3 78 167 15 160 19 1 150 78 168 15 168 15 161 9 0 15 33 19 4 153 15 168 15 161 9 1 9 4 19 4 153 77 75 3 78 169 15 160 19 1 150 78 170 15 170 15 161 9 0 15 34 19 4 153 15 170 15 161 9 1 9 5 19 4 153 77 75 3 78 171 15 160 19 1 150 78 172 15 172 15 161 9 0 15 35 19 4 153 15 172 15 161 9 1 9 6 19 4 153 77 75 3 78 173 15 160 19 1 150 78 174 15 174 15 161 9 0 15 36 19 4 153 15 174 15 161 9 1 9 7 19 4 153 77 75 3 78 175 15 160 19 1 150 78 176 15 176 15 161 9 0 15 37 19 4 153 15 176 15 161 9 1 9 64 19 4 153 77 75 3 78 177 15 160 19 1 150 78 178 15 178 15 161 9 0 15 38 19 4 153 15 178 15 161 9 1 9 65 19 4 153 77 75 3 78 179 15 160 19 1 150 78 180 15 180 15 161 9 0 15 39 19 4 153 15 180 15 161 9 1 9 66 19 4 153 77 75 3 78 181 15 160 19 1 150 78 182 15 182 15 161 9 0 15 40 19 4 153 15 182 15 161 9 1 9 67 19 4 153 77 75 3 78 183 15 160 19 1 150 78 184 15 184 15 161 9 0 15 41 19 4 153 15 184 15 161 9 1 9 68 19 4 153 77 75 3 78 185 15 160 19 1 150 78 186 15 186 15 161 9 0 15 42 19 4 153 15 186 15 161 9 1 9 106 19 4 153 15 185 1 186 17 157 15 185 75 17 159 15 183 1 184 17 157 15 183 1 185 17 159 15 181 1 182 17 157 15 181 1 183 17 159 15 179 1 180 17 157 15 179 1 181 17 159 15 177 1 178 17 157 15 177 1 179 17 159 15 175 1 176 17 157 15 175 1 177 17 159 15 173 1 174 17 157 15 173 1 175 17 159 15 171 1 172 17 157 15 171 1 173 17 159 15 169 1 170 17 157 15 169 1 171 17 159 15 167 1 168 17 157 15 167 1 169 17 159 15 165 1 166 17 157 15 165 1 167 17 159 15 163 1 164 17 157 15 163 1 165 17 159 15 158 1 162 17 157 15 158 1 163 17 159 15 155 1 156 17 157 15 155 1 158 17 159 15 146 15 151 9 0 15 18 19 4 153 15 146 15 151 9 1 15 154 19 4 153 15 146 15 151 9 2 15 155 19 4 153 15 18 15 146 14 147 19 3 148 15 187 19 1 139 15 188 15 189 19 2 190 15 191 15 192 77 77 15 193 15 194 15 195 15 196 77 77 15 197 9 12 77 77 77 19 15 198 15 199 15 22 15 200 15 201 19 4 25 15 202 15 22 15 203 15 204 19 4 25 15 202 14 26 77 15 205 19 4 25 15 191 19 1 152 78 248 15 202 1 250 12 19 2 51 15 202 15 251 15 252 19 3 253 1 254 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 262 14 11 13 0 19 6 263 43 1 15 254 15 264 1 273 12 19 3 253 1 274 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 275 14 11 13 0 19 6 263 43 1 15 274 15 264 1 277 12 19 3 253 1 278 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 279 14 11 13 0 19 6 263 43 1 15 278 15 264 1 281 12 19 3 253 1 282 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 283 14 11 13 0 19 6 263 43 1 15 282 15 264 1 285 12 19 3 253 1 286 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 287 14 11 13 0 19 6 263 43 1 15 286 15 264 1 289 12 19 3 253 1 290 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 291 14 11 13 0 19 6 263 43 1 15 290 15 264 1 293 12 19 3 253 1 294 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 295 14 11 13 0 19 6 263 43 1 15 294 15 264 1 297 12 19 3 253 1 298 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 299 14 11 13 0 19 6 263 43 1 15 298 15 264 1 301 12 19 3 253 1 302 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 303 14 11 13 0 19 6 263 43 1 15 302 15 264 1 305 12 19 3 253 1 306 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 307 14 11 13 0 19 6 263 43 1 15 306 15 264 1 309 12 19 3 253 1 310 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 311 14 11 13 0 19 6 263 43 1 15 310 15 264 1 313 12 19 3 253 1 314 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 315 14 11 13 0 19 6 263 43 1 15 314 15 264 1 317 12 19 3 253 15 188 15 318 19 2 190 15 319 15 22 15 320 15 321 19 4 25 15 319 14 26 77 15 322 19 4 25 15 319 1 324 12 19 2 51 15 319 15 251 15 325 19 3 253 15 188 15 326 19 2 190 15 327 15 22 15 328 15 329 19 4 25 15 327 14 26 77 15 330 19 4 25 15 327 1 335 12 19 2 51 15 327 15 251 15 336 19 3 253 15 188 15 337 19 2 190 15 338 15 22 15 339 15 340 19 4 25 15 338 14 26 77 15 341 19 4 25 15 338 1 344 12 19 2 51 15 338 15 251 15 345 19 3 253 15 188 15 346 19 2 190 15 347 15 22 15 348 15 349 19 4 25 15 347 14 26 77 15 350 19 4 25 15 347 1 353 12 19 2 51 15 347 15 251 15 354 19 3 253 15 355 15 22 15 356 15 357 19 4 25 15 355 77 15 358 15 359 1 360 12 19 5 89 15 361 15 22 15 362 15 363 19 4 25 15 361 77 15 364 15 365 1 369 12 19 5 89 15 191 15 355 19 2 370 15 371 19 1 139 15 372 19 1 139 15 188 15 373 19 2 190 15 374 15 22 15 375 15 376 19 4 25 15 374 14 26 77 15 377 19 4 25 15 374 1 379 12 19 2 51 15 374 15 251 15 380 19 3 253 15 188 15 381 19 2 190 15 382 15 22 15 383 15 384 19 4 25 15 382 14 26 77 15 385 19 4 25 15 382 1 390 12 19 2 51 15 382 15 251 15 391 19 3 253 15 188 15 392 19 2 190 15 393 15 22 15 394 15 395 19 4 25 15 393 14 26 77 15 396 19 4 25 15 393 1 398 12 19 2 51 15 393 15 251 15 399 19 3 253 15 188 15 400 19 2 190 15 401 15 22 15 402 15 403 19 4 25 15 401 14 26 77 15 404 19 4 25 15 401 1 407 12 19 2 51 15 401 15 251 15 408 19 3 253 15 409 15 22 15 410 15 411 19 4 25 15 409 77 15 412 15 413 1 414 12 19 5 89 15 415 15 22 15 416 15 417 19 4 25 15 415 77 15 418 15 419 1 423 12 19 5 89 15 191 15 409 19 2 370 15 424 19 1 139 15 425 19 1 139 15 188 15 426 19 2 190 15 427 15 22 15 428 15 429 19 4 25 15 427 14 26 77 15 430 19 4 25 15 427 1 432 12 19 2 51 15 427 15 251 15 433 19 3 253 15 188 15 434 19 2 190 15 435 15 22 15 436 15 437 19 4 25 15 435 14 26 77 15 438 19 4 25 15 435 1 443 12 19 2 51 15 435 15 251 15 444 19 3 253 15 188 15 445 19 2 190 15 446 15 22 15 447 15 448 19 4 25 15 446 14 26 77 15 449 19 4 25 15 446 1 451 12 19 2 51 15 446 15 251 15 452 19 3 253 15 188 15 453 19 2 190 15 454 15 22 15 455 15 456 19 4 25 15 454 14 26 77 15 457 19 4 25 15 454 1 460 12 19 2 51 15 454 15 251 15 461 19 3 253 15 462 15 22 15 463 15 464 19 4 25 15 462 77 15 465 15 466 1 467 12 19 5 89 15 468 15 22 15 469 15 470 19 4 25 15 468 77 15 471 15 472 1 476 12 19 5 89 15 191 15 462 19 2 370 15 477 19 1 139 15 478 19 1 139 15 188 15 479 19 2 190 15 480 15 22 15 481 15 482 19 4 25 15 480 14 26 77 15 483 19 4 25 15 480 1 485 12 19 2 51 15 480 15 251 15 486 19 3 253 15 188 15 487 19 2 190 15 488 15 22 15 489 15 490 19 4 25 15 488 14 26 77 15 491 19 4 25 15 488 1 496 12 19 2 51 15 488 15 251 15 497 19 3 253 15 188 15 498 19 2 190 15 499 15 22 15 500 15 501 19 4 25 15 499 14 26 77 15 502 19 4 25 15 499 1 504 12 19 2 51 15 499 15 251 15 505 19 3 253 15 188 15 506 19 2 190 15 507 15 22 15 508 15 509 19 4 25 15 507 14 26 77 15 510 19 4 25 15 507 1 513 12 19 2 51 15 507 15 251 15 514 19 3 253 15 515 15 22 15 516 15 517 19 4 25 15 515 77 15 518 15 519 1 520 12 19 5 89 15 521 15 22 15 522 15 523 19 4 25 15 521 77 15 524 15 525 1 529 12 19 5 89 15 191 15 515 19 2 370 15 530 19 1 139 15 531 19 1 139 15 188 15 532 19 2 190 15 533 15 22 15 534 15 535 19 4 25 15 533 14 26 77 15 536 19 4 25 15 533 1 538 12 19 2 51 15 533 15 251 15 539 19 3 253 15 188 15 540 19 2 190 15 541 15 22 15 542 15 543 19 4 25 15 541 14 26 77 15 544 19 4 25 15 541 1 549 12 19 2 51 15 541 15 251 15 550 19 3 253 15 188 15 551 19 2 190 15 552 15 22 15 553 15 554 19 4 25 15 552 14 26 77 15 555 19 4 25 15 552 1 557 12 19 2 51 15 552 15 251 15 558 19 3 253 15 188 15 559 19 2 190 15 560 15 22 15 561 15 562 19 4 25 15 560 14 26 77 15 563 19 4 25 15 560 1 566 12 19 2 51 15 560 15 251 15 567 19 3 253 15 568 15 22 15 569 15 570 19 4 25 15 568 77 15 571 15 572 1 573 12 19 5 89 15 574 15 22 15 575 15 576 19 4 25 15 574 77 15 577 15 578 1 582 12 19 5 89 15 191 15 568 19 2 370 15 583 19 1 139 15 584 19 1 139 15 188 15 585 19 2 190 15 586 15 22 15 587 15 588 19 4 25 15 586 14 26 77 15 589 19 4 25 15 586 1 591 12 19 2 51 15 586 15 251 15 592 19 3 253 15 188 15 593 19 2 190 15 594 15 22 15 595 15 596 19 4 25 15 594 14 26 77 15 597 19 4 25 15 594 1 602 12 19 2 51 15 594 15 251 15 603 19 3 253 15 188 15 604 19 2 190 15 605 15 22 15 606 15 607 19 4 25 15 605 14 26 77 15 608 19 4 25 15 605 1 610 12 19 2 51 15 605 15 251 15 611 19 3 253 15 188 15 612 19 2 190 15 613 15 22 15 614 15 615 19 4 25 15 613 14 26 77 15 616 19 4 25 15 613 1 619 12 19 2 51 15 613 15 251 15 620 19 3 253 15 621 15 22 15 622 15 623 19 4 25 15 621 77 15 624 15 625 1 626 12 19 5 89 15 627 15 22 15 628 15 629 19 4 25 15 627 77 15 630 15 631 1 635 12 19 5 89 15 191 15 621 19 2 370 15 636 19 1 139 15 637 19 1 139 15 188 15 638 19 2 190 15 639 15 22 15 640 15 641 19 4 25 15 639 14 26 77 15 642 19 4 25 15 639 1 645 12 19 2 51 15 639 15 251 15 646 19 3 253 15 188 15 647 19 2 190 15 648 15 22 15 649 15 650 19 4 25 15 648 14 26 77 15 651 19 4 25 15 648 1 655 12 19 2 51 15 648 15 251 15 656 19 3 253 15 188 15 657 19 2 190 15 658 15 22 15 659 15 660 19 4 25 15 658 14 26 77 15 661 19 4 25 15 658 1 663 12 19 2 51 15 658 15 251 15 664 19 3 253 15 188 15 665 19 2 190 15 666 15 22 15 667 15 668 19 4 25 15 666 14 26 77 15 669 19 4 25 15 666 1 670 12 19 2 51 15 666 15 251 15 671 19 3 253 15 672 15 22 15 673 15 674 19 4 25 15 672 77 15 675 15 676 1 677 12 19 5 89 15 678 15 22 15 679 15 680 19 4 25 15 678 77 15 681 15 682 1 686 12 19 5 89 15 191 15 672 19 2 370 15 687 19 1 139 15 688 19 1 139 15 188 15 689 19 2 190 15 690 15 22 15 691 15 692 19 4 25 15 690 14 26 77 15 693 19 4 25 15 690 1 695 12 19 2 51 15 690 15 251 15 696 19 3 253 15 188 15 697 19 2 190 15 698 15 22 15 699 15 700 19 4 25 15 698 14 26 77 15 701 19 4 25 15 698 1 706 12 19 2 51 15 698 15 251 15 707 19 3 253 15 188 15 708 19 2 190 15 709 15 22 15 710 15 711 19 4 25 15 709 14 26 77 15 712 19 4 25 15 709 1 714 12 19 2 51 15 709 15 251 15 715 19 3 253 15 188 15 716 19 2 190 15 717 15 22 15 718 15 719 19 4 25 15 717 14 26 77 15 720 19 4 25 15 717 1 723 12 19 2 51 15 717 15 251 15 724 19 3 253 15 725 15 22 15 726 15 727 19 4 25 15 725 77 15 728 15 729 1 730 12 19 5 89 15 731 15 22 15 732 15 733 19 4 25 15 731 77 15 734 15 735 1 739 12 19 5 89 15 191 15 725 19 2 370 15 740 19 1 139 15 741 19 1 139 15 188 15 742 19 2 190 15 743 15 22 15 744 15 745 19 4 25 15 743 14 26 77 15 746 19 4 25 15 743 1 748 12 19 2 51 15 743 15 251 15 749 19 3 253 15 188 15 750 19 2 190 15 751 15 22 15 752 15 753 19 4 25 15 751 14 26 77 15 754 19 4 25 15 751 1 759 12 19 2 51 15 751 15 251 15 760 19 3 253 15 188 15 761 19 2 190 15 762 15 22 15 763 15 764 19 4 25 15 762 14 26 77 15 765 19 4 25 15 762 1 767 12 19 2 51 15 762 15 251 15 768 19 3 253 15 188 15 769 19 2 190 15 770 15 22 15 771 15 772 19 4 25 15 770 14 26 77 15 773 19 4 25 15 770 1 776 12 19 2 51 15 770 15 251 15 777 19 3 253 15 778 15 22 15 779 15 780 19 4 25 15 778 77 15 781 15 782 1 783 12 19 5 89 15 784 15 22 15 785 15 786 19 4 25 15 784 77 15 787 15 788 1 792 12 19 5 89 15 191 15 778 19 2 370 15 793 19 1 139 15 794 19 1 139 15 188 15 795 19 2 190 15 796 15 22 15 797 15 798 19 4 25 15 796 14 26 77 15 799 19 4 25 15 796 1 830 12 19 2 51 15 796 15 251 15 831 19 3 253 15 832 15 22 15 833 15 834 19 4 25 15 832 14 26 77 15 835 19 4 25 15 832 1 837 12 19 2 51 15 838 19 1 139 15 839 15 22 15 840 15 841 19 4 25 15 839 77 15 842 15 843 1 846 12 19 5 89 15 851 19 1 152 78 849 15 849 19 1 150 45 850 15 848 13 0 14 848 19 3 148 10 0 43 1 78 847 77 75 3 78 882 15 910 19 1 152 78 909 15 909 19 1 150 78 907 1 907 45 911 1 853 45 912 1 236 45 913 13 0 13 2 13 1 33 914 18 3 43 1 43 2 1 907 45 915 1 858 45 916 1 917 45 918 13 0 13 2 13 1 33 919 18 3 43 1 43 2 1 907 45 920 1 864 45 921 1 922 45 923 13 0 13 2 13 1 33 924 18 3 43 1 43 2 1 907 45 925 1 870 45 926 75 45 927 13 0 13 2 13 1 33 928 18 3 43 1 43 2 1 907 45 929 1 930 45 931 1 932 45 933 13 0 13 2 13 1 33 934 18 3 43 1 43 2 1 907 45 935 1 936 45 937 1 236 45 938 13 0 13 2 13 1 33 939 18 3 43 1 43 2 1 907 45 940 1 941 45 942 1 943 45 944 13 0 13 2 13 1 33 945 18 3 43 1 43 2 1 907 45 946 1 947 45 948 8 1 45 949 13 0 13 2 13 1 33 950 18 3 43 1 43 2 1 907 45 951 1 952 45 953 75 45 954 13 0 13 2 13 1 33 955 18 3 43 1 43 2 1 907 45 956 1 957 45 958 75 45 959 13 0 13 2 13 1 33 960 18 3 43 1 43 2 1 907 45 961 1 962 45 963 1 244 45 964 13 0 13 2 13 1 33 965 18 3 43 1 43 2 1 907 45 966 1 967 45 968 1 355 45 969 13 0 13 2 13 1 33 970 18 3 43 1 43 2 1 907 45 971 1 972 45 973 1 974 45 975 13 0 13 2 13 1 33 976 18 3 43 1 43 2 1 907 45 977 1 978 45 979 1 980 45 981 13 0 13 2 13 1 33 982 18 3 43 1 43 2 1 907 45 983 1 984 45 985 75 45 986 13 0 13 2 13 1 33 987 18 3 43 1 43 2 1 907 45 988 1 989 45 990 75 45 991 13 0 13 2 13 1 33 992 18 3 43 1 43 2 1 907 45 993 1 994 45 995 75 45 996 13 0 13 2 13 1 33 997 18 3 43 1 43 2 1 907 45 998 1 999 45 1000 75 45 1001 13 0 13 2 13 1 33 1002 18 3 43 1 43 2 77 75 3 78 908 15 909 19 1 150 78 1003 1 1003 45 1005 1 853 45 1006 1 236 45 1007 13 0 13 2 13 1 33 1008 18 3 43 1 43 2 1 1003 45 1009 1 858 45 1010 1 1011 45 1012 13 0 13 2 13 1 33 1013 18 3 43 1 43 2 1 1003 45 1014 1 864 45 1015 1 1016 45 1017 13 0 13 2 13 1 33 1018 18 3 43 1 43 2 1 1003 45 1019 1 870 45 1020 75 45 1021 13 0 13 2 13 1 33 1022 18 3 43 1 43 2 1 1003 45 1023 1 930 45 1024 1 932 45 1025 13 0 13 2 13 1 33 1026 18 3 43 1 43 2 1 1003 45 1027 1 936 45 1028 1 236 45 1029 13 0 13 2 13 1 33 1030 18 3 43 1 43 2 1 1003 45 1031 1 941 45 1032 1 943 45 1033 13 0 13 2 13 1 33 1034 18 3 43 1 43 2 1 1003 45 1035 1 947 45 1036 8 2 45 1037 13 0 13 2 13 1 33 1038 18 3 43 1 43 2 1 1003 45 1039 1 952 45 1040 75 45 1041 13 0 13 2 13 1 33 1042 18 3 43 1 43 2 1 1003 45 1043 1 957 45 1044 75 45 1045 13 0 13 2 13 1 33 1046 18 3 43 1 43 2 1 1003 45 1047 1 962 45 1048 1 243 45 1049 13 0 13 2 13 1 33 1050 18 3 43 1 43 2 1 1003 45 1051 1 967 45 1052 1 409 45 1053 13 0 13 2 13 1 33 1054 18 3 43 1 43 2 1 1003 45 1055 1 972 45 1056 1 1057 45 1058 13 0 13 2 13 1 33 1059 18 3 43 1 43 2 1 1003 45 1060 1 978 45 1061 1 980 45 1062 13 0 13 2 13 1 33 1063 18 3 43 1 43 2 1 1003 45 1064 1 984 45 1065 75 45 1066 13 0 13 2 13 1 33 1067 18 3 43 1 43 2 1 1003 45 1068 1 989 45 1069 75 45 1070 13 0 13 2 13 1 33 1071 18 3 43 1 43 2 1 1003 45 1072 1 994 45 1073 75 45 1074 13 0 13 2 13 1 33 1075 18 3 43 1 43 2 1 1003 45 1076 1 999 45 1077 75 45 1078 13 0 13 2 13 1 33 1079 18 3 43 1 43 2 77 75 3 78 1004 15 909 19 1 150 78 1080 1 1080 45 1082 1 853 45 1083 1 236 45 1084 13 0 13 2 13 1 33 1085 18 3 43 1 43 2 1 1080 45 1086 1 858 45 1087 1 1088 45 1089 13 0 13 2 13 1 33 1090 18 3 43 1 43 2 1 1080 45 1091 1 864 45 1092 1 1093 45 1094 13 0 13 2 13 1 33 1095 18 3 43 1 43 2 1 1080 45 1096 1 870 45 1097 75 45 1098 13 0 13 2 13 1 33 1099 18 3 43 1 43 2 1 1080 45 1100 1 930 45 1101 1 932 45 1102 13 0 13 2 13 1 33 1103 18 3 43 1 43 2 1 1080 45 1104 1 936 45 1105 1 236 45 1106 13 0 13 2 13 1 33 1107 18 3 43 1 43 2 1 1080 45 1108 1 941 45 1109 1 943 45 1110 13 0 13 2 13 1 33 1111 18 3 43 1 43 2 1 1080 45 1112 1 947 45 1113 8 3 45 1114 13 0 13 2 13 1 33 1115 18 3 43 1 43 2 1 1080 45 1116 1 952 45 1117 75 45 1118 13 0 13 2 13 1 33 1119 18 3 43 1 43 2 1 1080 45 1120 1 957 45 1121 75 45 1122 13 0 13 2 13 1 33 1123 18 3 43 1 43 2 1 1080 45 1124 1 962 45 1125 1 242 45 1126 13 0 13 2 13 1 33 1127 18 3 43 1 43 2 1 1080 45 1128 1 967 45 1129 1 462 45 1130 13 0 13 2 13 1 33 1131 18 3 43 1 43 2 1 1080 45 1132 1 972 45 1133 1 1134 45 1135 13 0 13 2 13 1 33 1136 18 3 43 1 43 2 1 1080 45 1137 1 978 45 1138 1 980 45 1139 13 0 13 2 13 1 33 1140 18 3 43 1 43 2 1 1080 45 1141 1 984 45 1142 75 45 1143 13 0 13 2 13 1 33 1144 18 3 43 1 43 2 1 1080 45 1145 1 989 45 1146 75 45 1147 13 0 13 2 13 1 33 1148 18 3 43 1 43 2 1 1080 45 1149 1 994 45 1150 75 45 1151 13 0 13 2 13 1 33 1152 18 3 43 1 43 2 1 1080 45 1153 1 999 45 1154 75 45 1155 13 0 13 2 13 1 33 1156 18 3 43 1 43 2 77 75 3 78 1081 15 909 19 1 150 78 1157 1 1157 45 1159 1 853 45 1160 1 236 45 1161 13 0 13 2 13 1 33 1162 18 3 43 1 43 2 1 1157 45 1163 1 858 45 1164 1 1165 45 1166 13 0 13 2 13 1 33 1167 18 3 43 1 43 2 1 1157 45 1168 1 864 45 1169 1 1170 45 1171 13 0 13 2 13 1 33 1172 18 3 43 1 43 2 1 1157 45 1173 1 870 45 1174 75 45 1175 13 0 13 2 13 1 33 1176 18 3 43 1 43 2 1 1157 45 1177 1 930 45 1178 1 932 45 1179 13 0 13 2 13 1 33 1180 18 3 43 1 43 2 1 1157 45 1181 1 936 45 1182 1 236 45 1183 13 0 13 2 13 1 33 1184 18 3 43 1 43 2 1 1157 45 1185 1 941 45 1186 1 943 45 1187 13 0 13 2 13 1 33 1188 18 3 43 1 43 2 1 1157 45 1189 1 947 45 1190 8 4 45 1191 13 0 13 2 13 1 33 1192 18 3 43 1 43 2 1 1157 45 1193 1 952 45 1194 75 45 1195 13 0 13 2 13 1 33 1196 18 3 43 1 43 2 1 1157 45 1197 1 957 45 1198 75 45 1199 13 0 13 2 13 1 33 1200 18 3 43 1 43 2 1 1157 45 1201 1 962 45 1202 1 241 45 1203 13 0 13 2 13 1 33 1204 18 3 43 1 43 2 1 1157 45 1205 1 967 45 1206 1 515 45 1207 13 0 13 2 13 1 33 1208 18 3 43 1 43 2 1 1157 45 1209 1 972 45 1210 1 1211 45 1212 13 0 13 2 13 1 33 1213 18 3 43 1 43 2 1 1157 45 1214 1 978 45 1215 1 980 45 1216 13 0 13 2 13 1 33 1217 18 3 43 1 43 2 1 1157 45 1218 1 984 45 1219 75 45 1220 13 0 13 2 13 1 33 1221 18 3 43 1 43 2 1 1157 45 1222 1 989 45 1223 75 45 1224 13 0 13 2 13 1 33 1225 18 3 43 1 43 2 1 1157 45 1226 1 994 45 1227 75 45 1228 13 0 13 2 13 1 33 1229 18 3 43 1 43 2 1 1157 45 1230 1 999 45 1231 75 45 1232 13 0 13 2 13 1 33 1233 18 3 43 1 43 2 77 75 3 78 1158 15 909 19 1 150 78 1234 1 1234 45 1236 1 853 45 1237 1 236 45 1238 13 0 13 2 13 1 33 1239 18 3 43 1 43 2 1 1234 45 1240 1 858 45 1241 1 1242 45 1243 13 0 13 2 13 1 33 1244 18 3 43 1 43 2 1 1234 45 1245 1 864 45 1246 1 1247 45 1248 13 0 13 2 13 1 33 1249 18 3 43 1 43 2 1 1234 45 1250 1 870 45 1251 75 45 1252 13 0 13 2 13 1 33 1253 18 3 43 1 43 2 1 1234 45 1254 1 930 45 1255 1 932 45 1256 13 0 13 2 13 1 33 1257 18 3 43 1 43 2 1 1234 45 1258 1 936 45 1259 1 236 45 1260 13 0 13 2 13 1 33 1261 18 3 43 1 43 2 1 1234 45 1262 1 941 45 1263 1 943 45 1264 13 0 13 2 13 1 33 1265 18 3 43 1 43 2 1 1234 45 1266 1 947 45 1267 8 5 45 1268 13 0 13 2 13 1 33 1269 18 3 43 1 43 2 1 1234 45 1270 1 952 45 1271 75 45 1272 13 0 13 2 13 1 33 1273 18 3 43 1 43 2 1 1234 45 1274 1 957 45 1275 75 45 1276 13 0 13 2 13 1 33 1277 18 3 43 1 43 2 1 1234 45 1278 1 962 45 1279 1 240 45 1280 13 0 13 2 13 1 33 1281 18 3 43 1 43 2 1 1234 45 1282 1 967 45 1283 1 568 45 1284 13 0 13 2 13 1 33 1285 18 3 43 1 43 2 1 1234 45 1286 1 972 45 1287 1 1288 45 1289 13 0 13 2 13 1 33 1290 18 3 43 1 43 2 1 1234 45 1291 1 978 45 1292 1 980 45 1293 13 0 13 2 13 1 33 1294 18 3 43 1 43 2 1 1234 45 1295 1 984 45 1296 75 45 1297 13 0 13 2 13 1 33 1298 18 3 43 1 43 2 1 1234 45 1299 1 989 45 1300 75 45 1301 13 0 13 2 13 1 33 1302 18 3 43 1 43 2 1 1234 45 1303 1 994 45 1304 75 45 1305 13 0 13 2 13 1 33 1306 18 3 43 1 43 2 1 1234 45 1307 1 999 45 1308 75 45 1309 13 0 13 2 13 1 33 1310 18 3 43 1 43 2 77 75 3 78 1235 15 909 19 1 150 78 1311 1 1311 45 1313 1 853 45 1314 1 236 45 1315 13 0 13 2 13 1 33 1316 18 3 43 1 43 2 1 1311 45 1317 1 858 45 1318 1 1319 45 1320 13 0 13 2 13 1 33 1321 18 3 43 1 43 2 1 1311 45 1322 1 864 45 1323 1 1324 45 1325 13 0 13 2 13 1 33 1326 18 3 43 1 43 2 1 1311 45 1327 1 870 45 1328 75 45 1329 13 0 13 2 13 1 33 1330 18 3 43 1 43 2 1 1311 45 1331 1 930 45 1332 1 932 45 1333 13 0 13 2 13 1 33 1334 18 3 43 1 43 2 1 1311 45 1335 1 936 45 1336 1 236 45 1337 13 0 13 2 13 1 33 1338 18 3 43 1 43 2 1 1311 45 1339 1 941 45 1340 1 943 45 1341 13 0 13 2 13 1 33 1342 18 3 43 1 43 2 1 1311 45 1343 1 947 45 1344 8 6 45 1345 13 0 13 2 13 1 33 1346 18 3 43 1 43 2 1 1311 45 1347 1 952 45 1348 75 45 1349 13 0 13 2 13 1 33 1350 18 3 43 1 43 2 1 1311 45 1351 1 957 45 1352 75 45 1353 13 0 13 2 13 1 33 1354 18 3 43 1 43 2 1 1311 45 1355 1 962 45 1356 1 239 45 1357 13 0 13 2 13 1 33 1358 18 3 43 1 43 2 1 1311 45 1359 1 967 45 1360 1 621 45 1361 13 0 13 2 13 1 33 1362 18 3 43 1 43 2 1 1311 45 1363 1 972 45 1364 1 1365 45 1366 13 0 13 2 13 1 33 1367 18 3 43 1 43 2 1 1311 45 1368 1 978 45 1369 1 980 45 1370 13 0 13 2 13 1 33 1371 18 3 43 1 43 2 1 1311 45 1372 1 984 45 1373 75 45 1374 13 0 13 2 13 1 33 1375 18 3 43 1 43 2 1 1311 45 1376 1 989 45 1377 75 45 1378 13 0 13 2 13 1 33 1379 18 3 43 1 43 2 1 1311 45 1380 1 994 45 1381 75 45 1382 13 0 13 2 13 1 33 1383 18 3 43 1 43 2 1 1311 45 1384 1 999 45 1385 75 45 1386 13 0 13 2 13 1 33 1387 18 3 43 1 43 2 77 75 3 78 1312 15 909 19 1 150 78 1388 1 1388 45 1390 1 853 45 1391 1 1392 45 1393 13 0 13 2 13 1 33 1394 18 3 43 1 43 2 1 1388 45 1395 1 858 45 1396 1 1397 45 1398 13 0 13 2 13 1 33 1399 18 3 43 1 43 2 1 1388 45 1400 1 864 45 1401 1 1402 45 1403 13 0 13 2 13 1 33 1404 18 3 43 1 43 2 1 1388 45 1405 1 870 45 1406 75 45 1407 13 0 13 2 13 1 33 1408 18 3 43 1 43 2 1 1388 45 1409 1 930 45 1410 1 932 45 1411 13 0 13 2 13 1 33 1412 18 3 43 1 43 2 1 1388 45 1413 1 936 45 1414 1 1392 45 1415 13 0 13 2 13 1 33 1416 18 3 43 1 43 2 1 1388 45 1417 1 941 45 1418 1 943 45 1419 13 0 13 2 13 1 33 1420 18 3 43 1 43 2 1 1388 45 1421 1 947 45 1422 8 7 45 1423 13 0 13 2 13 1 33 1424 18 3 43 1 43 2 1 1388 45 1425 1 952 45 1426 75 45 1427 13 0 13 2 13 1 33 1428 18 3 43 1 43 2 1 1388 45 1429 1 957 45 1430 75 45 1431 13 0 13 2 13 1 33 1432 18 3 43 1 43 2 1 1388 45 1433 1 962 45 1434 1 1435 45 1436 13 0 13 2 13 1 33 1437 18 3 43 1 43 2 1 1388 45 1438 1 967 45 1439 1 672 45 1440 13 0 13 2 13 1 33 1441 18 3 43 1 43 2 1 1388 45 1442 1 972 45 1443 1 1444 45 1445 13 0 13 2 13 1 33 1446 18 3 43 1 43 2 1 1388 45 1447 1 978 45 1448 1 980 45 1449 13 0 13 2 13 1 33 1450 18 3 43 1 43 2 1 1388 45 1451 1 984 45 1452 75 45 1453 13 0 13 2 13 1 33 1454 18 3 43 1 43 2 1 1388 45 1455 1 989 45 1456 75 45 1457 13 0 13 2 13 1 33 1458 18 3 43 1 43 2 1 1388 45 1459 1 994 45 1460 75 45 1461 13 0 13 2 13 1 33 1462 18 3 43 1 43 2 1 1388 45 1463 1 999 45 1464 8 0 45 1465 13 0 13 2 13 1 33 1466 18 3 43 1 43 2 77 75 3 78 1389 15 909 19 1 150 78 1467 1 1467 45 1469 1 853 45 1470 1 236 45 1471 13 0 13 2 13 1 33 1472 18 3 43 1 43 2 1 1467 45 1473 1 858 45 1474 1 1475 45 1476 13 0 13 2 13 1 33 1477 18 3 43 1 43 2 1 1467 45 1478 1 864 45 1479 1 1480 45 1481 13 0 13 2 13 1 33 1482 18 3 43 1 43 2 1 1467 45 1483 1 870 45 1484 75 45 1485 13 0 13 2 13 1 33 1486 18 3 43 1 43 2 1 1467 45 1487 1 930 45 1488 1 932 45 1489 13 0 13 2 13 1 33 1490 18 3 43 1 43 2 1 1467 45 1491 1 936 45 1492 1 236 45 1493 13 0 13 2 13 1 33 1494 18 3 43 1 43 2 1 1467 45 1495 1 941 45 1496 1 943 45 1497 13 0 13 2 13 1 33 1498 18 3 43 1 43 2 1 1467 45 1499 1 947 45 1500 8 8 45 1501 13 0 13 2 13 1 33 1502 18 3 43 1 43 2 1 1467 45 1503 1 952 45 1504 75 45 1505 13 0 13 2 13 1 33 1506 18 3 43 1 43 2 1 1467 45 1507 1 957 45 1508 75 45 1509 13 0 13 2 13 1 33 1510 18 3 43 1 43 2 1 1467 45 1511 1 962 45 1512 1 238 45 1513 13 0 13 2 13 1 33 1514 18 3 43 1 43 2 1 1467 45 1515 1 967 45 1516 1 725 45 1517 13 0 13 2 13 1 33 1518 18 3 43 1 43 2 1 1467 45 1519 1 972 45 1520 1 1521 45 1522 13 0 13 2 13 1 33 1523 18 3 43 1 43 2 1 1467 45 1524 1 978 45 1525 1 980 45 1526 13 0 13 2 13 1 33 1527 18 3 43 1 43 2 1 1467 45 1528 1 984 45 1529 75 45 1530 13 0 13 2 13 1 33 1531 18 3 43 1 43 2 1 1467 45 1532 1 989 45 1533 75 45 1534 13 0 13 2 13 1 33 1535 18 3 43 1 43 2 1 1467 45 1536 1 994 45 1537 75 45 1538 13 0 13 2 13 1 33 1539 18 3 43 1 43 2 1 1467 45 1540 1 999 45 1541 75 45 1542 13 0 13 2 13 1 33 1543 18 3 43 1 43 2 77 75 3 78 1468 15 909 19 1 150 78 1544 1 1544 45 1545 1 853 45 1546 1 236 45 1547 13 0 13 2 13 1 33 1548 18 3 43 1 43 2 1 1544 45 1549 1 858 45 1550 1 1551 45 1552 13 0 13 2 13 1 33 1553 18 3 43 1 43 2 1 1544 45 1554 1 864 45 1555 1 1556 45 1557 13 0 13 2 13 1 33 1558 18 3 43 1 43 2 1 1544 45 1559 1 870 45 1560 75 45 1561 13 0 13 2 13 1 33 1562 18 3 43 1 43 2 1 1544 45 1563 1 930 45 1564 1 932 45 1565 13 0 13 2 13 1 33 1566 18 3 43 1 43 2 1 1544 45 1567 1 936 45 1568 1 236 45 1569 13 0 13 2 13 1 33 1570 18 3 43 1 43 2 1 1544 45 1571 1 941 45 1572 1 943 45 1573 13 0 13 2 13 1 33 1574 18 3 43 1 43 2 1 1544 45 1575 1 947 45 1576 8 9 45 1577 13 0 13 2 13 1 33 1578 18 3 43 1 43 2 1 1544 45 1579 1 952 45 1580 75 45 1581 13 0 13 2 13 1 33 1582 18 3 43 1 43 2 1 1544 45 1583 1 957 45 1584 75 45 1585 13 0 13 2 13 1 33 1586 18 3 43 1 43 2 1 1544 45 1587 1 962 45 1588 1 237 45 1589 13 0 13 2 13 1 33 1590 18 3 43 1 43 2 1 1544 45 1591 1 967 45 1592 1 778 45 1593 13 0 13 2 13 1 33 1594 18 3 43 1 43 2 1 1544 45 1595 1 972 45 1596 1 1597 45 1598 13 0 13 2 13 1 33 1599 18 3 43 1 43 2 1 1544 45 1600 1 978 45 1601 1 980 45 1602 13 0 13 2 13 1 33 1603 18 3 43 1 43 2 1 1544 45 1604 1 984 45 1605 75 45 1606 13 0 13 2 13 1 33 1607 18 3 43 1 43 2 1 1544 45 1608 1 989 45 1609 75 45 1610 13 0 13 2 13 1 33 1611 18 3 43 1 43 2 1 1544 45 1612 1 994 45 1613 75 45 1614 13 0 13 2 13 1 33 1615 18 3 43 1 43 2 1 1544 45 1616 1 999 45 1617 75 45 1618 13 0 13 2 13 1 33 1619 18 3 43 1 43 2 15 1468 1 1544 17 157 15 1468 75 17 159 15 1389 1 1467 17 157 15 1389 1 1468 17 159 15 1312 1 1388 17 157 15 1312 1 1389 17 159 15 1235 1 1311 17 157 15 1235 1 1312 17 159 15 1158 1 1234 17 157 15 1158 1 1235 17 159 15 1081 1 1157 17 157 15 1081 1 1158 17 159 15 1004 1 1080 17 157 15 1004 1 1081 17 159 15 908 1 1003 17 157 15 908 1 1004 17 159 15 882 1 907 17 157 15 882 1 908 17 159 1 847 45 852 1 853 45 854 1 191 45 855 13 0 13 2 13 1 33 856 18 3 43 1 43 2 1 847 45 857 1 858 45 859 1 860 45 861 13 0 13 2 13 1 33 862 18 3 43 1 43 2 1 847 45 863 1 864 45 865 1 866 45 867 13 0 13 2 13 1 33 868 18 3 43 1 43 2 1 847 45 869 1 870 45 871 75 45 872 13 0 13 2 13 1 33 873 18 3 43 1 43 2 1 847 45 874 1 875 45 876 75 45 877 13 0 13 2 13 1 33 878 18 3 43 1 43 2 1 847 45 879 1 880 45 881 1 882 45 883 13 0 13 2 13 1 33 884 18 3 43 1 43 2 1 847 45 885 1 886 45 887 75 45 888 13 0 13 2 13 1 33 889 18 3 43 1 43 2 15 847 1 890 17 891 1 847 45 892 1 893 45 894 75 45 895 13 0 13 2 13 1 33 896 18 3 43 1 43 2 1 847 45 897 1 898 45 899 75 45 900 13 0 13 2 13 1 33 901 18 3 43 1 43 2 1 847 45 902 1 903 45 904 1 848 45 905 13 0 13 2 13 1 33 906 18 3 43 1 43 2 15 191 15 847 14 848 19 3 148 15 188 15 1620 19 2 190 15 1621 15 1622 77 77 15 1623 15 1624 15 1625 15 196 77 77 15 1626 9 6 77 77 77 19 15 198 15 1627 15 22 15 1628 15 1629 19 4 25 15 1630 15 22 15 1631 15 1632 19 4 25 15 1630 14 26 77 15 1633 19 4 25 15 1621 19 1 152 78 1650 15 1630 1 1651 12 19 2 51 15 1630 15 251 15 1652 19 3 253 1 1653 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 1654 14 11 13 0 19 6 263 43 1 15 1653 15 264 1 1656 12 19 3 253 1 1657 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 1658 14 11 13 0 19 6 263 43 1 15 1657 15 264 1 1660 12 19 3 253 1 1661 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 1662 14 11 13 0 19 6 263 43 1 15 1661 15 264 1 1664 12 19 3 253 1 1665 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 1666 14 11 13 0 19 6 263 43 1 15 1665 15 264 1 1668 12 19 3 253 1 1669 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 1670 14 11 13 0 19 6 263 43 1 15 1669 15 264 1 1672 12 19 3 253 1 1673 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 1674 14 11 13 0 19 6 263 43 1 15 1673 15 264 1 1676 12 19 3 253 15 188 15 1677 19 2 190 15 1678 15 22 15 1679 15 1680 19 4 25 15 1678 14 26 77 15 1681 19 4 25 15 1678 1 1683 12 19 2 51 15 1678 15 251 15 1684 19 3 253 15 188 15 1685 19 2 190 15 1686 15 22 15 1687 15 1688 19 4 25 15 1686 14 26 77 15 1689 19 4 25 15 1686 1 1694 12 19 2 51 15 1686 15 251 15 1695 19 3 253 15 188 15 1696 19 2 190 15 1697 15 22 15 1698 15 1699 19 4 25 15 1697 14 26 77 15 1700 19 4 25 15 1697 1 1702 12 19 2 51 15 1697 15 251 15 1703 19 3 253 15 188 15 1704 19 2 190 15 1705 15 22 15 1706 15 1707 19 4 25 15 1705 14 26 77 15 1708 19 4 25 15 1705 1 1711 12 19 2 51 15 1705 15 251 15 1712 19 3 253 15 1713 15 22 15 1714 15 1715 19 4 25 15 1713 77 15 1716 15 1717 1 1718 12 19 5 89 15 1719 15 22 15 1720 15 1721 19 4 25 15 1719 77 15 1722 15 1723 1 1727 12 19 5 89 15 1621 15 1713 19 2 370 15 1728 19 1 139 15 1729 19 1 139 15 188 15 1730 19 2 190 15 1731 15 22 15 1732 15 1733 19 4 25 15 1731 14 26 77 15 1734 19 4 25 15 1731 1 1736 12 19 2 51 15 1731 15 251 15 1737 19 3 253 15 188 15 1738 19 2 190 15 1739 15 22 15 1740 15 1741 19 4 25 15 1739 14 26 77 15 1742 19 4 25 15 1739 1 1747 12 19 2 51 15 1739 15 251 15 1748 19 3 253 15 188 15 1749 19 2 190 15 1750 15 22 15 1751 15 1752 19 4 25 15 1750 14 26 77 15 1753 19 4 25 15 1750 1 1755 12 19 2 51 15 1750 15 251 15 1756 19 3 253 15 188 15 1757 19 2 190 15 1758 15 22 15 1759 15 1760 19 4 25 15 1758 14 26 77 15 1761 19 4 25 15 1758 1 1764 12 19 2 51 15 1758 15 251 15 1765 19 3 253 15 1766 15 22 15 1767 15 1768 19 4 25 15 1766 77 15 1769 15 1770 1 1771 12 19 5 89 15 1772 15 22 15 1773 15 1774 19 4 25 15 1772 77 15 1775 15 1776 1 1780 12 19 5 89 15 1621 15 1766 19 2 370 15 1781 19 1 139 15 1782 19 1 139 15 188 15 1783 19 2 190 15 1784 15 22 15 1785 15 1786 19 4 25 15 1784 14 26 77 15 1787 19 4 25 15 1784 1 1789 12 19 2 51 15 1784 15 251 15 1790 19 3 253 15 188 15 1791 19 2 190 15 1792 15 22 15 1793 15 1794 19 4 25 15 1792 14 26 77 15 1795 19 4 25 15 1792 1 1800 12 19 2 51 15 1792 15 251 15 1801 19 3 253 15 188 15 1802 19 2 190 15 1803 15 22 15 1804 15 1805 19 4 25 15 1803 14 26 77 15 1806 19 4 25 15 1803 1 1808 12 19 2 51 15 1803 15 251 15 1809 19 3 253 15 188 15 1810 19 2 190 15 1811 15 22 15 1812 15 1813 19 4 25 15 1811 14 26 77 15 1814 19 4 25 15 1811 1 1817 12 19 2 51 15 1811 15 251 15 1818 19 3 253 15 1819 15 22 15 1820 15 1821 19 4 25 15 1819 77 15 1822 15 1823 1 1824 12 19 5 89 15 1825 15 22 15 1826 15 1827 19 4 25 15 1825 77 15 1828 15 1829 1 1833 12 19 5 89 15 1621 15 1819 19 2 370 15 1834 19 1 139 15 1835 19 1 139 15 188 15 1836 19 2 190 15 1837 15 22 15 1838 15 1839 19 4 25 15 1837 14 26 77 15 1840 19 4 25 15 1837 1 1852 12 19 2 51 15 1837 15 251 15 1853 19 3 253 15 1854 15 22 15 1855 15 1856 19 4 25 15 1854 14 26 77 15 1857 19 4 25 15 1854 1 1858 12 19 2 51 15 1859 19 1 139 15 839 15 22 15 1860 15 1861 19 4 25 15 839 77 15 1862 15 1863 1 1866 12 19 5 89 15 849 19 1 150 45 850 15 848 13 0 14 848 19 3 148 10 0 43 1 78 1867 77 75 3 78 1892 15 909 19 1 150 78 1911 1 1911 45 1913 1 853 45 1914 1 236 45 1915 13 0 13 2 13 1 33 1916 18 3 43 1 43 2 1 1911 45 1917 1 858 45 1918 1 1919 45 1920 13 0 13 2 13 1 33 1921 18 3 43 1 43 2 1 1911 45 1922 1 864 45 1923 1 1924 45 1925 13 0 13 2 13 1 33 1926 18 3 43 1 43 2 1 1911 45 1927 1 870 45 1928 75 45 1929 13 0 13 2 13 1 33 1930 18 3 43 1 43 2 1 1911 45 1931 1 930 45 1932 1 932 45 1933 13 0 13 2 13 1 33 1934 18 3 43 1 43 2 1 1911 45 1935 1 936 45 1936 1 236 45 1937 13 0 13 2 13 1 33 1938 18 3 43 1 43 2 1 1911 45 1939 1 941 45 1940 1 943 45 1941 13 0 13 2 13 1 33 1942 18 3 43 1 43 2 1 1911 45 1943 1 947 45 1944 8 1 45 1945 13 0 13 2 13 1 33 1946 18 3 43 1 43 2 1 1911 45 1947 1 952 45 1948 75 45 1949 13 0 13 2 13 1 33 1950 18 3 43 1 43 2 1 1911 45 1951 1 957 45 1952 75 45 1953 13 0 13 2 13 1 33 1954 18 3 43 1 43 2 1 1911 45 1955 1 962 45 1956 1 1647 45 1957 13 0 13 2 13 1 33 1958 18 3 43 1 43 2 1 1911 45 1959 1 967 45 1960 1 1713 45 1961 13 0 13 2 13 1 33 1962 18 3 43 1 43 2 1 1911 45 1963 1 972 45 1964 1 1965 45 1966 13 0 13 2 13 1 33 1967 18 3 43 1 43 2 1 1911 45 1968 1 978 45 1969 1 980 45 1970 13 0 13 2 13 1 33 1971 18 3 43 1 43 2 1 1911 45 1972 1 984 45 1973 75 45 1974 13 0 13 2 13 1 33 1975 18 3 43 1 43 2 1 1911 45 1976 1 989 45 1977 75 45 1978 13 0 13 2 13 1 33 1979 18 3 43 1 43 2 1 1911 45 1980 1 994 45 1981 75 45 1982 13 0 13 2 13 1 33 1983 18 3 43 1 43 2 1 1911 45 1984 1 999 45 1985 75 45 1986 13 0 13 2 13 1 33 1987 18 3 43 1 43 2 77 75 3 78 1912 15 909 19 1 150 78 1988 1 1988 45 1990 1 853 45 1991 1 236 45 1992 13 0 13 2 13 1 33 1993 18 3 43 1 43 2 1 1988 45 1994 1 858 45 1995 1 1996 45 1997 13 0 13 2 13 1 33 1998 18 3 43 1 43 2 1 1988 45 1999 1 864 45 2000 1 2001 45 2002 13 0 13 2 13 1 33 2003 18 3 43 1 43 2 1 1988 45 2004 1 870 45 2005 75 45 2006 13 0 13 2 13 1 33 2007 18 3 43 1 43 2 1 1988 45 2008 1 930 45 2009 1 932 45 2010 13 0 13 2 13 1 33 2011 18 3 43 1 43 2 1 1988 45 2012 1 936 45 2013 1 236 45 2014 13 0 13 2 13 1 33 2015 18 3 43 1 43 2 1 1988 45 2016 1 941 45 2017 1 943 45 2018 13 0 13 2 13 1 33 2019 18 3 43 1 43 2 1 1988 45 2020 1 947 45 2021 8 2 45 2022 13 0 13 2 13 1 33 2023 18 3 43 1 43 2 1 1988 45 2024 1 952 45 2025 75 45 2026 13 0 13 2 13 1 33 2027 18 3 43 1 43 2 1 1988 45 2028 1 957 45 2029 75 45 2030 13 0 13 2 13 1 33 2031 18 3 43 1 43 2 1 1988 45 2032 1 962 45 2033 1 1646 45 2034 13 0 13 2 13 1 33 2035 18 3 43 1 43 2 1 1988 45 2036 1 967 45 2037 1 1766 45 2038 13 0 13 2 13 1 33 2039 18 3 43 1 43 2 1 1988 45 2040 1 972 45 2041 1 2042 45 2043 13 0 13 2 13 1 33 2044 18 3 43 1 43 2 1 1988 45 2045 1 978 45 2046 1 980 45 2047 13 0 13 2 13 1 33 2048 18 3 43 1 43 2 1 1988 45 2049 1 984 45 2050 75 45 2051 13 0 13 2 13 1 33 2052 18 3 43 1 43 2 1 1988 45 2053 1 989 45 2054 75 45 2055 13 0 13 2 13 1 33 2056 18 3 43 1 43 2 1 1988 45 2057 1 994 45 2058 75 45 2059 13 0 13 2 13 1 33 2060 18 3 43 1 43 2 1 1988 45 2061 1 999 45 2062 75 45 2063 13 0 13 2 13 1 33 2064 18 3 43 1 43 2 77 75 3 78 1989 15 909 19 1 150 78 2065 1 2065 45 2066 1 853 45 2067 1 236 45 2068 13 0 13 2 13 1 33 2069 18 3 43 1 43 2 1 2065 45 2070 1 858 45 2071 1 2072 45 2073 13 0 13 2 13 1 33 2074 18 3 43 1 43 2 1 2065 45 2075 1 864 45 2076 1 2077 45 2078 13 0 13 2 13 1 33 2079 18 3 43 1 43 2 1 2065 45 2080 1 870 45 2081 75 45 2082 13 0 13 2 13 1 33 2083 18 3 43 1 43 2 1 2065 45 2084 1 930 45 2085 1 932 45 2086 13 0 13 2 13 1 33 2087 18 3 43 1 43 2 1 2065 45 2088 1 936 45 2089 1 236 45 2090 13 0 13 2 13 1 33 2091 18 3 43 1 43 2 1 2065 45 2092 1 941 45 2093 1 943 45 2094 13 0 13 2 13 1 33 2095 18 3 43 1 43 2 1 2065 45 2096 1 947 45 2097 8 3 45 2098 13 0 13 2 13 1 33 2099 18 3 43 1 43 2 1 2065 45 2100 1 952 45 2101 75 45 2102 13 0 13 2 13 1 33 2103 18 3 43 1 43 2 1 2065 45 2104 1 957 45 2105 75 45 2106 13 0 13 2 13 1 33 2107 18 3 43 1 43 2 1 2065 45 2108 1 962 45 2109 1 1645 45 2110 13 0 13 2 13 1 33 2111 18 3 43 1 43 2 1 2065 45 2112 1 967 45 2113 1 1819 45 2114 13 0 13 2 13 1 33 2115 18 3 43 1 43 2 1 2065 45 2116 1 972 45 2117 1 2118 45 2119 13 0 13 2 13 1 33 2120 18 3 43 1 43 2 1 2065 45 2121 1 978 45 2122 1 980 45 2123 13 0 13 2 13 1 33 2124 18 3 43 1 43 2 1 2065 45 2125 1 984 45 2126 75 45 2127 13 0 13 2 13 1 33 2128 18 3 43 1 43 2 1 2065 45 2129 1 989 45 2130 75 45 2131 13 0 13 2 13 1 33 2132 18 3 43 1 43 2 1 2065 45 2133 1 994 45 2134 75 45 2135 13 0 13 2 13 1 33 2136 18 3 43 1 43 2 1 2065 45 2137 1 999 45 2138 75 45 2139 13 0 13 2 13 1 33 2140 18 3 43 1 43 2 15 1989 1 2065 17 157 15 1989 75 17 159 15 1912 1 1988 17 157 15 1912 1 1989 17 159 15 1892 1 1911 17 157 15 1892 1 1912 17 159 1 1867 45 1868 1 853 45 1869 1 1621 45 1870 13 0 13 2 13 1 33 1871 18 3 43 1 43 2 1 1867 45 1872 1 858 45 1873 1 1874 45 1875 13 0 13 2 13 1 33 1876 18 3 43 1 43 2 1 1867 45 1877 1 864 45 1878 1 1879 45 1880 13 0 13 2 13 1 33 1881 18 3 43 1 43 2 1 1867 45 1882 1 870 45 1883 75 45 1884 13 0 13 2 13 1 33 1885 18 3 43 1 43 2 1 1867 45 1886 1 875 45 1887 75 45 1888 13 0 13 2 13 1 33 1889 18 3 43 1 43 2 1 1867 45 1890 1 880 45 1891 1 1892 45 1893 13 0 13 2 13 1 33 1894 18 3 43 1 43 2 1 1867 45 1895 1 886 45 1896 75 45 1897 13 0 13 2 13 1 33 1898 18 3 43 1 43 2 15 1867 1 890 17 891 1 1867 45 1899 1 893 45 1900 75 45 1901 13 0 13 2 13 1 33 1902 18 3 43 1 43 2 1 1867 45 1903 1 898 45 1904 75 45 1905 13 0 13 2 13 1 33 1906 18 3 43 1 43 2 1 1867 45 1907 1 903 45 1908 1 848 45 1909 13 0 13 2 13 1 33 1910 18 3 43 1 43 2 15 1621 15 1867 14 848 19 3 148 15 188 15 2141 19 2 190 15 2142 15 2143 77 77 15 2144 15 2145 15 2146 15 196 77 77 15 2147 9 5 77 77 77 19 15 198 15 2148 15 22 15 2149 15 2150 19 4 25 15 2151 15 22 15 2152 15 2153 19 4 25 15 2151 14 26 77 15 2154 19 4 25 15 2142 19 1 152 78 2169 15 2151 1 2170 12 19 2 51 15 2151 15 251 15 2171 19 3 253 1 2172 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 2173 14 11 13 0 19 6 263 43 1 15 2172 15 264 1 2175 12 19 3 253 1 2176 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 2177 14 11 13 0 19 6 263 43 1 15 2176 15 264 1 2179 12 19 3 253 1 2180 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 2181 14 11 13 0 19 6 263 43 1 15 2180 15 264 1 2183 12 19 3 253 1 2184 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 2185 14 11 13 0 19 6 263 43 1 15 2184 15 264 1 2187 12 19 3 253 1 2188 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 2189 14 11 13 0 19 6 263 43 1 15 2188 15 264 1 2191 12 19 3 253 15 188 15 2192 19 2 190 15 2193 15 22 15 2194 15 2195 19 4 25 15 2193 14 26 77 15 2196 19 4 25 15 2193 1 2198 12 19 2 51 15 2193 15 251 15 2199 19 3 253 15 188 15 2200 19 2 190 15 2201 15 22 15 2202 15 2203 19 4 25 15 2201 14 26 77 15 2204 19 4 25 15 2201 1 2209 12 19 2 51 15 2201 15 251 15 2210 19 3 253 15 188 15 2211 19 2 190 15 2212 15 22 15 2213 15 2214 19 4 25 15 2212 14 26 77 15 2215 19 4 25 15 2212 1 2217 12 19 2 51 15 2212 15 251 15 2218 19 3 253 15 188 15 2219 19 2 190 15 2220 15 22 15 2221 15 2222 19 4 25 15 2220 14 26 77 15 2223 19 4 25 15 2220 1 2226 12 19 2 51 15 2220 15 251 15 2227 19 3 253 15 2228 15 22 15 2229 15 2230 19 4 25 15 2228 77 15 2231 15 2232 1 2233 12 19 5 89 15 2234 15 22 15 2235 15 2236 19 4 25 15 2234 77 15 2237 15 2238 1 2242 12 19 5 89 15 2142 15 2228 19 2 370 15 2243 19 1 139 15 2244 19 1 139 15 188 15 2245 19 2 190 15 2246 15 22 15 2247 15 2248 19 4 25 15 2246 14 26 77 15 2249 19 4 25 15 2246 1 2251 12 19 2 51 15 2246 15 251 15 2252 19 3 253 15 188 15 2253 19 2 190 15 2254 15 22 15 2255 15 2256 19 4 25 15 2254 14 26 77 15 2257 19 4 25 15 2254 1 2262 12 19 2 51 15 2254 15 251 15 2263 19 3 253 15 188 15 2264 19 2 190 15 2265 15 22 15 2266 15 2267 19 4 25 15 2265 14 26 77 15 2268 19 4 25 15 2265 1 2270 12 19 2 51 15 2265 15 251 15 2271 19 3 253 15 188 15 2272 19 2 190 15 2273 15 22 15 2274 15 2275 19 4 25 15 2273 14 26 77 15 2276 19 4 25 15 2273 1 2279 12 19 2 51 15 2273 15 251 15 2280 19 3 253 15 2281 15 22 15 2282 15 2283 19 4 25 15 2281 77 15 2284 15 2285 1 2286 12 19 5 89 15 2287 15 22 15 2288 15 2289 19 4 25 15 2287 77 15 2290 15 2291 1 2295 12 19 5 89 15 2142 15 2281 19 2 370 15 2296 19 1 139 15 2297 19 1 139 15 188 15 2298 19 2 190 15 2299 15 22 15 2300 15 2301 19 4 25 15 2299 14 26 77 15 2302 19 4 25 15 2299 1 2311 12 19 2 51 15 2299 15 251 15 2312 19 3 253 15 2313 15 22 15 2314 15 2315 19 4 25 15 2313 14 26 77 15 2316 19 4 25 15 2313 1 2317 12 19 2 51 15 2318 19 1 139 15 839 15 22 15 2319 15 2320 19 4 25 15 839 77 15 2321 15 2322 1 2325 12 19 5 89 15 849 19 1 150 45 850 15 848 13 0 14 848 19 3 148 10 0 43 1 78 2326 77 75 3 78 2351 15 909 19 1 150 78 2370 1 2370 45 2372 1 853 45 2373 1 236 45 2374 13 0 13 2 13 1 33 2375 18 3 43 1 43 2 1 2370 45 2376 1 858 45 2377 1 2378 45 2379 13 0 13 2 13 1 33 2380 18 3 43 1 43 2 1 2370 45 2381 1 864 45 2382 1 2383 45 2384 13 0 13 2 13 1 33 2385 18 3 43 1 43 2 1 2370 45 2386 1 870 45 2387 75 45 2388 13 0 13 2 13 1 33 2389 18 3 43 1 43 2 1 2370 45 2390 1 930 45 2391 1 932 45 2392 13 0 13 2 13 1 33 2393 18 3 43 1 43 2 1 2370 45 2394 1 936 45 2395 1 236 45 2396 13 0 13 2 13 1 33 2397 18 3 43 1 43 2 1 2370 45 2398 1 941 45 2399 1 943 45 2400 13 0 13 2 13 1 33 2401 18 3 43 1 43 2 1 2370 45 2402 1 947 45 2403 8 1 45 2404 13 0 13 2 13 1 33 2405 18 3 43 1 43 2 1 2370 45 2406 1 952 45 2407 75 45 2408 13 0 13 2 13 1 33 2409 18 3 43 1 43 2 1 2370 45 2410 1 957 45 2411 75 45 2412 13 0 13 2 13 1 33 2413 18 3 43 1 43 2 1 2370 45 2414 1 962 45 2415 1 2166 45 2416 13 0 13 2 13 1 33 2417 18 3 43 1 43 2 1 2370 45 2418 1 967 45 2419 1 2228 45 2420 13 0 13 2 13 1 33 2421 18 3 43 1 43 2 1 2370 45 2422 1 972 45 2423 1 2424 45 2425 13 0 13 2 13 1 33 2426 18 3 43 1 43 2 1 2370 45 2427 1 978 45 2428 1 980 45 2429 13 0 13 2 13 1 33 2430 18 3 43 1 43 2 1 2370 45 2431 1 984 45 2432 75 45 2433 13 0 13 2 13 1 33 2434 18 3 43 1 43 2 1 2370 45 2435 1 989 45 2436 75 45 2437 13 0 13 2 13 1 33 2438 18 3 43 1 43 2 1 2370 45 2439 1 994 45 2440 75 45 2441 13 0 13 2 13 1 33 2442 18 3 43 1 43 2 1 2370 45 2443 1 999 45 2444 75 45 2445 13 0 13 2 13 1 33 2446 18 3 43 1 43 2 77 75 3 78 2371 15 909 19 1 150 78 2447 1 2447 45 2448 1 853 45 2449 1 236 45 2450 13 0 13 2 13 1 33 2451 18 3 43 1 43 2 1 2447 45 2452 1 858 45 2453 1 2454 45 2455 13 0 13 2 13 1 33 2456 18 3 43 1 43 2 1 2447 45 2457 1 864 45 2458 1 2459 45 2460 13 0 13 2 13 1 33 2461 18 3 43 1 43 2 1 2447 45 2462 1 870 45 2463 75 45 2464 13 0 13 2 13 1 33 2465 18 3 43 1 43 2 1 2447 45 2466 1 930 45 2467 1 932 45 2468 13 0 13 2 13 1 33 2469 18 3 43 1 43 2 1 2447 45 2470 1 936 45 2471 1 236 45 2472 13 0 13 2 13 1 33 2473 18 3 43 1 43 2 1 2447 45 2474 1 941 45 2475 1 943 45 2476 13 0 13 2 13 1 33 2477 18 3 43 1 43 2 1 2447 45 2478 1 947 45 2479 8 2 45 2480 13 0 13 2 13 1 33 2481 18 3 43 1 43 2 1 2447 45 2482 1 952 45 2483 75 45 2484 13 0 13 2 13 1 33 2485 18 3 43 1 43 2 1 2447 45 2486 1 957 45 2487 75 45 2488 13 0 13 2 13 1 33 2489 18 3 43 1 43 2 1 2447 45 2490 1 962 45 2491 1 2165 45 2492 13 0 13 2 13 1 33 2493 18 3 43 1 43 2 1 2447 45 2494 1 967 45 2495 1 2281 45 2496 13 0 13 2 13 1 33 2497 18 3 43 1 43 2 1 2447 45 2498 1 972 45 2499 1 2500 45 2501 13 0 13 2 13 1 33 2502 18 3 43 1 43 2 1 2447 45 2503 1 978 45 2504 1 980 45 2505 13 0 13 2 13 1 33 2506 18 3 43 1 43 2 1 2447 45 2507 1 984 45 2508 75 45 2509 13 0 13 2 13 1 33 2510 18 3 43 1 43 2 1 2447 45 2511 1 989 45 2512 75 45 2513 13 0 13 2 13 1 33 2514 18 3 43 1 43 2 1 2447 45 2515 1 994 45 2516 75 45 2517 13 0 13 2 13 1 33 2518 18 3 43 1 43 2 1 2447 45 2519 1 999 45 2520 75 45 2521 13 0 13 2 13 1 33 2522 18 3 43 1 43 2 15 2371 1 2447 17 157 15 2371 75 17 159 15 2351 1 2370 17 157 15 2351 1 2371 17 159 1 2326 45 2327 1 853 45 2328 1 2142 45 2329 13 0 13 2 13 1 33 2330 18 3 43 1 43 2 1 2326 45 2331 1 858 45 2332 1 2333 45 2334 13 0 13 2 13 1 33 2335 18 3 43 1 43 2 1 2326 45 2336 1 864 45 2337 1 2338 45 2339 13 0 13 2 13 1 33 2340 18 3 43 1 43 2 1 2326 45 2341 1 870 45 2342 75 45 2343 13 0 13 2 13 1 33 2344 18 3 43 1 43 2 1 2326 45 2345 1 875 45 2346 75 45 2347 13 0 13 2 13 1 33 2348 18 3 43 1 43 2 1 2326 45 2349 1 880 45 2350 1 2351 45 2352 13 0 13 2 13 1 33 2353 18 3 43 1 43 2 1 2326 45 2354 1 886 45 2355 75 45 2356 13 0 13 2 13 1 33 2357 18 3 43 1 43 2 15 2326 1 890 17 891 1 2326 45 2358 1 893 45 2359 75 45 2360 13 0 13 2 13 1 33 2361 18 3 43 1 43 2 1 2326 45 2362 1 898 45 2363 75 45 2364 13 0 13 2 13 1 33 2365 18 3 43 1 43 2 1 2326 45 2366 1 903 45 2367 1 848 45 2368 13 0 13 2 13 1 33 2369 18 3 43 1 43 2 15 2142 15 2326 14 848 19 3 148 15 188 15 2523 19 2 190 15 2524 15 2525 77 77 15 2526 15 2527 15 2528 15 196 77 77 15 2529 9 5 77 77 77 19 15 198 15 2530 15 22 15 2531 15 2532 19 4 25 15 2533 15 22 15 2534 15 2535 19 4 25 15 2533 14 26 77 15 2536 19 4 25 15 2524 19 1 152 78 2553 15 2533 1 2554 12 19 2 51 15 2533 15 251 15 2555 19 3 253 1 2556 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 2557 14 11 13 0 19 6 263 43 1 15 2556 15 264 1 2559 12 19 3 253 1 2560 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 2561 14 11 13 0 19 6 263 43 1 15 2560 15 264 1 2563 12 19 3 253 1 2564 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 2565 14 11 13 0 19 6 263 43 1 15 2564 15 264 1 2567 12 19 3 253 1 2568 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 2569 14 11 13 0 19 6 263 43 1 15 2568 15 264 1 2571 12 19 3 253 1 2572 16 255 45 256 10 0 39 10 10 0 16 257 39 4 11 258 76 39 16 15 259 15 260 15 261 15 2573 14 11 13 0 19 6 263 43 1 15 2572 15 264 1 2575 12 19 3 253 15 188 15 2576 19 2 190 15 2577 15 22 15 2578 15 2579 19 4 25 15 2577 14 26 77 15 2580 19 4 25 15 2577 1 2582 12 19 2 51 15 2577 15 251 15 2583 19 3 253 15 188 15 2584 19 2 190 15 2585 15 22 15 2586 15 2587 19 4 25 15 2585 14 26 77 15 2588 19 4 25 15 2585 1 2593 12 19 2 51 15 2585 15 251 15 2594 19 3 253 15 188 15 2595 19 2 190 15 2596 15 22 15 2597 15 2598 19 4 25 15 2596 14 26 77 15 2599 19 4 25 15 2596 1 2601 12 19 2 51 15 2596 15 251 15 2602 19 3 253 15 188 15 2603 19 2 190 15 2604 15 22 15 2605 15 2606 19 4 25 15 2604 14 26 77 15 2607 19 4 25 15 2604 1 2610 12 19 2 51 15 2604 15 251 15 2611 19 3 253 15 2612 15 22 15 2613 15 2614 19 4 25 15 2612 77 15 2615 15 2616 1 2617 12 19 5 89 15 2618 15 22 15 2619 15 2620 19 4 25 15 2618 77 15 2621 15 2622 1 2626 12 19 5 89 15 2524 15 2612 19 2 370 15 2627 19 1 139 15 2628 19 1 139 15 188 15 2629 19 2 190 15 2630 15 22 15 2631 15 2632 19 4 25 15 2630 14 26 77 15 2633 19 4 25 15 2630 1 2643 12 19 2 51 15 2630 15 251 15 2644 19 3 253 15 188 15 2645 19 2 190 15 2646 15 22 15 2647 15 2648 19 4 25 15 2646 14 26 77 15 2649 19 4 25 15 2646 1 2651 12 19 2 51 15 2646 15 251 15 2652 19 3 253 15 188 15 2653 19 2 190 15 2654 15 22 15 2655 15 2656 19 4 25 15 2654 14 26 77 15 2657 19 4 25 15 2654 1 2658 12 19 2 51 15 2654 15 251 15 2659 19 3 253 15 188 15 2660 19 2 190 15 2661 15 22 15 2662 15 2663 19 4 25 15 2661 14 26 77 15 2664 19 4 25 15 2661 1 2669 12 19 2 51 15 2661 15 251 15 2670 19 3 253 15 2671 19 1 139 15 188 15 2672 19 2 190 15 2673 15 22 15 2674 15 2675 19 4 25 15 2673 14 26 77 15 2676 19 4 25 15 2673 1 2679 12 19 2 51 15 2673 15 251 15 2680 19 3 253 15 188 15 2681 19 2 190 15 2682 15 22 15 2683 15 2684 19 4 25 15 2682 14 26 77 15 2685 19 4 25 15 2682 1 2691 12 19 2 51 15 2682 15 251 15 2692 19 3 253 15 188 15 2693 19 2 190 15 2694 15 22 15 2695 15 2696 19 4 25 15 2694 14 26 77 15 2697 19 4 25 15 2694 1 2698 12 19 2 51 15 2694 15 251 15 2699 19 3 253 15 188 15 2700 19 2 190 15 2701 15 22 15 2702 15 2703 19 4 25 15 2701 14 26 77 15 2704 19 4 25 15 2701 1 2705 12 19 2 51 15 2701 15 251 15 2706 19 3 253 15 188 15 2707 19 2 190 15 2708 15 22 15 2709 15 2710 19 4 25 15 2708 14 26 77 15 2711 19 4 25 15 2708 1 2716 12 19 2 51 15 2708 15 251 15 2717 19 3 253 15 2637 15 22 15 2718 15 2719 19 4 25 15 2637 77 15 2720 15 2721 1 2722 12 19 5 89 15 2723 15 22 15 2724 15 2725 19 4 25 15 2723 77 15 2726 15 2727 1 2731 12 19 5 89 15 2524 15 2637 19 2 370 15 2732 19 1 139 15 188 15 2733 19 2 190 15 1621 15 22 15 2734 15 2735 19 4 25 15 1621 14 26 77 15 2736 19 4 25 15 1621 1 2738 12 19 2 51 15 1621 15 251 15 2739 19 3 253 15 188 15 2740 19 2 190 15 2741 15 22 15 2742 15 2743 19 4 25 15 2741 14 26 77 15 2744 19 4 25 15 2741 1 2750 12 19 2 51 15 2741 15 251 15 2751 19 3 253 15 188 15 2752 19 2 190 15 2753 15 22 15 2754 15 2755 19 4 25 15 2753 14 26 77 15 2756 19 4 25 15 2753 1 2757 12 19 2 51 15 2753 15 251 15 2758 19 3 253 15 188 15 2759 19 2 190 15 2760 15 22 15 2761 15 2762 19 4 25 15 2760 14 26 77 15 2763 19 4 25 15 2760 1 2764 12 19 2 51 15 2760 15 251 15 2765 19 3 253 15 188 15 2766 19 2 190 15 2767 15 22 15 2768 15 2769 19 4 25 15 2767 14 26 77 15 2770 19 4 25 15 2767 1 2775 12 19 2 51 15 2767 15 251 15 2776 19 3 253 15 2638 15 22 15 2777 15 2778 19 4 25 15 2638 77 15 2779 15 2780 1 2781 12 19 5 89 15 2782 15 22 15 2783 15 2784 19 4 25 15 2782 77 15 2785 15 2786 1 2790 12 19 5 89 15 2524 15 2638 19 2 370 15 2791 19 1 139 15 188 15 2792 19 2 190 15 2142 15 22 15 2793 15 2794 19 4 25 15 2142 14 26 77 15 2795 19 4 25 15 2142 1 2797 12 19 2 51 15 2142 15 251 15 2798 19 3 253 15 188 15 2799 19 2 190 15 2800 15 22 15 2801 15 2802 19 4 25 15 2800 14 26 77 15 2803 19 4 25 15 2800 1 2809 12 19 2 51 15 2800 15 251 15 2810 19 3 253 15 188 15 2811 19 2 190 15 2812 15 22 15 2813 15 2814 19 4 25 15 2812 14 26 77 15 2815 19 4 25 15 2812 1 2816 12 19 2 51 15 2812 15 251 15 2817 19 3 253 15 188 15 2818 19 2 190 15 2819 15 22 15 2820 15 2821 19 4 25 15 2819 14 26 77 15 2822 19 4 25 15 2819 1 2823 12 19 2 51 15 2819 15 251 15 2824 19 3 253 15 188 15 2825 19 2 190 15 2826 15 22 15 2827 15 2828 19 4 25 15 2826 14 26 77 15 2829 19 4 25 15 2826 1 2834 12 19 2 51 15 2826 15 251 15 2835 19 3 253 15 672 15 22 15 2836 15 2837 19 4 25 15 672 77 15 2838 15 2839 1 2840 12 19 5 89 15 2841 15 22 15 2842 15 2843 19 4 25 15 2841 77 15 2844 15 2845 1 2849 12 19 5 89 15 2524 15 672 19 2 370 15 2850 19 1 139 15 188 15 2851 19 2 190 15 2852 15 22 15 2853 15 2854 19 4 25 15 2852 14 26 77 15 2855 19 4 25 15 2852 1 2857 12 19 2 51 15 2852 15 251 15 2858 19 3 253 15 188 15 2859 19 2 190 15 2860 15 22 15 2861 15 2862 19 4 25 15 2860 14 26 77 15 2863 19 4 25 15 2860 1 2869 12 19 2 51 15 2860 15 251 15 2870 19 3 253 15 188 15 2871 19 2 190 15 2872 15 22 15 2873 15 2874 19 4 25 15 2872 14 26 77 15 2875 19 4 25 15 2872 1 2876 12 19 2 51 15 2872 15 251 15 2877 19 3 253 15 188 15 2878 19 2 190 15 2879 15 22 15 2880 15 2881 19 4 25 15 2879 14 26 77 15 2882 19 4 25 15 2879 1 2883 12 19 2 51 15 2879 15 251 15 2884 19 3 253 15 188 15 2885 19 2 190 15 2886 15 22 15 2887 15 2888 19 4 25 15 2886 14 26 77 15 2889 19 4 25 15 2886 1 2894 12 19 2 51 15 2886 15 251 15 2895 19 3 253 15 2639 15 22 15 2896 15 2897 19 4 25 15 2639 77 15 2898 15 2899 1 2900 12 19 5 89 15 2901 15 22 15 2902 15 2903 19 4 25 15 2901 77 15 2904 15 2905 1 2909 12 19 5 89 15 2524 15 2639 19 2 370 15 2910 19 1 139 15 188 15 2911 19 2 190 15 2912 15 22 15 2913 15 2914 19 4 25 15 2912 14 26 77 15 2915 19 4 25 15 2912 1 2938 12 19 2 51 15 2912 15 251 15 2939 19 3 253 15 2940 15 22 15 2941 15 2942 19 4 25 15 2940 14 26 77 15 2943 19 4 25 15 2940 1 2944 12 19 2 51 15 2945 19 1 139 15 839 15 22 15 2946 15 2947 19 4 25 15 839 77 15 2948 15 2949 1 2952 12 19 5 89 15 849 19 1 150 45 850 15 848 13 0 14 848 19 3 148 10 0 43 1 78 2953 77 75 3 78 2978 15 909 19 1 150 78 2998 1 2998 45 2999 1 853 45 3000 1 18 45 3001 13 0 13 2 13 1 33 3002 18 3 43 1 43 2 1 2998 45 3003 1 858 45 3004 1 3005 45 3006 13 0 13 2 13 1 33 3007 18 3 43 1 43 2 1 2998 45 3008 1 864 45 3009 1 3010 45 3011 13 0 13 2 13 1 33 3012 18 3 43 1 43 2 1 2998 45 3013 1 870 45 3014 75 45 3015 13 0 13 2 13 1 33 3016 18 3 43 1 43 2 1 2998 45 3017 1 930 45 3018 1 147 45 3019 13 0 13 2 13 1 33 3020 18 3 43 1 43 2 1 2998 45 3021 1 936 45 3022 1 14 45 3023 13 0 13 2 13 1 33 3024 18 3 43 1 43 2 1 2998 45 3025 1 941 45 3026 1 943 45 3027 13 0 13 2 13 1 33 3028 18 3 43 1 43 2 1 2998 45 3029 1 947 45 3030 8 1 45 3031 13 0 13 2 13 1 33 3032 18 3 43 1 43 2 1 2998 45 3033 1 952 45 3034 75 45 3035 13 0 13 2 13 1 33 3036 18 3 43 1 43 2 1 2998 45 3037 1 957 45 3038 75 45 3039 13 0 13 2 13 1 33 3040 18 3 43 1 43 2 1 2998 45 3041 1 962 45 3042 1 2550 45 3043 13 0 13 2 13 1 33 3044 18 3 43 1 43 2 1 2998 45 3045 1 967 45 3046 1 2612 45 3047 13 0 13 2 13 1 33 3048 18 3 43 1 43 2 1 2998 45 3049 1 972 45 3050 1 3051 45 3052 13 0 13 2 13 1 33 3053 18 3 43 1 43 2 1 2998 45 3054 1 978 45 3055 1 29 45 3056 13 0 13 2 13 1 33 3057 18 3 43 1 43 2 1 2998 45 3058 1 984 45 3059 75 45 3060 13 0 13 2 13 1 33 3061 18 3 43 1 43 2 1 2998 45 3062 1 989 45 3063 75 45 3064 13 0 13 2 13 1 33 3065 18 3 43 1 43 2 1 2998 45 3066 1 994 45 3067 75 45 3068 13 0 13 2 13 1 33 3069 18 3 43 1 43 2 1 2998 45 3070 1 999 45 3071 75 45 3072 13 0 13 2 13 1 33 3073 18 3 43 1 43 2 15 2978 1 2998 17 157 15 2978 75 17 159 77 75 3 78 2983 15 3076 19 1 152 78 3075 15 3075 19 1 150 78 3074 15 3078 14 217 15 47 14 3079 77 14 219 15 3080 19 7 221 78 3077 15 909 19 1 150 78 3081 1 3081 45 3086 1 853 45 3087 1 1392 45 3088 13 0 13 2 13 1 33 3089 18 3 43 1 43 2 1 3081 45 3090 1 858 45 3091 1 3092 45 3093 13 0 13 2 13 1 33 3094 18 3 43 1 43 2 1 3081 45 3095 1 864 45 3096 1 3097 45 3098 13 0 13 2 13 1 33 3099 18 3 43 1 43 2 1 3081 45 3100 1 870 45 3101 75 45 3102 13 0 13 2 13 1 33 3103 18 3 43 1 43 2 1 3081 45 3104 1 930 45 3105 1 932 45 3106 13 0 13 2 13 1 33 3107 18 3 43 1 43 2 1 3081 45 3108 1 936 45 3109 1 1392 45 3110 13 0 13 2 13 1 33 3111 18 3 43 1 43 2 1 3081 45 3112 1 941 45 3113 1 943 45 3114 13 0 13 2 13 1 33 3115 18 3 43 1 43 2 1 3081 45 3116 1 947 45 3117 8 5 45 3118 13 0 13 2 13 1 33 3119 18 3 43 1 43 2 1 3081 45 3120 1 952 45 3121 75 45 3122 13 0 13 2 13 1 33 3123 18 3 43 1 43 2 1 3081 45 3124 1 957 45 3125 8 3 45 3126 13 0 13 2 13 1 33 3127 18 3 43 1 43 2 1 3081 45 3128 1 962 45 3129 1 2545 45 3130 13 0 13 2 13 1 33 3131 18 3 43 1 43 2 1 3081 45 3132 1 967 45 3133 1 2639 45 3134 13 0 13 2 13 1 33 3135 18 3 43 1 43 2 1 3081 45 3136 1 972 45 3137 1 3138 45 3139 13 0 13 2 13 1 33 3140 18 3 43 1 43 2 1 3081 45 3141 1 978 45 3142 1 980 45 3143 13 0 13 2 13 1 33 3144 18 3 43 1 43 2 1 3081 45 3145 1 984 45 3146 75 45 3147 13 0 13 2 13 1 33 3148 18 3 43 1 43 2 1 3081 45 3149 1 989 45 3150 75 45 3151 13 0 13 2 13 1 33 3152 18 3 43 1 43 2 1 3081 45 3153 1 994 45 3154 75 45 3155 13 0 13 2 13 1 33 3156 18 3 43 1 43 2 1 3081 45 3157 1 999 45 3158 75 45 3159 13 0 13 2 13 1 33 3160 18 3 43 1 43 2 15 909 19 1 150 78 3083 1 3083 45 3161 1 853 45 3162 1 2142 45 3163 13 0 13 2 13 1 33 3164 18 3 43 1 43 2 1 3083 45 3165 1 858 45 3166 1 3167 45 3168 13 0 13 2 13 1 33 3169 18 3 43 1 43 2 1 3083 45 3170 1 864 45 3171 1 3172 45 3173 13 0 13 2 13 1 33 3174 18 3 43 1 43 2 1 3083 45 3175 1 870 45 3176 75 45 3177 13 0 13 2 13 1 33 3178 18 3 43 1 43 2 1 3083 45 3179 1 930 45 3180 1 848 45 3181 13 0 13 2 13 1 33 3182 18 3 43 1 43 2 1 3083 45 3183 1 936 45 3184 1 2142 45 3185 13 0 13 2 13 1 33 3186 18 3 43 1 43 2 1 3083 45 3187 1 941 45 3188 1 943 45 3189 13 0 13 2 13 1 33 3190 18 3 43 1 43 2 1 3083 45 3191 1 947 45 3192 8 4 45 3193 13 0 13 2 13 1 33 3194 18 3 43 1 43 2 1 3083 45 3195 1 952 45 3196 75 45 3197 13 0 13 2 13 1 33 3198 18 3 43 1 43 2 1 3083 45 3199 1 957 45 3200 8 2 45 3201 13 0 13 2 13 1 33 3202 18 3 43 1 43 2 1 3083 45 3203 1 962 45 3204 1 2545 45 3205 13 0 13 2 13 1 33 3206 18 3 43 1 43 2 1 3083 45 3207 1 967 45 3208 1 672 45 3209 13 0 13 2 13 1 33 3210 18 3 43 1 43 2 1 3083 45 3211 1 972 45 3212 1 3213 45 3214 13 0 13 2 13 1 33 3215 18 3 43 1 43 2 1 3083 45 3216 1 978 45 3217 1 980 45 3218 13 0 13 2 13 1 33 3219 18 3 43 1 43 2 1 3083 45 3220 1 984 45 3221 75 45 3222 13 0 13 2 13 1 33 3223 18 3 43 1 43 2 1 3083 45 3224 1 989 45 3225 75 45 3226 13 0 13 2 13 1 33 3227 18 3 43 1 43 2 1 3083 45 3228 1 994 45 3229 75 45 3230 13 0 13 2 13 1 33 3231 18 3 43 1 43 2 1 3083 45 3232 1 999 45 3233 75 45 3234 13 0 13 2 13 1 33 3235 18 3 43 1 43 2 15 909 19 1 150 78 3084 1 3084 45 3236 1 853 45 3237 1 1621 45 3238 13 0 13 2 13 1 33 3239 18 3 43 1 43 2 1 3084 45 3240 1 858 45 3241 1 3242 45 3243 13 0 13 2 13 1 33 3244 18 3 43 1 43 2 1 3084 45 3245 1 864 45 3246 1 3247 45 3248 13 0 13 2 13 1 33 3249 18 3 43 1 43 2 1 3084 45 3250 1 870 45 3251 75 45 3252 13 0 13 2 13 1 33 3253 18 3 43 1 43 2 1 3084 45 3254 1 930 45 3255 1 848 45 3256 13 0 13 2 13 1 33 3257 18 3 43 1 43 2 1 3084 45 3258 1 936 45 3259 1 1621 45 3260 13 0 13 2 13 1 33 3261 18 3 43 1 43 2 1 3084 45 3262 1 941 45 3263 1 943 45 3264 13 0 13 2 13 1 33 3265 18 3 43 1 43 2 1 3084 45 3266 1 947 45 3267 8 3 45 3268 13 0 13 2 13 1 33 3269 18 3 43 1 43 2 1 3084 45 3270 1 952 45 3271 75 45 3272 13 0 13 2 13 1 33 3273 18 3 43 1 43 2 1 3084 45 3274 1 957 45 3275 8 1 45 3276 13 0 13 2 13 1 33 3277 18 3 43 1 43 2 1 3084 45 3278 1 962 45 3279 1 2545 45 3280 13 0 13 2 13 1 33 3281 18 3 43 1 43 2 1 3084 45 3282 1 967 45 3283 1 2638 45 3284 13 0 13 2 13 1 33 3285 18 3 43 1 43 2 1 3084 45 3286 1 972 45 3287 1 3288 45 3289 13 0 13 2 13 1 33 3290 18 3 43 1 43 2 1 3084 45 3291 1 978 45 3292 1 980 45 3293 13 0 13 2 13 1 33 3294 18 3 43 1 43 2 1 3084 45 3295 1 984 45 3296 75 45 3297 13 0 13 2 13 1 33 3298 18 3 43 1 43 2 1 3084 45 3299 1 989 45 3300 75 45 3301 13 0 13 2 13 1 33 3302 18 3 43 1 43 2 1 3084 45 3303 1 994 45 3304 75 45 3305 13 0 13 2 13 1 33 3306 18 3 43 1 43 2 1 3084 45 3307 1 999 45 3308 75 45 3309 13 0 13 2 13 1 33 3310 18 3 43 1 43 2 15 909 19 1 150 78 3085 1 3085 45 3311 1 853 45 3312 1 191 45 3313 13 0 13 2 13 1 33 3314 18 3 43 1 43 2 1 3085 45 3315 1 858 45 3316 1 3317 45 3318 13 0 13 2 13 1 33 3319 18 3 43 1 43 2 1 3085 45 3320 1 864 45 3321 1 3322 45 3323 13 0 13 2 13 1 33 3324 18 3 43 1 43 2 1 3085 45 3325 1 870 45 3326 75 45 3327 13 0 13 2 13 1 33 3328 18 3 43 1 43 2 1 3085 45 3329 1 930 45 3330 1 848 45 3331 13 0 13 2 13 1 33 3332 18 3 43 1 43 2 1 3085 45 3333 1 936 45 3334 1 191 45 3335 13 0 13 2 13 1 33 3336 18 3 43 1 43 2 1 3085 45 3337 1 941 45 3338 1 943 45 3339 13 0 13 2 13 1 33 3340 18 3 43 1 43 2 1 3085 45 3341 1 947 45 3342 8 2 45 3343 13 0 13 2 13 1 33 3344 18 3 43 1 43 2 1 3085 45 3345 1 952 45 3346 75 45 3347 13 0 13 2 13 1 33 3348 18 3 43 1 43 2 1 3085 45 3349 1 957 45 3350 8 0 45 3351 13 0 13 2 13 1 33 3352 18 3 43 1 43 2 1 3085 45 3353 1 962 45 3354 1 2545 45 3355 13 0 13 2 13 1 33 3356 18 3 43 1 43 2 1 3085 45 3357 1 967 45 3358 1 2637 45 3359 13 0 13 2 13 1 33 3360 18 3 43 1 43 2 1 3085 45 3361 1 972 45 3362 1 3363 45 3364 13 0 13 2 13 1 33 3365 18 3 43 1 43 2 1 3085 45 3366 1 978 45 3367 1 980 45 3368 13 0 13 2 13 1 33 3369 18 3 43 1 43 2 1 3085 45 3370 1 984 45 3371 75 45 3372 13 0 13 2 13 1 33 3373 18 3 43 1 43 2 1 3085 45 3374 1 989 45 3375 75 45 3376 13 0 13 2 13 1 33 3377 18 3 43 1 43 2 1 3085 45 3378 1 994 45 3379 75 45 3380 13 0 13 2 13 1 33 3381 18 3 43 1 43 2 1 3085 45 3382 1 999 45 3383 75 45 3384 13 0 13 2 13 1 33 3385 18 3 43 1 43 2 15 3077 9 3 15 3081 19 3 3082 15 3077 9 2 15 3083 19 3 3082 15 3077 9 1 15 3084 19 3 3082 15 3077 9 0 15 3085 19 3 3082 15 3074 15 3076 9 0 77 19 4 153 15 3074 15 3076 9 1 15 3077 19 4 153 15 3074 15 3076 9 2 15 2917 19 4 153 15 3074 15 3076 9 3 15 2545 19 4 153 15 2983 1 3074 17 157 15 2983 75 17 159 1 2953 45 2954 1 853 45 2955 1 2524 45 2956 13 0 13 2 13 1 33 2957 18 3 43 1 43 2 1 2953 45 2958 1 858 45 2959 1 2960 45 2961 13 0 13 2 13 1 33 2962 18 3 43 1 43 2 1 2953 45 2963 1 864 45 2964 1 2965 45 2966 13 0 13 2 13 1 33 2967 18 3 43 1 43 2 1 2953 45 2968 1 870 45 2969 75 45 2970 13 0 13 2 13 1 33 2971 18 3 43 1 43 2 1 2953 45 2972 1 875 45 2973 75 45 2974 13 0 13 2 13 1 33 2975 18 3 43 1 43 2 1 2953 45 2976 1 880 45 2977 1 2978 45 2979 13 0 13 2 13 1 33 2980 18 3 43 1 43 2 1 2953 45 2981 1 886 45 2982 1 2983 45 2984 13 0 13 2 13 1 33 2985 18 3 43 1 43 2 15 2953 1 890 17 891 1 2953 45 2986 1 893 45 2987 75 45 2988 13 0 13 2 13 1 33 2989 18 3 43 1 43 2 1 2953 45 2990 1 898 45 2991 75 45 2992 13 0 13 2 13 1 33 2993 18 3 43 1 43 2 1 2953 45 2994 1 903 45 2995 1 848 45 2996 13 0 13 2 13 1 33 2997 18 3 43 1 43 2 15 2524 15 2953 14 848 19 3 148 29) #1# #5# 730) #Y(si::bytecodes nil nil (15 3386 19 1 139 29) #1# #5# 3747))
