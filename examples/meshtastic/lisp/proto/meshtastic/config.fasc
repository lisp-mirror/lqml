(#Y(si::bytecodes nil nil (1 0 16 1 29) #1=#A(t (12489) ("COMMON-LISP-USER" si::select-package "CL-PROTOBUFS.MESHTASTIC" find-package "CL-PROTOBUFS.MESHTASTIC" ((#:pi . #:cl-protobufs.implementation)) si::dodefpackage "CL-PROTOBUFS.MESHTASTIC" cl-protobufs.meshtastic::config :syntax :proto3 :package "meshtastic" cl-protobufs.implementation::define-schema cl-protobufs.meshtastic::%%%%config.device-config.role (deftype cl-protobufs.meshtastic::%%%%config.device-config.role nil (quote #2=(or (member . #3=(:client :client-mute :router :router-client :repeater :tracker :sensor)) #4=(satisfies cl-protobufs.implementation::keyword-contains-%undefined-int-p)))) #2# si::do-deftype cl-protobufs.meshtastic::config.device-config.role (deftype cl-protobufs.meshtastic::config.device-config.role nil (quote #5=(member . #3#))) #5# cl-protobufs.meshtastic::config.device-config.role-keyword-to-int ext::location (defun cl-protobufs.meshtastic::config.device-config.role-keyword-to-int) (#6=#P"/home/polos/lqml/examples/meshtastic/lisp/proto/meshtastic/config.lisp" . 718) ext::annotate :lambda-list (cl-protobufs.implementation::enum) cl-protobufs.implementation::enum :client :client-mute :router :router-client :repeater :tracker :sensor symbol-name cl-protobufs.implementation::+%undefined--length+ subseq :junk-allowed t parse-integer cl-protobufs.implementation::int #Y(cl-protobufs.meshtastic::config.device-config.role-keyword-to-int nil nil (24 45 28 26 10 0 42 29 5 8 0 38 61 42 30 5 8 1 38 54 42 31 5 8 2 38 47 42 32 5 8 3 38 40 42 33 5 8 4 38 33 42 34 5 8 5 38 26 42 35 5 8 6 38 19 10 0 16 36 12 14 37 19 2 38 12 14 39 14 40 19 3 41 45 42 10 0 73 43 1 29) #1# #6# 718) si::fset cl-protobufs.meshtastic::config.device-config.role-int-to-keyword (defun cl-protobufs.meshtastic::config.device-config.role-int-to-keyword) (#6# . 718) (cl-protobufs.implementation::numeral) cl-protobufs.implementation::numeral 0 1 2 3 4 5 6 cl-protobufs.implementation::key #Y(cl-protobufs.meshtastic::config.device-config.role-int-to-keyword nil nil (24 45 49 26 10 0 42 50 5 11 29 38 44 42 51 5 11 30 38 37 42 52 5 11 31 38 30 42 53 5 11 32 38 23 42 54 5 11 33 38 16 42 55 5 11 34 38 9 42 56 5 11 35 38 2 75 45 57 10 0 73 43 1 29) #1# #6# 718) #:g29551 cl-protobufs::enum-int-to-keyword #:g29552 #:g29553 si::putprop #:g29554 cl-protobufs::enum-keyword-to-int #:g29555 #:g29556 (defmethod cl-protobufs::enum-keyword-to-int (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.device-config.role))) keyword) (#6# . 718) ((eql cl-protobufs.meshtastic::config.device-config.role) t) (cl-protobufs.implementation::e keyword) cl-protobufs.implementation::e keyword #Y(cl-protobufs::enum-keyword-to-int nil nil (24 45 72 24 45 73 26 13 0 19 1 21 29) #1# #6# 718) clos::install-method (defmethod cl-protobufs::enum-int-to-keyword (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.device-config.role))) cl-protobufs.implementation::numeral) (#6# . 718) ((eql cl-protobufs.meshtastic::config.device-config.role) t) (cl-protobufs.implementation::e cl-protobufs.implementation::numeral) #Y(cl-protobufs::enum-int-to-keyword nil nil (24 45 72 24 45 49 26 13 0 19 1 45 29) #1# #6# 718) cl-protobufs.meshtastic::+config.device-config.client+ si::*make-constant (defconstant cl-protobufs.meshtastic::+config.device-config.client+) (#6# . 718) cl-protobufs.meshtastic::+config.device-config.client-mute+ (defconstant cl-protobufs.meshtastic::+config.device-config.client-mute+) (#6# . 718) cl-protobufs.meshtastic::+config.device-config.router+ (defconstant cl-protobufs.meshtastic::+config.device-config.router+) (#6# . 718) cl-protobufs.meshtastic::+config.device-config.router-client+ (defconstant cl-protobufs.meshtastic::+config.device-config.router-client+) (#6# . 718) cl-protobufs.meshtastic::+config.device-config.repeater+ (defconstant cl-protobufs.meshtastic::+config.device-config.repeater+) (#6# . 718) cl-protobufs.meshtastic::+config.device-config.tracker+ (defconstant cl-protobufs.meshtastic::+config.device-config.tracker+) (#6# . 718) cl-protobufs.meshtastic::+config.device-config.sensor+ (defconstant cl-protobufs.meshtastic::+config.device-config.sensor+) (#6# . 718) (cl-protobufs.meshtastic::+config.device-config.client+ cl-protobufs.meshtastic::+config.device-config.client-mute+ cl-protobufs.meshtastic::+config.device-config.router+ cl-protobufs.meshtastic::+config.device-config.router-client+ cl-protobufs.meshtastic::+config.device-config.repeater+ cl-protobufs.meshtastic::+config.device-config.tracker+ cl-protobufs.meshtastic::+config.device-config.sensor+) export cl-protobufs.implementation::enum-default-value (defmethod cl-protobufs.implementation::enum-default-value (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.device-config.role)))) (#6# . 718) ((eql cl-protobufs.meshtastic::config.device-config.role)) (cl-protobufs.implementation::e) #Y(cl-protobufs.implementation::enum-default-value nil nil (24 45 72 26 11 29 73 29) #1# #6# 718) 0 :enum cl-protobufs.implementation::record-protobuf-object 0 allocate-instance cl-protobufs::enum-descriptor find-class si::structure-set "Role" 0 0 rplaca 0 rplacd 0 cl-protobufs::enum-value-descriptor 0 0 0 0 0 0 0 0 0 0 0 (cl-protobufs.meshtastic::%%%%config.device-config.role) cl-protobufs.meshtastic::%%%%config.device-config.rebroadcast-mode (deftype cl-protobufs.meshtastic::%%%%config.device-config.rebroadcast-mode nil (quote #7=(or (member . #8=(:all :all-skip-decoding :local-only)) #4#))) #7# cl-protobufs.meshtastic::config.device-config.rebroadcast-mode (deftype cl-protobufs.meshtastic::config.device-config.rebroadcast-mode nil (quote #9=(member . #8#))) #9# cl-protobufs.meshtastic::config.device-config.rebroadcast-mode-keyword-to-int (defun cl-protobufs.meshtastic::config.device-config.rebroadcast-mode-keyword-to-int) (#6# . 718) :all :all-skip-decoding :local-only #Y(cl-protobufs.meshtastic::config.device-config.rebroadcast-mode-keyword-to-int nil nil (24 45 28 26 10 0 42 148 5 8 0 38 33 42 149 5 8 1 38 26 42 150 5 8 2 38 19 10 0 16 36 12 14 37 19 2 38 12 14 39 14 40 19 3 41 45 42 10 0 73 43 1 29) #1# #6# 718) cl-protobufs.meshtastic::config.device-config.rebroadcast-mode-int-to-keyword (defun cl-protobufs.meshtastic::config.device-config.rebroadcast-mode-int-to-keyword) (#6# . 718) #Y(cl-protobufs.meshtastic::config.device-config.rebroadcast-mode-int-to-keyword nil nil (24 45 49 26 10 0 42 50 5 11 148 38 16 42 51 5 11 149 38 9 42 52 5 11 150 38 2 75 45 57 10 0 73 43 1 29) #1# #6# 718) #:g29561 #:g29562 #:g29563 #:g29564 #:g29565 #:g29566 (defmethod cl-protobufs::enum-keyword-to-int (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.device-config.rebroadcast-mode))) keyword) (#6# . 718) ((eql cl-protobufs.meshtastic::config.device-config.rebroadcast-mode) t) (cl-protobufs.implementation::e keyword) #Y(cl-protobufs::enum-keyword-to-int nil nil (24 45 72 24 45 73 26 13 0 19 1 145 29) #1# #6# 718) (defmethod cl-protobufs::enum-int-to-keyword (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.device-config.rebroadcast-mode))) cl-protobufs.implementation::numeral) (#6# . 718) ((eql cl-protobufs.meshtastic::config.device-config.rebroadcast-mode) t) (cl-protobufs.implementation::e cl-protobufs.implementation::numeral) #Y(cl-protobufs::enum-int-to-keyword nil nil (24 45 72 24 45 49 26 13 0 19 1 152 29) #1# #6# 718) cl-protobufs.meshtastic::+config.device-config.all+ (defconstant cl-protobufs.meshtastic::+config.device-config.all+) (#6# . 718) cl-protobufs.meshtastic::+config.device-config.all-skip-decoding+ (defconstant cl-protobufs.meshtastic::+config.device-config.all-skip-decoding+) (#6# . 718) cl-protobufs.meshtastic::+config.device-config.local-only+ (defconstant cl-protobufs.meshtastic::+config.device-config.local-only+) (#6# . 718) (cl-protobufs.meshtastic::+config.device-config.all+ cl-protobufs.meshtastic::+config.device-config.all-skip-decoding+ cl-protobufs.meshtastic::+config.device-config.local-only+) (defmethod cl-protobufs.implementation::enum-default-value (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.device-config.rebroadcast-mode)))) (#6# . 718) ((eql cl-protobufs.meshtastic::config.device-config.rebroadcast-mode)) (cl-protobufs.implementation::e) #Y(cl-protobufs.implementation::enum-default-value nil nil (24 45 72 26 11 148 73 29) #1# #6# 718) 0 "RebroadcastMode" 0 0 0 0 0 0 (cl-protobufs.meshtastic::%%%%config.device-config.rebroadcast-mode) proclaim ((inline cl-protobufs.meshtastic::%make-config.device-config)) mapc cl-protobufs.meshtastic::config.device-config "CONFIG.DEVICE-CONFIG-" ((cl-protobufs.meshtastic::%role :client :type keyword) (cl-protobufs.meshtastic::%button-gpio 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%buzzer-gpio 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%rebroadcast-mode :all :type keyword) (cl-protobufs.meshtastic::%node-info-broadcast-secs 0 :type cl-protobufs::uint32) (cl-protobufs.implementation::%%bytes nil :type #10=(or null (simple-array (unsigned-byte 8)))) (cl-protobufs.implementation::%%bool-values #11=(make-array 4 :element-type #12=(quote bit) :initial-contents #13=#*0000) :type #14=(bit-vector 4)) (cl-protobufs.implementation::%%is-set #15=(make-array 0 . #16=(:element-type (quote bit) :initial-element 0)) :type #17=(bit-vector 0))) (#18=(cl-protobufs.implementation::%%skipped-bytes nil (or null cl-protobufs::byte-vector) nil 0 cl-protobufs.implementation::message-%%skipped-bytes) (cl-protobufs.meshtastic::%role :client keyword nil 1 nil) (cl-protobufs.meshtastic::%button-gpio 0 cl-protobufs::uint32 nil 2 nil) (cl-protobufs.meshtastic::%buzzer-gpio 0 cl-protobufs::uint32 nil 3 nil) (cl-protobufs.meshtastic::%rebroadcast-mode :all keyword nil 4 nil) (cl-protobufs.meshtastic::%node-info-broadcast-secs 0 cl-protobufs::uint32 nil 5 nil) (cl-protobufs.implementation::%%bytes nil #10# nil 6 nil) (cl-protobufs.implementation::%%bool-values #11# #14# nil 7 nil) (cl-protobufs.implementation::%%is-set #15# #17# nil 8 nil)) cl-protobufs.meshtastic::copy-config.device-config cl-protobufs::message (cl-protobufs.meshtastic::%make-config.device-config) si::define-structure #19=(cl-protobufs.meshtastic::config.device-config (:constructor cl-protobufs.meshtastic::%make-config.device-config) . #20=((:include cl-protobufs::message) (:predicate nil))) (defstruct #19#) (#6# . 718) cl-protobufs.meshtastic::%make-config.device-config (defun cl-protobufs.meshtastic::%make-config.device-config) (#6# . 718) #21=(&key #22=#:%%skipped-bytes (#23=#:%role :client) (#24=#:%button-gpio 0) (#25=#:%buzzer-gpio 0) (#26=#:%rebroadcast-mode :all) (#27=#:%node-info-broadcast-secs 0) #28=#:%%bytes (#29=#:%%bool-values (make-array 4 :element-type (quote bit) :initial-contents #13#)) (#30=#:%%is-set (make-array 0 :element-type (quote bit) :initial-element 0))) (nil :%%is-set :%%bool-values :%%bytes :%node-info-broadcast-secs :%rebroadcast-mode :%buzzer-gpio :%button-gpio :%role :%%skipped-bytes) #22# #23# #24# #25# #26# #27# #28# :element-type bit :initial-contents #13# make-array #29# :initial-element #30# #31=(bit-vector 0) typep #32=(bit-vector 0) cl-protobufs.implementation::%%is-set si::structure-type-error #33=(bit-vector 4) #34=(bit-vector 4) cl-protobufs.implementation::%%bool-values #35=(or null (simple-array (unsigned-byte 8))) #36=(or null (simple-array (unsigned-byte 8))) cl-protobufs.implementation::%%bytes cl-protobufs::uint32 cl-protobufs.meshtastic::%node-info-broadcast-secs cl-protobufs.meshtastic::%rebroadcast-mode cl-protobufs.meshtastic::%buzzer-gpio cl-protobufs.meshtastic::%button-gpio cl-protobufs.meshtastic::%role #37=(or null cl-protobufs::byte-vector) #38=(or null cl-protobufs::byte-vector) cl-protobufs.implementation::%%skipped-bytes 0 si::make-structure #Y(cl-protobufs.meshtastic::%make-config.device-config nil nil (28 214 22 40 2 77 46 215 22 40 3 14 29 46 216 22 40 3 9 0 46 217 22 40 3 9 0 46 218 22 40 3 14 148 46 219 22 40 3 9 0 46 220 22 40 2 77 46 221 22 40 15 9 4 14 222 15 223 14 224 15 225 19 5 226 12 46 227 22 40 15 9 0 14 222 15 223 14 228 9 0 19 5 226 12 46 229 13 0 15 230 19 2 231 76 39 12 13 0 15 232 15 199 15 233 19 4 234 13 1 15 235 19 2 231 76 39 12 13 1 15 236 15 199 15 237 19 4 234 13 2 15 238 19 2 231 76 39 12 13 2 15 239 15 199 15 240 19 4 234 13 3 15 241 19 2 231 76 39 12 13 3 15 241 15 199 15 242 19 4 234 13 4 15 73 19 2 231 76 39 12 13 4 15 73 15 199 15 243 19 4 234 13 5 15 241 19 2 231 76 39 12 13 5 15 241 15 199 15 244 19 4 234 13 6 15 241 19 2 231 76 39 12 13 6 15 241 15 199 15 245 19 4 234 13 7 15 73 19 2 231 76 39 12 13 7 15 73 15 199 15 246 19 4 234 13 8 15 247 19 2 231 76 39 12 13 8 15 248 15 199 15 249 19 4 234 15 250 13 8 13 7 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 10 251 29) #1# #6# 718) inline (function (ext::lambda-block cl-protobufs.meshtastic::%make-config.device-config #21# #39=(declare (si::c-global)) (unless (typep #30# (quote #31#)) (si::structure-type-error #30# (quote #32#) (quote cl-protobufs.meshtastic::config.device-config) (quote cl-protobufs.implementation::%%is-set))) (unless (typep #29# (quote #33#)) (si::structure-type-error #29# (quote #34#) (quote cl-protobufs.meshtastic::config.device-config) (quote cl-protobufs.implementation::%%bool-values))) (unless (typep #28# (quote #35#)) (si::structure-type-error #28# (quote #36#) (quote cl-protobufs.meshtastic::config.device-config) (quote cl-protobufs.implementation::%%bytes))) (unless (typep #27# (quote cl-protobufs::uint32)) (si::structure-type-error #27# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.device-config) (quote cl-protobufs.meshtastic::%node-info-broadcast-secs))) (unless (typep #26# (quote keyword)) (si::structure-type-error #26# (quote keyword) (quote cl-protobufs.meshtastic::config.device-config) (quote cl-protobufs.meshtastic::%rebroadcast-mode))) (unless (typep #25# (quote cl-protobufs::uint32)) (si::structure-type-error #25# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.device-config) (quote cl-protobufs.meshtastic::%buzzer-gpio))) (unless (typep #24# (quote cl-protobufs::uint32)) (si::structure-type-error #24# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.device-config) (quote cl-protobufs.meshtastic::%button-gpio))) (unless (typep #23# (quote keyword)) (si::structure-type-error #23# (quote keyword) (quote cl-protobufs.meshtastic::config.device-config) (quote cl-protobufs.meshtastic::%role))) (unless (typep #22# (quote #37#)) (si::structure-type-error #22# (quote #38#) (quote cl-protobufs.meshtastic::config.device-config) (quote cl-protobufs.implementation::%%skipped-bytes))) (si::make-structure (load-time-value (find-class (quote cl-protobufs.meshtastic::config.device-config))) #22# #23# #24# #25# #26# #27# #28# #29# #30#))) si::put-sysprop cl-protobufs.meshtastic::config.device-config-%%is-set symbol-package package ext::package-locked-p si::*ignore-package-locks* package-error "Ignore lock and proceed." "Attempt to define CAS accessor ~S in locked package." (cl-protobufs.meshtastic::config.device-config-%%is-set) si::signal-simple-error mp::cas-expander #:g29576 si::x gensym si::new si::old mp::compare-and-swap-structure quote si::structure-ref #Y(nil nil nil (24 45 267 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 199 6 2 12 9 8 13 0 10 1 6 6 12 15 274 13 2 15 273 1 199 6 2 12 8 8 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.device-config-%%bool-values (cl-protobufs.meshtastic::config.device-config-%%bool-values) #:g29577 #Y(nil nil nil (24 45 278 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 199 6 2 12 9 7 13 0 10 1 6 6 12 15 274 13 2 15 273 1 199 6 2 12 8 7 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.device-config-%%bytes (cl-protobufs.meshtastic::config.device-config-%%bytes) #:g29578 #Y(nil nil nil (24 45 282 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 199 6 2 12 9 6 13 0 10 1 6 6 12 15 274 13 2 15 273 1 199 6 2 12 8 6 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.device-config-%node-info-broadcast-secs (cl-protobufs.meshtastic::config.device-config-%node-info-broadcast-secs) #:g29579 #Y(nil nil nil (24 45 286 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 199 6 2 12 9 5 13 0 10 1 6 6 12 15 274 13 2 15 273 1 199 6 2 12 8 5 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.device-config-%rebroadcast-mode (cl-protobufs.meshtastic::config.device-config-%rebroadcast-mode) #:g29580 #Y(nil nil nil (24 45 290 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 199 6 2 12 9 4 13 0 10 1 6 6 12 15 274 13 2 15 273 1 199 6 2 12 8 4 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.device-config-%buzzer-gpio (cl-protobufs.meshtastic::config.device-config-%buzzer-gpio) #:g29581 #Y(nil nil nil (24 45 294 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 199 6 2 12 9 3 13 0 10 1 6 6 12 15 274 13 2 15 273 1 199 6 2 12 8 3 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.device-config-%button-gpio (cl-protobufs.meshtastic::config.device-config-%button-gpio) #:g29582 #Y(nil nil nil (24 45 298 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 199 6 2 12 9 2 13 0 10 1 6 6 12 15 274 13 2 15 273 1 199 6 2 12 8 2 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.device-config-%role (cl-protobufs.meshtastic::config.device-config-%role) #:g29583 #Y(nil nil nil (24 45 302 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 199 6 2 12 9 1 13 0 10 1 6 6 12 15 274 13 2 15 273 1 199 6 2 12 8 1 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.device-config-%%skipped-bytes (cl-protobufs.meshtastic::config.device-config-%%skipped-bytes) #:g29584 #Y(nil nil nil (24 45 306 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 199 6 2 12 9 0 13 0 10 1 6 6 12 15 274 13 2 15 273 1 199 6 2 12 8 0 6 4 12 72 6 43 2 29) #1# #6# 718) ((inline cl-protobufs.meshtastic::config.device-config.role)) (defun cl-protobufs.meshtastic::config.device-config.role) (#6# . 718) #40=(#41=#:obj29231) #41# #Y(cl-protobufs.meshtastic::config.device-config.role nil nil (24 45 312 26 13 0 19 1 300 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.role #40# #39# (the cl-protobufs.meshtastic::%%%%config.device-config.role (cl-protobufs.meshtastic::config.device-config-%role #41#)))) ((inline #42=(setf cl-protobufs.meshtastic::config.device-config.role))) #42# (defun #42#) (#6# . 718) #43=(#44=#:new-value29233 #45=#:obj29232) #44# #45# #:g29587 #:g29588 #Y(#42# nil nil (24 45 320 24 45 321 26 10 0 45 322 10 2 45 323 13 1 15 199 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #42# #43# #39# (declare (type cl-protobufs.meshtastic::%%%%config.device-config.role #44#)) nil (setf (cl-protobufs.meshtastic::config.device-config-%role #45#) #44#))) ((inline cl-protobufs.meshtastic::config.device-config.%%has-role)) cl-protobufs.meshtastic::config.device-config.%%has-role (defun cl-protobufs.meshtastic::config.device-config.%%has-role) (#6# . 718) #46=(#45#) #47=#:cur-value29234 eq #Y(cl-protobufs.meshtastic::config.device-config.%%has-role nil nil (24 45 321 26 13 0 19 1 300 45 331 13 0 11 29 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.%%has-role #46# #39# (let ((#47# (cl-protobufs.meshtastic::config.device-config-%role #45#))) (not (eq #47# :client))))) ((inline cl-protobufs.meshtastic::config.device-config.clear-role)) cl-protobufs.meshtastic::config.device-config.clear-role (defun cl-protobufs.meshtastic::config.device-config.clear-role) (#6# . 718) #48=(#45#) #:g29591 #:g29592 #Y(cl-protobufs.meshtastic::config.device-config.clear-role nil nil (24 45 321 26 10 0 45 340 11 29 45 341 13 1 15 199 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.clear-role #48# #39# nil (setf (cl-protobufs.meshtastic::config.device-config-%role #45#) :client))) cl-protobufs.meshtastic::role (defmethod cl-protobufs.meshtastic::role (#45# cl-protobufs.meshtastic::config.device-config)) (#6# . 718) (cl-protobufs.meshtastic::config.device-config) (#45#) #Y(cl-protobufs.meshtastic::role nil nil (24 45 321 26 13 0 19 1 18 29) #1# #6# 718) #49=(setf cl-protobufs.meshtastic::role) (defmethod #49# #44# (#45# cl-protobufs.meshtastic::config.device-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.device-config) (#44# #45#) #:g29599 #:g29600 (setf cl-protobufs.meshtastic::config.device-config.role) #Y(#49# nil nil (24 45 320 24 45 321 26 10 0 45 355 10 2 45 356 13 0 13 1 33 357 18 2 43 1 43 1 29) #1# #6# 718) cl-protobufs.implementation::set-field-accessor-functions (cl-protobufs.meshtastic::config.device-config.clear-role) (cl-protobufs.meshtastic::config.device-config.role) ((inline cl-protobufs.meshtastic::config.device-config.serial-enabled)) cl-protobufs.meshtastic::config.device-config.serial-enabled (defun cl-protobufs.meshtastic::config.device-config.serial-enabled) (#6# . 718) #50=(#51=#:obj29235) #51# plusp #Y(cl-protobufs.meshtastic::config.device-config.serial-enabled nil nil (24 45 367 26 13 0 19 1 276 12 9 0 19 2 223 16 368 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.serial-enabled #50# #39# (the boolean (plusp (bit (cl-protobufs.meshtastic::config.device-config-%%bool-values #51#) 0))))) ((inline #52=(setf cl-protobufs.meshtastic::config.device-config.serial-enabled))) #52# (defun #52#) (#6# . 718) #53=(#54=#:new-value29237 #55=#:obj29236) #54# #55# si::aset #Y(#52# nil nil (24 45 376 24 45 377 26 13 0 19 1 276 12 9 0 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 378 29) #1# #6# 718) (function (ext::lambda-block #52# #53# #39# (declare (type boolean #54#)) nil (setf (bit (cl-protobufs.meshtastic::config.device-config-%%bool-values #55#) 0) (if #54# . #56=(1 0))))) ((inline cl-protobufs.meshtastic::config.device-config.%%has-serial-enabled)) cl-protobufs.meshtastic::config.device-config.%%has-serial-enabled (defun cl-protobufs.meshtastic::config.device-config.%%has-serial-enabled) (#6# . 718) #57=(#55#) #58=#:cur-value29238 #Y(cl-protobufs.meshtastic::config.device-config.%%has-serial-enabled nil nil (24 45 377 26 13 0 19 1 276 12 9 0 19 2 223 16 368 45 386 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.%%has-serial-enabled #57# #39# (let ((#58# (plusp (bit (cl-protobufs.meshtastic::config.device-config-%%bool-values #55#) 0)))) (not (eq #58# nil))))) ((inline cl-protobufs.meshtastic::config.device-config.clear-serial-enabled)) cl-protobufs.meshtastic::config.device-config.clear-serial-enabled (defun cl-protobufs.meshtastic::config.device-config.clear-serial-enabled) (#6# . 718) #59=(#55#) #Y(cl-protobufs.meshtastic::config.device-config.clear-serial-enabled nil nil (24 45 377 26 13 0 19 1 276 12 9 0 9 0 19 3 378 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.clear-serial-enabled #59# #39# nil (setf (bit (cl-protobufs.meshtastic::config.device-config-%%bool-values #55#) 0) 0))) cl-protobufs.meshtastic::serial-enabled (defmethod cl-protobufs.meshtastic::serial-enabled (#55# cl-protobufs.meshtastic::config.device-config)) (#6# . 718) (cl-protobufs.meshtastic::config.device-config) (#55#) #Y(cl-protobufs.meshtastic::serial-enabled nil nil (24 45 377 26 13 0 19 1 363 29) #1# #6# 718) #60=(setf cl-protobufs.meshtastic::serial-enabled) (defmethod #60# #54# (#55# cl-protobufs.meshtastic::config.device-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.device-config) (#54# #55#) #:g29615 #:g29616 (setf cl-protobufs.meshtastic::config.device-config.serial-enabled) #Y(#60# nil nil (24 45 376 24 45 377 26 10 0 45 407 10 2 45 408 13 0 13 1 33 409 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.device-config.clear-serial-enabled) (cl-protobufs.meshtastic::config.device-config.serial-enabled) ((inline cl-protobufs.meshtastic::config.device-config.debug-log-enabled)) cl-protobufs.meshtastic::config.device-config.debug-log-enabled (defun cl-protobufs.meshtastic::config.device-config.debug-log-enabled) (#6# . 718) #61=(#62=#:obj29239) #62# #Y(cl-protobufs.meshtastic::config.device-config.debug-log-enabled nil nil (24 45 418 26 13 0 19 1 276 12 9 1 19 2 223 16 368 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.debug-log-enabled #61# #39# (the boolean (plusp (bit (cl-protobufs.meshtastic::config.device-config-%%bool-values #62#) 1))))) ((inline #63=(setf cl-protobufs.meshtastic::config.device-config.debug-log-enabled))) #63# (defun #63#) (#6# . 718) #64=(#65=#:new-value29241 #66=#:obj29240) #65# #66# #Y(#63# nil nil (24 45 426 24 45 427 26 13 0 19 1 276 12 9 1 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 378 29) #1# #6# 718) (function (ext::lambda-block #63# #64# #39# (declare (type boolean #65#)) nil (setf (bit (cl-protobufs.meshtastic::config.device-config-%%bool-values #66#) 1) (if #65# . #56#)))) ((inline cl-protobufs.meshtastic::config.device-config.%%has-debug-log-enabled)) cl-protobufs.meshtastic::config.device-config.%%has-debug-log-enabled (defun cl-protobufs.meshtastic::config.device-config.%%has-debug-log-enabled) (#6# . 718) #67=(#66#) #68=#:cur-value29242 #Y(cl-protobufs.meshtastic::config.device-config.%%has-debug-log-enabled nil nil (24 45 427 26 13 0 19 1 276 12 9 1 19 2 223 16 368 45 435 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.%%has-debug-log-enabled #67# #39# (let ((#68# (plusp (bit (cl-protobufs.meshtastic::config.device-config-%%bool-values #66#) 1)))) (not (eq #68# nil))))) ((inline cl-protobufs.meshtastic::config.device-config.clear-debug-log-enabled)) cl-protobufs.meshtastic::config.device-config.clear-debug-log-enabled (defun cl-protobufs.meshtastic::config.device-config.clear-debug-log-enabled) (#6# . 718) #69=(#66#) #Y(cl-protobufs.meshtastic::config.device-config.clear-debug-log-enabled nil nil (24 45 427 26 13 0 19 1 276 12 9 1 9 0 19 3 378 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.clear-debug-log-enabled #69# #39# nil (setf (bit (cl-protobufs.meshtastic::config.device-config-%%bool-values #66#) 1) 0))) cl-protobufs.meshtastic::debug-log-enabled (defmethod cl-protobufs.meshtastic::debug-log-enabled (#66# cl-protobufs.meshtastic::config.device-config)) (#6# . 718) (cl-protobufs.meshtastic::config.device-config) (#66#) #Y(cl-protobufs.meshtastic::debug-log-enabled nil nil (24 45 427 26 13 0 19 1 414 29) #1# #6# 718) #70=(setf cl-protobufs.meshtastic::debug-log-enabled) (defmethod #70# #65# (#66# cl-protobufs.meshtastic::config.device-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.device-config) (#65# #66#) #:g29631 #:g29632 (setf cl-protobufs.meshtastic::config.device-config.debug-log-enabled) #Y(#70# nil nil (24 45 426 24 45 427 26 10 0 45 456 10 2 45 457 13 0 13 1 33 458 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.device-config.clear-debug-log-enabled) (cl-protobufs.meshtastic::config.device-config.debug-log-enabled) ((inline cl-protobufs.meshtastic::config.device-config.button-gpio)) cl-protobufs.meshtastic::config.device-config.button-gpio (defun cl-protobufs.meshtastic::config.device-config.button-gpio) (#6# . 718) #71=(#72=#:obj29243) #72# #Y(cl-protobufs.meshtastic::config.device-config.button-gpio nil nil (24 45 467 26 13 0 19 1 296 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.button-gpio #71# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.device-config-%button-gpio #72#)))) ((inline #73=(setf cl-protobufs.meshtastic::config.device-config.button-gpio))) #73# (defun #73#) (#6# . 718) #74=(#75=#:new-value29245 #76=#:obj29244) #75# #76# #:g29635 #:g29636 #Y(#73# nil nil (24 45 475 24 45 476 26 10 0 45 477 10 2 45 478 13 1 15 199 9 2 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #73# #74# #39# (declare (type cl-protobufs::uint32 #75#)) nil (setf (cl-protobufs.meshtastic::config.device-config-%button-gpio #76#) #75#))) ((inline cl-protobufs.meshtastic::config.device-config.%%has-button-gpio)) cl-protobufs.meshtastic::config.device-config.%%has-button-gpio (defun cl-protobufs.meshtastic::config.device-config.%%has-button-gpio) (#6# . 718) #77=(#76#) #78=#:cur-value29246 #Y(cl-protobufs.meshtastic::config.device-config.%%has-button-gpio nil nil (24 45 476 26 13 0 19 1 296 45 486 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.%%has-button-gpio #77# #39# (let ((#78# (cl-protobufs.meshtastic::config.device-config-%button-gpio #76#))) (not (eq #78# 0))))) ((inline cl-protobufs.meshtastic::config.device-config.clear-button-gpio)) cl-protobufs.meshtastic::config.device-config.clear-button-gpio (defun cl-protobufs.meshtastic::config.device-config.clear-button-gpio) (#6# . 718) #79=(#76#) #:g29639 #:g29640 #Y(cl-protobufs.meshtastic::config.device-config.clear-button-gpio nil nil (24 45 476 26 10 0 45 494 8 0 45 495 13 1 15 199 9 2 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.clear-button-gpio #79# #39# nil (setf (cl-protobufs.meshtastic::config.device-config-%button-gpio #76#) 0))) cl-protobufs.meshtastic::button-gpio (defmethod cl-protobufs.meshtastic::button-gpio (#76# cl-protobufs.meshtastic::config.device-config)) (#6# . 718) (cl-protobufs.meshtastic::config.device-config) (#76#) #Y(cl-protobufs.meshtastic::button-gpio nil nil (24 45 476 26 13 0 19 1 463 29) #1# #6# 718) #80=(setf cl-protobufs.meshtastic::button-gpio) (defmethod #80# #75# (#76# cl-protobufs.meshtastic::config.device-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.device-config) (#75# #76#) #:g29647 #:g29648 (setf cl-protobufs.meshtastic::config.device-config.button-gpio) #Y(#80# nil nil (24 45 475 24 45 476 26 10 0 45 509 10 2 45 510 13 0 13 1 33 511 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.device-config.clear-button-gpio) (cl-protobufs.meshtastic::config.device-config.button-gpio) ((inline cl-protobufs.meshtastic::config.device-config.buzzer-gpio)) cl-protobufs.meshtastic::config.device-config.buzzer-gpio (defun cl-protobufs.meshtastic::config.device-config.buzzer-gpio) (#6# . 718) #81=(#82=#:obj29247) #82# #Y(cl-protobufs.meshtastic::config.device-config.buzzer-gpio nil nil (24 45 520 26 13 0 19 1 292 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.buzzer-gpio #81# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.device-config-%buzzer-gpio #82#)))) ((inline #83=(setf cl-protobufs.meshtastic::config.device-config.buzzer-gpio))) #83# (defun #83#) (#6# . 718) #84=(#85=#:new-value29249 #86=#:obj29248) #85# #86# #:g29651 #:g29652 #Y(#83# nil nil (24 45 528 24 45 529 26 10 0 45 530 10 2 45 531 13 1 15 199 9 3 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #83# #84# #39# (declare (type cl-protobufs::uint32 #85#)) nil (setf (cl-protobufs.meshtastic::config.device-config-%buzzer-gpio #86#) #85#))) ((inline cl-protobufs.meshtastic::config.device-config.%%has-buzzer-gpio)) cl-protobufs.meshtastic::config.device-config.%%has-buzzer-gpio (defun cl-protobufs.meshtastic::config.device-config.%%has-buzzer-gpio) (#6# . 718) #87=(#86#) #88=#:cur-value29250 #Y(cl-protobufs.meshtastic::config.device-config.%%has-buzzer-gpio nil nil (24 45 529 26 13 0 19 1 292 45 539 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.%%has-buzzer-gpio #87# #39# (let ((#88# (cl-protobufs.meshtastic::config.device-config-%buzzer-gpio #86#))) (not (eq #88# 0))))) ((inline cl-protobufs.meshtastic::config.device-config.clear-buzzer-gpio)) cl-protobufs.meshtastic::config.device-config.clear-buzzer-gpio (defun cl-protobufs.meshtastic::config.device-config.clear-buzzer-gpio) (#6# . 718) #89=(#86#) #:g29655 #:g29656 #Y(cl-protobufs.meshtastic::config.device-config.clear-buzzer-gpio nil nil (24 45 529 26 10 0 45 547 8 0 45 548 13 1 15 199 9 3 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.clear-buzzer-gpio #89# #39# nil (setf (cl-protobufs.meshtastic::config.device-config-%buzzer-gpio #86#) 0))) cl-protobufs.meshtastic::buzzer-gpio (defmethod cl-protobufs.meshtastic::buzzer-gpio (#86# cl-protobufs.meshtastic::config.device-config)) (#6# . 718) (cl-protobufs.meshtastic::config.device-config) (#86#) #Y(cl-protobufs.meshtastic::buzzer-gpio nil nil (24 45 529 26 13 0 19 1 516 29) #1# #6# 718) #90=(setf cl-protobufs.meshtastic::buzzer-gpio) (defmethod #90# #85# (#86# cl-protobufs.meshtastic::config.device-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.device-config) (#85# #86#) #:g29663 #:g29664 (setf cl-protobufs.meshtastic::config.device-config.buzzer-gpio) #Y(#90# nil nil (24 45 528 24 45 529 26 10 0 45 562 10 2 45 563 13 0 13 1 33 564 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.device-config.clear-buzzer-gpio) (cl-protobufs.meshtastic::config.device-config.buzzer-gpio) ((inline cl-protobufs.meshtastic::config.device-config.rebroadcast-mode)) (defun cl-protobufs.meshtastic::config.device-config.rebroadcast-mode) (#6# . 718) #91=(#92=#:obj29251) #92# #Y(cl-protobufs.meshtastic::config.device-config.rebroadcast-mode nil nil (24 45 572 26 13 0 19 1 288 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.rebroadcast-mode #91# #39# (the cl-protobufs.meshtastic::%%%%config.device-config.rebroadcast-mode (cl-protobufs.meshtastic::config.device-config-%rebroadcast-mode #92#)))) ((inline #93=(setf cl-protobufs.meshtastic::config.device-config.rebroadcast-mode))) #93# (defun #93#) (#6# . 718) #94=(#95=#:new-value29253 #96=#:obj29252) #95# #96# #:g29667 #:g29668 #Y(#93# nil nil (24 45 580 24 45 581 26 10 0 45 582 10 2 45 583 13 1 15 199 9 4 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #93# #94# #39# (declare (type cl-protobufs.meshtastic::%%%%config.device-config.rebroadcast-mode #95#)) nil (setf (cl-protobufs.meshtastic::config.device-config-%rebroadcast-mode #96#) #95#))) ((inline cl-protobufs.meshtastic::config.device-config.%%has-rebroadcast-mode)) cl-protobufs.meshtastic::config.device-config.%%has-rebroadcast-mode (defun cl-protobufs.meshtastic::config.device-config.%%has-rebroadcast-mode) (#6# . 718) #97=(#96#) #98=#:cur-value29254 #Y(cl-protobufs.meshtastic::config.device-config.%%has-rebroadcast-mode nil nil (24 45 581 26 13 0 19 1 288 45 591 13 0 11 148 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.%%has-rebroadcast-mode #97# #39# (let ((#98# (cl-protobufs.meshtastic::config.device-config-%rebroadcast-mode #96#))) (not (eq #98# :all))))) ((inline cl-protobufs.meshtastic::config.device-config.clear-rebroadcast-mode)) cl-protobufs.meshtastic::config.device-config.clear-rebroadcast-mode (defun cl-protobufs.meshtastic::config.device-config.clear-rebroadcast-mode) (#6# . 718) #99=(#96#) #:g29671 #:g29672 #Y(cl-protobufs.meshtastic::config.device-config.clear-rebroadcast-mode nil nil (24 45 581 26 10 0 45 599 11 148 45 600 13 1 15 199 9 4 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.clear-rebroadcast-mode #99# #39# nil (setf (cl-protobufs.meshtastic::config.device-config-%rebroadcast-mode #96#) :all))) cl-protobufs.meshtastic::rebroadcast-mode (defmethod cl-protobufs.meshtastic::rebroadcast-mode (#96# cl-protobufs.meshtastic::config.device-config)) (#6# . 718) (cl-protobufs.meshtastic::config.device-config) (#96#) #Y(cl-protobufs.meshtastic::rebroadcast-mode nil nil (24 45 581 26 13 0 19 1 142 29) #1# #6# 718) #100=(setf cl-protobufs.meshtastic::rebroadcast-mode) (defmethod #100# #95# (#96# cl-protobufs.meshtastic::config.device-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.device-config) (#95# #96#) #:g29679 #:g29680 (setf cl-protobufs.meshtastic::config.device-config.rebroadcast-mode) #Y(#100# nil nil (24 45 580 24 45 581 26 10 0 45 614 10 2 45 615 13 0 13 1 33 616 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.device-config.clear-rebroadcast-mode) (cl-protobufs.meshtastic::config.device-config.rebroadcast-mode) ((inline cl-protobufs.meshtastic::config.device-config.node-info-broadcast-secs)) cl-protobufs.meshtastic::config.device-config.node-info-broadcast-secs (defun cl-protobufs.meshtastic::config.device-config.node-info-broadcast-secs) (#6# . 718) #101=(#102=#:obj29255) #102# #Y(cl-protobufs.meshtastic::config.device-config.node-info-broadcast-secs nil nil (24 45 625 26 13 0 19 1 284 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.node-info-broadcast-secs #101# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.device-config-%node-info-broadcast-secs #102#)))) ((inline #103=(setf cl-protobufs.meshtastic::config.device-config.node-info-broadcast-secs))) #103# (defun #103#) (#6# . 718) #104=(#105=#:new-value29257 #106=#:obj29256) #105# #106# #:g29683 #:g29684 #Y(#103# nil nil (24 45 633 24 45 634 26 10 0 45 635 10 2 45 636 13 1 15 199 9 5 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #103# #104# #39# (declare (type cl-protobufs::uint32 #105#)) nil (setf (cl-protobufs.meshtastic::config.device-config-%node-info-broadcast-secs #106#) #105#))) ((inline cl-protobufs.meshtastic::config.device-config.%%has-node-info-broadcast-secs)) cl-protobufs.meshtastic::config.device-config.%%has-node-info-broadcast-secs (defun cl-protobufs.meshtastic::config.device-config.%%has-node-info-broadcast-secs) (#6# . 718) #107=(#106#) #108=#:cur-value29258 #Y(cl-protobufs.meshtastic::config.device-config.%%has-node-info-broadcast-secs nil nil (24 45 634 26 13 0 19 1 284 45 644 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.%%has-node-info-broadcast-secs #107# #39# (let ((#108# (cl-protobufs.meshtastic::config.device-config-%node-info-broadcast-secs #106#))) (not (eq #108# 0))))) ((inline cl-protobufs.meshtastic::config.device-config.clear-node-info-broadcast-secs)) cl-protobufs.meshtastic::config.device-config.clear-node-info-broadcast-secs (defun cl-protobufs.meshtastic::config.device-config.clear-node-info-broadcast-secs) (#6# . 718) #109=(#106#) #:g29687 #:g29688 #Y(cl-protobufs.meshtastic::config.device-config.clear-node-info-broadcast-secs nil nil (24 45 634 26 10 0 45 652 8 0 45 653 13 1 15 199 9 5 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.clear-node-info-broadcast-secs #109# #39# nil (setf (cl-protobufs.meshtastic::config.device-config-%node-info-broadcast-secs #106#) 0))) cl-protobufs.meshtastic::node-info-broadcast-secs (defmethod cl-protobufs.meshtastic::node-info-broadcast-secs (#106# cl-protobufs.meshtastic::config.device-config)) (#6# . 718) (cl-protobufs.meshtastic::config.device-config) (#106#) #Y(cl-protobufs.meshtastic::node-info-broadcast-secs nil nil (24 45 634 26 13 0 19 1 621 29) #1# #6# 718) #110=(setf cl-protobufs.meshtastic::node-info-broadcast-secs) (defmethod #110# #105# (#106# cl-protobufs.meshtastic::config.device-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.device-config) (#105# #106#) #:g29695 #:g29696 (setf cl-protobufs.meshtastic::config.device-config.node-info-broadcast-secs) #Y(#110# nil nil (24 45 633 24 45 634 26 10 0 45 667 10 2 45 668 13 0 13 1 33 669 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.device-config.clear-node-info-broadcast-secs) (cl-protobufs.meshtastic::config.device-config.node-info-broadcast-secs) ((inline cl-protobufs.meshtastic::config.device-config.double-tap-as-button-press)) cl-protobufs.meshtastic::config.device-config.double-tap-as-button-press (defun cl-protobufs.meshtastic::config.device-config.double-tap-as-button-press) (#6# . 718) #111=(#112=#:obj29259) #112# #Y(cl-protobufs.meshtastic::config.device-config.double-tap-as-button-press nil nil (24 45 678 26 13 0 19 1 276 12 9 2 19 2 223 16 368 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.double-tap-as-button-press #111# #39# (the boolean (plusp (bit (cl-protobufs.meshtastic::config.device-config-%%bool-values #112#) 2))))) ((inline #113=(setf cl-protobufs.meshtastic::config.device-config.double-tap-as-button-press))) #113# (defun #113#) (#6# . 718) #114=(#115=#:new-value29261 #116=#:obj29260) #115# #116# #Y(#113# nil nil (24 45 686 24 45 687 26 13 0 19 1 276 12 9 2 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 378 29) #1# #6# 718) (function (ext::lambda-block #113# #114# #39# (declare (type boolean #115#)) nil (setf (bit (cl-protobufs.meshtastic::config.device-config-%%bool-values #116#) 2) (if #115# . #56#)))) ((inline cl-protobufs.meshtastic::config.device-config.%%has-double-tap-as-button-press)) cl-protobufs.meshtastic::config.device-config.%%has-double-tap-as-button-press (defun cl-protobufs.meshtastic::config.device-config.%%has-double-tap-as-button-press) (#6# . 718) #117=(#116#) #118=#:cur-value29262 #Y(cl-protobufs.meshtastic::config.device-config.%%has-double-tap-as-button-press nil nil (24 45 687 26 13 0 19 1 276 12 9 2 19 2 223 16 368 45 695 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.%%has-double-tap-as-button-press #117# #39# (let ((#118# (plusp (bit (cl-protobufs.meshtastic::config.device-config-%%bool-values #116#) 2)))) (not (eq #118# nil))))) ((inline cl-protobufs.meshtastic::config.device-config.clear-double-tap-as-button-press)) cl-protobufs.meshtastic::config.device-config.clear-double-tap-as-button-press (defun cl-protobufs.meshtastic::config.device-config.clear-double-tap-as-button-press) (#6# . 718) #119=(#116#) #Y(cl-protobufs.meshtastic::config.device-config.clear-double-tap-as-button-press nil nil (24 45 687 26 13 0 19 1 276 12 9 2 9 0 19 3 378 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.clear-double-tap-as-button-press #119# #39# nil (setf (bit (cl-protobufs.meshtastic::config.device-config-%%bool-values #116#) 2) 0))) cl-protobufs.meshtastic::double-tap-as-button-press (defmethod cl-protobufs.meshtastic::double-tap-as-button-press (#116# cl-protobufs.meshtastic::config.device-config)) (#6# . 718) (cl-protobufs.meshtastic::config.device-config) (#116#) #Y(cl-protobufs.meshtastic::double-tap-as-button-press nil nil (24 45 687 26 13 0 19 1 674 29) #1# #6# 718) #120=(setf cl-protobufs.meshtastic::double-tap-as-button-press) (defmethod #120# #115# (#116# cl-protobufs.meshtastic::config.device-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.device-config) (#115# #116#) #:g29711 #:g29712 (setf cl-protobufs.meshtastic::config.device-config.double-tap-as-button-press) #Y(#120# nil nil (24 45 686 24 45 687 26 10 0 45 716 10 2 45 717 13 0 13 1 33 718 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.device-config.clear-double-tap-as-button-press) (cl-protobufs.meshtastic::config.device-config.double-tap-as-button-press) ((inline cl-protobufs.meshtastic::config.device-config.is-managed)) cl-protobufs.meshtastic::config.device-config.is-managed (defun cl-protobufs.meshtastic::config.device-config.is-managed) (#6# . 718) #121=(#122=#:obj29263) #122# #Y(cl-protobufs.meshtastic::config.device-config.is-managed nil nil (24 45 727 26 13 0 19 1 276 12 9 3 19 2 223 16 368 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.is-managed #121# #39# (the boolean (plusp (bit (cl-protobufs.meshtastic::config.device-config-%%bool-values #122#) 3))))) ((inline #123=(setf cl-protobufs.meshtastic::config.device-config.is-managed))) #123# (defun #123#) (#6# . 718) #124=(#125=#:new-value29265 #126=#:obj29264) #125# #126# #Y(#123# nil nil (24 45 735 24 45 736 26 13 0 19 1 276 12 9 3 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 378 29) #1# #6# 718) (function (ext::lambda-block #123# #124# #39# (declare (type boolean #125#)) nil (setf (bit (cl-protobufs.meshtastic::config.device-config-%%bool-values #126#) 3) (if #125# . #56#)))) ((inline cl-protobufs.meshtastic::config.device-config.%%has-is-managed)) cl-protobufs.meshtastic::config.device-config.%%has-is-managed (defun cl-protobufs.meshtastic::config.device-config.%%has-is-managed) (#6# . 718) #127=(#126#) #128=#:cur-value29266 #Y(cl-protobufs.meshtastic::config.device-config.%%has-is-managed nil nil (24 45 736 26 13 0 19 1 276 12 9 3 19 2 223 16 368 45 744 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.%%has-is-managed #127# #39# (let ((#128# (plusp (bit (cl-protobufs.meshtastic::config.device-config-%%bool-values #126#) 3)))) (not (eq #128# nil))))) ((inline cl-protobufs.meshtastic::config.device-config.clear-is-managed)) cl-protobufs.meshtastic::config.device-config.clear-is-managed (defun cl-protobufs.meshtastic::config.device-config.clear-is-managed) (#6# . 718) #129=(#126#) #Y(cl-protobufs.meshtastic::config.device-config.clear-is-managed nil nil (24 45 736 26 13 0 19 1 276 12 9 3 9 0 19 3 378 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device-config.clear-is-managed #129# #39# nil (setf (bit (cl-protobufs.meshtastic::config.device-config-%%bool-values #126#) 3) 0))) cl-protobufs.meshtastic::is-managed (defmethod cl-protobufs.meshtastic::is-managed (#126# cl-protobufs.meshtastic::config.device-config)) (#6# . 718) (cl-protobufs.meshtastic::config.device-config) (#126#) #Y(cl-protobufs.meshtastic::is-managed nil nil (24 45 736 26 13 0 19 1 723 29) #1# #6# 718) #130=(setf cl-protobufs.meshtastic::is-managed) (defmethod #130# #125# (#126# cl-protobufs.meshtastic::config.device-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.device-config) (#125# #126#) #:g29727 #:g29728 (setf cl-protobufs.meshtastic::config.device-config.is-managed) #Y(#130# nil nil (24 45 735 24 45 736 26 10 0 45 765 10 2 45 766 13 0 13 1 33 767 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.device-config.clear-is-managed) (cl-protobufs.meshtastic::config.device-config.is-managed) ((inline cl-protobufs.meshtastic::make-config.device-config)) cl-protobufs.meshtastic::make-config.device-config (defun cl-protobufs.meshtastic::make-config.device-config) (#6# . 718) #131=(&key (cl-protobufs.meshtastic::role :%unset) (cl-protobufs.meshtastic::serial-enabled :%unset) (cl-protobufs.meshtastic::debug-log-enabled :%unset) (cl-protobufs.meshtastic::button-gpio :%unset) (cl-protobufs.meshtastic::buzzer-gpio :%unset) (cl-protobufs.meshtastic::rebroadcast-mode :%unset) (cl-protobufs.meshtastic::node-info-broadcast-secs :%unset) (cl-protobufs.meshtastic::double-tap-as-button-press :%unset) (cl-protobufs.meshtastic::is-managed :%unset)) (nil :is-managed :double-tap-as-button-press :node-info-broadcast-secs :rebroadcast-mode :buzzer-gpio :button-gpio :debug-log-enabled :serial-enabled :role) :%unset #132=#:obj29230 #:g29747 #:g29748 (setf cl-protobufs.meshtastic::config.device-config.role) #:g29749 #:g29750 (setf cl-protobufs.meshtastic::config.device-config.serial-enabled) #:g29751 #:g29752 (setf cl-protobufs.meshtastic::config.device-config.debug-log-enabled) #:g29753 #:g29754 (setf cl-protobufs.meshtastic::config.device-config.button-gpio) #:g29755 #:g29756 (setf cl-protobufs.meshtastic::config.device-config.buzzer-gpio) #:g29757 #:g29758 (setf cl-protobufs.meshtastic::config.device-config.rebroadcast-mode) #:g29759 #:g29760 (setf cl-protobufs.meshtastic::config.device-config.node-info-broadcast-secs) #:g29761 #:g29762 (setf cl-protobufs.meshtastic::config.device-config.double-tap-as-button-press) #:g29763 #:g29764 (setf cl-protobufs.meshtastic::config.device-config.is-managed) #Y(cl-protobufs.meshtastic::make-config.device-config nil nil (28 776 22 40 3 14 777 46 344 22 40 3 14 777 46 396 22 40 3 14 777 46 445 22 40 3 14 777 46 498 22 40 3 14 777 46 551 22 40 3 14 777 46 603 22 40 3 14 777 46 656 22 40 3 14 777 46 705 22 40 3 14 777 46 754 19 0 210 45 778 13 9 11 777 17 332 40 4 10 9 76 76 39 21 10 0 45 779 10 10 45 780 13 0 13 1 33 781 18 2 43 1 43 1 13 8 11 777 17 332 76 39 21 10 0 45 782 10 9 45 783 13 0 13 1 33 784 18 2 43 1 43 1 13 7 11 777 17 332 76 39 21 10 0 45 785 10 8 45 786 13 0 13 1 33 787 18 2 43 1 43 1 13 6 11 777 17 332 40 4 10 6 76 76 39 21 10 0 45 788 10 7 45 789 13 0 13 1 33 790 18 2 43 1 43 1 13 5 11 777 17 332 40 4 10 5 76 76 39 21 10 0 45 791 10 6 45 792 13 0 13 1 33 793 18 2 43 1 43 1 13 4 11 777 17 332 40 4 10 4 76 76 39 21 10 0 45 794 10 5 45 795 13 0 13 1 33 796 18 2 43 1 43 1 13 3 11 777 17 332 40 4 10 3 76 76 39 21 10 0 45 797 10 4 45 798 13 0 13 1 33 799 18 2 43 1 43 1 13 2 11 777 17 332 76 39 21 10 0 45 800 10 3 45 801 13 0 13 1 33 802 18 2 43 1 43 1 13 1 11 777 17 332 76 39 21 10 0 45 803 10 2 45 804 13 0 13 1 33 805 18 2 43 1 43 1 10 0 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::make-config.device-config #131# #39# (let ((#132# (cl-protobufs.meshtastic::%make-config.device-config))) (unless (or (eq cl-protobufs.meshtastic::role :%unset) (not cl-protobufs.meshtastic::role)) (setf (cl-protobufs.meshtastic::config.device-config.role #132#) cl-protobufs.meshtastic::role)) (unless (eq cl-protobufs.meshtastic::serial-enabled :%unset) (setf (cl-protobufs.meshtastic::config.device-config.serial-enabled #132#) cl-protobufs.meshtastic::serial-enabled)) (unless (eq cl-protobufs.meshtastic::debug-log-enabled :%unset) (setf (cl-protobufs.meshtastic::config.device-config.debug-log-enabled #132#) cl-protobufs.meshtastic::debug-log-enabled)) (unless (or (eq cl-protobufs.meshtastic::button-gpio :%unset) (not cl-protobufs.meshtastic::button-gpio)) (setf (cl-protobufs.meshtastic::config.device-config.button-gpio #132#) cl-protobufs.meshtastic::button-gpio)) (unless (or (eq cl-protobufs.meshtastic::buzzer-gpio :%unset) (not cl-protobufs.meshtastic::buzzer-gpio)) (setf (cl-protobufs.meshtastic::config.device-config.buzzer-gpio #132#) cl-protobufs.meshtastic::buzzer-gpio)) (unless (or (eq cl-protobufs.meshtastic::rebroadcast-mode :%unset) (not cl-protobufs.meshtastic::rebroadcast-mode)) (setf (cl-protobufs.meshtastic::config.device-config.rebroadcast-mode #132#) cl-protobufs.meshtastic::rebroadcast-mode)) (unless (or (eq cl-protobufs.meshtastic::node-info-broadcast-secs :%unset) (not cl-protobufs.meshtastic::node-info-broadcast-secs)) (setf (cl-protobufs.meshtastic::config.device-config.node-info-broadcast-secs #132#) cl-protobufs.meshtastic::node-info-broadcast-secs)) (unless (eq cl-protobufs.meshtastic::double-tap-as-button-press :%unset) (setf (cl-protobufs.meshtastic::config.device-config.double-tap-as-button-press #132#) cl-protobufs.meshtastic::double-tap-as-button-press)) (unless (eq cl-protobufs.meshtastic::is-managed :%unset) (setf (cl-protobufs.meshtastic::config.device-config.is-managed #132#) cl-protobufs.meshtastic::is-managed)) #132#))) cl-protobufs.meshtastic::config.device-config.clear-%%is-set (defun cl-protobufs.meshtastic::config.device-config.clear-%%is-set) (#6# . 718) (#132#) fill #Y(cl-protobufs.meshtastic::config.device-config.clear-%%is-set nil nil (24 45 778 26 13 0 19 1 256 12 9 0 19 2 812 29) #1# #6# 718) (cl-protobufs.meshtastic::make-config.device-config cl-protobufs.meshtastic::config.device-config-%%is-set) cl-protobufs::clear (defmethod cl-protobufs::clear (#132# cl-protobufs.meshtastic::config.device-config)) (#6# . 718) (cl-protobufs.meshtastic::config.device-config) (#132#) #:g29771 #:g29772 #Y(cl-protobufs::clear nil nil (24 45 778 26 10 0 45 820 75 45 821 13 1 15 204 9 0 13 0 19 4 118 43 1 43 1 13 0 19 1 336 13 0 19 1 390 13 0 19 1 439 13 0 19 1 490 13 0 19 1 543 13 0 19 1 595 13 0 19 1 648 13 0 19 1 699 13 0 19 1 748 13 0 19 1 808 29) #1# #6# 718) 0 :message 0 cl-protobufs.implementation::msg-desc cl-protobufs::message-descriptor #:g29773 class #:g29774 #:g29775 (setf slot-value) #:g29776 cl-protobufs.implementation::name #:g29777 "DeviceConfig" #:g29778 (setf slot-value) #:g29779 cl-protobufs.implementation::qual-name #:g29780 "meshtastic.Config.DeviceConfig" #:g29781 (setf slot-value) #:g29782 cl-protobufs.implementation::options #:g29783 #:g29784 (setf slot-value) #:g29785 cl-protobufs.implementation::alias #:g29786 #:g29787 (setf slot-value) #:g29788 cl-protobufs.implementation::fields #:g29789 0 #:g29790 (setf slot-value) #:g29791 cl-protobufs.implementation::oneofs #:g29792 #:g29793 (setf slot-value) cl-protobufs.implementation::field-vect slot-makunbound #:g29794 cl-protobufs.implementation::extended-fields #:g29795 #:g29796 (setf slot-value) #:g29797 cl-protobufs.implementation::extensions #:g29798 #:g29799 (setf slot-value) #:g29800 cl-protobufs.implementation::message-type #:g29801 #:g29802 (setf slot-value) 0 0 0 cl-protobufs::field-descriptor #:g29803 #:g29804 #:g29805 (setf slot-value) #:g29806 #:g29807 "role" #:g29808 (setf slot-value) #:g29809 #:g29810 "meshtastic.Config.DeviceConfig.role" #:g29811 (setf slot-value) #:g29812 #:g29813 #:g29814 (setf slot-value) #:g29815 cl-protobufs.implementation::kind #:g29816 #:g29817 (setf slot-value) #:g29818 type #:g29819 #:g29820 (setf slot-value) #:g29821 cl-protobufs.implementation::label #:g29822 :optional #:g29823 (setf slot-value) #:g29824 cl-protobufs.implementation::index #:g29825 #:g29826 (setf slot-value) #:g29827 cl-protobufs.implementation::field-offset #:g29828 #:g29829 (setf slot-value) #:g29830 cl-protobufs.implementation::oneof-offset #:g29831 #:g29832 (setf slot-value) #:g29833 cl-protobufs.implementation::internal-field-name #:g29834 #:g29835 (setf slot-value) #:g29836 cl-protobufs.implementation::external-field-name #:g29837 #:g29838 (setf slot-value) #:g29839 cl-protobufs.implementation::json-name #:g29840 "role" #:g29841 (setf slot-value) #:g29842 cl-protobufs.implementation::default #:g29843 #:g29844 (setf slot-value) #:g29845 cl-protobufs.implementation::packed #:g29846 #:g29847 (setf slot-value) #:g29848 cl-protobufs.implementation::container #:g29849 #:g29850 (setf slot-value) #:g29851 cl-protobufs.implementation::lazy #:g29852 #:g29853 (setf slot-value) #:g29854 cl-protobufs.implementation::bool-index #:g29855 #:g29856 (setf slot-value) 0 0 #:g29857 #:g29858 boolean #:g29859 (setf slot-value) #:g29860 #:g29861 "serial_enabled" #:g29862 (setf slot-value) #:g29863 #:g29864 "meshtastic.Config.DeviceConfig.serial_enabled" #:g29865 (setf slot-value) #:g29866 #:g29867 #:g29868 (setf slot-value) #:g29869 #:g29870 :scalar #:g29871 (setf slot-value) #:g29872 #:g29873 #:g29874 (setf slot-value) #:g29875 #:g29876 #:g29877 (setf slot-value) #:g29878 #:g29879 #:g29880 (setf slot-value) #:g29881 #:g29882 #:g29883 (setf slot-value) #:g29884 #:g29885 #:g29886 (setf slot-value) #:g29887 #:g29888 cl-protobufs.meshtastic::%serial-enabled #:g29889 (setf slot-value) #:g29890 #:g29891 #:g29892 (setf slot-value) #:g29893 #:g29894 "serialEnabled" #:g29895 (setf slot-value) #:g29896 #:g29897 cl-protobufs.implementation::empty-default #:g29898 (setf slot-value) #:g29899 #:g29900 #:g29901 (setf slot-value) #:g29902 #:g29903 #:g29904 (setf slot-value) #:g29905 #:g29906 #:g29907 (setf slot-value) #:g29908 #:g29909 #:g29910 (setf slot-value) 0 0 #:g29911 #:g29912 #:g29913 (setf slot-value) #:g29914 #:g29915 "debug_log_enabled" #:g29916 (setf slot-value) #:g29917 #:g29918 "meshtastic.Config.DeviceConfig.debug_log_enabled" #:g29919 (setf slot-value) #:g29920 #:g29921 #:g29922 (setf slot-value) #:g29923 #:g29924 #:g29925 (setf slot-value) #:g29926 #:g29927 #:g29928 (setf slot-value) #:g29929 #:g29930 #:g29931 (setf slot-value) #:g29932 #:g29933 #:g29934 (setf slot-value) #:g29935 #:g29936 #:g29937 (setf slot-value) #:g29938 #:g29939 #:g29940 (setf slot-value) #:g29941 #:g29942 cl-protobufs.meshtastic::%debug-log-enabled #:g29943 (setf slot-value) #:g29944 #:g29945 #:g29946 (setf slot-value) #:g29947 #:g29948 "debugLogEnabled" #:g29949 (setf slot-value) #:g29950 #:g29951 #:g29952 (setf slot-value) #:g29953 #:g29954 #:g29955 (setf slot-value) #:g29956 #:g29957 #:g29958 (setf slot-value) #:g29959 #:g29960 #:g29961 (setf slot-value) #:g29962 #:g29963 #:g29964 (setf slot-value) 0 0 #:g29965 #:g29966 #:g29967 (setf slot-value) #:g29968 #:g29969 "button_gpio" #:g29970 (setf slot-value) #:g29971 #:g29972 "meshtastic.Config.DeviceConfig.button_gpio" #:g29973 (setf slot-value) #:g29974 #:g29975 #:g29976 (setf slot-value) #:g29977 #:g29978 #:g29979 (setf slot-value) #:g29980 #:g29981 #:g29982 (setf slot-value) #:g29983 #:g29984 #:g29985 (setf slot-value) #:g29986 #:g29987 #:g29988 (setf slot-value) #:g29989 #:g29990 #:g29991 (setf slot-value) #:g29992 #:g29993 #:g29994 (setf slot-value) #:g29995 #:g29996 #:g29997 (setf slot-value) #:g29998 #:g29999 #:g30000 (setf slot-value) #:g30001 #:g30002 "buttonGpio" #:g30003 (setf slot-value) #:g30004 #:g30005 #:g30006 (setf slot-value) #:g30007 #:g30008 #:g30009 (setf slot-value) #:g30010 #:g30011 #:g30012 (setf slot-value) #:g30013 #:g30014 #:g30015 (setf slot-value) #:g30016 #:g30017 #:g30018 (setf slot-value) 0 0 #:g30019 #:g30020 #:g30021 (setf slot-value) #:g30022 #:g30023 "buzzer_gpio" #:g30024 (setf slot-value) #:g30025 #:g30026 "meshtastic.Config.DeviceConfig.buzzer_gpio" #:g30027 (setf slot-value) #:g30028 #:g30029 #:g30030 (setf slot-value) #:g30031 #:g30032 #:g30033 (setf slot-value) #:g30034 #:g30035 #:g30036 (setf slot-value) #:g30037 #:g30038 #:g30039 (setf slot-value) #:g30040 #:g30041 #:g30042 (setf slot-value) #:g30043 #:g30044 #:g30045 (setf slot-value) #:g30046 #:g30047 #:g30048 (setf slot-value) #:g30049 #:g30050 #:g30051 (setf slot-value) #:g30052 #:g30053 #:g30054 (setf slot-value) #:g30055 #:g30056 "buzzerGpio" #:g30057 (setf slot-value) #:g30058 #:g30059 #:g30060 (setf slot-value) #:g30061 #:g30062 #:g30063 (setf slot-value) #:g30064 #:g30065 #:g30066 (setf slot-value) #:g30067 #:g30068 #:g30069 (setf slot-value) #:g30070 #:g30071 #:g30072 (setf slot-value) 0 0 #:g30073 #:g30074 #:g30075 (setf slot-value) #:g30076 #:g30077 "rebroadcast_mode" #:g30078 (setf slot-value) #:g30079 #:g30080 "meshtastic.Config.DeviceConfig.rebroadcast_mode" #:g30081 (setf slot-value) #:g30082 #:g30083 #:g30084 (setf slot-value) #:g30085 #:g30086 #:g30087 (setf slot-value) #:g30088 #:g30089 #:g30090 (setf slot-value) #:g30091 #:g30092 #:g30093 (setf slot-value) #:g30094 #:g30095 #:g30096 (setf slot-value) #:g30097 #:g30098 #:g30099 (setf slot-value) #:g30100 #:g30101 #:g30102 (setf slot-value) #:g30103 #:g30104 #:g30105 (setf slot-value) #:g30106 #:g30107 #:g30108 (setf slot-value) #:g30109 #:g30110 "rebroadcastMode" #:g30111 (setf slot-value) #:g30112 #:g30113 #:g30114 (setf slot-value) #:g30115 #:g30116 #:g30117 (setf slot-value) #:g30118 #:g30119 #:g30120 (setf slot-value) #:g30121 #:g30122 #:g30123 (setf slot-value) #:g30124 #:g30125 #:g30126 (setf slot-value) 0 0 #:g30127 #:g30128 #:g30129 (setf slot-value) #:g30130 #:g30131 "node_info_broadcast_secs" #:g30132 (setf slot-value) #:g30133 #:g30134 "meshtastic.Config.DeviceConfig.node_info_broadcast_secs" #:g30135 (setf slot-value) #:g30136 #:g30137 #:g30138 (setf slot-value) #:g30139 #:g30140 #:g30141 (setf slot-value) #:g30142 #:g30143 #:g30144 (setf slot-value) #:g30145 #:g30146 #:g30147 (setf slot-value) #:g30148 #:g30149 #:g30150 (setf slot-value) #:g30151 #:g30152 #:g30153 (setf slot-value) #:g30154 #:g30155 #:g30156 (setf slot-value) #:g30157 #:g30158 #:g30159 (setf slot-value) #:g30160 #:g30161 #:g30162 (setf slot-value) #:g30163 #:g30164 "nodeInfoBroadcastSecs" #:g30165 (setf slot-value) #:g30166 #:g30167 #:g30168 (setf slot-value) #:g30169 #:g30170 #:g30171 (setf slot-value) #:g30172 #:g30173 #:g30174 (setf slot-value) #:g30175 #:g30176 #:g30177 (setf slot-value) #:g30178 #:g30179 #:g30180 (setf slot-value) 0 0 #:g30181 #:g30182 #:g30183 (setf slot-value) #:g30184 #:g30185 "double_tap_as_button_press" #:g30186 (setf slot-value) #:g30187 #:g30188 "meshtastic.Config.DeviceConfig.double_tap_as_button_press" #:g30189 (setf slot-value) #:g30190 #:g30191 #:g30192 (setf slot-value) #:g30193 #:g30194 #:g30195 (setf slot-value) #:g30196 #:g30197 #:g30198 (setf slot-value) #:g30199 #:g30200 #:g30201 (setf slot-value) #:g30202 #:g30203 #:g30204 (setf slot-value) #:g30205 #:g30206 #:g30207 (setf slot-value) #:g30208 #:g30209 #:g30210 (setf slot-value) #:g30211 #:g30212 cl-protobufs.meshtastic::%double-tap-as-button-press #:g30213 (setf slot-value) #:g30214 #:g30215 #:g30216 (setf slot-value) #:g30217 #:g30218 "doubleTapAsButtonPress" #:g30219 (setf slot-value) #:g30220 #:g30221 #:g30222 (setf slot-value) #:g30223 #:g30224 #:g30225 (setf slot-value) #:g30226 #:g30227 #:g30228 (setf slot-value) #:g30229 #:g30230 #:g30231 (setf slot-value) #:g30232 #:g30233 #:g30234 (setf slot-value) 0 #:g30235 #:g30236 #:g30237 (setf slot-value) #:g30238 #:g30239 "is_managed" #:g30240 (setf slot-value) #:g30241 #:g30242 "meshtastic.Config.DeviceConfig.is_managed" #:g30243 (setf slot-value) #:g30244 #:g30245 #:g30246 (setf slot-value) #:g30247 #:g30248 #:g30249 (setf slot-value) #:g30250 #:g30251 #:g30252 (setf slot-value) #:g30253 #:g30254 #:g30255 (setf slot-value) #:g30256 #:g30257 #:g30258 (setf slot-value) #:g30259 #:g30260 #:g30261 (setf slot-value) #:g30262 #:g30263 #:g30264 (setf slot-value) #:g30265 #:g30266 cl-protobufs.meshtastic::%is-managed #:g30267 (setf slot-value) #:g30268 #:g30269 #:g30270 (setf slot-value) #:g30271 #:g30272 "isManaged" #:g30273 (setf slot-value) #:g30274 #:g30275 #:g30276 (setf slot-value) #:g30277 #:g30278 #:g30279 (setf slot-value) #:g30280 #:g30281 #:g30282 (setf slot-value) #:g30283 #:g30284 #:g30285 (setf slot-value) #:g30286 #:g30287 #:g30288 (setf slot-value) cl-protobufs.meshtastic::%%%%config.position-config.position-flags (deftype cl-protobufs.meshtastic::%%%%config.position-config.position-flags nil (quote #133=(or (member . #134=(:unset :altitude :altitude-msl :geoidal-separation :dop :hvdop :satinview :seq-no :timestamp :heading :speed)) #4#))) #133# cl-protobufs.meshtastic::config.position-config.position-flags (deftype cl-protobufs.meshtastic::config.position-config.position-flags nil (quote #135=(member . #134#))) #135# cl-protobufs.meshtastic::config.position-config.position-flags-keyword-to-int (defun cl-protobufs.meshtastic::config.position-config.position-flags-keyword-to-int) (#6# . 718) :unset :altitude :altitude-msl :geoidal-separation :dop :hvdop :satinview :seq-no :timestamp :heading :speed #Y(cl-protobufs.meshtastic::config.position-config.position-flags-keyword-to-int nil nil (24 45 28 26 10 0 42 1608 5 8 0 38 89 42 1609 5 8 1 38 82 42 1610 5 8 2 38 75 42 1611 5 8 4 38 68 42 1612 5 8 8 38 61 42 1613 5 8 16 38 54 42 1614 5 8 32 38 47 42 1615 5 8 64 38 40 42 1616 5 8 128 38 33 42 1617 5 8 256 38 26 42 1618 5 8 512 38 19 10 0 16 36 12 14 37 19 2 38 12 14 39 14 40 19 3 41 45 42 10 0 73 43 1 29) #1# #6# 718) cl-protobufs.meshtastic::config.position-config.position-flags-int-to-keyword (defun cl-protobufs.meshtastic::config.position-config.position-flags-int-to-keyword) (#6# . 718) 8 16 32 64 128 256 512 #Y(cl-protobufs.meshtastic::config.position-config.position-flags-int-to-keyword nil nil (24 45 49 26 10 0 42 50 5 11 1608 38 72 42 51 5 11 1609 38 65 42 52 5 11 1610 38 58 42 54 5 11 1611 38 51 42 1623 5 11 1612 38 44 42 1624 5 11 1613 38 37 42 1625 5 11 1614 38 30 42 1626 5 11 1615 38 23 42 1627 5 11 1616 38 16 42 1628 5 11 1617 38 9 42 1629 5 11 1618 38 2 75 45 57 10 0 73 43 1 29) #1# #6# 718) #:g30293 #:g30294 #:g30295 #:g30296 #:g30297 #:g30298 (defmethod cl-protobufs::enum-keyword-to-int (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.position-config.position-flags))) keyword) (#6# . 718) ((eql cl-protobufs.meshtastic::config.position-config.position-flags) t) (cl-protobufs.implementation::e keyword) #Y(cl-protobufs::enum-keyword-to-int nil nil (24 45 72 24 45 73 26 13 0 19 1 1605 29) #1# #6# 718) (defmethod cl-protobufs::enum-int-to-keyword (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.position-config.position-flags))) cl-protobufs.implementation::numeral) (#6# . 718) ((eql cl-protobufs.meshtastic::config.position-config.position-flags) t) (cl-protobufs.implementation::e cl-protobufs.implementation::numeral) #Y(cl-protobufs::enum-int-to-keyword nil nil (24 45 72 24 45 49 26 13 0 19 1 1620 29) #1# #6# 718) cl-protobufs.meshtastic::+config.position-config.unset+ (defconstant cl-protobufs.meshtastic::+config.position-config.unset+) (#6# . 718) cl-protobufs.meshtastic::+config.position-config.altitude+ (defconstant cl-protobufs.meshtastic::+config.position-config.altitude+) (#6# . 718) cl-protobufs.meshtastic::+config.position-config.altitude-msl+ (defconstant cl-protobufs.meshtastic::+config.position-config.altitude-msl+) (#6# . 718) cl-protobufs.meshtastic::+config.position-config.geoidal-separation+ (defconstant cl-protobufs.meshtastic::+config.position-config.geoidal-separation+) (#6# . 718) cl-protobufs.meshtastic::+config.position-config.dop+ (defconstant cl-protobufs.meshtastic::+config.position-config.dop+) (#6# . 718) cl-protobufs.meshtastic::+config.position-config.hvdop+ (defconstant cl-protobufs.meshtastic::+config.position-config.hvdop+) (#6# . 718) cl-protobufs.meshtastic::+config.position-config.satinview+ (defconstant cl-protobufs.meshtastic::+config.position-config.satinview+) (#6# . 718) cl-protobufs.meshtastic::+config.position-config.seq-no+ (defconstant cl-protobufs.meshtastic::+config.position-config.seq-no+) (#6# . 718) cl-protobufs.meshtastic::+config.position-config.timestamp+ (defconstant cl-protobufs.meshtastic::+config.position-config.timestamp+) (#6# . 718) cl-protobufs.meshtastic::+config.position-config.heading+ (defconstant cl-protobufs.meshtastic::+config.position-config.heading+) (#6# . 718) cl-protobufs.meshtastic::+config.position-config.speed+ (defconstant cl-protobufs.meshtastic::+config.position-config.speed+) (#6# . 718) (cl-protobufs.meshtastic::+config.position-config.unset+ cl-protobufs.meshtastic::+config.position-config.altitude+ cl-protobufs.meshtastic::+config.position-config.altitude-msl+ cl-protobufs.meshtastic::+config.position-config.geoidal-separation+ cl-protobufs.meshtastic::+config.position-config.dop+ cl-protobufs.meshtastic::+config.position-config.hvdop+ cl-protobufs.meshtastic::+config.position-config.satinview+ cl-protobufs.meshtastic::+config.position-config.seq-no+ cl-protobufs.meshtastic::+config.position-config.timestamp+ cl-protobufs.meshtastic::+config.position-config.heading+ cl-protobufs.meshtastic::+config.position-config.speed+) (defmethod cl-protobufs.implementation::enum-default-value (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.position-config.position-flags)))) (#6# . 718) ((eql cl-protobufs.meshtastic::config.position-config.position-flags)) (cl-protobufs.implementation::e) #Y(cl-protobufs.implementation::enum-default-value nil nil (24 45 72 26 11 1608 73 29) #1# #6# 718) 0 "PositionFlags" 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 (cl-protobufs.meshtastic::%%%%config.position-config.position-flags) ((inline cl-protobufs.meshtastic::%make-config.position-config)) cl-protobufs.meshtastic::config.position-config "CONFIG.POSITION-CONFIG-" ((cl-protobufs.meshtastic::%position-broadcast-secs 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%gps-update-interval 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%gps-attempt-time 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%position-flags 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%rx-gpio 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%tx-gpio 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%broadcast-smart-minimum-distance 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%broadcast-smart-minimum-interval-secs 0 :type cl-protobufs::uint32) (cl-protobufs.implementation::%%bytes nil :type #10#) (cl-protobufs.implementation::%%bool-values #136=(make-array 3 :element-type #12# :initial-contents #137=#*000) :type #138=(bit-vector 3)) (cl-protobufs.implementation::%%is-set #139=(make-array 0 . #16#) :type #140=(bit-vector 0))) (#18# (cl-protobufs.meshtastic::%position-broadcast-secs 0 cl-protobufs::uint32 nil 1 nil) (cl-protobufs.meshtastic::%gps-update-interval 0 cl-protobufs::uint32 nil 2 nil) (cl-protobufs.meshtastic::%gps-attempt-time 0 cl-protobufs::uint32 nil 3 nil) (cl-protobufs.meshtastic::%position-flags 0 cl-protobufs::uint32 nil 4 nil) (cl-protobufs.meshtastic::%rx-gpio 0 cl-protobufs::uint32 nil 5 nil) (cl-protobufs.meshtastic::%tx-gpio 0 cl-protobufs::uint32 nil 6 nil) (cl-protobufs.meshtastic::%broadcast-smart-minimum-distance 0 cl-protobufs::uint32 nil 7 nil) (cl-protobufs.meshtastic::%broadcast-smart-minimum-interval-secs 0 cl-protobufs::uint32 nil 8 nil) (cl-protobufs.implementation::%%bytes nil #10# nil 9 nil) (cl-protobufs.implementation::%%bool-values #136# #138# nil 10 nil) (cl-protobufs.implementation::%%is-set #139# #140# nil 11 nil)) cl-protobufs.meshtastic::copy-config.position-config (cl-protobufs.meshtastic::%make-config.position-config) #141=(cl-protobufs.meshtastic::config.position-config (:constructor cl-protobufs.meshtastic::%make-config.position-config) . #20#) (defstruct #141#) (#6# . 718) cl-protobufs.meshtastic::%make-config.position-config (defun cl-protobufs.meshtastic::%make-config.position-config) (#6# . 718) #142=(&key #143=#:%%skipped-bytes (#144=#:%position-broadcast-secs 0) (#145=#:%gps-update-interval 0) (#146=#:%gps-attempt-time 0) (#147=#:%position-flags 0) (#148=#:%rx-gpio 0) (#149=#:%tx-gpio 0) (#150=#:%broadcast-smart-minimum-distance 0) (#151=#:%broadcast-smart-minimum-interval-secs 0) #152=#:%%bytes (#153=#:%%bool-values (make-array 3 :element-type (quote bit) :initial-contents #137#)) (#154=#:%%is-set (make-array 0 :element-type (quote bit) :initial-element 0))) (nil :%%is-set :%%bool-values :%%bytes :%broadcast-smart-minimum-interval-secs :%broadcast-smart-minimum-distance :%tx-gpio :%rx-gpio :%position-flags :%gps-attempt-time :%gps-update-interval :%position-broadcast-secs :%%skipped-bytes) #143# #144# #145# #146# #147# #148# #149# #150# #151# #152# #137# #153# #154# #155=(bit-vector 0) #156=(bit-vector 0) #157=(bit-vector 3) #158=(bit-vector 3) #159=(or null (simple-array (unsigned-byte 8))) #160=(or null (simple-array (unsigned-byte 8))) cl-protobufs.meshtastic::%broadcast-smart-minimum-interval-secs cl-protobufs.meshtastic::%broadcast-smart-minimum-distance cl-protobufs.meshtastic::%tx-gpio cl-protobufs.meshtastic::%rx-gpio cl-protobufs.meshtastic::%position-flags cl-protobufs.meshtastic::%gps-attempt-time cl-protobufs.meshtastic::%gps-update-interval cl-protobufs.meshtastic::%position-broadcast-secs #161=(or null cl-protobufs::byte-vector) #162=(or null cl-protobufs::byte-vector) 0 #Y(cl-protobufs.meshtastic::%make-config.position-config nil nil (28 1725 22 40 2 77 46 1726 22 40 3 9 0 46 1727 22 40 3 9 0 46 1728 22 40 3 9 0 46 1729 22 40 3 9 0 46 1730 22 40 3 9 0 46 1731 22 40 3 9 0 46 1732 22 40 3 9 0 46 1733 22 40 3 9 0 46 1734 22 40 2 77 46 1735 22 40 15 9 3 14 222 15 223 14 224 15 1736 19 5 226 12 46 1737 22 40 15 9 0 14 222 15 223 14 228 9 0 19 5 226 12 46 1738 13 0 15 1739 19 2 231 76 39 12 13 0 15 1740 15 1712 15 233 19 4 234 13 1 15 1741 19 2 231 76 39 12 13 1 15 1742 15 1712 15 237 19 4 234 13 2 15 1743 19 2 231 76 39 12 13 2 15 1744 15 1712 15 240 19 4 234 13 3 15 241 19 2 231 76 39 12 13 3 15 241 15 1712 15 1745 19 4 234 13 4 15 241 19 2 231 76 39 12 13 4 15 241 15 1712 15 1746 19 4 234 13 5 15 241 19 2 231 76 39 12 13 5 15 241 15 1712 15 1747 19 4 234 13 6 15 241 19 2 231 76 39 12 13 6 15 241 15 1712 15 1748 19 4 234 13 7 15 241 19 2 231 76 39 12 13 7 15 241 15 1712 15 1749 19 4 234 13 8 15 241 19 2 231 76 39 12 13 8 15 241 15 1712 15 1750 19 4 234 13 9 15 241 19 2 231 76 39 12 13 9 15 241 15 1712 15 1751 19 4 234 13 10 15 241 19 2 231 76 39 12 13 10 15 241 15 1712 15 1752 19 4 234 13 11 15 1753 19 2 231 76 39 12 13 11 15 1754 15 1712 15 249 19 4 234 15 1755 13 11 13 10 13 9 13 8 13 7 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 13 251 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::%make-config.position-config #142# #39# (unless (typep #154# (quote #155#)) (si::structure-type-error #154# (quote #156#) (quote cl-protobufs.meshtastic::config.position-config) (quote cl-protobufs.implementation::%%is-set))) (unless (typep #153# (quote #157#)) (si::structure-type-error #153# (quote #158#) (quote cl-protobufs.meshtastic::config.position-config) (quote cl-protobufs.implementation::%%bool-values))) (unless (typep #152# (quote #159#)) (si::structure-type-error #152# (quote #160#) (quote cl-protobufs.meshtastic::config.position-config) (quote cl-protobufs.implementation::%%bytes))) (unless (typep #151# (quote cl-protobufs::uint32)) (si::structure-type-error #151# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.position-config) (quote cl-protobufs.meshtastic::%broadcast-smart-minimum-interval-secs))) (unless (typep #150# (quote cl-protobufs::uint32)) (si::structure-type-error #150# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.position-config) (quote cl-protobufs.meshtastic::%broadcast-smart-minimum-distance))) (unless (typep #149# (quote cl-protobufs::uint32)) (si::structure-type-error #149# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.position-config) (quote cl-protobufs.meshtastic::%tx-gpio))) (unless (typep #148# (quote cl-protobufs::uint32)) (si::structure-type-error #148# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.position-config) (quote cl-protobufs.meshtastic::%rx-gpio))) (unless (typep #147# (quote cl-protobufs::uint32)) (si::structure-type-error #147# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.position-config) (quote cl-protobufs.meshtastic::%position-flags))) (unless (typep #146# (quote cl-protobufs::uint32)) (si::structure-type-error #146# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.position-config) (quote cl-protobufs.meshtastic::%gps-attempt-time))) (unless (typep #145# (quote cl-protobufs::uint32)) (si::structure-type-error #145# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.position-config) (quote cl-protobufs.meshtastic::%gps-update-interval))) (unless (typep #144# (quote cl-protobufs::uint32)) (si::structure-type-error #144# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.position-config) (quote cl-protobufs.meshtastic::%position-broadcast-secs))) (unless (typep #143# (quote #161#)) (si::structure-type-error #143# (quote #162#) (quote cl-protobufs.meshtastic::config.position-config) (quote cl-protobufs.implementation::%%skipped-bytes))) (si::make-structure (load-time-value (find-class (quote cl-protobufs.meshtastic::config.position-config))) #143# #144# #145# #146# #147# #148# #149# #150# #151# #152# #153# #154#))) cl-protobufs.meshtastic::config.position-config-%%is-set (cl-protobufs.meshtastic::config.position-config-%%is-set) #:g30311 #Y(nil nil nil (24 45 1760 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 1712 6 2 12 9 11 13 0 10 1 6 6 12 15 274 13 2 15 273 1 1712 6 2 12 8 11 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.position-config-%%bool-values (cl-protobufs.meshtastic::config.position-config-%%bool-values) #:g30312 #Y(nil nil nil (24 45 1764 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 1712 6 2 12 9 10 13 0 10 1 6 6 12 15 274 13 2 15 273 1 1712 6 2 12 8 10 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.position-config-%%bytes (cl-protobufs.meshtastic::config.position-config-%%bytes) #:g30313 #Y(nil nil nil (24 45 1768 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 1712 6 2 12 9 9 13 0 10 1 6 6 12 15 274 13 2 15 273 1 1712 6 2 12 8 9 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.position-config-%broadcast-smart-minimum-interval-secs (cl-protobufs.meshtastic::config.position-config-%broadcast-smart-minimum-interval-secs) #:g30314 #Y(nil nil nil (24 45 1772 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 1712 6 2 12 9 8 13 0 10 1 6 6 12 15 274 13 2 15 273 1 1712 6 2 12 8 8 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.position-config-%broadcast-smart-minimum-distance (cl-protobufs.meshtastic::config.position-config-%broadcast-smart-minimum-distance) #:g30315 #Y(nil nil nil (24 45 1776 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 1712 6 2 12 9 7 13 0 10 1 6 6 12 15 274 13 2 15 273 1 1712 6 2 12 8 7 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.position-config-%tx-gpio (cl-protobufs.meshtastic::config.position-config-%tx-gpio) #:g30316 #Y(nil nil nil (24 45 1780 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 1712 6 2 12 9 6 13 0 10 1 6 6 12 15 274 13 2 15 273 1 1712 6 2 12 8 6 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.position-config-%rx-gpio (cl-protobufs.meshtastic::config.position-config-%rx-gpio) #:g30317 #Y(nil nil nil (24 45 1784 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 1712 6 2 12 9 5 13 0 10 1 6 6 12 15 274 13 2 15 273 1 1712 6 2 12 8 5 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.position-config-%position-flags (cl-protobufs.meshtastic::config.position-config-%position-flags) #:g30318 #Y(nil nil nil (24 45 1788 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 1712 6 2 12 9 4 13 0 10 1 6 6 12 15 274 13 2 15 273 1 1712 6 2 12 8 4 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.position-config-%gps-attempt-time (cl-protobufs.meshtastic::config.position-config-%gps-attempt-time) #:g30319 #Y(nil nil nil (24 45 1792 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 1712 6 2 12 9 3 13 0 10 1 6 6 12 15 274 13 2 15 273 1 1712 6 2 12 8 3 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.position-config-%gps-update-interval (cl-protobufs.meshtastic::config.position-config-%gps-update-interval) #:g30320 #Y(nil nil nil (24 45 1796 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 1712 6 2 12 9 2 13 0 10 1 6 6 12 15 274 13 2 15 273 1 1712 6 2 12 8 2 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.position-config-%position-broadcast-secs (cl-protobufs.meshtastic::config.position-config-%position-broadcast-secs) #:g30321 #Y(nil nil nil (24 45 1800 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 1712 6 2 12 9 1 13 0 10 1 6 6 12 15 274 13 2 15 273 1 1712 6 2 12 8 1 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.position-config-%%skipped-bytes (cl-protobufs.meshtastic::config.position-config-%%skipped-bytes) #:g30322 #Y(nil nil nil (24 45 1804 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 1712 6 2 12 9 0 13 0 10 1 6 6 12 15 274 13 2 15 273 1 1712 6 2 12 8 0 6 4 12 72 6 43 2 29) #1# #6# 718) ((inline cl-protobufs.meshtastic::config.position-config.position-broadcast-secs)) cl-protobufs.meshtastic::config.position-config.position-broadcast-secs (defun cl-protobufs.meshtastic::config.position-config.position-broadcast-secs) (#6# . 718) #163=(#164=#:obj29268) #164# #Y(cl-protobufs.meshtastic::config.position-config.position-broadcast-secs nil nil (24 45 1811 26 13 0 19 1 1798 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.position-broadcast-secs #163# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.position-config-%position-broadcast-secs #164#)))) ((inline #165=(setf cl-protobufs.meshtastic::config.position-config.position-broadcast-secs))) #165# (defun #165#) (#6# . 718) #166=(#167=#:new-value29270 #168=#:obj29269) #167# #168# #:g30325 #:g30326 #Y(#165# nil nil (24 45 1819 24 45 1820 26 10 0 45 1821 10 2 45 1822 13 1 15 1712 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #165# #166# #39# (declare (type cl-protobufs::uint32 #167#)) nil (setf (cl-protobufs.meshtastic::config.position-config-%position-broadcast-secs #168#) #167#))) ((inline cl-protobufs.meshtastic::config.position-config.%%has-position-broadcast-secs)) cl-protobufs.meshtastic::config.position-config.%%has-position-broadcast-secs (defun cl-protobufs.meshtastic::config.position-config.%%has-position-broadcast-secs) (#6# . 718) #169=(#168#) #170=#:cur-value29271 #Y(cl-protobufs.meshtastic::config.position-config.%%has-position-broadcast-secs nil nil (24 45 1820 26 13 0 19 1 1798 45 1830 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.%%has-position-broadcast-secs #169# #39# (let ((#170# (cl-protobufs.meshtastic::config.position-config-%position-broadcast-secs #168#))) (not (eq #170# 0))))) ((inline cl-protobufs.meshtastic::config.position-config.clear-position-broadcast-secs)) cl-protobufs.meshtastic::config.position-config.clear-position-broadcast-secs (defun cl-protobufs.meshtastic::config.position-config.clear-position-broadcast-secs) (#6# . 718) #171=(#168#) #:g30329 #:g30330 #Y(cl-protobufs.meshtastic::config.position-config.clear-position-broadcast-secs nil nil (24 45 1820 26 10 0 45 1838 8 0 45 1839 13 1 15 1712 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.clear-position-broadcast-secs #171# #39# nil (setf (cl-protobufs.meshtastic::config.position-config-%position-broadcast-secs #168#) 0))) cl-protobufs.meshtastic::position-broadcast-secs (defmethod cl-protobufs.meshtastic::position-broadcast-secs (#168# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (cl-protobufs.meshtastic::config.position-config) (#168#) #Y(cl-protobufs.meshtastic::position-broadcast-secs nil nil (24 45 1820 26 13 0 19 1 1807 29) #1# #6# 718) #172=(setf cl-protobufs.meshtastic::position-broadcast-secs) (defmethod #172# #167# (#168# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.position-config) (#167# #168#) #:g30337 #:g30338 (setf cl-protobufs.meshtastic::config.position-config.position-broadcast-secs) #Y(#172# nil nil (24 45 1819 24 45 1820 26 10 0 45 1853 10 2 45 1854 13 0 13 1 33 1855 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.position-config.clear-position-broadcast-secs) (cl-protobufs.meshtastic::config.position-config.position-broadcast-secs) ((inline cl-protobufs.meshtastic::config.position-config.position-broadcast-smart-enabled)) cl-protobufs.meshtastic::config.position-config.position-broadcast-smart-enabled (defun cl-protobufs.meshtastic::config.position-config.position-broadcast-smart-enabled) (#6# . 718) #173=(#174=#:obj29272) #174# #Y(cl-protobufs.meshtastic::config.position-config.position-broadcast-smart-enabled nil nil (24 45 1864 26 13 0 19 1 1762 12 9 0 19 2 223 16 368 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.position-broadcast-smart-enabled #173# #39# (the boolean (plusp (bit (cl-protobufs.meshtastic::config.position-config-%%bool-values #174#) 0))))) ((inline #175=(setf cl-protobufs.meshtastic::config.position-config.position-broadcast-smart-enabled))) #175# (defun #175#) (#6# . 718) #176=(#177=#:new-value29274 #178=#:obj29273) #177# #178# #Y(#175# nil nil (24 45 1872 24 45 1873 26 13 0 19 1 1762 12 9 0 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 378 29) #1# #6# 718) (function (ext::lambda-block #175# #176# #39# (declare (type boolean #177#)) nil (setf (bit (cl-protobufs.meshtastic::config.position-config-%%bool-values #178#) 0) (if #177# . #56#)))) ((inline cl-protobufs.meshtastic::config.position-config.%%has-position-broadcast-smart-enabled)) cl-protobufs.meshtastic::config.position-config.%%has-position-broadcast-smart-enabled (defun cl-protobufs.meshtastic::config.position-config.%%has-position-broadcast-smart-enabled) (#6# . 718) #179=(#178#) #180=#:cur-value29275 #Y(cl-protobufs.meshtastic::config.position-config.%%has-position-broadcast-smart-enabled nil nil (24 45 1873 26 13 0 19 1 1762 12 9 0 19 2 223 16 368 45 1881 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.%%has-position-broadcast-smart-enabled #179# #39# (let ((#180# (plusp (bit (cl-protobufs.meshtastic::config.position-config-%%bool-values #178#) 0)))) (not (eq #180# nil))))) ((inline cl-protobufs.meshtastic::config.position-config.clear-position-broadcast-smart-enabled)) cl-protobufs.meshtastic::config.position-config.clear-position-broadcast-smart-enabled (defun cl-protobufs.meshtastic::config.position-config.clear-position-broadcast-smart-enabled) (#6# . 718) #181=(#178#) #Y(cl-protobufs.meshtastic::config.position-config.clear-position-broadcast-smart-enabled nil nil (24 45 1873 26 13 0 19 1 1762 12 9 0 9 0 19 3 378 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.clear-position-broadcast-smart-enabled #181# #39# nil (setf (bit (cl-protobufs.meshtastic::config.position-config-%%bool-values #178#) 0) 0))) cl-protobufs.meshtastic::position-broadcast-smart-enabled (defmethod cl-protobufs.meshtastic::position-broadcast-smart-enabled (#178# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (cl-protobufs.meshtastic::config.position-config) (#178#) #Y(cl-protobufs.meshtastic::position-broadcast-smart-enabled nil nil (24 45 1873 26 13 0 19 1 1860 29) #1# #6# 718) #182=(setf cl-protobufs.meshtastic::position-broadcast-smart-enabled) (defmethod #182# #177# (#178# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.position-config) (#177# #178#) #:g30353 #:g30354 (setf cl-protobufs.meshtastic::config.position-config.position-broadcast-smart-enabled) #Y(#182# nil nil (24 45 1872 24 45 1873 26 10 0 45 1902 10 2 45 1903 13 0 13 1 33 1904 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.position-config.clear-position-broadcast-smart-enabled) (cl-protobufs.meshtastic::config.position-config.position-broadcast-smart-enabled) ((inline cl-protobufs.meshtastic::config.position-config.fixed-position)) cl-protobufs.meshtastic::config.position-config.fixed-position (defun cl-protobufs.meshtastic::config.position-config.fixed-position) (#6# . 718) #183=(#184=#:obj29276) #184# #Y(cl-protobufs.meshtastic::config.position-config.fixed-position nil nil (24 45 1913 26 13 0 19 1 1762 12 9 1 19 2 223 16 368 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.fixed-position #183# #39# (the boolean (plusp (bit (cl-protobufs.meshtastic::config.position-config-%%bool-values #184#) 1))))) ((inline #185=(setf cl-protobufs.meshtastic::config.position-config.fixed-position))) #185# (defun #185#) (#6# . 718) #186=(#187=#:new-value29278 #188=#:obj29277) #187# #188# #Y(#185# nil nil (24 45 1921 24 45 1922 26 13 0 19 1 1762 12 9 1 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 378 29) #1# #6# 718) (function (ext::lambda-block #185# #186# #39# (declare (type boolean #187#)) nil (setf (bit (cl-protobufs.meshtastic::config.position-config-%%bool-values #188#) 1) (if #187# . #56#)))) ((inline cl-protobufs.meshtastic::config.position-config.%%has-fixed-position)) cl-protobufs.meshtastic::config.position-config.%%has-fixed-position (defun cl-protobufs.meshtastic::config.position-config.%%has-fixed-position) (#6# . 718) #189=(#188#) #190=#:cur-value29279 #Y(cl-protobufs.meshtastic::config.position-config.%%has-fixed-position nil nil (24 45 1922 26 13 0 19 1 1762 12 9 1 19 2 223 16 368 45 1930 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.%%has-fixed-position #189# #39# (let ((#190# (plusp (bit (cl-protobufs.meshtastic::config.position-config-%%bool-values #188#) 1)))) (not (eq #190# nil))))) ((inline cl-protobufs.meshtastic::config.position-config.clear-fixed-position)) cl-protobufs.meshtastic::config.position-config.clear-fixed-position (defun cl-protobufs.meshtastic::config.position-config.clear-fixed-position) (#6# . 718) #191=(#188#) #Y(cl-protobufs.meshtastic::config.position-config.clear-fixed-position nil nil (24 45 1922 26 13 0 19 1 1762 12 9 1 9 0 19 3 378 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.clear-fixed-position #191# #39# nil (setf (bit (cl-protobufs.meshtastic::config.position-config-%%bool-values #188#) 1) 0))) cl-protobufs.meshtastic::fixed-position (defmethod cl-protobufs.meshtastic::fixed-position (#188# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (cl-protobufs.meshtastic::config.position-config) (#188#) #Y(cl-protobufs.meshtastic::fixed-position nil nil (24 45 1922 26 13 0 19 1 1909 29) #1# #6# 718) #192=(setf cl-protobufs.meshtastic::fixed-position) (defmethod #192# #187# (#188# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.position-config) (#187# #188#) #:g30369 #:g30370 (setf cl-protobufs.meshtastic::config.position-config.fixed-position) #Y(#192# nil nil (24 45 1921 24 45 1922 26 10 0 45 1951 10 2 45 1952 13 0 13 1 33 1953 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.position-config.clear-fixed-position) (cl-protobufs.meshtastic::config.position-config.fixed-position) ((inline cl-protobufs.meshtastic::config.position-config.gps-enabled)) cl-protobufs.meshtastic::config.position-config.gps-enabled (defun cl-protobufs.meshtastic::config.position-config.gps-enabled) (#6# . 718) #193=(#194=#:obj29280) #194# #Y(cl-protobufs.meshtastic::config.position-config.gps-enabled nil nil (24 45 1962 26 13 0 19 1 1762 12 9 2 19 2 223 16 368 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.gps-enabled #193# #39# (the boolean (plusp (bit (cl-protobufs.meshtastic::config.position-config-%%bool-values #194#) 2))))) ((inline #195=(setf cl-protobufs.meshtastic::config.position-config.gps-enabled))) #195# (defun #195#) (#6# . 718) #196=(#197=#:new-value29282 #198=#:obj29281) #197# #198# #Y(#195# nil nil (24 45 1970 24 45 1971 26 13 0 19 1 1762 12 9 2 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 378 29) #1# #6# 718) (function (ext::lambda-block #195# #196# #39# (declare (type boolean #197#)) nil (setf (bit (cl-protobufs.meshtastic::config.position-config-%%bool-values #198#) 2) (if #197# . #56#)))) ((inline cl-protobufs.meshtastic::config.position-config.%%has-gps-enabled)) cl-protobufs.meshtastic::config.position-config.%%has-gps-enabled (defun cl-protobufs.meshtastic::config.position-config.%%has-gps-enabled) (#6# . 718) #199=(#198#) #200=#:cur-value29283 #Y(cl-protobufs.meshtastic::config.position-config.%%has-gps-enabled nil nil (24 45 1971 26 13 0 19 1 1762 12 9 2 19 2 223 16 368 45 1979 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.%%has-gps-enabled #199# #39# (let ((#200# (plusp (bit (cl-protobufs.meshtastic::config.position-config-%%bool-values #198#) 2)))) (not (eq #200# nil))))) ((inline cl-protobufs.meshtastic::config.position-config.clear-gps-enabled)) cl-protobufs.meshtastic::config.position-config.clear-gps-enabled (defun cl-protobufs.meshtastic::config.position-config.clear-gps-enabled) (#6# . 718) #201=(#198#) #Y(cl-protobufs.meshtastic::config.position-config.clear-gps-enabled nil nil (24 45 1971 26 13 0 19 1 1762 12 9 2 9 0 19 3 378 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.clear-gps-enabled #201# #39# nil (setf (bit (cl-protobufs.meshtastic::config.position-config-%%bool-values #198#) 2) 0))) cl-protobufs.meshtastic::gps-enabled (defmethod cl-protobufs.meshtastic::gps-enabled (#198# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (cl-protobufs.meshtastic::config.position-config) (#198#) #Y(cl-protobufs.meshtastic::gps-enabled nil nil (24 45 1971 26 13 0 19 1 1958 29) #1# #6# 718) #202=(setf cl-protobufs.meshtastic::gps-enabled) (defmethod #202# #197# (#198# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.position-config) (#197# #198#) #:g30385 #:g30386 (setf cl-protobufs.meshtastic::config.position-config.gps-enabled) #Y(#202# nil nil (24 45 1970 24 45 1971 26 10 0 45 2000 10 2 45 2001 13 0 13 1 33 2002 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.position-config.clear-gps-enabled) (cl-protobufs.meshtastic::config.position-config.gps-enabled) ((inline cl-protobufs.meshtastic::config.position-config.gps-update-interval)) cl-protobufs.meshtastic::config.position-config.gps-update-interval (defun cl-protobufs.meshtastic::config.position-config.gps-update-interval) (#6# . 718) #203=(#204=#:obj29284) #204# #Y(cl-protobufs.meshtastic::config.position-config.gps-update-interval nil nil (24 45 2011 26 13 0 19 1 1794 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.gps-update-interval #203# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.position-config-%gps-update-interval #204#)))) ((inline #205=(setf cl-protobufs.meshtastic::config.position-config.gps-update-interval))) #205# (defun #205#) (#6# . 718) #206=(#207=#:new-value29286 #208=#:obj29285) #207# #208# #:g30389 #:g30390 #Y(#205# nil nil (24 45 2019 24 45 2020 26 10 0 45 2021 10 2 45 2022 13 1 15 1712 9 2 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #205# #206# #39# (declare (type cl-protobufs::uint32 #207#)) nil (setf (cl-protobufs.meshtastic::config.position-config-%gps-update-interval #208#) #207#))) ((inline cl-protobufs.meshtastic::config.position-config.%%has-gps-update-interval)) cl-protobufs.meshtastic::config.position-config.%%has-gps-update-interval (defun cl-protobufs.meshtastic::config.position-config.%%has-gps-update-interval) (#6# . 718) #209=(#208#) #210=#:cur-value29287 #Y(cl-protobufs.meshtastic::config.position-config.%%has-gps-update-interval nil nil (24 45 2020 26 13 0 19 1 1794 45 2030 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.%%has-gps-update-interval #209# #39# (let ((#210# (cl-protobufs.meshtastic::config.position-config-%gps-update-interval #208#))) (not (eq #210# 0))))) ((inline cl-protobufs.meshtastic::config.position-config.clear-gps-update-interval)) cl-protobufs.meshtastic::config.position-config.clear-gps-update-interval (defun cl-protobufs.meshtastic::config.position-config.clear-gps-update-interval) (#6# . 718) #211=(#208#) #:g30393 #:g30394 #Y(cl-protobufs.meshtastic::config.position-config.clear-gps-update-interval nil nil (24 45 2020 26 10 0 45 2038 8 0 45 2039 13 1 15 1712 9 2 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.clear-gps-update-interval #211# #39# nil (setf (cl-protobufs.meshtastic::config.position-config-%gps-update-interval #208#) 0))) cl-protobufs.meshtastic::gps-update-interval (defmethod cl-protobufs.meshtastic::gps-update-interval (#208# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (cl-protobufs.meshtastic::config.position-config) (#208#) #Y(cl-protobufs.meshtastic::gps-update-interval nil nil (24 45 2020 26 13 0 19 1 2007 29) #1# #6# 718) #212=(setf cl-protobufs.meshtastic::gps-update-interval) (defmethod #212# #207# (#208# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.position-config) (#207# #208#) #:g30401 #:g30402 (setf cl-protobufs.meshtastic::config.position-config.gps-update-interval) #Y(#212# nil nil (24 45 2019 24 45 2020 26 10 0 45 2053 10 2 45 2054 13 0 13 1 33 2055 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.position-config.clear-gps-update-interval) (cl-protobufs.meshtastic::config.position-config.gps-update-interval) ((inline cl-protobufs.meshtastic::config.position-config.gps-attempt-time)) cl-protobufs.meshtastic::config.position-config.gps-attempt-time (defun cl-protobufs.meshtastic::config.position-config.gps-attempt-time) (#6# . 718) #213=(#214=#:obj29288) #214# #Y(cl-protobufs.meshtastic::config.position-config.gps-attempt-time nil nil (24 45 2064 26 13 0 19 1 1790 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.gps-attempt-time #213# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.position-config-%gps-attempt-time #214#)))) ((inline #215=(setf cl-protobufs.meshtastic::config.position-config.gps-attempt-time))) #215# (defun #215#) (#6# . 718) #216=(#217=#:new-value29290 #218=#:obj29289) #217# #218# #:g30405 #:g30406 #Y(#215# nil nil (24 45 2072 24 45 2073 26 10 0 45 2074 10 2 45 2075 13 1 15 1712 9 3 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #215# #216# #39# (declare (type cl-protobufs::uint32 #217#)) nil (setf (cl-protobufs.meshtastic::config.position-config-%gps-attempt-time #218#) #217#))) ((inline cl-protobufs.meshtastic::config.position-config.%%has-gps-attempt-time)) cl-protobufs.meshtastic::config.position-config.%%has-gps-attempt-time (defun cl-protobufs.meshtastic::config.position-config.%%has-gps-attempt-time) (#6# . 718) #219=(#218#) #220=#:cur-value29291 #Y(cl-protobufs.meshtastic::config.position-config.%%has-gps-attempt-time nil nil (24 45 2073 26 13 0 19 1 1790 45 2083 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.%%has-gps-attempt-time #219# #39# (let ((#220# (cl-protobufs.meshtastic::config.position-config-%gps-attempt-time #218#))) (not (eq #220# 0))))) ((inline cl-protobufs.meshtastic::config.position-config.clear-gps-attempt-time)) cl-protobufs.meshtastic::config.position-config.clear-gps-attempt-time (defun cl-protobufs.meshtastic::config.position-config.clear-gps-attempt-time) (#6# . 718) #221=(#218#) #:g30409 #:g30410 #Y(cl-protobufs.meshtastic::config.position-config.clear-gps-attempt-time nil nil (24 45 2073 26 10 0 45 2091 8 0 45 2092 13 1 15 1712 9 3 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.clear-gps-attempt-time #221# #39# nil (setf (cl-protobufs.meshtastic::config.position-config-%gps-attempt-time #218#) 0))) cl-protobufs.meshtastic::gps-attempt-time (defmethod cl-protobufs.meshtastic::gps-attempt-time (#218# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (cl-protobufs.meshtastic::config.position-config) (#218#) #Y(cl-protobufs.meshtastic::gps-attempt-time nil nil (24 45 2073 26 13 0 19 1 2060 29) #1# #6# 718) #222=(setf cl-protobufs.meshtastic::gps-attempt-time) (defmethod #222# #217# (#218# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.position-config) (#217# #218#) #:g30417 #:g30418 (setf cl-protobufs.meshtastic::config.position-config.gps-attempt-time) #Y(#222# nil nil (24 45 2072 24 45 2073 26 10 0 45 2106 10 2 45 2107 13 0 13 1 33 2108 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.position-config.clear-gps-attempt-time) (cl-protobufs.meshtastic::config.position-config.gps-attempt-time) ((inline cl-protobufs.meshtastic::config.position-config.position-flags)) (defun cl-protobufs.meshtastic::config.position-config.position-flags) (#6# . 718) #223=(#224=#:obj29292) #224# #Y(cl-protobufs.meshtastic::config.position-config.position-flags nil nil (24 45 2116 26 13 0 19 1 1786 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.position-flags #223# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.position-config-%position-flags #224#)))) ((inline #225=(setf cl-protobufs.meshtastic::config.position-config.position-flags))) #225# (defun #225#) (#6# . 718) #226=(#227=#:new-value29294 #228=#:obj29293) #227# #228# #:g30421 #:g30422 #Y(#225# nil nil (24 45 2124 24 45 2125 26 10 0 45 2126 10 2 45 2127 13 1 15 1712 9 4 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #225# #226# #39# (declare (type cl-protobufs::uint32 #227#)) nil (setf (cl-protobufs.meshtastic::config.position-config-%position-flags #228#) #227#))) ((inline cl-protobufs.meshtastic::config.position-config.%%has-position-flags)) cl-protobufs.meshtastic::config.position-config.%%has-position-flags (defun cl-protobufs.meshtastic::config.position-config.%%has-position-flags) (#6# . 718) #229=(#228#) #230=#:cur-value29295 #Y(cl-protobufs.meshtastic::config.position-config.%%has-position-flags nil nil (24 45 2125 26 13 0 19 1 1786 45 2135 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.%%has-position-flags #229# #39# (let ((#230# (cl-protobufs.meshtastic::config.position-config-%position-flags #228#))) (not (eq #230# 0))))) ((inline cl-protobufs.meshtastic::config.position-config.clear-position-flags)) cl-protobufs.meshtastic::config.position-config.clear-position-flags (defun cl-protobufs.meshtastic::config.position-config.clear-position-flags) (#6# . 718) #231=(#228#) #:g30425 #:g30426 #Y(cl-protobufs.meshtastic::config.position-config.clear-position-flags nil nil (24 45 2125 26 10 0 45 2143 8 0 45 2144 13 1 15 1712 9 4 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.clear-position-flags #231# #39# nil (setf (cl-protobufs.meshtastic::config.position-config-%position-flags #228#) 0))) cl-protobufs.meshtastic::position-flags (defmethod cl-protobufs.meshtastic::position-flags (#228# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (cl-protobufs.meshtastic::config.position-config) (#228#) #Y(cl-protobufs.meshtastic::position-flags nil nil (24 45 2125 26 13 0 19 1 1602 29) #1# #6# 718) #232=(setf cl-protobufs.meshtastic::position-flags) (defmethod #232# #227# (#228# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.position-config) (#227# #228#) #:g30433 #:g30434 (setf cl-protobufs.meshtastic::config.position-config.position-flags) #Y(#232# nil nil (24 45 2124 24 45 2125 26 10 0 45 2158 10 2 45 2159 13 0 13 1 33 2160 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.position-config.clear-position-flags) (cl-protobufs.meshtastic::config.position-config.position-flags) ((inline cl-protobufs.meshtastic::config.position-config.rx-gpio)) cl-protobufs.meshtastic::config.position-config.rx-gpio (defun cl-protobufs.meshtastic::config.position-config.rx-gpio) (#6# . 718) #233=(#234=#:obj29296) #234# #Y(cl-protobufs.meshtastic::config.position-config.rx-gpio nil nil (24 45 2169 26 13 0 19 1 1782 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.rx-gpio #233# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.position-config-%rx-gpio #234#)))) ((inline #235=(setf cl-protobufs.meshtastic::config.position-config.rx-gpio))) #235# (defun #235#) (#6# . 718) #236=(#237=#:new-value29298 #238=#:obj29297) #237# #238# #:g30437 #:g30438 #Y(#235# nil nil (24 45 2177 24 45 2178 26 10 0 45 2179 10 2 45 2180 13 1 15 1712 9 5 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #235# #236# #39# (declare (type cl-protobufs::uint32 #237#)) nil (setf (cl-protobufs.meshtastic::config.position-config-%rx-gpio #238#) #237#))) ((inline cl-protobufs.meshtastic::config.position-config.%%has-rx-gpio)) cl-protobufs.meshtastic::config.position-config.%%has-rx-gpio (defun cl-protobufs.meshtastic::config.position-config.%%has-rx-gpio) (#6# . 718) #239=(#238#) #240=#:cur-value29299 #Y(cl-protobufs.meshtastic::config.position-config.%%has-rx-gpio nil nil (24 45 2178 26 13 0 19 1 1782 45 2188 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.%%has-rx-gpio #239# #39# (let ((#240# (cl-protobufs.meshtastic::config.position-config-%rx-gpio #238#))) (not (eq #240# 0))))) ((inline cl-protobufs.meshtastic::config.position-config.clear-rx-gpio)) cl-protobufs.meshtastic::config.position-config.clear-rx-gpio (defun cl-protobufs.meshtastic::config.position-config.clear-rx-gpio) (#6# . 718) #241=(#238#) #:g30441 #:g30442 #Y(cl-protobufs.meshtastic::config.position-config.clear-rx-gpio nil nil (24 45 2178 26 10 0 45 2196 8 0 45 2197 13 1 15 1712 9 5 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.clear-rx-gpio #241# #39# nil (setf (cl-protobufs.meshtastic::config.position-config-%rx-gpio #238#) 0))) cl-protobufs.meshtastic::rx-gpio (defmethod cl-protobufs.meshtastic::rx-gpio (#238# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (cl-protobufs.meshtastic::config.position-config) (#238#) #Y(cl-protobufs.meshtastic::rx-gpio nil nil (24 45 2178 26 13 0 19 1 2165 29) #1# #6# 718) #242=(setf cl-protobufs.meshtastic::rx-gpio) (defmethod #242# #237# (#238# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.position-config) (#237# #238#) #:g30449 #:g30450 (setf cl-protobufs.meshtastic::config.position-config.rx-gpio) #Y(#242# nil nil (24 45 2177 24 45 2178 26 10 0 45 2211 10 2 45 2212 13 0 13 1 33 2213 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.position-config.clear-rx-gpio) (cl-protobufs.meshtastic::config.position-config.rx-gpio) ((inline cl-protobufs.meshtastic::config.position-config.tx-gpio)) cl-protobufs.meshtastic::config.position-config.tx-gpio (defun cl-protobufs.meshtastic::config.position-config.tx-gpio) (#6# . 718) #243=(#244=#:obj29300) #244# #Y(cl-protobufs.meshtastic::config.position-config.tx-gpio nil nil (24 45 2222 26 13 0 19 1 1778 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.tx-gpio #243# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.position-config-%tx-gpio #244#)))) ((inline #245=(setf cl-protobufs.meshtastic::config.position-config.tx-gpio))) #245# (defun #245#) (#6# . 718) #246=(#247=#:new-value29302 #248=#:obj29301) #247# #248# #:g30453 #:g30454 #Y(#245# nil nil (24 45 2230 24 45 2231 26 10 0 45 2232 10 2 45 2233 13 1 15 1712 9 6 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #245# #246# #39# (declare (type cl-protobufs::uint32 #247#)) nil (setf (cl-protobufs.meshtastic::config.position-config-%tx-gpio #248#) #247#))) ((inline cl-protobufs.meshtastic::config.position-config.%%has-tx-gpio)) cl-protobufs.meshtastic::config.position-config.%%has-tx-gpio (defun cl-protobufs.meshtastic::config.position-config.%%has-tx-gpio) (#6# . 718) #249=(#248#) #250=#:cur-value29303 #Y(cl-protobufs.meshtastic::config.position-config.%%has-tx-gpio nil nil (24 45 2231 26 13 0 19 1 1778 45 2241 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.%%has-tx-gpio #249# #39# (let ((#250# (cl-protobufs.meshtastic::config.position-config-%tx-gpio #248#))) (not (eq #250# 0))))) ((inline cl-protobufs.meshtastic::config.position-config.clear-tx-gpio)) cl-protobufs.meshtastic::config.position-config.clear-tx-gpio (defun cl-protobufs.meshtastic::config.position-config.clear-tx-gpio) (#6# . 718) #251=(#248#) #:g30457 #:g30458 #Y(cl-protobufs.meshtastic::config.position-config.clear-tx-gpio nil nil (24 45 2231 26 10 0 45 2249 8 0 45 2250 13 1 15 1712 9 6 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.clear-tx-gpio #251# #39# nil (setf (cl-protobufs.meshtastic::config.position-config-%tx-gpio #248#) 0))) cl-protobufs.meshtastic::tx-gpio (defmethod cl-protobufs.meshtastic::tx-gpio (#248# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (cl-protobufs.meshtastic::config.position-config) (#248#) #Y(cl-protobufs.meshtastic::tx-gpio nil nil (24 45 2231 26 13 0 19 1 2218 29) #1# #6# 718) #252=(setf cl-protobufs.meshtastic::tx-gpio) (defmethod #252# #247# (#248# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.position-config) (#247# #248#) #:g30465 #:g30466 (setf cl-protobufs.meshtastic::config.position-config.tx-gpio) #Y(#252# nil nil (24 45 2230 24 45 2231 26 10 0 45 2264 10 2 45 2265 13 0 13 1 33 2266 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.position-config.clear-tx-gpio) (cl-protobufs.meshtastic::config.position-config.tx-gpio) ((inline cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-distance)) cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-distance (defun cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-distance) (#6# . 718) #253=(#254=#:obj29304) #254# #Y(cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-distance nil nil (24 45 2275 26 13 0 19 1 1774 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-distance #253# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.position-config-%broadcast-smart-minimum-distance #254#)))) ((inline #255=(setf cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-distance))) #255# (defun #255#) (#6# . 718) #256=(#257=#:new-value29306 #258=#:obj29305) #257# #258# #:g30469 #:g30470 #Y(#255# nil nil (24 45 2283 24 45 2284 26 10 0 45 2285 10 2 45 2286 13 1 15 1712 9 7 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #255# #256# #39# (declare (type cl-protobufs::uint32 #257#)) nil (setf (cl-protobufs.meshtastic::config.position-config-%broadcast-smart-minimum-distance #258#) #257#))) ((inline cl-protobufs.meshtastic::config.position-config.%%has-broadcast-smart-minimum-distance)) cl-protobufs.meshtastic::config.position-config.%%has-broadcast-smart-minimum-distance (defun cl-protobufs.meshtastic::config.position-config.%%has-broadcast-smart-minimum-distance) (#6# . 718) #259=(#258#) #260=#:cur-value29307 #Y(cl-protobufs.meshtastic::config.position-config.%%has-broadcast-smart-minimum-distance nil nil (24 45 2284 26 13 0 19 1 1774 45 2294 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.%%has-broadcast-smart-minimum-distance #259# #39# (let ((#260# (cl-protobufs.meshtastic::config.position-config-%broadcast-smart-minimum-distance #258#))) (not (eq #260# 0))))) ((inline cl-protobufs.meshtastic::config.position-config.clear-broadcast-smart-minimum-distance)) cl-protobufs.meshtastic::config.position-config.clear-broadcast-smart-minimum-distance (defun cl-protobufs.meshtastic::config.position-config.clear-broadcast-smart-minimum-distance) (#6# . 718) #261=(#258#) #:g30473 #:g30474 #Y(cl-protobufs.meshtastic::config.position-config.clear-broadcast-smart-minimum-distance nil nil (24 45 2284 26 10 0 45 2302 8 0 45 2303 13 1 15 1712 9 7 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.clear-broadcast-smart-minimum-distance #261# #39# nil (setf (cl-protobufs.meshtastic::config.position-config-%broadcast-smart-minimum-distance #258#) 0))) cl-protobufs.meshtastic::broadcast-smart-minimum-distance (defmethod cl-protobufs.meshtastic::broadcast-smart-minimum-distance (#258# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (cl-protobufs.meshtastic::config.position-config) (#258#) #Y(cl-protobufs.meshtastic::broadcast-smart-minimum-distance nil nil (24 45 2284 26 13 0 19 1 2271 29) #1# #6# 718) #262=(setf cl-protobufs.meshtastic::broadcast-smart-minimum-distance) (defmethod #262# #257# (#258# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.position-config) (#257# #258#) #:g30481 #:g30482 (setf cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-distance) #Y(#262# nil nil (24 45 2283 24 45 2284 26 10 0 45 2317 10 2 45 2318 13 0 13 1 33 2319 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.position-config.clear-broadcast-smart-minimum-distance) (cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-distance) ((inline cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-interval-secs)) cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-interval-secs (defun cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-interval-secs) (#6# . 718) #263=(#264=#:obj29308) #264# #Y(cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-interval-secs nil nil (24 45 2328 26 13 0 19 1 1770 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-interval-secs #263# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.position-config-%broadcast-smart-minimum-interval-secs #264#)))) ((inline #265=(setf cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-interval-secs))) #265# (defun #265#) (#6# . 718) #266=(#267=#:new-value29310 #268=#:obj29309) #267# #268# #:g30485 #:g30486 #Y(#265# nil nil (24 45 2336 24 45 2337 26 10 0 45 2338 10 2 45 2339 13 1 15 1712 9 8 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #265# #266# #39# (declare (type cl-protobufs::uint32 #267#)) nil (setf (cl-protobufs.meshtastic::config.position-config-%broadcast-smart-minimum-interval-secs #268#) #267#))) ((inline cl-protobufs.meshtastic::config.position-config.%%has-broadcast-smart-minimum-interval-secs)) cl-protobufs.meshtastic::config.position-config.%%has-broadcast-smart-minimum-interval-secs (defun cl-protobufs.meshtastic::config.position-config.%%has-broadcast-smart-minimum-interval-secs) (#6# . 718) #269=(#268#) #270=#:cur-value29311 #Y(cl-protobufs.meshtastic::config.position-config.%%has-broadcast-smart-minimum-interval-secs nil nil (24 45 2337 26 13 0 19 1 1770 45 2347 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.%%has-broadcast-smart-minimum-interval-secs #269# #39# (let ((#270# (cl-protobufs.meshtastic::config.position-config-%broadcast-smart-minimum-interval-secs #268#))) (not (eq #270# 0))))) ((inline cl-protobufs.meshtastic::config.position-config.clear-broadcast-smart-minimum-interval-secs)) cl-protobufs.meshtastic::config.position-config.clear-broadcast-smart-minimum-interval-secs (defun cl-protobufs.meshtastic::config.position-config.clear-broadcast-smart-minimum-interval-secs) (#6# . 718) #271=(#268#) #:g30489 #:g30490 #Y(cl-protobufs.meshtastic::config.position-config.clear-broadcast-smart-minimum-interval-secs nil nil (24 45 2337 26 10 0 45 2355 8 0 45 2356 13 1 15 1712 9 8 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position-config.clear-broadcast-smart-minimum-interval-secs #271# #39# nil (setf (cl-protobufs.meshtastic::config.position-config-%broadcast-smart-minimum-interval-secs #268#) 0))) cl-protobufs.meshtastic::broadcast-smart-minimum-interval-secs (defmethod cl-protobufs.meshtastic::broadcast-smart-minimum-interval-secs (#268# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (cl-protobufs.meshtastic::config.position-config) (#268#) #Y(cl-protobufs.meshtastic::broadcast-smart-minimum-interval-secs nil nil (24 45 2337 26 13 0 19 1 2324 29) #1# #6# 718) #272=(setf cl-protobufs.meshtastic::broadcast-smart-minimum-interval-secs) (defmethod #272# #267# (#268# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.position-config) (#267# #268#) #:g30497 #:g30498 (setf cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-interval-secs) #Y(#272# nil nil (24 45 2336 24 45 2337 26 10 0 45 2370 10 2 45 2371 13 0 13 1 33 2372 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.position-config.clear-broadcast-smart-minimum-interval-secs) (cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-interval-secs) ((inline cl-protobufs.meshtastic::make-config.position-config)) cl-protobufs.meshtastic::make-config.position-config (defun cl-protobufs.meshtastic::make-config.position-config) (#6# . 718) #273=(&key (cl-protobufs.meshtastic::position-broadcast-secs :%unset) (cl-protobufs.meshtastic::position-broadcast-smart-enabled :%unset) (cl-protobufs.meshtastic::fixed-position :%unset) (cl-protobufs.meshtastic::gps-enabled :%unset) (cl-protobufs.meshtastic::gps-update-interval :%unset) (cl-protobufs.meshtastic::gps-attempt-time :%unset) (cl-protobufs.meshtastic::position-flags :%unset) (cl-protobufs.meshtastic::rx-gpio :%unset) (cl-protobufs.meshtastic::tx-gpio :%unset) (cl-protobufs.meshtastic::broadcast-smart-minimum-distance :%unset) (cl-protobufs.meshtastic::broadcast-smart-minimum-interval-secs :%unset)) (nil :broadcast-smart-minimum-interval-secs :broadcast-smart-minimum-distance :tx-gpio :rx-gpio :position-flags :gps-attempt-time :gps-update-interval :gps-enabled :fixed-position :position-broadcast-smart-enabled :position-broadcast-secs) #274=#:obj29267 #:g30521 #:g30522 (setf cl-protobufs.meshtastic::config.position-config.position-broadcast-secs) #:g30523 #:g30524 (setf cl-protobufs.meshtastic::config.position-config.position-broadcast-smart-enabled) #:g30525 #:g30526 (setf cl-protobufs.meshtastic::config.position-config.fixed-position) #:g30527 #:g30528 (setf cl-protobufs.meshtastic::config.position-config.gps-enabled) #:g30529 #:g30530 (setf cl-protobufs.meshtastic::config.position-config.gps-update-interval) #:g30531 #:g30532 (setf cl-protobufs.meshtastic::config.position-config.gps-attempt-time) #:g30533 #:g30534 (setf cl-protobufs.meshtastic::config.position-config.position-flags) #:g30535 #:g30536 (setf cl-protobufs.meshtastic::config.position-config.rx-gpio) #:g30537 #:g30538 (setf cl-protobufs.meshtastic::config.position-config.tx-gpio) #:g30539 #:g30540 (setf cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-distance) #:g30541 #:g30542 (setf cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-interval-secs) #Y(cl-protobufs.meshtastic::make-config.position-config nil nil (28 2381 22 40 3 14 777 46 1842 22 40 3 14 777 46 1891 22 40 3 14 777 46 1940 22 40 3 14 777 46 1989 22 40 3 14 777 46 2042 22 40 3 14 777 46 2095 22 40 3 14 777 46 2147 22 40 3 14 777 46 2200 22 40 3 14 777 46 2253 22 40 3 14 777 46 2306 22 40 3 14 777 46 2359 19 0 1721 45 2382 13 11 11 777 17 332 40 4 10 11 76 76 39 21 10 0 45 2383 10 12 45 2384 13 0 13 1 33 2385 18 2 43 1 43 1 13 10 11 777 17 332 76 39 21 10 0 45 2386 10 11 45 2387 13 0 13 1 33 2388 18 2 43 1 43 1 13 9 11 777 17 332 76 39 21 10 0 45 2389 10 10 45 2390 13 0 13 1 33 2391 18 2 43 1 43 1 13 8 11 777 17 332 76 39 21 10 0 45 2392 10 9 45 2393 13 0 13 1 33 2394 18 2 43 1 43 1 13 7 11 777 17 332 40 4 10 7 76 76 39 21 10 0 45 2395 10 8 45 2396 13 0 13 1 33 2397 18 2 43 1 43 1 13 6 11 777 17 332 40 4 10 6 76 76 39 21 10 0 45 2398 10 7 45 2399 13 0 13 1 33 2400 18 2 43 1 43 1 13 5 11 777 17 332 40 4 10 5 76 76 39 21 10 0 45 2401 10 6 45 2402 13 0 13 1 33 2403 18 2 43 1 43 1 13 4 11 777 17 332 40 4 10 4 76 76 39 21 10 0 45 2404 10 5 45 2405 13 0 13 1 33 2406 18 2 43 1 43 1 13 3 11 777 17 332 40 4 10 3 76 76 39 21 10 0 45 2407 10 4 45 2408 13 0 13 1 33 2409 18 2 43 1 43 1 13 2 11 777 17 332 40 4 10 2 76 76 39 21 10 0 45 2410 10 3 45 2411 13 0 13 1 33 2412 18 2 43 1 43 1 13 1 11 777 17 332 40 4 10 1 76 76 39 21 10 0 45 2413 10 2 45 2414 13 0 13 1 33 2415 18 2 43 1 43 1 10 0 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::make-config.position-config #273# #39# (let ((#274# (cl-protobufs.meshtastic::%make-config.position-config))) (unless (or (eq cl-protobufs.meshtastic::position-broadcast-secs :%unset) (not cl-protobufs.meshtastic::position-broadcast-secs)) (setf (cl-protobufs.meshtastic::config.position-config.position-broadcast-secs #274#) cl-protobufs.meshtastic::position-broadcast-secs)) (unless (eq cl-protobufs.meshtastic::position-broadcast-smart-enabled :%unset) (setf (cl-protobufs.meshtastic::config.position-config.position-broadcast-smart-enabled #274#) cl-protobufs.meshtastic::position-broadcast-smart-enabled)) (unless (eq cl-protobufs.meshtastic::fixed-position :%unset) (setf (cl-protobufs.meshtastic::config.position-config.fixed-position #274#) cl-protobufs.meshtastic::fixed-position)) (unless (eq cl-protobufs.meshtastic::gps-enabled :%unset) (setf (cl-protobufs.meshtastic::config.position-config.gps-enabled #274#) cl-protobufs.meshtastic::gps-enabled)) (unless (or (eq cl-protobufs.meshtastic::gps-update-interval :%unset) (not cl-protobufs.meshtastic::gps-update-interval)) (setf (cl-protobufs.meshtastic::config.position-config.gps-update-interval #274#) cl-protobufs.meshtastic::gps-update-interval)) (unless (or (eq cl-protobufs.meshtastic::gps-attempt-time :%unset) (not cl-protobufs.meshtastic::gps-attempt-time)) (setf (cl-protobufs.meshtastic::config.position-config.gps-attempt-time #274#) cl-protobufs.meshtastic::gps-attempt-time)) (unless (or (eq cl-protobufs.meshtastic::position-flags :%unset) (not cl-protobufs.meshtastic::position-flags)) (setf (cl-protobufs.meshtastic::config.position-config.position-flags #274#) cl-protobufs.meshtastic::position-flags)) (unless (or (eq cl-protobufs.meshtastic::rx-gpio :%unset) (not cl-protobufs.meshtastic::rx-gpio)) (setf (cl-protobufs.meshtastic::config.position-config.rx-gpio #274#) cl-protobufs.meshtastic::rx-gpio)) (unless (or (eq cl-protobufs.meshtastic::tx-gpio :%unset) (not cl-protobufs.meshtastic::tx-gpio)) (setf (cl-protobufs.meshtastic::config.position-config.tx-gpio #274#) cl-protobufs.meshtastic::tx-gpio)) (unless (or (eq cl-protobufs.meshtastic::broadcast-smart-minimum-distance :%unset) (not cl-protobufs.meshtastic::broadcast-smart-minimum-distance)) (setf (cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-distance #274#) cl-protobufs.meshtastic::broadcast-smart-minimum-distance)) (unless (or (eq cl-protobufs.meshtastic::broadcast-smart-minimum-interval-secs :%unset) (not cl-protobufs.meshtastic::broadcast-smart-minimum-interval-secs)) (setf (cl-protobufs.meshtastic::config.position-config.broadcast-smart-minimum-interval-secs #274#) cl-protobufs.meshtastic::broadcast-smart-minimum-interval-secs)) #274#))) cl-protobufs.meshtastic::config.position-config.clear-%%is-set (defun cl-protobufs.meshtastic::config.position-config.clear-%%is-set) (#6# . 718) (#274#) #Y(cl-protobufs.meshtastic::config.position-config.clear-%%is-set nil nil (24 45 2382 26 13 0 19 1 1758 12 9 0 19 2 812 29) #1# #6# 718) (cl-protobufs.meshtastic::make-config.position-config cl-protobufs.meshtastic::config.position-config-%%is-set) (defmethod cl-protobufs::clear (#274# cl-protobufs.meshtastic::config.position-config)) (#6# . 718) (cl-protobufs.meshtastic::config.position-config) (#274#) #:g30549 #:g30550 #Y(cl-protobufs::clear nil nil (24 45 2382 26 10 0 45 2428 75 45 2429 13 1 15 204 9 0 13 0 19 4 118 43 1 43 1 13 0 19 1 1834 13 0 19 1 1885 13 0 19 1 1934 13 0 19 1 1983 13 0 19 1 2034 13 0 19 1 2087 13 0 19 1 2139 13 0 19 1 2192 13 0 19 1 2245 13 0 19 1 2298 13 0 19 1 2351 13 0 19 1 2418 29) #1# #6# 718) 0 #:g30551 #:g30552 #:g30553 (setf slot-value) #:g30554 #:g30555 "PositionConfig" #:g30556 (setf slot-value) #:g30557 #:g30558 "meshtastic.Config.PositionConfig" #:g30559 (setf slot-value) #:g30560 #:g30561 #:g30562 (setf slot-value) #:g30563 #:g30564 #:g30565 (setf slot-value) #:g30566 #:g30567 0 #:g30568 (setf slot-value) #:g30569 #:g30570 #:g30571 (setf slot-value) #:g30572 #:g30573 #:g30574 (setf slot-value) #:g30575 #:g30576 #:g30577 (setf slot-value) #:g30578 #:g30579 #:g30580 (setf slot-value) 0 0 #:g30581 #:g30582 #:g30583 (setf slot-value) #:g30584 #:g30585 "position_broadcast_secs" #:g30586 (setf slot-value) #:g30587 #:g30588 "meshtastic.Config.PositionConfig.position_broadcast_secs" #:g30589 (setf slot-value) #:g30590 #:g30591 #:g30592 (setf slot-value) #:g30593 #:g30594 #:g30595 (setf slot-value) #:g30596 #:g30597 #:g30598 (setf slot-value) #:g30599 #:g30600 #:g30601 (setf slot-value) #:g30602 #:g30603 #:g30604 (setf slot-value) #:g30605 #:g30606 #:g30607 (setf slot-value) #:g30608 #:g30609 #:g30610 (setf slot-value) #:g30611 #:g30612 #:g30613 (setf slot-value) #:g30614 #:g30615 #:g30616 (setf slot-value) #:g30617 #:g30618 "positionBroadcastSecs" #:g30619 (setf slot-value) #:g30620 #:g30621 #:g30622 (setf slot-value) #:g30623 #:g30624 #:g30625 (setf slot-value) #:g30626 #:g30627 #:g30628 (setf slot-value) #:g30629 #:g30630 #:g30631 (setf slot-value) #:g30632 #:g30633 #:g30634 (setf slot-value) 0 0 #:g30635 #:g30636 #:g30637 (setf slot-value) #:g30638 #:g30639 "position_broadcast_smart_enabled" #:g30640 (setf slot-value) #:g30641 #:g30642 "meshtastic.Config.PositionConfig.position_broadcast_smart_enabled" #:g30643 (setf slot-value) #:g30644 #:g30645 #:g30646 (setf slot-value) #:g30647 #:g30648 #:g30649 (setf slot-value) #:g30650 #:g30651 #:g30652 (setf slot-value) #:g30653 #:g30654 #:g30655 (setf slot-value) #:g30656 #:g30657 #:g30658 (setf slot-value) #:g30659 #:g30660 #:g30661 (setf slot-value) #:g30662 #:g30663 #:g30664 (setf slot-value) #:g30665 #:g30666 cl-protobufs.meshtastic::%position-broadcast-smart-enabled #:g30667 (setf slot-value) #:g30668 #:g30669 #:g30670 (setf slot-value) #:g30671 #:g30672 "positionBroadcastSmartEnabled" #:g30673 (setf slot-value) #:g30674 #:g30675 #:g30676 (setf slot-value) #:g30677 #:g30678 #:g30679 (setf slot-value) #:g30680 #:g30681 #:g30682 (setf slot-value) #:g30683 #:g30684 #:g30685 (setf slot-value) #:g30686 #:g30687 #:g30688 (setf slot-value) 0 0 #:g30689 #:g30690 #:g30691 (setf slot-value) #:g30692 #:g30693 "fixed_position" #:g30694 (setf slot-value) #:g30695 #:g30696 "meshtastic.Config.PositionConfig.fixed_position" #:g30697 (setf slot-value) #:g30698 #:g30699 #:g30700 (setf slot-value) #:g30701 #:g30702 #:g30703 (setf slot-value) #:g30704 #:g30705 #:g30706 (setf slot-value) #:g30707 #:g30708 #:g30709 (setf slot-value) #:g30710 #:g30711 #:g30712 (setf slot-value) #:g30713 #:g30714 #:g30715 (setf slot-value) #:g30716 #:g30717 #:g30718 (setf slot-value) #:g30719 #:g30720 cl-protobufs.meshtastic::%fixed-position #:g30721 (setf slot-value) #:g30722 #:g30723 #:g30724 (setf slot-value) #:g30725 #:g30726 "fixedPosition" #:g30727 (setf slot-value) #:g30728 #:g30729 #:g30730 (setf slot-value) #:g30731 #:g30732 #:g30733 (setf slot-value) #:g30734 #:g30735 #:g30736 (setf slot-value) #:g30737 #:g30738 #:g30739 (setf slot-value) #:g30740 #:g30741 #:g30742 (setf slot-value) 0 0 #:g30743 #:g30744 #:g30745 (setf slot-value) #:g30746 #:g30747 "gps_enabled" #:g30748 (setf slot-value) #:g30749 #:g30750 "meshtastic.Config.PositionConfig.gps_enabled" #:g30751 (setf slot-value) #:g30752 #:g30753 #:g30754 (setf slot-value) #:g30755 #:g30756 #:g30757 (setf slot-value) #:g30758 #:g30759 #:g30760 (setf slot-value) #:g30761 #:g30762 #:g30763 (setf slot-value) #:g30764 #:g30765 #:g30766 (setf slot-value) #:g30767 #:g30768 #:g30769 (setf slot-value) #:g30770 #:g30771 #:g30772 (setf slot-value) #:g30773 #:g30774 cl-protobufs.meshtastic::%gps-enabled #:g30775 (setf slot-value) #:g30776 #:g30777 #:g30778 (setf slot-value) #:g30779 #:g30780 "gpsEnabled" #:g30781 (setf slot-value) #:g30782 #:g30783 #:g30784 (setf slot-value) #:g30785 #:g30786 #:g30787 (setf slot-value) #:g30788 #:g30789 #:g30790 (setf slot-value) #:g30791 #:g30792 #:g30793 (setf slot-value) #:g30794 #:g30795 #:g30796 (setf slot-value) 0 0 #:g30797 #:g30798 #:g30799 (setf slot-value) #:g30800 #:g30801 "gps_update_interval" #:g30802 (setf slot-value) #:g30803 #:g30804 "meshtastic.Config.PositionConfig.gps_update_interval" #:g30805 (setf slot-value) #:g30806 #:g30807 #:g30808 (setf slot-value) #:g30809 #:g30810 #:g30811 (setf slot-value) #:g30812 #:g30813 #:g30814 (setf slot-value) #:g30815 #:g30816 #:g30817 (setf slot-value) #:g30818 #:g30819 #:g30820 (setf slot-value) #:g30821 #:g30822 #:g30823 (setf slot-value) #:g30824 #:g30825 #:g30826 (setf slot-value) #:g30827 #:g30828 #:g30829 (setf slot-value) #:g30830 #:g30831 #:g30832 (setf slot-value) #:g30833 #:g30834 "gpsUpdateInterval" #:g30835 (setf slot-value) #:g30836 #:g30837 #:g30838 (setf slot-value) #:g30839 #:g30840 #:g30841 (setf slot-value) #:g30842 #:g30843 #:g30844 (setf slot-value) #:g30845 #:g30846 #:g30847 (setf slot-value) #:g30848 #:g30849 #:g30850 (setf slot-value) 0 0 #:g30851 #:g30852 #:g30853 (setf slot-value) #:g30854 #:g30855 "gps_attempt_time" #:g30856 (setf slot-value) #:g30857 #:g30858 "meshtastic.Config.PositionConfig.gps_attempt_time" #:g30859 (setf slot-value) #:g30860 #:g30861 #:g30862 (setf slot-value) #:g30863 #:g30864 #:g30865 (setf slot-value) #:g30866 #:g30867 #:g30868 (setf slot-value) #:g30869 #:g30870 #:g30871 (setf slot-value) #:g30872 #:g30873 #:g30874 (setf slot-value) #:g30875 #:g30876 #:g30877 (setf slot-value) #:g30878 #:g30879 #:g30880 (setf slot-value) #:g30881 #:g30882 #:g30883 (setf slot-value) #:g30884 #:g30885 #:g30886 (setf slot-value) #:g30887 #:g30888 "gpsAttemptTime" #:g30889 (setf slot-value) #:g30890 #:g30891 #:g30892 (setf slot-value) #:g30893 #:g30894 #:g30895 (setf slot-value) #:g30896 #:g30897 #:g30898 (setf slot-value) #:g30899 #:g30900 #:g30901 (setf slot-value) #:g30902 #:g30903 #:g30904 (setf slot-value) 0 0 #:g30905 #:g30906 #:g30907 (setf slot-value) #:g30908 #:g30909 "position_flags" #:g30910 (setf slot-value) #:g30911 #:g30912 "meshtastic.Config.PositionConfig.position_flags" #:g30913 (setf slot-value) #:g30914 #:g30915 #:g30916 (setf slot-value) #:g30917 #:g30918 #:g30919 (setf slot-value) #:g30920 #:g30921 #:g30922 (setf slot-value) #:g30923 #:g30924 #:g30925 (setf slot-value) #:g30926 #:g30927 #:g30928 (setf slot-value) #:g30929 #:g30930 #:g30931 (setf slot-value) #:g30932 #:g30933 #:g30934 (setf slot-value) #:g30935 #:g30936 #:g30937 (setf slot-value) #:g30938 #:g30939 #:g30940 (setf slot-value) #:g30941 #:g30942 "positionFlags" #:g30943 (setf slot-value) #:g30944 #:g30945 #:g30946 (setf slot-value) #:g30947 #:g30948 #:g30949 (setf slot-value) #:g30950 #:g30951 #:g30952 (setf slot-value) #:g30953 #:g30954 #:g30955 (setf slot-value) #:g30956 #:g30957 #:g30958 (setf slot-value) 0 0 #:g30959 #:g30960 #:g30961 (setf slot-value) #:g30962 #:g30963 "rx_gpio" #:g30964 (setf slot-value) #:g30965 #:g30966 "meshtastic.Config.PositionConfig.rx_gpio" #:g30967 (setf slot-value) #:g30968 #:g30969 #:g30970 (setf slot-value) #:g30971 #:g30972 #:g30973 (setf slot-value) #:g30974 #:g30975 #:g30976 (setf slot-value) #:g30977 #:g30978 #:g30979 (setf slot-value) #:g30980 #:g30981 #:g30982 (setf slot-value) #:g30983 #:g30984 #:g30985 (setf slot-value) #:g30986 #:g30987 #:g30988 (setf slot-value) #:g30989 #:g30990 #:g30991 (setf slot-value) #:g30992 #:g30993 #:g30994 (setf slot-value) #:g30995 #:g30996 "rxGpio" #:g30997 (setf slot-value) #:g30998 #:g30999 #:g31000 (setf slot-value) #:g31001 #:g31002 #:g31003 (setf slot-value) #:g31004 #:g31005 #:g31006 (setf slot-value) #:g31007 #:g31008 #:g31009 (setf slot-value) #:g31010 #:g31011 #:g31012 (setf slot-value) 0 0 #:g31013 #:g31014 #:g31015 (setf slot-value) #:g31016 #:g31017 "tx_gpio" #:g31018 (setf slot-value) #:g31019 #:g31020 "meshtastic.Config.PositionConfig.tx_gpio" #:g31021 (setf slot-value) #:g31022 #:g31023 #:g31024 (setf slot-value) #:g31025 #:g31026 #:g31027 (setf slot-value) #:g31028 #:g31029 #:g31030 (setf slot-value) #:g31031 #:g31032 #:g31033 (setf slot-value) #:g31034 #:g31035 #:g31036 (setf slot-value) #:g31037 #:g31038 #:g31039 (setf slot-value) #:g31040 #:g31041 #:g31042 (setf slot-value) #:g31043 #:g31044 #:g31045 (setf slot-value) #:g31046 #:g31047 #:g31048 (setf slot-value) #:g31049 #:g31050 "txGpio" #:g31051 (setf slot-value) #:g31052 #:g31053 #:g31054 (setf slot-value) #:g31055 #:g31056 #:g31057 (setf slot-value) #:g31058 #:g31059 #:g31060 (setf slot-value) #:g31061 #:g31062 #:g31063 (setf slot-value) #:g31064 #:g31065 #:g31066 (setf slot-value) 0 0 #:g31067 #:g31068 #:g31069 (setf slot-value) #:g31070 #:g31071 "broadcast_smart_minimum_distance" #:g31072 (setf slot-value) #:g31073 #:g31074 "meshtastic.Config.PositionConfig.broadcast_smart_minimum_distance" #:g31075 (setf slot-value) #:g31076 #:g31077 #:g31078 (setf slot-value) #:g31079 #:g31080 #:g31081 (setf slot-value) #:g31082 #:g31083 #:g31084 (setf slot-value) #:g31085 #:g31086 #:g31087 (setf slot-value) #:g31088 #:g31089 #:g31090 (setf slot-value) #:g31091 #:g31092 #:g31093 (setf slot-value) #:g31094 #:g31095 #:g31096 (setf slot-value) #:g31097 #:g31098 #:g31099 (setf slot-value) #:g31100 #:g31101 #:g31102 (setf slot-value) #:g31103 #:g31104 "broadcastSmartMinimumDistance" #:g31105 (setf slot-value) #:g31106 #:g31107 #:g31108 (setf slot-value) #:g31109 #:g31110 #:g31111 (setf slot-value) #:g31112 #:g31113 #:g31114 (setf slot-value) #:g31115 #:g31116 #:g31117 (setf slot-value) #:g31118 #:g31119 #:g31120 (setf slot-value) 0 #:g31121 #:g31122 #:g31123 (setf slot-value) #:g31124 #:g31125 "broadcast_smart_minimum_interval_secs" #:g31126 (setf slot-value) #:g31127 #:g31128 "meshtastic.Config.PositionConfig.broadcast_smart_minimum_interval_secs" #:g31129 (setf slot-value) #:g31130 #:g31131 #:g31132 (setf slot-value) #:g31133 #:g31134 #:g31135 (setf slot-value) #:g31136 #:g31137 #:g31138 (setf slot-value) #:g31139 #:g31140 #:g31141 (setf slot-value) #:g31142 #:g31143 #:g31144 (setf slot-value) #:g31145 #:g31146 #:g31147 (setf slot-value) #:g31148 #:g31149 #:g31150 (setf slot-value) #:g31151 #:g31152 #:g31153 (setf slot-value) #:g31154 #:g31155 #:g31156 (setf slot-value) #:g31157 #:g31158 "broadcastSmartMinimumIntervalSecs" #:g31159 (setf slot-value) #:g31160 #:g31161 #:g31162 (setf slot-value) #:g31163 #:g31164 #:g31165 (setf slot-value) #:g31166 #:g31167 #:g31168 (setf slot-value) #:g31169 #:g31170 #:g31171 (setf slot-value) #:g31172 #:g31173 #:g31174 (setf slot-value) ((inline cl-protobufs.meshtastic::%make-config.power-config)) cl-protobufs.meshtastic::config.power-config "CONFIG.POWER-CONFIG-" ((cl-protobufs.meshtastic::%on-battery-shutdown-after-secs 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%adc-multiplier-override #275=0.0 :type float) (cl-protobufs.meshtastic::%wait-bluetooth-secs 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%mesh-sds-timeout-secs 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%sds-secs 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%ls-secs 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%min-wake-secs 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%device-battery-ina-address 0 :type cl-protobufs::uint32) (cl-protobufs.implementation::%%bytes nil :type #10#) (cl-protobufs.implementation::%%bool-values #276=(make-array 1 :element-type #12# :initial-contents #277=#*0) :type #278=(bit-vector 1)) (cl-protobufs.implementation::%%is-set #279=(make-array 0 . #16#) :type #280=(bit-vector 0))) (#18# (cl-protobufs.meshtastic::%on-battery-shutdown-after-secs 0 cl-protobufs::uint32 nil 1 nil) (cl-protobufs.meshtastic::%adc-multiplier-override #275# float nil 2 nil) (cl-protobufs.meshtastic::%wait-bluetooth-secs 0 cl-protobufs::uint32 nil 3 nil) (cl-protobufs.meshtastic::%mesh-sds-timeout-secs 0 cl-protobufs::uint32 nil 4 nil) (cl-protobufs.meshtastic::%sds-secs 0 cl-protobufs::uint32 nil 5 nil) (cl-protobufs.meshtastic::%ls-secs 0 cl-protobufs::uint32 nil 6 nil) (cl-protobufs.meshtastic::%min-wake-secs 0 cl-protobufs::uint32 nil 7 nil) (cl-protobufs.meshtastic::%device-battery-ina-address 0 cl-protobufs::uint32 nil 8 nil) (cl-protobufs.implementation::%%bytes nil #10# nil 9 nil) (cl-protobufs.implementation::%%bool-values #276# #278# nil 10 nil) (cl-protobufs.implementation::%%is-set #279# #280# nil 11 nil)) cl-protobufs.meshtastic::copy-config.power-config (cl-protobufs.meshtastic::%make-config.power-config) #281=(cl-protobufs.meshtastic::config.power-config (:constructor cl-protobufs.meshtastic::%make-config.power-config) . #20#) (defstruct #281#) (#6# . 718) cl-protobufs.meshtastic::%make-config.power-config (defun cl-protobufs.meshtastic::%make-config.power-config) (#6# . 718) #282=(&key #283=#:%%skipped-bytes (#284=#:%on-battery-shutdown-after-secs 0) (#285=#:%adc-multiplier-override #275#) (#286=#:%wait-bluetooth-secs 0) (#287=#:%mesh-sds-timeout-secs 0) (#288=#:%sds-secs 0) (#289=#:%ls-secs 0) (#290=#:%min-wake-secs 0) (#291=#:%device-battery-ina-address 0) #292=#:%%bytes (#293=#:%%bool-values (make-array 1 :element-type (quote bit) :initial-contents #277#)) (#294=#:%%is-set (make-array 0 :element-type (quote bit) :initial-element 0))) (nil :%%is-set :%%bool-values :%%bytes :%device-battery-ina-address :%min-wake-secs :%ls-secs :%sds-secs :%mesh-sds-timeout-secs :%wait-bluetooth-secs :%adc-multiplier-override :%on-battery-shutdown-after-secs :%%skipped-bytes) #283# #284# #275# #285# #286# #287# #288# #289# #290# #291# #292# #277# #293# #294# #295=(bit-vector 0) #296=(bit-vector 0) #297=(bit-vector 1) #298=(bit-vector 1) #299=(or null (simple-array (unsigned-byte 8))) #300=(or null (simple-array (unsigned-byte 8))) cl-protobufs.meshtastic::%device-battery-ina-address cl-protobufs.meshtastic::%min-wake-secs cl-protobufs.meshtastic::%ls-secs cl-protobufs.meshtastic::%sds-secs cl-protobufs.meshtastic::%mesh-sds-timeout-secs cl-protobufs.meshtastic::%wait-bluetooth-secs float cl-protobufs.meshtastic::%adc-multiplier-override cl-protobufs.meshtastic::%on-battery-shutdown-after-secs #301=(or null cl-protobufs::byte-vector) #302=(or null cl-protobufs::byte-vector) 0 #Y(cl-protobufs.meshtastic::%make-config.power-config nil nil (28 3338 22 40 2 77 46 3339 22 40 3 9 0 46 3340 22 40 3 15 3341 46 3342 22 40 3 9 0 46 3343 22 40 3 9 0 46 3344 22 40 3 9 0 46 3345 22 40 3 9 0 46 3346 22 40 3 9 0 46 3347 22 40 3 9 0 46 3348 22 40 2 77 46 3349 22 40 15 9 1 14 222 15 223 14 224 15 3350 19 5 226 12 46 3351 22 40 15 9 0 14 222 15 223 14 228 9 0 19 5 226 12 46 3352 13 0 15 3353 19 2 231 76 39 12 13 0 15 3354 15 3325 15 233 19 4 234 13 1 15 3355 19 2 231 76 39 12 13 1 15 3356 15 3325 15 237 19 4 234 13 2 15 3357 19 2 231 76 39 12 13 2 15 3358 15 3325 15 240 19 4 234 13 3 15 241 19 2 231 76 39 12 13 3 15 241 15 3325 15 3359 19 4 234 13 4 15 241 19 2 231 76 39 12 13 4 15 241 15 3325 15 3360 19 4 234 13 5 15 241 19 2 231 76 39 12 13 5 15 241 15 3325 15 3361 19 4 234 13 6 15 241 19 2 231 76 39 12 13 6 15 241 15 3325 15 3362 19 4 234 13 7 15 241 19 2 231 76 39 12 13 7 15 241 15 3325 15 3363 19 4 234 13 8 15 241 19 2 231 76 39 12 13 8 15 241 15 3325 15 3364 19 4 234 13 9 15 3365 19 2 231 76 39 12 13 9 15 3365 15 3325 15 3366 19 4 234 13 10 15 241 19 2 231 76 39 12 13 10 15 241 15 3325 15 3367 19 4 234 13 11 15 3368 19 2 231 76 39 12 13 11 15 3369 15 3325 15 249 19 4 234 15 3370 13 11 13 10 13 9 13 8 13 7 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 13 251 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::%make-config.power-config #282# #39# (unless (typep #294# (quote #295#)) (si::structure-type-error #294# (quote #296#) (quote cl-protobufs.meshtastic::config.power-config) (quote cl-protobufs.implementation::%%is-set))) (unless (typep #293# (quote #297#)) (si::structure-type-error #293# (quote #298#) (quote cl-protobufs.meshtastic::config.power-config) (quote cl-protobufs.implementation::%%bool-values))) (unless (typep #292# (quote #299#)) (si::structure-type-error #292# (quote #300#) (quote cl-protobufs.meshtastic::config.power-config) (quote cl-protobufs.implementation::%%bytes))) (unless (typep #291# (quote cl-protobufs::uint32)) (si::structure-type-error #291# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.power-config) (quote cl-protobufs.meshtastic::%device-battery-ina-address))) (unless (typep #290# (quote cl-protobufs::uint32)) (si::structure-type-error #290# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.power-config) (quote cl-protobufs.meshtastic::%min-wake-secs))) (unless (typep #289# (quote cl-protobufs::uint32)) (si::structure-type-error #289# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.power-config) (quote cl-protobufs.meshtastic::%ls-secs))) (unless (typep #288# (quote cl-protobufs::uint32)) (si::structure-type-error #288# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.power-config) (quote cl-protobufs.meshtastic::%sds-secs))) (unless (typep #287# (quote cl-protobufs::uint32)) (si::structure-type-error #287# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.power-config) (quote cl-protobufs.meshtastic::%mesh-sds-timeout-secs))) (unless (typep #286# (quote cl-protobufs::uint32)) (si::structure-type-error #286# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.power-config) (quote cl-protobufs.meshtastic::%wait-bluetooth-secs))) (unless (typep #285# (quote float)) (si::structure-type-error #285# (quote float) (quote cl-protobufs.meshtastic::config.power-config) (quote cl-protobufs.meshtastic::%adc-multiplier-override))) (unless (typep #284# (quote cl-protobufs::uint32)) (si::structure-type-error #284# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.power-config) (quote cl-protobufs.meshtastic::%on-battery-shutdown-after-secs))) (unless (typep #283# (quote #301#)) (si::structure-type-error #283# (quote #302#) (quote cl-protobufs.meshtastic::config.power-config) (quote cl-protobufs.implementation::%%skipped-bytes))) (si::make-structure (load-time-value (find-class (quote cl-protobufs.meshtastic::config.power-config))) #283# #284# #285# #286# #287# #288# #289# #290# #291# #292# #293# #294#))) cl-protobufs.meshtastic::config.power-config-%%is-set (cl-protobufs.meshtastic::config.power-config-%%is-set) #:g31187 #Y(nil nil nil (24 45 3375 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 3325 6 2 12 9 11 13 0 10 1 6 6 12 15 274 13 2 15 273 1 3325 6 2 12 8 11 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.power-config-%%bool-values (cl-protobufs.meshtastic::config.power-config-%%bool-values) #:g31188 #Y(nil nil nil (24 45 3379 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 3325 6 2 12 9 10 13 0 10 1 6 6 12 15 274 13 2 15 273 1 3325 6 2 12 8 10 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.power-config-%%bytes (cl-protobufs.meshtastic::config.power-config-%%bytes) #:g31189 #Y(nil nil nil (24 45 3383 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 3325 6 2 12 9 9 13 0 10 1 6 6 12 15 274 13 2 15 273 1 3325 6 2 12 8 9 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.power-config-%device-battery-ina-address (cl-protobufs.meshtastic::config.power-config-%device-battery-ina-address) #:g31190 #Y(nil nil nil (24 45 3387 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 3325 6 2 12 9 8 13 0 10 1 6 6 12 15 274 13 2 15 273 1 3325 6 2 12 8 8 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.power-config-%min-wake-secs (cl-protobufs.meshtastic::config.power-config-%min-wake-secs) #:g31191 #Y(nil nil nil (24 45 3391 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 3325 6 2 12 9 7 13 0 10 1 6 6 12 15 274 13 2 15 273 1 3325 6 2 12 8 7 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.power-config-%ls-secs (cl-protobufs.meshtastic::config.power-config-%ls-secs) #:g31192 #Y(nil nil nil (24 45 3395 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 3325 6 2 12 9 6 13 0 10 1 6 6 12 15 274 13 2 15 273 1 3325 6 2 12 8 6 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.power-config-%sds-secs (cl-protobufs.meshtastic::config.power-config-%sds-secs) #:g31193 #Y(nil nil nil (24 45 3399 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 3325 6 2 12 9 5 13 0 10 1 6 6 12 15 274 13 2 15 273 1 3325 6 2 12 8 5 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.power-config-%mesh-sds-timeout-secs (cl-protobufs.meshtastic::config.power-config-%mesh-sds-timeout-secs) #:g31194 #Y(nil nil nil (24 45 3403 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 3325 6 2 12 9 4 13 0 10 1 6 6 12 15 274 13 2 15 273 1 3325 6 2 12 8 4 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.power-config-%wait-bluetooth-secs (cl-protobufs.meshtastic::config.power-config-%wait-bluetooth-secs) #:g31195 #Y(nil nil nil (24 45 3407 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 3325 6 2 12 9 3 13 0 10 1 6 6 12 15 274 13 2 15 273 1 3325 6 2 12 8 3 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.power-config-%adc-multiplier-override (cl-protobufs.meshtastic::config.power-config-%adc-multiplier-override) #:g31196 #Y(nil nil nil (24 45 3411 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 3325 6 2 12 9 2 13 0 10 1 6 6 12 15 274 13 2 15 273 1 3325 6 2 12 8 2 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.power-config-%on-battery-shutdown-after-secs (cl-protobufs.meshtastic::config.power-config-%on-battery-shutdown-after-secs) #:g31197 #Y(nil nil nil (24 45 3415 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 3325 6 2 12 9 1 13 0 10 1 6 6 12 15 274 13 2 15 273 1 3325 6 2 12 8 1 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.power-config-%%skipped-bytes (cl-protobufs.meshtastic::config.power-config-%%skipped-bytes) #:g31198 #Y(nil nil nil (24 45 3419 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 3325 6 2 12 9 0 13 0 10 1 6 6 12 15 274 13 2 15 273 1 3325 6 2 12 8 0 6 4 12 72 6 43 2 29) #1# #6# 718) ((inline cl-protobufs.meshtastic::config.power-config.is-power-saving)) cl-protobufs.meshtastic::config.power-config.is-power-saving (defun cl-protobufs.meshtastic::config.power-config.is-power-saving) (#6# . 718) #303=(#304=#:obj29313) #304# #Y(cl-protobufs.meshtastic::config.power-config.is-power-saving nil nil (24 45 3426 26 13 0 19 1 3377 12 9 0 19 2 223 16 368 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.is-power-saving #303# #39# (the boolean (plusp (bit (cl-protobufs.meshtastic::config.power-config-%%bool-values #304#) 0))))) ((inline #305=(setf cl-protobufs.meshtastic::config.power-config.is-power-saving))) #305# (defun #305#) (#6# . 718) #306=(#307=#:new-value29315 #308=#:obj29314) #307# #308# #Y(#305# nil nil (24 45 3434 24 45 3435 26 13 0 19 1 3377 12 9 0 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 378 29) #1# #6# 718) (function (ext::lambda-block #305# #306# #39# (declare (type boolean #307#)) nil (setf (bit (cl-protobufs.meshtastic::config.power-config-%%bool-values #308#) 0) (if #307# . #56#)))) ((inline cl-protobufs.meshtastic::config.power-config.%%has-is-power-saving)) cl-protobufs.meshtastic::config.power-config.%%has-is-power-saving (defun cl-protobufs.meshtastic::config.power-config.%%has-is-power-saving) (#6# . 718) #309=(#308#) #310=#:cur-value29316 #Y(cl-protobufs.meshtastic::config.power-config.%%has-is-power-saving nil nil (24 45 3435 26 13 0 19 1 3377 12 9 0 19 2 223 16 368 45 3443 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.%%has-is-power-saving #309# #39# (let ((#310# (plusp (bit (cl-protobufs.meshtastic::config.power-config-%%bool-values #308#) 0)))) (not (eq #310# nil))))) ((inline cl-protobufs.meshtastic::config.power-config.clear-is-power-saving)) cl-protobufs.meshtastic::config.power-config.clear-is-power-saving (defun cl-protobufs.meshtastic::config.power-config.clear-is-power-saving) (#6# . 718) #311=(#308#) #Y(cl-protobufs.meshtastic::config.power-config.clear-is-power-saving nil nil (24 45 3435 26 13 0 19 1 3377 12 9 0 9 0 19 3 378 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.clear-is-power-saving #311# #39# nil (setf (bit (cl-protobufs.meshtastic::config.power-config-%%bool-values #308#) 0) 0))) cl-protobufs.meshtastic::is-power-saving (defmethod cl-protobufs.meshtastic::is-power-saving (#308# cl-protobufs.meshtastic::config.power-config)) (#6# . 718) (cl-protobufs.meshtastic::config.power-config) (#308#) #Y(cl-protobufs.meshtastic::is-power-saving nil nil (24 45 3435 26 13 0 19 1 3422 29) #1# #6# 718) #312=(setf cl-protobufs.meshtastic::is-power-saving) (defmethod #312# #307# (#308# cl-protobufs.meshtastic::config.power-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.power-config) (#307# #308#) #:g31213 #:g31214 (setf cl-protobufs.meshtastic::config.power-config.is-power-saving) #Y(#312# nil nil (24 45 3434 24 45 3435 26 10 0 45 3464 10 2 45 3465 13 0 13 1 33 3466 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.power-config.clear-is-power-saving) (cl-protobufs.meshtastic::config.power-config.is-power-saving) ((inline cl-protobufs.meshtastic::config.power-config.on-battery-shutdown-after-secs)) cl-protobufs.meshtastic::config.power-config.on-battery-shutdown-after-secs (defun cl-protobufs.meshtastic::config.power-config.on-battery-shutdown-after-secs) (#6# . 718) #313=(#314=#:obj29317) #314# #Y(cl-protobufs.meshtastic::config.power-config.on-battery-shutdown-after-secs nil nil (24 45 3475 26 13 0 19 1 3413 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.on-battery-shutdown-after-secs #313# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.power-config-%on-battery-shutdown-after-secs #314#)))) ((inline #315=(setf cl-protobufs.meshtastic::config.power-config.on-battery-shutdown-after-secs))) #315# (defun #315#) (#6# . 718) #316=(#317=#:new-value29319 #318=#:obj29318) #317# #318# #:g31217 #:g31218 #Y(#315# nil nil (24 45 3483 24 45 3484 26 10 0 45 3485 10 2 45 3486 13 1 15 3325 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #315# #316# #39# (declare (type cl-protobufs::uint32 #317#)) nil (setf (cl-protobufs.meshtastic::config.power-config-%on-battery-shutdown-after-secs #318#) #317#))) ((inline cl-protobufs.meshtastic::config.power-config.%%has-on-battery-shutdown-after-secs)) cl-protobufs.meshtastic::config.power-config.%%has-on-battery-shutdown-after-secs (defun cl-protobufs.meshtastic::config.power-config.%%has-on-battery-shutdown-after-secs) (#6# . 718) #319=(#318#) #320=#:cur-value29320 #Y(cl-protobufs.meshtastic::config.power-config.%%has-on-battery-shutdown-after-secs nil nil (24 45 3484 26 13 0 19 1 3413 45 3494 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.%%has-on-battery-shutdown-after-secs #319# #39# (let ((#320# (cl-protobufs.meshtastic::config.power-config-%on-battery-shutdown-after-secs #318#))) (not (eq #320# 0))))) ((inline cl-protobufs.meshtastic::config.power-config.clear-on-battery-shutdown-after-secs)) cl-protobufs.meshtastic::config.power-config.clear-on-battery-shutdown-after-secs (defun cl-protobufs.meshtastic::config.power-config.clear-on-battery-shutdown-after-secs) (#6# . 718) #321=(#318#) #:g31221 #:g31222 #Y(cl-protobufs.meshtastic::config.power-config.clear-on-battery-shutdown-after-secs nil nil (24 45 3484 26 10 0 45 3502 8 0 45 3503 13 1 15 3325 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.clear-on-battery-shutdown-after-secs #321# #39# nil (setf (cl-protobufs.meshtastic::config.power-config-%on-battery-shutdown-after-secs #318#) 0))) cl-protobufs.meshtastic::on-battery-shutdown-after-secs (defmethod cl-protobufs.meshtastic::on-battery-shutdown-after-secs (#318# cl-protobufs.meshtastic::config.power-config)) (#6# . 718) (cl-protobufs.meshtastic::config.power-config) (#318#) #Y(cl-protobufs.meshtastic::on-battery-shutdown-after-secs nil nil (24 45 3484 26 13 0 19 1 3471 29) #1# #6# 718) #322=(setf cl-protobufs.meshtastic::on-battery-shutdown-after-secs) (defmethod #322# #317# (#318# cl-protobufs.meshtastic::config.power-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.power-config) (#317# #318#) #:g31229 #:g31230 (setf cl-protobufs.meshtastic::config.power-config.on-battery-shutdown-after-secs) #Y(#322# nil nil (24 45 3483 24 45 3484 26 10 0 45 3517 10 2 45 3518 13 0 13 1 33 3519 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.power-config.clear-on-battery-shutdown-after-secs) (cl-protobufs.meshtastic::config.power-config.on-battery-shutdown-after-secs) ((inline cl-protobufs.meshtastic::config.power-config.adc-multiplier-override)) cl-protobufs.meshtastic::config.power-config.adc-multiplier-override (defun cl-protobufs.meshtastic::config.power-config.adc-multiplier-override) (#6# . 718) #323=(#324=#:obj29321) #324# #Y(cl-protobufs.meshtastic::config.power-config.adc-multiplier-override nil nil (24 45 3528 26 13 0 19 1 3409 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.adc-multiplier-override #323# #39# (the float (cl-protobufs.meshtastic::config.power-config-%adc-multiplier-override #324#)))) ((inline #325=(setf cl-protobufs.meshtastic::config.power-config.adc-multiplier-override))) #325# (defun #325#) (#6# . 718) #326=(#327=#:new-value29323 #328=#:obj29322) #327# #328# #:g31233 #:g31234 #Y(#325# nil nil (24 45 3536 24 45 3537 26 10 0 45 3538 10 2 45 3539 13 1 15 3325 9 2 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #325# #326# #39# (declare (type float #327#)) nil (setf (cl-protobufs.meshtastic::config.power-config-%adc-multiplier-override #328#) #327#))) ((inline cl-protobufs.meshtastic::config.power-config.%%has-adc-multiplier-override)) cl-protobufs.meshtastic::config.power-config.%%has-adc-multiplier-override (defun cl-protobufs.meshtastic::config.power-config.%%has-adc-multiplier-override) (#6# . 718) #329=(#328#) #330=#:cur-value29324 = #Y(cl-protobufs.meshtastic::config.power-config.%%has-adc-multiplier-override nil nil (24 45 3537 26 13 0 19 1 3409 45 3547 13 0 15 3341 19 2 3548 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.%%has-adc-multiplier-override #329# #39# (let ((#330# (cl-protobufs.meshtastic::config.power-config-%adc-multiplier-override #328#))) (not (= #330# #275#))))) ((inline cl-protobufs.meshtastic::config.power-config.clear-adc-multiplier-override)) cl-protobufs.meshtastic::config.power-config.clear-adc-multiplier-override (defun cl-protobufs.meshtastic::config.power-config.clear-adc-multiplier-override) (#6# . 718) #331=(#328#) #:g31237 #:g31238 #Y(cl-protobufs.meshtastic::config.power-config.clear-adc-multiplier-override nil nil (24 45 3537 26 10 0 45 3556 1 3341 45 3557 13 1 15 3325 9 2 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.clear-adc-multiplier-override #331# #39# nil (setf (cl-protobufs.meshtastic::config.power-config-%adc-multiplier-override #328#) #275#))) cl-protobufs.meshtastic::adc-multiplier-override (defmethod cl-protobufs.meshtastic::adc-multiplier-override (#328# cl-protobufs.meshtastic::config.power-config)) (#6# . 718) (cl-protobufs.meshtastic::config.power-config) (#328#) #Y(cl-protobufs.meshtastic::adc-multiplier-override nil nil (24 45 3537 26 13 0 19 1 3524 29) #1# #6# 718) #332=(setf cl-protobufs.meshtastic::adc-multiplier-override) (defmethod #332# #327# (#328# cl-protobufs.meshtastic::config.power-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.power-config) (#327# #328#) #:g31245 #:g31246 (setf cl-protobufs.meshtastic::config.power-config.adc-multiplier-override) #Y(#332# nil nil (24 45 3536 24 45 3537 26 10 0 45 3571 10 2 45 3572 13 0 13 1 33 3573 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.power-config.clear-adc-multiplier-override) (cl-protobufs.meshtastic::config.power-config.adc-multiplier-override) ((inline cl-protobufs.meshtastic::config.power-config.wait-bluetooth-secs)) cl-protobufs.meshtastic::config.power-config.wait-bluetooth-secs (defun cl-protobufs.meshtastic::config.power-config.wait-bluetooth-secs) (#6# . 718) #333=(#334=#:obj29325) #334# #Y(cl-protobufs.meshtastic::config.power-config.wait-bluetooth-secs nil nil (24 45 3582 26 13 0 19 1 3405 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.wait-bluetooth-secs #333# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.power-config-%wait-bluetooth-secs #334#)))) ((inline #335=(setf cl-protobufs.meshtastic::config.power-config.wait-bluetooth-secs))) #335# (defun #335#) (#6# . 718) #336=(#337=#:new-value29327 #338=#:obj29326) #337# #338# #:g31249 #:g31250 #Y(#335# nil nil (24 45 3590 24 45 3591 26 10 0 45 3592 10 2 45 3593 13 1 15 3325 9 3 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #335# #336# #39# (declare (type cl-protobufs::uint32 #337#)) nil (setf (cl-protobufs.meshtastic::config.power-config-%wait-bluetooth-secs #338#) #337#))) ((inline cl-protobufs.meshtastic::config.power-config.%%has-wait-bluetooth-secs)) cl-protobufs.meshtastic::config.power-config.%%has-wait-bluetooth-secs (defun cl-protobufs.meshtastic::config.power-config.%%has-wait-bluetooth-secs) (#6# . 718) #339=(#338#) #340=#:cur-value29328 #Y(cl-protobufs.meshtastic::config.power-config.%%has-wait-bluetooth-secs nil nil (24 45 3591 26 13 0 19 1 3405 45 3601 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.%%has-wait-bluetooth-secs #339# #39# (let ((#340# (cl-protobufs.meshtastic::config.power-config-%wait-bluetooth-secs #338#))) (not (eq #340# 0))))) ((inline cl-protobufs.meshtastic::config.power-config.clear-wait-bluetooth-secs)) cl-protobufs.meshtastic::config.power-config.clear-wait-bluetooth-secs (defun cl-protobufs.meshtastic::config.power-config.clear-wait-bluetooth-secs) (#6# . 718) #341=(#338#) #:g31253 #:g31254 #Y(cl-protobufs.meshtastic::config.power-config.clear-wait-bluetooth-secs nil nil (24 45 3591 26 10 0 45 3609 8 0 45 3610 13 1 15 3325 9 3 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.clear-wait-bluetooth-secs #341# #39# nil (setf (cl-protobufs.meshtastic::config.power-config-%wait-bluetooth-secs #338#) 0))) cl-protobufs.meshtastic::wait-bluetooth-secs (defmethod cl-protobufs.meshtastic::wait-bluetooth-secs (#338# cl-protobufs.meshtastic::config.power-config)) (#6# . 718) (cl-protobufs.meshtastic::config.power-config) (#338#) #Y(cl-protobufs.meshtastic::wait-bluetooth-secs nil nil (24 45 3591 26 13 0 19 1 3578 29) #1# #6# 718) #342=(setf cl-protobufs.meshtastic::wait-bluetooth-secs) (defmethod #342# #337# (#338# cl-protobufs.meshtastic::config.power-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.power-config) (#337# #338#) #:g31261 #:g31262 (setf cl-protobufs.meshtastic::config.power-config.wait-bluetooth-secs) #Y(#342# nil nil (24 45 3590 24 45 3591 26 10 0 45 3624 10 2 45 3625 13 0 13 1 33 3626 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.power-config.clear-wait-bluetooth-secs) (cl-protobufs.meshtastic::config.power-config.wait-bluetooth-secs) ((inline cl-protobufs.meshtastic::config.power-config.mesh-sds-timeout-secs)) cl-protobufs.meshtastic::config.power-config.mesh-sds-timeout-secs (defun cl-protobufs.meshtastic::config.power-config.mesh-sds-timeout-secs) (#6# . 718) #343=(#344=#:obj29329) #344# #Y(cl-protobufs.meshtastic::config.power-config.mesh-sds-timeout-secs nil nil (24 45 3635 26 13 0 19 1 3401 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.mesh-sds-timeout-secs #343# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.power-config-%mesh-sds-timeout-secs #344#)))) ((inline #345=(setf cl-protobufs.meshtastic::config.power-config.mesh-sds-timeout-secs))) #345# (defun #345#) (#6# . 718) #346=(#347=#:new-value29331 #348=#:obj29330) #347# #348# #:g31265 #:g31266 #Y(#345# nil nil (24 45 3643 24 45 3644 26 10 0 45 3645 10 2 45 3646 13 1 15 3325 9 4 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #345# #346# #39# (declare (type cl-protobufs::uint32 #347#)) nil (setf (cl-protobufs.meshtastic::config.power-config-%mesh-sds-timeout-secs #348#) #347#))) ((inline cl-protobufs.meshtastic::config.power-config.%%has-mesh-sds-timeout-secs)) cl-protobufs.meshtastic::config.power-config.%%has-mesh-sds-timeout-secs (defun cl-protobufs.meshtastic::config.power-config.%%has-mesh-sds-timeout-secs) (#6# . 718) #349=(#348#) #350=#:cur-value29332 #Y(cl-protobufs.meshtastic::config.power-config.%%has-mesh-sds-timeout-secs nil nil (24 45 3644 26 13 0 19 1 3401 45 3654 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.%%has-mesh-sds-timeout-secs #349# #39# (let ((#350# (cl-protobufs.meshtastic::config.power-config-%mesh-sds-timeout-secs #348#))) (not (eq #350# 0))))) ((inline cl-protobufs.meshtastic::config.power-config.clear-mesh-sds-timeout-secs)) cl-protobufs.meshtastic::config.power-config.clear-mesh-sds-timeout-secs (defun cl-protobufs.meshtastic::config.power-config.clear-mesh-sds-timeout-secs) (#6# . 718) #351=(#348#) #:g31269 #:g31270 #Y(cl-protobufs.meshtastic::config.power-config.clear-mesh-sds-timeout-secs nil nil (24 45 3644 26 10 0 45 3662 8 0 45 3663 13 1 15 3325 9 4 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.clear-mesh-sds-timeout-secs #351# #39# nil (setf (cl-protobufs.meshtastic::config.power-config-%mesh-sds-timeout-secs #348#) 0))) cl-protobufs.meshtastic::mesh-sds-timeout-secs (defmethod cl-protobufs.meshtastic::mesh-sds-timeout-secs (#348# cl-protobufs.meshtastic::config.power-config)) (#6# . 718) (cl-protobufs.meshtastic::config.power-config) (#348#) #Y(cl-protobufs.meshtastic::mesh-sds-timeout-secs nil nil (24 45 3644 26 13 0 19 1 3631 29) #1# #6# 718) #352=(setf cl-protobufs.meshtastic::mesh-sds-timeout-secs) (defmethod #352# #347# (#348# cl-protobufs.meshtastic::config.power-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.power-config) (#347# #348#) #:g31277 #:g31278 (setf cl-protobufs.meshtastic::config.power-config.mesh-sds-timeout-secs) #Y(#352# nil nil (24 45 3643 24 45 3644 26 10 0 45 3677 10 2 45 3678 13 0 13 1 33 3679 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.power-config.clear-mesh-sds-timeout-secs) (cl-protobufs.meshtastic::config.power-config.mesh-sds-timeout-secs) ((inline cl-protobufs.meshtastic::config.power-config.sds-secs)) cl-protobufs.meshtastic::config.power-config.sds-secs (defun cl-protobufs.meshtastic::config.power-config.sds-secs) (#6# . 718) #353=(#354=#:obj29333) #354# #Y(cl-protobufs.meshtastic::config.power-config.sds-secs nil nil (24 45 3688 26 13 0 19 1 3397 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.sds-secs #353# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.power-config-%sds-secs #354#)))) ((inline #355=(setf cl-protobufs.meshtastic::config.power-config.sds-secs))) #355# (defun #355#) (#6# . 718) #356=(#357=#:new-value29335 #358=#:obj29334) #357# #358# #:g31281 #:g31282 #Y(#355# nil nil (24 45 3696 24 45 3697 26 10 0 45 3698 10 2 45 3699 13 1 15 3325 9 5 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #355# #356# #39# (declare (type cl-protobufs::uint32 #357#)) nil (setf (cl-protobufs.meshtastic::config.power-config-%sds-secs #358#) #357#))) ((inline cl-protobufs.meshtastic::config.power-config.%%has-sds-secs)) cl-protobufs.meshtastic::config.power-config.%%has-sds-secs (defun cl-protobufs.meshtastic::config.power-config.%%has-sds-secs) (#6# . 718) #359=(#358#) #360=#:cur-value29336 #Y(cl-protobufs.meshtastic::config.power-config.%%has-sds-secs nil nil (24 45 3697 26 13 0 19 1 3397 45 3707 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.%%has-sds-secs #359# #39# (let ((#360# (cl-protobufs.meshtastic::config.power-config-%sds-secs #358#))) (not (eq #360# 0))))) ((inline cl-protobufs.meshtastic::config.power-config.clear-sds-secs)) cl-protobufs.meshtastic::config.power-config.clear-sds-secs (defun cl-protobufs.meshtastic::config.power-config.clear-sds-secs) (#6# . 718) #361=(#358#) #:g31285 #:g31286 #Y(cl-protobufs.meshtastic::config.power-config.clear-sds-secs nil nil (24 45 3697 26 10 0 45 3715 8 0 45 3716 13 1 15 3325 9 5 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.clear-sds-secs #361# #39# nil (setf (cl-protobufs.meshtastic::config.power-config-%sds-secs #358#) 0))) cl-protobufs.meshtastic::sds-secs (defmethod cl-protobufs.meshtastic::sds-secs (#358# cl-protobufs.meshtastic::config.power-config)) (#6# . 718) (cl-protobufs.meshtastic::config.power-config) (#358#) #Y(cl-protobufs.meshtastic::sds-secs nil nil (24 45 3697 26 13 0 19 1 3684 29) #1# #6# 718) #362=(setf cl-protobufs.meshtastic::sds-secs) (defmethod #362# #357# (#358# cl-protobufs.meshtastic::config.power-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.power-config) (#357# #358#) #:g31293 #:g31294 (setf cl-protobufs.meshtastic::config.power-config.sds-secs) #Y(#362# nil nil (24 45 3696 24 45 3697 26 10 0 45 3730 10 2 45 3731 13 0 13 1 33 3732 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.power-config.clear-sds-secs) (cl-protobufs.meshtastic::config.power-config.sds-secs) ((inline cl-protobufs.meshtastic::config.power-config.ls-secs)) cl-protobufs.meshtastic::config.power-config.ls-secs (defun cl-protobufs.meshtastic::config.power-config.ls-secs) (#6# . 718) #363=(#364=#:obj29337) #364# #Y(cl-protobufs.meshtastic::config.power-config.ls-secs nil nil (24 45 3741 26 13 0 19 1 3393 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.ls-secs #363# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.power-config-%ls-secs #364#)))) ((inline #365=(setf cl-protobufs.meshtastic::config.power-config.ls-secs))) #365# (defun #365#) (#6# . 718) #366=(#367=#:new-value29339 #368=#:obj29338) #367# #368# #:g31297 #:g31298 #Y(#365# nil nil (24 45 3749 24 45 3750 26 10 0 45 3751 10 2 45 3752 13 1 15 3325 9 6 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #365# #366# #39# (declare (type cl-protobufs::uint32 #367#)) nil (setf (cl-protobufs.meshtastic::config.power-config-%ls-secs #368#) #367#))) ((inline cl-protobufs.meshtastic::config.power-config.%%has-ls-secs)) cl-protobufs.meshtastic::config.power-config.%%has-ls-secs (defun cl-protobufs.meshtastic::config.power-config.%%has-ls-secs) (#6# . 718) #369=(#368#) #370=#:cur-value29340 #Y(cl-protobufs.meshtastic::config.power-config.%%has-ls-secs nil nil (24 45 3750 26 13 0 19 1 3393 45 3760 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.%%has-ls-secs #369# #39# (let ((#370# (cl-protobufs.meshtastic::config.power-config-%ls-secs #368#))) (not (eq #370# 0))))) ((inline cl-protobufs.meshtastic::config.power-config.clear-ls-secs)) cl-protobufs.meshtastic::config.power-config.clear-ls-secs (defun cl-protobufs.meshtastic::config.power-config.clear-ls-secs) (#6# . 718) #371=(#368#) #:g31301 #:g31302 #Y(cl-protobufs.meshtastic::config.power-config.clear-ls-secs nil nil (24 45 3750 26 10 0 45 3768 8 0 45 3769 13 1 15 3325 9 6 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.clear-ls-secs #371# #39# nil (setf (cl-protobufs.meshtastic::config.power-config-%ls-secs #368#) 0))) cl-protobufs.meshtastic::ls-secs (defmethod cl-protobufs.meshtastic::ls-secs (#368# cl-protobufs.meshtastic::config.power-config)) (#6# . 718) (cl-protobufs.meshtastic::config.power-config) (#368#) #Y(cl-protobufs.meshtastic::ls-secs nil nil (24 45 3750 26 13 0 19 1 3737 29) #1# #6# 718) #372=(setf cl-protobufs.meshtastic::ls-secs) (defmethod #372# #367# (#368# cl-protobufs.meshtastic::config.power-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.power-config) (#367# #368#) #:g31309 #:g31310 (setf cl-protobufs.meshtastic::config.power-config.ls-secs) #Y(#372# nil nil (24 45 3749 24 45 3750 26 10 0 45 3783 10 2 45 3784 13 0 13 1 33 3785 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.power-config.clear-ls-secs) (cl-protobufs.meshtastic::config.power-config.ls-secs) ((inline cl-protobufs.meshtastic::config.power-config.min-wake-secs)) cl-protobufs.meshtastic::config.power-config.min-wake-secs (defun cl-protobufs.meshtastic::config.power-config.min-wake-secs) (#6# . 718) #373=(#374=#:obj29341) #374# #Y(cl-protobufs.meshtastic::config.power-config.min-wake-secs nil nil (24 45 3794 26 13 0 19 1 3389 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.min-wake-secs #373# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.power-config-%min-wake-secs #374#)))) ((inline #375=(setf cl-protobufs.meshtastic::config.power-config.min-wake-secs))) #375# (defun #375#) (#6# . 718) #376=(#377=#:new-value29343 #378=#:obj29342) #377# #378# #:g31313 #:g31314 #Y(#375# nil nil (24 45 3802 24 45 3803 26 10 0 45 3804 10 2 45 3805 13 1 15 3325 9 7 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #375# #376# #39# (declare (type cl-protobufs::uint32 #377#)) nil (setf (cl-protobufs.meshtastic::config.power-config-%min-wake-secs #378#) #377#))) ((inline cl-protobufs.meshtastic::config.power-config.%%has-min-wake-secs)) cl-protobufs.meshtastic::config.power-config.%%has-min-wake-secs (defun cl-protobufs.meshtastic::config.power-config.%%has-min-wake-secs) (#6# . 718) #379=(#378#) #380=#:cur-value29344 #Y(cl-protobufs.meshtastic::config.power-config.%%has-min-wake-secs nil nil (24 45 3803 26 13 0 19 1 3389 45 3813 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.%%has-min-wake-secs #379# #39# (let ((#380# (cl-protobufs.meshtastic::config.power-config-%min-wake-secs #378#))) (not (eq #380# 0))))) ((inline cl-protobufs.meshtastic::config.power-config.clear-min-wake-secs)) cl-protobufs.meshtastic::config.power-config.clear-min-wake-secs (defun cl-protobufs.meshtastic::config.power-config.clear-min-wake-secs) (#6# . 718) #381=(#378#) #:g31317 #:g31318 #Y(cl-protobufs.meshtastic::config.power-config.clear-min-wake-secs nil nil (24 45 3803 26 10 0 45 3821 8 0 45 3822 13 1 15 3325 9 7 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.clear-min-wake-secs #381# #39# nil (setf (cl-protobufs.meshtastic::config.power-config-%min-wake-secs #378#) 0))) cl-protobufs.meshtastic::min-wake-secs (defmethod cl-protobufs.meshtastic::min-wake-secs (#378# cl-protobufs.meshtastic::config.power-config)) (#6# . 718) (cl-protobufs.meshtastic::config.power-config) (#378#) #Y(cl-protobufs.meshtastic::min-wake-secs nil nil (24 45 3803 26 13 0 19 1 3790 29) #1# #6# 718) #382=(setf cl-protobufs.meshtastic::min-wake-secs) (defmethod #382# #377# (#378# cl-protobufs.meshtastic::config.power-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.power-config) (#377# #378#) #:g31325 #:g31326 (setf cl-protobufs.meshtastic::config.power-config.min-wake-secs) #Y(#382# nil nil (24 45 3802 24 45 3803 26 10 0 45 3836 10 2 45 3837 13 0 13 1 33 3838 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.power-config.clear-min-wake-secs) (cl-protobufs.meshtastic::config.power-config.min-wake-secs) ((inline cl-protobufs.meshtastic::config.power-config.device-battery-ina-address)) cl-protobufs.meshtastic::config.power-config.device-battery-ina-address (defun cl-protobufs.meshtastic::config.power-config.device-battery-ina-address) (#6# . 718) #383=(#384=#:obj29345) #384# #Y(cl-protobufs.meshtastic::config.power-config.device-battery-ina-address nil nil (24 45 3847 26 13 0 19 1 3385 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.device-battery-ina-address #383# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.power-config-%device-battery-ina-address #384#)))) ((inline #385=(setf cl-protobufs.meshtastic::config.power-config.device-battery-ina-address))) #385# (defun #385#) (#6# . 718) #386=(#387=#:new-value29347 #388=#:obj29346) #387# #388# #:g31329 #:g31330 #Y(#385# nil nil (24 45 3855 24 45 3856 26 10 0 45 3857 10 2 45 3858 13 1 15 3325 9 8 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #385# #386# #39# (declare (type cl-protobufs::uint32 #387#)) nil (setf (cl-protobufs.meshtastic::config.power-config-%device-battery-ina-address #388#) #387#))) ((inline cl-protobufs.meshtastic::config.power-config.%%has-device-battery-ina-address)) cl-protobufs.meshtastic::config.power-config.%%has-device-battery-ina-address (defun cl-protobufs.meshtastic::config.power-config.%%has-device-battery-ina-address) (#6# . 718) #389=(#388#) #390=#:cur-value29348 #Y(cl-protobufs.meshtastic::config.power-config.%%has-device-battery-ina-address nil nil (24 45 3856 26 13 0 19 1 3385 45 3866 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.%%has-device-battery-ina-address #389# #39# (let ((#390# (cl-protobufs.meshtastic::config.power-config-%device-battery-ina-address #388#))) (not (eq #390# 0))))) ((inline cl-protobufs.meshtastic::config.power-config.clear-device-battery-ina-address)) cl-protobufs.meshtastic::config.power-config.clear-device-battery-ina-address (defun cl-protobufs.meshtastic::config.power-config.clear-device-battery-ina-address) (#6# . 718) #391=(#388#) #:g31333 #:g31334 #Y(cl-protobufs.meshtastic::config.power-config.clear-device-battery-ina-address nil nil (24 45 3856 26 10 0 45 3874 8 0 45 3875 13 1 15 3325 9 8 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power-config.clear-device-battery-ina-address #391# #39# nil (setf (cl-protobufs.meshtastic::config.power-config-%device-battery-ina-address #388#) 0))) cl-protobufs.meshtastic::device-battery-ina-address (defmethod cl-protobufs.meshtastic::device-battery-ina-address (#388# cl-protobufs.meshtastic::config.power-config)) (#6# . 718) (cl-protobufs.meshtastic::config.power-config) (#388#) #Y(cl-protobufs.meshtastic::device-battery-ina-address nil nil (24 45 3856 26 13 0 19 1 3843 29) #1# #6# 718) #392=(setf cl-protobufs.meshtastic::device-battery-ina-address) (defmethod #392# #387# (#388# cl-protobufs.meshtastic::config.power-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.power-config) (#387# #388#) #:g31341 #:g31342 (setf cl-protobufs.meshtastic::config.power-config.device-battery-ina-address) #Y(#392# nil nil (24 45 3855 24 45 3856 26 10 0 45 3889 10 2 45 3890 13 0 13 1 33 3891 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.power-config.clear-device-battery-ina-address) (cl-protobufs.meshtastic::config.power-config.device-battery-ina-address) ((inline cl-protobufs.meshtastic::make-config.power-config)) cl-protobufs.meshtastic::make-config.power-config (defun cl-protobufs.meshtastic::make-config.power-config) (#6# . 718) #393=(&key (cl-protobufs.meshtastic::is-power-saving :%unset) (cl-protobufs.meshtastic::on-battery-shutdown-after-secs :%unset) (cl-protobufs.meshtastic::adc-multiplier-override :%unset) (cl-protobufs.meshtastic::wait-bluetooth-secs :%unset) (cl-protobufs.meshtastic::mesh-sds-timeout-secs :%unset) (cl-protobufs.meshtastic::sds-secs :%unset) (cl-protobufs.meshtastic::ls-secs :%unset) (cl-protobufs.meshtastic::min-wake-secs :%unset) (cl-protobufs.meshtastic::device-battery-ina-address :%unset)) (nil :device-battery-ina-address :min-wake-secs :ls-secs :sds-secs :mesh-sds-timeout-secs :wait-bluetooth-secs :adc-multiplier-override :on-battery-shutdown-after-secs :is-power-saving) #394=#:obj29312 #:g31361 #:g31362 (setf cl-protobufs.meshtastic::config.power-config.is-power-saving) #:g31363 #:g31364 (setf cl-protobufs.meshtastic::config.power-config.on-battery-shutdown-after-secs) #:g31365 #:g31366 (setf cl-protobufs.meshtastic::config.power-config.adc-multiplier-override) #:g31367 #:g31368 (setf cl-protobufs.meshtastic::config.power-config.wait-bluetooth-secs) #:g31369 #:g31370 (setf cl-protobufs.meshtastic::config.power-config.mesh-sds-timeout-secs) #:g31371 #:g31372 (setf cl-protobufs.meshtastic::config.power-config.sds-secs) #:g31373 #:g31374 (setf cl-protobufs.meshtastic::config.power-config.ls-secs) #:g31375 #:g31376 (setf cl-protobufs.meshtastic::config.power-config.min-wake-secs) #:g31377 #:g31378 (setf cl-protobufs.meshtastic::config.power-config.device-battery-ina-address) #Y(cl-protobufs.meshtastic::make-config.power-config nil nil (28 3900 22 40 3 14 777 46 3453 22 40 3 14 777 46 3506 22 40 3 14 777 46 3560 22 40 3 14 777 46 3613 22 40 3 14 777 46 3666 22 40 3 14 777 46 3719 22 40 3 14 777 46 3772 22 40 3 14 777 46 3825 22 40 3 14 777 46 3878 19 0 3334 45 3901 13 9 11 777 17 332 76 39 21 10 0 45 3902 10 10 45 3903 13 0 13 1 33 3904 18 2 43 1 43 1 13 8 11 777 17 332 40 4 10 8 76 76 39 21 10 0 45 3905 10 9 45 3906 13 0 13 1 33 3907 18 2 43 1 43 1 13 7 11 777 17 332 40 4 10 7 76 76 39 21 10 0 45 3908 10 8 45 3909 13 0 13 1 33 3910 18 2 43 1 43 1 13 6 11 777 17 332 40 4 10 6 76 76 39 21 10 0 45 3911 10 7 45 3912 13 0 13 1 33 3913 18 2 43 1 43 1 13 5 11 777 17 332 40 4 10 5 76 76 39 21 10 0 45 3914 10 6 45 3915 13 0 13 1 33 3916 18 2 43 1 43 1 13 4 11 777 17 332 40 4 10 4 76 76 39 21 10 0 45 3917 10 5 45 3918 13 0 13 1 33 3919 18 2 43 1 43 1 13 3 11 777 17 332 40 4 10 3 76 76 39 21 10 0 45 3920 10 4 45 3921 13 0 13 1 33 3922 18 2 43 1 43 1 13 2 11 777 17 332 40 4 10 2 76 76 39 21 10 0 45 3923 10 3 45 3924 13 0 13 1 33 3925 18 2 43 1 43 1 13 1 11 777 17 332 40 4 10 1 76 76 39 21 10 0 45 3926 10 2 45 3927 13 0 13 1 33 3928 18 2 43 1 43 1 10 0 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::make-config.power-config #393# #39# (let ((#394# (cl-protobufs.meshtastic::%make-config.power-config))) (unless (eq cl-protobufs.meshtastic::is-power-saving :%unset) (setf (cl-protobufs.meshtastic::config.power-config.is-power-saving #394#) cl-protobufs.meshtastic::is-power-saving)) (unless (or (eq cl-protobufs.meshtastic::on-battery-shutdown-after-secs :%unset) (not cl-protobufs.meshtastic::on-battery-shutdown-after-secs)) (setf (cl-protobufs.meshtastic::config.power-config.on-battery-shutdown-after-secs #394#) cl-protobufs.meshtastic::on-battery-shutdown-after-secs)) (unless (or (eq cl-protobufs.meshtastic::adc-multiplier-override :%unset) (not cl-protobufs.meshtastic::adc-multiplier-override)) (setf (cl-protobufs.meshtastic::config.power-config.adc-multiplier-override #394#) cl-protobufs.meshtastic::adc-multiplier-override)) (unless (or (eq cl-protobufs.meshtastic::wait-bluetooth-secs :%unset) (not cl-protobufs.meshtastic::wait-bluetooth-secs)) (setf (cl-protobufs.meshtastic::config.power-config.wait-bluetooth-secs #394#) cl-protobufs.meshtastic::wait-bluetooth-secs)) (unless (or (eq cl-protobufs.meshtastic::mesh-sds-timeout-secs :%unset) (not cl-protobufs.meshtastic::mesh-sds-timeout-secs)) (setf (cl-protobufs.meshtastic::config.power-config.mesh-sds-timeout-secs #394#) cl-protobufs.meshtastic::mesh-sds-timeout-secs)) (unless (or (eq cl-protobufs.meshtastic::sds-secs :%unset) (not cl-protobufs.meshtastic::sds-secs)) (setf (cl-protobufs.meshtastic::config.power-config.sds-secs #394#) cl-protobufs.meshtastic::sds-secs)) (unless (or (eq cl-protobufs.meshtastic::ls-secs :%unset) (not cl-protobufs.meshtastic::ls-secs)) (setf (cl-protobufs.meshtastic::config.power-config.ls-secs #394#) cl-protobufs.meshtastic::ls-secs)) (unless (or (eq cl-protobufs.meshtastic::min-wake-secs :%unset) (not cl-protobufs.meshtastic::min-wake-secs)) (setf (cl-protobufs.meshtastic::config.power-config.min-wake-secs #394#) cl-protobufs.meshtastic::min-wake-secs)) (unless (or (eq cl-protobufs.meshtastic::device-battery-ina-address :%unset) (not cl-protobufs.meshtastic::device-battery-ina-address)) (setf (cl-protobufs.meshtastic::config.power-config.device-battery-ina-address #394#) cl-protobufs.meshtastic::device-battery-ina-address)) #394#))) cl-protobufs.meshtastic::config.power-config.clear-%%is-set (defun cl-protobufs.meshtastic::config.power-config.clear-%%is-set) (#6# . 718) (#394#) #Y(cl-protobufs.meshtastic::config.power-config.clear-%%is-set nil nil (24 45 3901 26 13 0 19 1 3373 12 9 0 19 2 812 29) #1# #6# 718) (cl-protobufs.meshtastic::make-config.power-config cl-protobufs.meshtastic::config.power-config-%%is-set) (defmethod cl-protobufs::clear (#394# cl-protobufs.meshtastic::config.power-config)) (#6# . 718) (cl-protobufs.meshtastic::config.power-config) (#394#) #:g31385 #:g31386 #Y(cl-protobufs::clear nil nil (24 45 3901 26 10 0 45 3941 75 45 3942 13 1 15 204 9 0 13 0 19 4 118 43 1 43 1 13 0 19 1 3447 13 0 19 1 3498 13 0 19 1 3552 13 0 19 1 3605 13 0 19 1 3658 13 0 19 1 3711 13 0 19 1 3764 13 0 19 1 3817 13 0 19 1 3870 13 0 19 1 3931 29) #1# #6# 718) 0 #:g31387 #:g31388 #:g31389 (setf slot-value) #:g31390 #:g31391 "PowerConfig" #:g31392 (setf slot-value) #:g31393 #:g31394 "meshtastic.Config.PowerConfig" #:g31395 (setf slot-value) #:g31396 #:g31397 #:g31398 (setf slot-value) #:g31399 #:g31400 #:g31401 (setf slot-value) #:g31402 #:g31403 0 #:g31404 (setf slot-value) #:g31405 #:g31406 #:g31407 (setf slot-value) #:g31408 #:g31409 #:g31410 (setf slot-value) #:g31411 #:g31412 #:g31413 (setf slot-value) #:g31414 #:g31415 #:g31416 (setf slot-value) 0 0 #:g31417 #:g31418 #:g31419 (setf slot-value) #:g31420 #:g31421 "is_power_saving" #:g31422 (setf slot-value) #:g31423 #:g31424 "meshtastic.Config.PowerConfig.is_power_saving" #:g31425 (setf slot-value) #:g31426 #:g31427 #:g31428 (setf slot-value) #:g31429 #:g31430 #:g31431 (setf slot-value) #:g31432 #:g31433 #:g31434 (setf slot-value) #:g31435 #:g31436 #:g31437 (setf slot-value) #:g31438 #:g31439 #:g31440 (setf slot-value) #:g31441 #:g31442 #:g31443 (setf slot-value) #:g31444 #:g31445 #:g31446 (setf slot-value) #:g31447 #:g31448 cl-protobufs.meshtastic::%is-power-saving #:g31449 (setf slot-value) #:g31450 #:g31451 #:g31452 (setf slot-value) #:g31453 #:g31454 "isPowerSaving" #:g31455 (setf slot-value) #:g31456 #:g31457 #:g31458 (setf slot-value) #:g31459 #:g31460 #:g31461 (setf slot-value) #:g31462 #:g31463 #:g31464 (setf slot-value) #:g31465 #:g31466 #:g31467 (setf slot-value) #:g31468 #:g31469 #:g31470 (setf slot-value) 0 0 #:g31471 #:g31472 #:g31473 (setf slot-value) #:g31474 #:g31475 "on_battery_shutdown_after_secs" #:g31476 (setf slot-value) #:g31477 #:g31478 "meshtastic.Config.PowerConfig.on_battery_shutdown_after_secs" #:g31479 (setf slot-value) #:g31480 #:g31481 #:g31482 (setf slot-value) #:g31483 #:g31484 #:g31485 (setf slot-value) #:g31486 #:g31487 #:g31488 (setf slot-value) #:g31489 #:g31490 #:g31491 (setf slot-value) #:g31492 #:g31493 #:g31494 (setf slot-value) #:g31495 #:g31496 #:g31497 (setf slot-value) #:g31498 #:g31499 #:g31500 (setf slot-value) #:g31501 #:g31502 #:g31503 (setf slot-value) #:g31504 #:g31505 #:g31506 (setf slot-value) #:g31507 #:g31508 "onBatteryShutdownAfterSecs" #:g31509 (setf slot-value) #:g31510 #:g31511 #:g31512 (setf slot-value) #:g31513 #:g31514 #:g31515 (setf slot-value) #:g31516 #:g31517 #:g31518 (setf slot-value) #:g31519 #:g31520 #:g31521 (setf slot-value) #:g31522 #:g31523 #:g31524 (setf slot-value) 0 0 #:g31525 #:g31526 #:g31527 (setf slot-value) #:g31528 #:g31529 "adc_multiplier_override" #:g31530 (setf slot-value) #:g31531 #:g31532 "meshtastic.Config.PowerConfig.adc_multiplier_override" #:g31533 (setf slot-value) #:g31534 #:g31535 #:g31536 (setf slot-value) #:g31537 #:g31538 #:g31539 (setf slot-value) #:g31540 #:g31541 #:g31542 (setf slot-value) #:g31543 #:g31544 #:g31545 (setf slot-value) #:g31546 #:g31547 #:g31548 (setf slot-value) #:g31549 #:g31550 #:g31551 (setf slot-value) #:g31552 #:g31553 #:g31554 (setf slot-value) #:g31555 #:g31556 #:g31557 (setf slot-value) #:g31558 #:g31559 #:g31560 (setf slot-value) #:g31561 #:g31562 "adcMultiplierOverride" #:g31563 (setf slot-value) #:g31564 #:g31565 #:g31566 (setf slot-value) #:g31567 #:g31568 #:g31569 (setf slot-value) #:g31570 #:g31571 #:g31572 (setf slot-value) #:g31573 #:g31574 #:g31575 (setf slot-value) #:g31576 #:g31577 #:g31578 (setf slot-value) 0 0 #:g31579 #:g31580 #:g31581 (setf slot-value) #:g31582 #:g31583 "wait_bluetooth_secs" #:g31584 (setf slot-value) #:g31585 #:g31586 "meshtastic.Config.PowerConfig.wait_bluetooth_secs" #:g31587 (setf slot-value) #:g31588 #:g31589 #:g31590 (setf slot-value) #:g31591 #:g31592 #:g31593 (setf slot-value) #:g31594 #:g31595 #:g31596 (setf slot-value) #:g31597 #:g31598 #:g31599 (setf slot-value) #:g31600 #:g31601 #:g31602 (setf slot-value) #:g31603 #:g31604 #:g31605 (setf slot-value) #:g31606 #:g31607 #:g31608 (setf slot-value) #:g31609 #:g31610 #:g31611 (setf slot-value) #:g31612 #:g31613 #:g31614 (setf slot-value) #:g31615 #:g31616 "waitBluetoothSecs" #:g31617 (setf slot-value) #:g31618 #:g31619 #:g31620 (setf slot-value) #:g31621 #:g31622 #:g31623 (setf slot-value) #:g31624 #:g31625 #:g31626 (setf slot-value) #:g31627 #:g31628 #:g31629 (setf slot-value) #:g31630 #:g31631 #:g31632 (setf slot-value) 0 0 #:g31633 #:g31634 #:g31635 (setf slot-value) #:g31636 #:g31637 "mesh_sds_timeout_secs" #:g31638 (setf slot-value) #:g31639 #:g31640 "meshtastic.Config.PowerConfig.mesh_sds_timeout_secs" #:g31641 (setf slot-value) #:g31642 #:g31643 #:g31644 (setf slot-value) #:g31645 #:g31646 #:g31647 (setf slot-value) #:g31648 #:g31649 #:g31650 (setf slot-value) #:g31651 #:g31652 #:g31653 (setf slot-value) #:g31654 #:g31655 #:g31656 (setf slot-value) #:g31657 #:g31658 #:g31659 (setf slot-value) #:g31660 #:g31661 #:g31662 (setf slot-value) #:g31663 #:g31664 #:g31665 (setf slot-value) #:g31666 #:g31667 #:g31668 (setf slot-value) #:g31669 #:g31670 "meshSdsTimeoutSecs" #:g31671 (setf slot-value) #:g31672 #:g31673 #:g31674 (setf slot-value) #:g31675 #:g31676 #:g31677 (setf slot-value) #:g31678 #:g31679 #:g31680 (setf slot-value) #:g31681 #:g31682 #:g31683 (setf slot-value) #:g31684 #:g31685 #:g31686 (setf slot-value) 0 0 #:g31687 #:g31688 #:g31689 (setf slot-value) #:g31690 #:g31691 "sds_secs" #:g31692 (setf slot-value) #:g31693 #:g31694 "meshtastic.Config.PowerConfig.sds_secs" #:g31695 (setf slot-value) #:g31696 #:g31697 #:g31698 (setf slot-value) #:g31699 #:g31700 #:g31701 (setf slot-value) #:g31702 #:g31703 #:g31704 (setf slot-value) #:g31705 #:g31706 #:g31707 (setf slot-value) #:g31708 #:g31709 #:g31710 (setf slot-value) #:g31711 #:g31712 #:g31713 (setf slot-value) #:g31714 #:g31715 #:g31716 (setf slot-value) #:g31717 #:g31718 #:g31719 (setf slot-value) #:g31720 #:g31721 #:g31722 (setf slot-value) #:g31723 #:g31724 "sdsSecs" #:g31725 (setf slot-value) #:g31726 #:g31727 #:g31728 (setf slot-value) #:g31729 #:g31730 #:g31731 (setf slot-value) #:g31732 #:g31733 #:g31734 (setf slot-value) #:g31735 #:g31736 #:g31737 (setf slot-value) #:g31738 #:g31739 #:g31740 (setf slot-value) 0 0 #:g31741 #:g31742 #:g31743 (setf slot-value) #:g31744 #:g31745 "ls_secs" #:g31746 (setf slot-value) #:g31747 #:g31748 "meshtastic.Config.PowerConfig.ls_secs" #:g31749 (setf slot-value) #:g31750 #:g31751 #:g31752 (setf slot-value) #:g31753 #:g31754 #:g31755 (setf slot-value) #:g31756 #:g31757 #:g31758 (setf slot-value) #:g31759 #:g31760 #:g31761 (setf slot-value) #:g31762 #:g31763 #:g31764 (setf slot-value) #:g31765 #:g31766 #:g31767 (setf slot-value) #:g31768 #:g31769 #:g31770 (setf slot-value) #:g31771 #:g31772 #:g31773 (setf slot-value) #:g31774 #:g31775 #:g31776 (setf slot-value) #:g31777 #:g31778 "lsSecs" #:g31779 (setf slot-value) #:g31780 #:g31781 #:g31782 (setf slot-value) #:g31783 #:g31784 #:g31785 (setf slot-value) #:g31786 #:g31787 #:g31788 (setf slot-value) #:g31789 #:g31790 #:g31791 (setf slot-value) #:g31792 #:g31793 #:g31794 (setf slot-value) 0 0 #:g31795 #:g31796 #:g31797 (setf slot-value) #:g31798 #:g31799 "min_wake_secs" #:g31800 (setf slot-value) #:g31801 #:g31802 "meshtastic.Config.PowerConfig.min_wake_secs" #:g31803 (setf slot-value) #:g31804 #:g31805 #:g31806 (setf slot-value) #:g31807 #:g31808 #:g31809 (setf slot-value) #:g31810 #:g31811 #:g31812 (setf slot-value) #:g31813 #:g31814 #:g31815 (setf slot-value) #:g31816 #:g31817 #:g31818 (setf slot-value) #:g31819 #:g31820 #:g31821 (setf slot-value) #:g31822 #:g31823 #:g31824 (setf slot-value) #:g31825 #:g31826 #:g31827 (setf slot-value) #:g31828 #:g31829 #:g31830 (setf slot-value) #:g31831 #:g31832 "minWakeSecs" #:g31833 (setf slot-value) #:g31834 #:g31835 #:g31836 (setf slot-value) #:g31837 #:g31838 #:g31839 (setf slot-value) #:g31840 #:g31841 #:g31842 (setf slot-value) #:g31843 #:g31844 #:g31845 (setf slot-value) #:g31846 #:g31847 #:g31848 (setf slot-value) 0 #:g31849 #:g31850 #:g31851 (setf slot-value) #:g31852 #:g31853 "device_battery_ina_address" #:g31854 (setf slot-value) #:g31855 #:g31856 "meshtastic.Config.PowerConfig.device_battery_ina_address" #:g31857 (setf slot-value) #:g31858 #:g31859 #:g31860 (setf slot-value) #:g31861 #:g31862 #:g31863 (setf slot-value) #:g31864 #:g31865 #:g31866 (setf slot-value) #:g31867 #:g31868 #:g31869 (setf slot-value) #:g31870 #:g31871 #:g31872 (setf slot-value) #:g31873 #:g31874 #:g31875 (setf slot-value) #:g31876 #:g31877 #:g31878 (setf slot-value) #:g31879 #:g31880 #:g31881 (setf slot-value) #:g31882 #:g31883 #:g31884 (setf slot-value) #:g31885 #:g31886 "deviceBatteryInaAddress" #:g31887 (setf slot-value) #:g31888 #:g31889 #:g31890 (setf slot-value) #:g31891 #:g31892 #:g31893 (setf slot-value) #:g31894 #:g31895 #:g31896 (setf slot-value) #:g31897 #:g31898 #:g31899 (setf slot-value) #:g31900 #:g31901 #:g31902 (setf slot-value) cl-protobufs.meshtastic::%%%%config.network-config.address-mode (deftype cl-protobufs.meshtastic::%%%%config.network-config.address-mode nil (quote #395=(or (member . #396=(:dhcp :static)) #4#))) #395# cl-protobufs.meshtastic::config.network-config.address-mode (deftype cl-protobufs.meshtastic::config.network-config.address-mode nil (quote #397=(member . #396#))) #397# cl-protobufs.meshtastic::config.network-config.address-mode-keyword-to-int (defun cl-protobufs.meshtastic::config.network-config.address-mode-keyword-to-int) (#6# . 718) :dhcp :static #Y(cl-protobufs.meshtastic::config.network-config.address-mode-keyword-to-int nil nil (24 45 28 26 10 0 42 4690 5 8 0 38 26 42 4691 5 8 1 38 19 10 0 16 36 12 14 37 19 2 38 12 14 39 14 40 19 3 41 45 42 10 0 73 43 1 29) #1# #6# 718) cl-protobufs.meshtastic::config.network-config.address-mode-int-to-keyword (defun cl-protobufs.meshtastic::config.network-config.address-mode-int-to-keyword) (#6# . 718) #Y(cl-protobufs.meshtastic::config.network-config.address-mode-int-to-keyword nil nil (24 45 49 26 10 0 42 50 5 11 4690 38 9 42 51 5 11 4691 38 2 75 45 57 10 0 73 43 1 29) #1# #6# 718) #:g31907 #:g31908 #:g31909 #:g31910 #:g31911 #:g31912 (defmethod cl-protobufs::enum-keyword-to-int (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.network-config.address-mode))) keyword) (#6# . 718) ((eql cl-protobufs.meshtastic::config.network-config.address-mode) t) (cl-protobufs.implementation::e keyword) #Y(cl-protobufs::enum-keyword-to-int nil nil (24 45 72 24 45 73 26 13 0 19 1 4687 29) #1# #6# 718) (defmethod cl-protobufs::enum-int-to-keyword (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.network-config.address-mode))) cl-protobufs.implementation::numeral) (#6# . 718) ((eql cl-protobufs.meshtastic::config.network-config.address-mode) t) (cl-protobufs.implementation::e cl-protobufs.implementation::numeral) #Y(cl-protobufs::enum-int-to-keyword nil nil (24 45 72 24 45 49 26 13 0 19 1 4693 29) #1# #6# 718) cl-protobufs.meshtastic::+config.network-config.dhcp+ (defconstant cl-protobufs.meshtastic::+config.network-config.dhcp+) (#6# . 718) cl-protobufs.meshtastic::+config.network-config.static+ (defconstant cl-protobufs.meshtastic::+config.network-config.static+) (#6# . 718) (cl-protobufs.meshtastic::+config.network-config.dhcp+ cl-protobufs.meshtastic::+config.network-config.static+) (defmethod cl-protobufs.implementation::enum-default-value (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.network-config.address-mode)))) (#6# . 718) ((eql cl-protobufs.meshtastic::config.network-config.address-mode)) (cl-protobufs.implementation::e) #Y(cl-protobufs.implementation::enum-default-value nil nil (24 45 72 26 11 4690 73 29) #1# #6# 718) 0 "AddressMode" 0 0 0 0 (cl-protobufs.meshtastic::%%%%config.network-config.address-mode) ((inline cl-protobufs.meshtastic::%make-config.network-config.ip-v4-config)) cl-protobufs.meshtastic::config.network-config.ip-v4-config "CONFIG.NETWORK-CONFIG.IP-V4-CONFIG-" ((cl-protobufs.meshtastic::%ip 0 :type cl-protobufs::fixed32) (cl-protobufs.meshtastic::%gateway 0 :type cl-protobufs::fixed32) (cl-protobufs.meshtastic::%subnet 0 :type cl-protobufs::fixed32) (cl-protobufs.meshtastic::%dns 0 :type cl-protobufs::fixed32) (cl-protobufs.implementation::%%bytes nil :type #10#) (cl-protobufs.implementation::%%is-set #398=(make-array 0 . #16#) :type #399=(bit-vector 0))) (#18# (cl-protobufs.meshtastic::%ip 0 cl-protobufs::fixed32 nil 1 nil) (cl-protobufs.meshtastic::%gateway 0 cl-protobufs::fixed32 nil 2 nil) (cl-protobufs.meshtastic::%subnet 0 cl-protobufs::fixed32 nil 3 nil) (cl-protobufs.meshtastic::%dns 0 cl-protobufs::fixed32 nil 4 nil) (cl-protobufs.implementation::%%bytes nil #10# nil 5 nil) (cl-protobufs.implementation::%%is-set #398# #399# nil 6 nil)) cl-protobufs.meshtastic::copy-config.network-config.ip-v4-config (cl-protobufs.meshtastic::%make-config.network-config.ip-v4-config) #400=(cl-protobufs.meshtastic::config.network-config.ip-v4-config (:constructor cl-protobufs.meshtastic::%make-config.network-config.ip-v4-config) . #20#) (defstruct #400#) (#6# . 718) cl-protobufs.meshtastic::%make-config.network-config.ip-v4-config (defun cl-protobufs.meshtastic::%make-config.network-config.ip-v4-config) (#6# . 718) #401=(&key #402=#:%%skipped-bytes (#403=#:%ip 0) (#404=#:%gateway 0) (#405=#:%subnet 0) (#406=#:%dns 0) #407=#:%%bytes (#408=#:%%is-set (make-array 0 :element-type (quote bit) :initial-element 0))) (nil :%%is-set :%%bytes :%dns :%subnet :%gateway :%ip :%%skipped-bytes) #402# #403# #404# #405# #406# #407# #408# #409=(bit-vector 0) #410=(bit-vector 0) #411=(or null (simple-array (unsigned-byte 8))) #412=(or null (simple-array (unsigned-byte 8))) cl-protobufs::fixed32 cl-protobufs.meshtastic::%dns cl-protobufs.meshtastic::%subnet cl-protobufs.meshtastic::%gateway cl-protobufs.meshtastic::%ip #413=(or null cl-protobufs::byte-vector) #414=(or null cl-protobufs::byte-vector) 0 #Y(cl-protobufs.meshtastic::%make-config.network-config.ip-v4-config nil nil (28 4746 22 40 2 77 46 4747 22 40 3 9 0 46 4748 22 40 3 9 0 46 4749 22 40 3 9 0 46 4750 22 40 3 9 0 46 4751 22 40 2 77 46 4752 22 40 15 9 0 14 222 15 223 14 228 9 0 19 5 226 12 46 4753 13 0 15 4754 19 2 231 76 39 12 13 0 15 4755 15 4733 15 233 19 4 234 13 1 15 4756 19 2 231 76 39 12 13 1 15 4757 15 4733 15 240 19 4 234 13 2 15 4758 19 2 231 76 39 12 13 2 15 4758 15 4733 15 4759 19 4 234 13 3 15 4758 19 2 231 76 39 12 13 3 15 4758 15 4733 15 4760 19 4 234 13 4 15 4758 19 2 231 76 39 12 13 4 15 4758 15 4733 15 4761 19 4 234 13 5 15 4758 19 2 231 76 39 12 13 5 15 4758 15 4733 15 4762 19 4 234 13 6 15 4763 19 2 231 76 39 12 13 6 15 4764 15 4733 15 249 19 4 234 15 4765 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 8 251 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::%make-config.network-config.ip-v4-config #401# #39# (unless (typep #408# (quote #409#)) (si::structure-type-error #408# (quote #410#) (quote cl-protobufs.meshtastic::config.network-config.ip-v4-config) (quote cl-protobufs.implementation::%%is-set))) (unless (typep #407# (quote #411#)) (si::structure-type-error #407# (quote #412#) (quote cl-protobufs.meshtastic::config.network-config.ip-v4-config) (quote cl-protobufs.implementation::%%bytes))) (unless (typep #406# (quote cl-protobufs::fixed32)) (si::structure-type-error #406# (quote cl-protobufs::fixed32) (quote cl-protobufs.meshtastic::config.network-config.ip-v4-config) (quote cl-protobufs.meshtastic::%dns))) (unless (typep #405# (quote cl-protobufs::fixed32)) (si::structure-type-error #405# (quote cl-protobufs::fixed32) (quote cl-protobufs.meshtastic::config.network-config.ip-v4-config) (quote cl-protobufs.meshtastic::%subnet))) (unless (typep #404# (quote cl-protobufs::fixed32)) (si::structure-type-error #404# (quote cl-protobufs::fixed32) (quote cl-protobufs.meshtastic::config.network-config.ip-v4-config) (quote cl-protobufs.meshtastic::%gateway))) (unless (typep #403# (quote cl-protobufs::fixed32)) (si::structure-type-error #403# (quote cl-protobufs::fixed32) (quote cl-protobufs.meshtastic::config.network-config.ip-v4-config) (quote cl-protobufs.meshtastic::%ip))) (unless (typep #402# (quote #413#)) (si::structure-type-error #402# (quote #414#) (quote cl-protobufs.meshtastic::config.network-config.ip-v4-config) (quote cl-protobufs.implementation::%%skipped-bytes))) (si::make-structure (load-time-value (find-class (quote cl-protobufs.meshtastic::config.network-config.ip-v4-config))) #402# #403# #404# #405# #406# #407# #408#))) cl-protobufs.meshtastic::config.network-config.ip-v4-config-%%is-set (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%%is-set) #:g31920 #Y(nil nil nil (24 45 4770 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 4733 6 2 12 9 6 13 0 10 1 6 6 12 15 274 13 2 15 273 1 4733 6 2 12 8 6 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.network-config.ip-v4-config-%%bytes (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%%bytes) #:g31921 #Y(nil nil nil (24 45 4774 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 4733 6 2 12 9 5 13 0 10 1 6 6 12 15 274 13 2 15 273 1 4733 6 2 12 8 5 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.network-config.ip-v4-config-%dns (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%dns) #:g31922 #Y(nil nil nil (24 45 4778 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 4733 6 2 12 9 4 13 0 10 1 6 6 12 15 274 13 2 15 273 1 4733 6 2 12 8 4 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.network-config.ip-v4-config-%subnet (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%subnet) #:g31923 #Y(nil nil nil (24 45 4782 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 4733 6 2 12 9 3 13 0 10 1 6 6 12 15 274 13 2 15 273 1 4733 6 2 12 8 3 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.network-config.ip-v4-config-%gateway (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%gateway) #:g31924 #Y(nil nil nil (24 45 4786 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 4733 6 2 12 9 2 13 0 10 1 6 6 12 15 274 13 2 15 273 1 4733 6 2 12 8 2 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.network-config.ip-v4-config-%ip (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%ip) #:g31925 #Y(nil nil nil (24 45 4790 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 4733 6 2 12 9 1 13 0 10 1 6 6 12 15 274 13 2 15 273 1 4733 6 2 12 8 1 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.network-config.ip-v4-config-%%skipped-bytes (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%%skipped-bytes) #:g31926 #Y(nil nil nil (24 45 4794 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 4733 6 2 12 9 0 13 0 10 1 6 6 12 15 274 13 2 15 273 1 4733 6 2 12 8 0 6 4 12 72 6 43 2 29) #1# #6# 718) ((inline cl-protobufs.meshtastic::config.network-config.ip-v4-config.ip)) cl-protobufs.meshtastic::config.network-config.ip-v4-config.ip (defun cl-protobufs.meshtastic::config.network-config.ip-v4-config.ip) (#6# . 718) #415=(#416=#:obj29350) #416# #Y(cl-protobufs.meshtastic::config.network-config.ip-v4-config.ip nil nil (24 45 4801 26 13 0 19 1 4788 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.ip-v4-config.ip #415# #39# (the cl-protobufs::fixed32 (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%ip #416#)))) ((inline #417=(setf cl-protobufs.meshtastic::config.network-config.ip-v4-config.ip))) #417# (defun #417#) (#6# . 718) #418=(#419=#:new-value29352 #420=#:obj29351) #419# #420# #:g31929 #:g31930 #Y(#417# nil nil (24 45 4809 24 45 4810 26 10 0 45 4811 10 2 45 4812 13 1 15 4733 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #417# #418# #39# (declare (type cl-protobufs::fixed32 #419#)) nil (setf (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%ip #420#) #419#))) ((inline cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-ip)) cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-ip (defun cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-ip) (#6# . 718) #421=(#420#) #422=#:cur-value29353 #Y(cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-ip nil nil (24 45 4810 26 13 0 19 1 4788 45 4820 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-ip #421# #39# (let ((#422# (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%ip #420#))) (not (eq #422# 0))))) ((inline cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-ip)) cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-ip (defun cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-ip) (#6# . 718) #423=(#420#) #:g31933 #:g31934 #Y(cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-ip nil nil (24 45 4810 26 10 0 45 4828 8 0 45 4829 13 1 15 4733 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-ip #423# #39# nil (setf (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%ip #420#) 0))) cl-protobufs.meshtastic::ip (defmethod cl-protobufs.meshtastic::ip (#420# cl-protobufs.meshtastic::config.network-config.ip-v4-config)) (#6# . 718) (cl-protobufs.meshtastic::config.network-config.ip-v4-config) (#420#) #Y(cl-protobufs.meshtastic::ip nil nil (24 45 4810 26 13 0 19 1 4797 29) #1# #6# 718) #424=(setf cl-protobufs.meshtastic::ip) (defmethod #424# #419# (#420# cl-protobufs.meshtastic::config.network-config.ip-v4-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.network-config.ip-v4-config) (#419# #420#) #:g31941 #:g31942 (setf cl-protobufs.meshtastic::config.network-config.ip-v4-config.ip) #Y(#424# nil nil (24 45 4809 24 45 4810 26 10 0 45 4843 10 2 45 4844 13 0 13 1 33 4845 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-ip) (cl-protobufs.meshtastic::config.network-config.ip-v4-config.ip) ((inline cl-protobufs.meshtastic::config.network-config.ip-v4-config.gateway)) cl-protobufs.meshtastic::config.network-config.ip-v4-config.gateway (defun cl-protobufs.meshtastic::config.network-config.ip-v4-config.gateway) (#6# . 718) #425=(#426=#:obj29354) #426# #Y(cl-protobufs.meshtastic::config.network-config.ip-v4-config.gateway nil nil (24 45 4854 26 13 0 19 1 4784 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.ip-v4-config.gateway #425# #39# (the cl-protobufs::fixed32 (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%gateway #426#)))) ((inline #427=(setf cl-protobufs.meshtastic::config.network-config.ip-v4-config.gateway))) #427# (defun #427#) (#6# . 718) #428=(#429=#:new-value29356 #430=#:obj29355) #429# #430# #:g31945 #:g31946 #Y(#427# nil nil (24 45 4862 24 45 4863 26 10 0 45 4864 10 2 45 4865 13 1 15 4733 9 2 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #427# #428# #39# (declare (type cl-protobufs::fixed32 #429#)) nil (setf (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%gateway #430#) #429#))) ((inline cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-gateway)) cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-gateway (defun cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-gateway) (#6# . 718) #431=(#430#) #432=#:cur-value29357 #Y(cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-gateway nil nil (24 45 4863 26 13 0 19 1 4784 45 4873 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-gateway #431# #39# (let ((#432# (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%gateway #430#))) (not (eq #432# 0))))) ((inline cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-gateway)) cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-gateway (defun cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-gateway) (#6# . 718) #433=(#430#) #:g31949 #:g31950 #Y(cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-gateway nil nil (24 45 4863 26 10 0 45 4881 8 0 45 4882 13 1 15 4733 9 2 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-gateway #433# #39# nil (setf (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%gateway #430#) 0))) cl-protobufs.meshtastic::gateway (defmethod cl-protobufs.meshtastic::gateway (#430# cl-protobufs.meshtastic::config.network-config.ip-v4-config)) (#6# . 718) (cl-protobufs.meshtastic::config.network-config.ip-v4-config) (#430#) #Y(cl-protobufs.meshtastic::gateway nil nil (24 45 4863 26 13 0 19 1 4850 29) #1# #6# 718) #434=(setf cl-protobufs.meshtastic::gateway) (defmethod #434# #429# (#430# cl-protobufs.meshtastic::config.network-config.ip-v4-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.network-config.ip-v4-config) (#429# #430#) #:g31957 #:g31958 (setf cl-protobufs.meshtastic::config.network-config.ip-v4-config.gateway) #Y(#434# nil nil (24 45 4862 24 45 4863 26 10 0 45 4896 10 2 45 4897 13 0 13 1 33 4898 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-gateway) (cl-protobufs.meshtastic::config.network-config.ip-v4-config.gateway) ((inline cl-protobufs.meshtastic::config.network-config.ip-v4-config.subnet)) cl-protobufs.meshtastic::config.network-config.ip-v4-config.subnet (defun cl-protobufs.meshtastic::config.network-config.ip-v4-config.subnet) (#6# . 718) #435=(#436=#:obj29358) #436# #Y(cl-protobufs.meshtastic::config.network-config.ip-v4-config.subnet nil nil (24 45 4907 26 13 0 19 1 4780 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.ip-v4-config.subnet #435# #39# (the cl-protobufs::fixed32 (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%subnet #436#)))) ((inline #437=(setf cl-protobufs.meshtastic::config.network-config.ip-v4-config.subnet))) #437# (defun #437#) (#6# . 718) #438=(#439=#:new-value29360 #440=#:obj29359) #439# #440# #:g31961 #:g31962 #Y(#437# nil nil (24 45 4915 24 45 4916 26 10 0 45 4917 10 2 45 4918 13 1 15 4733 9 3 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #437# #438# #39# (declare (type cl-protobufs::fixed32 #439#)) nil (setf (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%subnet #440#) #439#))) ((inline cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-subnet)) cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-subnet (defun cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-subnet) (#6# . 718) #441=(#440#) #442=#:cur-value29361 #Y(cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-subnet nil nil (24 45 4916 26 13 0 19 1 4780 45 4926 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-subnet #441# #39# (let ((#442# (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%subnet #440#))) (not (eq #442# 0))))) ((inline cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-subnet)) cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-subnet (defun cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-subnet) (#6# . 718) #443=(#440#) #:g31965 #:g31966 #Y(cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-subnet nil nil (24 45 4916 26 10 0 45 4934 8 0 45 4935 13 1 15 4733 9 3 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-subnet #443# #39# nil (setf (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%subnet #440#) 0))) cl-protobufs.meshtastic::subnet (defmethod cl-protobufs.meshtastic::subnet (#440# cl-protobufs.meshtastic::config.network-config.ip-v4-config)) (#6# . 718) (cl-protobufs.meshtastic::config.network-config.ip-v4-config) (#440#) #Y(cl-protobufs.meshtastic::subnet nil nil (24 45 4916 26 13 0 19 1 4903 29) #1# #6# 718) #444=(setf cl-protobufs.meshtastic::subnet) (defmethod #444# #439# (#440# cl-protobufs.meshtastic::config.network-config.ip-v4-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.network-config.ip-v4-config) (#439# #440#) #:g31973 #:g31974 (setf cl-protobufs.meshtastic::config.network-config.ip-v4-config.subnet) #Y(#444# nil nil (24 45 4915 24 45 4916 26 10 0 45 4949 10 2 45 4950 13 0 13 1 33 4951 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-subnet) (cl-protobufs.meshtastic::config.network-config.ip-v4-config.subnet) ((inline cl-protobufs.meshtastic::config.network-config.ip-v4-config.dns)) cl-protobufs.meshtastic::config.network-config.ip-v4-config.dns (defun cl-protobufs.meshtastic::config.network-config.ip-v4-config.dns) (#6# . 718) #445=(#446=#:obj29362) #446# #Y(cl-protobufs.meshtastic::config.network-config.ip-v4-config.dns nil nil (24 45 4960 26 13 0 19 1 4776 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.ip-v4-config.dns #445# #39# (the cl-protobufs::fixed32 (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%dns #446#)))) ((inline #447=(setf cl-protobufs.meshtastic::config.network-config.ip-v4-config.dns))) #447# (defun #447#) (#6# . 718) #448=(#449=#:new-value29364 #450=#:obj29363) #449# #450# #:g31977 #:g31978 #Y(#447# nil nil (24 45 4968 24 45 4969 26 10 0 45 4970 10 2 45 4971 13 1 15 4733 9 4 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #447# #448# #39# (declare (type cl-protobufs::fixed32 #449#)) nil (setf (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%dns #450#) #449#))) ((inline cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-dns)) cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-dns (defun cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-dns) (#6# . 718) #451=(#450#) #452=#:cur-value29365 #Y(cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-dns nil nil (24 45 4969 26 13 0 19 1 4776 45 4979 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.ip-v4-config.%%has-dns #451# #39# (let ((#452# (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%dns #450#))) (not (eq #452# 0))))) ((inline cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-dns)) cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-dns (defun cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-dns) (#6# . 718) #453=(#450#) #:g31981 #:g31982 #Y(cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-dns nil nil (24 45 4969 26 10 0 45 4987 8 0 45 4988 13 1 15 4733 9 4 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-dns #453# #39# nil (setf (cl-protobufs.meshtastic::config.network-config.ip-v4-config-%dns #450#) 0))) cl-protobufs.meshtastic::dns (defmethod cl-protobufs.meshtastic::dns (#450# cl-protobufs.meshtastic::config.network-config.ip-v4-config)) (#6# . 718) (cl-protobufs.meshtastic::config.network-config.ip-v4-config) (#450#) #Y(cl-protobufs.meshtastic::dns nil nil (24 45 4969 26 13 0 19 1 4956 29) #1# #6# 718) #454=(setf cl-protobufs.meshtastic::dns) (defmethod #454# #449# (#450# cl-protobufs.meshtastic::config.network-config.ip-v4-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.network-config.ip-v4-config) (#449# #450#) #:g31989 #:g31990 (setf cl-protobufs.meshtastic::config.network-config.ip-v4-config.dns) #Y(#454# nil nil (24 45 4968 24 45 4969 26 10 0 45 5002 10 2 45 5003 13 0 13 1 33 5004 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-dns) (cl-protobufs.meshtastic::config.network-config.ip-v4-config.dns) ((inline cl-protobufs.meshtastic::make-config.network-config.ip-v4-config)) cl-protobufs.meshtastic::make-config.network-config.ip-v4-config (defun cl-protobufs.meshtastic::make-config.network-config.ip-v4-config) (#6# . 718) #455=(&key (cl-protobufs.meshtastic::ip :%unset) (cl-protobufs.meshtastic::gateway :%unset) (cl-protobufs.meshtastic::subnet :%unset) (cl-protobufs.meshtastic::dns :%unset)) (nil :dns :subnet :gateway :ip) #456=#:obj29349 #:g31999 #:g32000 (setf cl-protobufs.meshtastic::config.network-config.ip-v4-config.ip) #:g32001 #:g32002 (setf cl-protobufs.meshtastic::config.network-config.ip-v4-config.gateway) #:g32003 #:g32004 (setf cl-protobufs.meshtastic::config.network-config.ip-v4-config.subnet) #:g32005 #:g32006 (setf cl-protobufs.meshtastic::config.network-config.ip-v4-config.dns) #Y(cl-protobufs.meshtastic::make-config.network-config.ip-v4-config nil nil (28 5013 22 40 3 14 777 46 4832 22 40 3 14 777 46 4885 22 40 3 14 777 46 4938 22 40 3 14 777 46 4991 19 0 4742 45 5014 13 4 11 777 17 332 40 4 10 4 76 76 39 21 10 0 45 5015 10 5 45 5016 13 0 13 1 33 5017 18 2 43 1 43 1 13 3 11 777 17 332 40 4 10 3 76 76 39 21 10 0 45 5018 10 4 45 5019 13 0 13 1 33 5020 18 2 43 1 43 1 13 2 11 777 17 332 40 4 10 2 76 76 39 21 10 0 45 5021 10 3 45 5022 13 0 13 1 33 5023 18 2 43 1 43 1 13 1 11 777 17 332 40 4 10 1 76 76 39 21 10 0 45 5024 10 2 45 5025 13 0 13 1 33 5026 18 2 43 1 43 1 10 0 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::make-config.network-config.ip-v4-config #455# #39# (let ((#456# (cl-protobufs.meshtastic::%make-config.network-config.ip-v4-config))) (unless (or (eq cl-protobufs.meshtastic::ip :%unset) (not cl-protobufs.meshtastic::ip)) (setf (cl-protobufs.meshtastic::config.network-config.ip-v4-config.ip #456#) cl-protobufs.meshtastic::ip)) (unless (or (eq cl-protobufs.meshtastic::gateway :%unset) (not cl-protobufs.meshtastic::gateway)) (setf (cl-protobufs.meshtastic::config.network-config.ip-v4-config.gateway #456#) cl-protobufs.meshtastic::gateway)) (unless (or (eq cl-protobufs.meshtastic::subnet :%unset) (not cl-protobufs.meshtastic::subnet)) (setf (cl-protobufs.meshtastic::config.network-config.ip-v4-config.subnet #456#) cl-protobufs.meshtastic::subnet)) (unless (or (eq cl-protobufs.meshtastic::dns :%unset) (not cl-protobufs.meshtastic::dns)) (setf (cl-protobufs.meshtastic::config.network-config.ip-v4-config.dns #456#) cl-protobufs.meshtastic::dns)) #456#))) cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-%%is-set (defun cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-%%is-set) (#6# . 718) (#456#) #Y(cl-protobufs.meshtastic::config.network-config.ip-v4-config.clear-%%is-set nil nil (24 45 5014 26 13 0 19 1 4768 12 9 0 19 2 812 29) #1# #6# 718) (cl-protobufs.meshtastic::make-config.network-config.ip-v4-config cl-protobufs.meshtastic::config.network-config.ip-v4-config-%%is-set) (defmethod cl-protobufs::clear (#456# cl-protobufs.meshtastic::config.network-config.ip-v4-config)) (#6# . 718) (cl-protobufs.meshtastic::config.network-config.ip-v4-config) (#456#) #:g32013 #:g32014 #Y(cl-protobufs::clear nil nil (24 45 5014 26 10 0 45 5039 75 45 5040 13 1 15 204 9 0 13 0 19 4 118 43 1 43 1 13 0 19 1 4824 13 0 19 1 4877 13 0 19 1 4930 13 0 19 1 4983 13 0 19 1 5029 29) #1# #6# 718) 0 #:g32015 #:g32016 #:g32017 (setf slot-value) #:g32018 #:g32019 "IpV4Config" #:g32020 (setf slot-value) #:g32021 #:g32022 "meshtastic.Config.NetworkConfig.IpV4Config" #:g32023 (setf slot-value) #:g32024 #:g32025 #:g32026 (setf slot-value) #:g32027 #:g32028 #:g32029 (setf slot-value) #:g32030 #:g32031 0 #:g32032 (setf slot-value) #:g32033 #:g32034 #:g32035 (setf slot-value) #:g32036 #:g32037 #:g32038 (setf slot-value) #:g32039 #:g32040 #:g32041 (setf slot-value) #:g32042 #:g32043 #:g32044 (setf slot-value) 0 0 #:g32045 #:g32046 #:g32047 (setf slot-value) #:g32048 #:g32049 "ip" #:g32050 (setf slot-value) #:g32051 #:g32052 "meshtastic.Config.NetworkConfig.IpV4Config.ip" #:g32053 (setf slot-value) #:g32054 #:g32055 #:g32056 (setf slot-value) #:g32057 #:g32058 #:g32059 (setf slot-value) #:g32060 #:g32061 #:g32062 (setf slot-value) #:g32063 #:g32064 #:g32065 (setf slot-value) #:g32066 #:g32067 #:g32068 (setf slot-value) #:g32069 #:g32070 #:g32071 (setf slot-value) #:g32072 #:g32073 #:g32074 (setf slot-value) #:g32075 #:g32076 #:g32077 (setf slot-value) #:g32078 #:g32079 #:g32080 (setf slot-value) #:g32081 #:g32082 "ip" #:g32083 (setf slot-value) #:g32084 #:g32085 #:g32086 (setf slot-value) #:g32087 #:g32088 #:g32089 (setf slot-value) #:g32090 #:g32091 #:g32092 (setf slot-value) #:g32093 #:g32094 #:g32095 (setf slot-value) #:g32096 #:g32097 #:g32098 (setf slot-value) 0 0 #:g32099 #:g32100 #:g32101 (setf slot-value) #:g32102 #:g32103 "gateway" #:g32104 (setf slot-value) #:g32105 #:g32106 "meshtastic.Config.NetworkConfig.IpV4Config.gateway" #:g32107 (setf slot-value) #:g32108 #:g32109 #:g32110 (setf slot-value) #:g32111 #:g32112 #:g32113 (setf slot-value) #:g32114 #:g32115 #:g32116 (setf slot-value) #:g32117 #:g32118 #:g32119 (setf slot-value) #:g32120 #:g32121 #:g32122 (setf slot-value) #:g32123 #:g32124 #:g32125 (setf slot-value) #:g32126 #:g32127 #:g32128 (setf slot-value) #:g32129 #:g32130 #:g32131 (setf slot-value) #:g32132 #:g32133 #:g32134 (setf slot-value) #:g32135 #:g32136 "gateway" #:g32137 (setf slot-value) #:g32138 #:g32139 #:g32140 (setf slot-value) #:g32141 #:g32142 #:g32143 (setf slot-value) #:g32144 #:g32145 #:g32146 (setf slot-value) #:g32147 #:g32148 #:g32149 (setf slot-value) #:g32150 #:g32151 #:g32152 (setf slot-value) 0 0 #:g32153 #:g32154 #:g32155 (setf slot-value) #:g32156 #:g32157 "subnet" #:g32158 (setf slot-value) #:g32159 #:g32160 "meshtastic.Config.NetworkConfig.IpV4Config.subnet" #:g32161 (setf slot-value) #:g32162 #:g32163 #:g32164 (setf slot-value) #:g32165 #:g32166 #:g32167 (setf slot-value) #:g32168 #:g32169 #:g32170 (setf slot-value) #:g32171 #:g32172 #:g32173 (setf slot-value) #:g32174 #:g32175 #:g32176 (setf slot-value) #:g32177 #:g32178 #:g32179 (setf slot-value) #:g32180 #:g32181 #:g32182 (setf slot-value) #:g32183 #:g32184 #:g32185 (setf slot-value) #:g32186 #:g32187 #:g32188 (setf slot-value) #:g32189 #:g32190 "subnet" #:g32191 (setf slot-value) #:g32192 #:g32193 #:g32194 (setf slot-value) #:g32195 #:g32196 #:g32197 (setf slot-value) #:g32198 #:g32199 #:g32200 (setf slot-value) #:g32201 #:g32202 #:g32203 (setf slot-value) #:g32204 #:g32205 #:g32206 (setf slot-value) 0 #:g32207 #:g32208 #:g32209 (setf slot-value) #:g32210 #:g32211 "dns" #:g32212 (setf slot-value) #:g32213 #:g32214 "meshtastic.Config.NetworkConfig.IpV4Config.dns" #:g32215 (setf slot-value) #:g32216 #:g32217 #:g32218 (setf slot-value) #:g32219 #:g32220 #:g32221 (setf slot-value) #:g32222 #:g32223 #:g32224 (setf slot-value) #:g32225 #:g32226 #:g32227 (setf slot-value) #:g32228 #:g32229 #:g32230 (setf slot-value) #:g32231 #:g32232 #:g32233 (setf slot-value) #:g32234 #:g32235 #:g32236 (setf slot-value) #:g32237 #:g32238 #:g32239 (setf slot-value) #:g32240 #:g32241 #:g32242 (setf slot-value) #:g32243 #:g32244 "dns" #:g32245 (setf slot-value) #:g32246 #:g32247 #:g32248 (setf slot-value) #:g32249 #:g32250 #:g32251 (setf slot-value) #:g32252 #:g32253 #:g32254 (setf slot-value) #:g32255 #:g32256 #:g32257 (setf slot-value) #:g32258 #:g32259 #:g32260 (setf slot-value) ((inline cl-protobufs.meshtastic::%make-config.network-config)) cl-protobufs.meshtastic::config.network-config "CONFIG.NETWORK-CONFIG-" ((cl-protobufs.meshtastic::%wifi-ssid #457="" :type string) (cl-protobufs.meshtastic::%wifi-psk #457# :type string) (cl-protobufs.meshtastic::%ntp-server #457# :type string) (cl-protobufs.meshtastic::%address-mode :dhcp :type keyword) (cl-protobufs.meshtastic::%ipv4-config nil :type #458=(or null cl-protobufs.meshtastic::config.network-config.ip-v4-config)) (cl-protobufs.meshtastic::%rsyslog-server #457# :type string) (cl-protobufs.implementation::%%bytes nil :type #10#) (cl-protobufs.implementation::%%bool-values #459=(make-array 2 :element-type #12# :initial-contents #460=#*00) :type #461=(bit-vector 2)) (cl-protobufs.implementation::%%is-set #462=(make-array 0 . #16#) :type #463=(bit-vector 0))) (#18# (cl-protobufs.meshtastic::%wifi-ssid #457# string nil 1 nil) (cl-protobufs.meshtastic::%wifi-psk #457# string nil 2 nil) (cl-protobufs.meshtastic::%ntp-server #457# string nil 3 nil) (cl-protobufs.meshtastic::%address-mode :dhcp keyword nil 4 nil) (cl-protobufs.meshtastic::%ipv4-config nil #458# nil 5 nil) (cl-protobufs.meshtastic::%rsyslog-server #457# string nil 6 nil) (cl-protobufs.implementation::%%bytes nil #10# nil 7 nil) (cl-protobufs.implementation::%%bool-values #459# #461# nil 8 nil) (cl-protobufs.implementation::%%is-set #462# #463# nil 9 nil)) cl-protobufs.meshtastic::copy-config.network-config (cl-protobufs.meshtastic::%make-config.network-config) #464=(cl-protobufs.meshtastic::config.network-config (:constructor cl-protobufs.meshtastic::%make-config.network-config) . #20#) (defstruct #464#) (#6# . 718) cl-protobufs.meshtastic::%make-config.network-config (defun cl-protobufs.meshtastic::%make-config.network-config) (#6# . 718) #465=(&key #466=#:%%skipped-bytes (#467=#:%wifi-ssid #457#) (#468=#:%wifi-psk #457#) (#469=#:%ntp-server #457#) (#470=#:%address-mode :dhcp) #471=#:%ipv4-config (#472=#:%rsyslog-server #457#) #473=#:%%bytes (#474=#:%%bool-values (make-array 2 :element-type (quote bit) :initial-contents #460#)) (#475=#:%%is-set (make-array 0 :element-type (quote bit) :initial-element 0))) (nil :%%is-set :%%bool-values :%%bytes :%rsyslog-server :%ipv4-config :%address-mode :%ntp-server :%wifi-psk :%wifi-ssid :%%skipped-bytes) #466# #457# #467# #468# #469# #470# #471# #472# #473# #460# #474# #475# #476=(bit-vector 0) #477=(bit-vector 0) #478=(bit-vector 2) #479=(bit-vector 2) #480=(or null (simple-array (unsigned-byte 8))) #481=(or null (simple-array (unsigned-byte 8))) #482=(or (array base-char (*)) (array character (*))) string cl-protobufs.meshtastic::%rsyslog-server #483=(or null cl-protobufs.meshtastic::config.network-config.ip-v4-config) #484=(or null cl-protobufs.meshtastic::config.network-config.ip-v4-config) cl-protobufs.meshtastic::%ipv4-config cl-protobufs.meshtastic::%address-mode #485=(or (array base-char (*)) (array character (*))) cl-protobufs.meshtastic::%ntp-server #486=(or (array base-char (*)) (array character (*))) cl-protobufs.meshtastic::%wifi-psk #487=(or (array base-char (*)) (array character (*))) cl-protobufs.meshtastic::%wifi-ssid #488=(or null cl-protobufs::byte-vector) #489=(or null cl-protobufs::byte-vector) 0 #Y(cl-protobufs.meshtastic::%make-config.network-config nil nil (28 5407 22 40 2 77 46 5408 22 40 3 15 5409 46 5410 22 40 3 15 5409 46 5411 22 40 3 15 5409 46 5412 22 40 3 14 4690 46 5413 22 40 2 77 46 5414 22 40 3 15 5409 46 5415 22 40 2 77 46 5416 22 40 15 9 2 14 222 15 223 14 224 15 5417 19 5 226 12 46 5418 22 40 15 9 0 14 222 15 223 14 228 9 0 19 5 226 12 46 5419 13 0 15 5420 19 2 231 76 39 12 13 0 15 5421 15 5394 15 233 19 4 234 13 1 15 5422 19 2 231 76 39 12 13 1 15 5423 15 5394 15 237 19 4 234 13 2 15 5424 19 2 231 76 39 12 13 2 15 5425 15 5394 15 240 19 4 234 13 3 15 5426 19 2 231 76 39 12 13 3 15 5427 15 5394 15 5428 19 4 234 13 4 15 5429 19 2 231 76 39 12 13 4 15 5430 15 5394 15 5431 19 4 234 13 5 15 73 19 2 231 76 39 12 13 5 15 73 15 5394 15 5432 19 4 234 13 6 15 5433 19 2 231 76 39 12 13 6 15 5427 15 5394 15 5434 19 4 234 13 7 15 5435 19 2 231 76 39 12 13 7 15 5427 15 5394 15 5436 19 4 234 13 8 15 5437 19 2 231 76 39 12 13 8 15 5427 15 5394 15 5438 19 4 234 13 9 15 5439 19 2 231 76 39 12 13 9 15 5440 15 5394 15 249 19 4 234 15 5441 13 9 13 8 13 7 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 11 251 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::%make-config.network-config #465# #39# (unless (typep #475# (quote #476#)) (si::structure-type-error #475# (quote #477#) (quote cl-protobufs.meshtastic::config.network-config) (quote cl-protobufs.implementation::%%is-set))) (unless (typep #474# (quote #478#)) (si::structure-type-error #474# (quote #479#) (quote cl-protobufs.meshtastic::config.network-config) (quote cl-protobufs.implementation::%%bool-values))) (unless (typep #473# (quote #480#)) (si::structure-type-error #473# (quote #481#) (quote cl-protobufs.meshtastic::config.network-config) (quote cl-protobufs.implementation::%%bytes))) (unless (typep #472# (quote #482#)) (si::structure-type-error #472# (quote string) (quote cl-protobufs.meshtastic::config.network-config) (quote cl-protobufs.meshtastic::%rsyslog-server))) (unless (typep #471# (quote #483#)) (si::structure-type-error #471# (quote #484#) (quote cl-protobufs.meshtastic::config.network-config) (quote cl-protobufs.meshtastic::%ipv4-config))) (unless (typep #470# (quote keyword)) (si::structure-type-error #470# (quote keyword) (quote cl-protobufs.meshtastic::config.network-config) (quote cl-protobufs.meshtastic::%address-mode))) (unless (typep #469# (quote #485#)) (si::structure-type-error #469# (quote string) (quote cl-protobufs.meshtastic::config.network-config) (quote cl-protobufs.meshtastic::%ntp-server))) (unless (typep #468# (quote #486#)) (si::structure-type-error #468# (quote string) (quote cl-protobufs.meshtastic::config.network-config) (quote cl-protobufs.meshtastic::%wifi-psk))) (unless (typep #467# (quote #487#)) (si::structure-type-error #467# (quote string) (quote cl-protobufs.meshtastic::config.network-config) (quote cl-protobufs.meshtastic::%wifi-ssid))) (unless (typep #466# (quote #488#)) (si::structure-type-error #466# (quote #489#) (quote cl-protobufs.meshtastic::config.network-config) (quote cl-protobufs.implementation::%%skipped-bytes))) (si::make-structure (load-time-value (find-class (quote cl-protobufs.meshtastic::config.network-config))) #466# #467# #468# #469# #470# #471# #472# #473# #474# #475#))) cl-protobufs.meshtastic::config.network-config-%%is-set (cl-protobufs.meshtastic::config.network-config-%%is-set) #:g32271 #Y(nil nil nil (24 45 5446 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 5394 6 2 12 9 9 13 0 10 1 6 6 12 15 274 13 2 15 273 1 5394 6 2 12 8 9 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.network-config-%%bool-values (cl-protobufs.meshtastic::config.network-config-%%bool-values) #:g32272 #Y(nil nil nil (24 45 5450 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 5394 6 2 12 9 8 13 0 10 1 6 6 12 15 274 13 2 15 273 1 5394 6 2 12 8 8 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.network-config-%%bytes (cl-protobufs.meshtastic::config.network-config-%%bytes) #:g32273 #Y(nil nil nil (24 45 5454 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 5394 6 2 12 9 7 13 0 10 1 6 6 12 15 274 13 2 15 273 1 5394 6 2 12 8 7 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.network-config-%rsyslog-server (cl-protobufs.meshtastic::config.network-config-%rsyslog-server) #:g32274 #Y(nil nil nil (24 45 5458 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 5394 6 2 12 9 6 13 0 10 1 6 6 12 15 274 13 2 15 273 1 5394 6 2 12 8 6 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.network-config-%ipv4-config (cl-protobufs.meshtastic::config.network-config-%ipv4-config) #:g32275 #Y(nil nil nil (24 45 5462 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 5394 6 2 12 9 5 13 0 10 1 6 6 12 15 274 13 2 15 273 1 5394 6 2 12 8 5 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.network-config-%address-mode (cl-protobufs.meshtastic::config.network-config-%address-mode) #:g32276 #Y(nil nil nil (24 45 5466 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 5394 6 2 12 9 4 13 0 10 1 6 6 12 15 274 13 2 15 273 1 5394 6 2 12 8 4 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.network-config-%ntp-server (cl-protobufs.meshtastic::config.network-config-%ntp-server) #:g32277 #Y(nil nil nil (24 45 5470 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 5394 6 2 12 9 3 13 0 10 1 6 6 12 15 274 13 2 15 273 1 5394 6 2 12 8 3 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.network-config-%wifi-psk (cl-protobufs.meshtastic::config.network-config-%wifi-psk) #:g32278 #Y(nil nil nil (24 45 5474 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 5394 6 2 12 9 2 13 0 10 1 6 6 12 15 274 13 2 15 273 1 5394 6 2 12 8 2 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.network-config-%wifi-ssid (cl-protobufs.meshtastic::config.network-config-%wifi-ssid) #:g32279 #Y(nil nil nil (24 45 5478 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 5394 6 2 12 9 1 13 0 10 1 6 6 12 15 274 13 2 15 273 1 5394 6 2 12 8 1 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.network-config-%%skipped-bytes (cl-protobufs.meshtastic::config.network-config-%%skipped-bytes) #:g32280 #Y(nil nil nil (24 45 5482 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 5394 6 2 12 9 0 13 0 10 1 6 6 12 15 274 13 2 15 273 1 5394 6 2 12 8 0 6 4 12 72 6 43 2 29) #1# #6# 718) ((inline cl-protobufs.meshtastic::config.network-config.wifi-enabled)) cl-protobufs.meshtastic::config.network-config.wifi-enabled (defun cl-protobufs.meshtastic::config.network-config.wifi-enabled) (#6# . 718) #490=(#491=#:obj29367) #491# #Y(cl-protobufs.meshtastic::config.network-config.wifi-enabled nil nil (24 45 5489 26 13 0 19 1 5448 12 9 0 19 2 223 16 368 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.wifi-enabled #490# #39# (the boolean (plusp (bit (cl-protobufs.meshtastic::config.network-config-%%bool-values #491#) 0))))) ((inline #492=(setf cl-protobufs.meshtastic::config.network-config.wifi-enabled))) #492# (defun #492#) (#6# . 718) #493=(#494=#:new-value29369 #495=#:obj29368) #494# #495# #Y(#492# nil nil (24 45 5497 24 45 5498 26 13 0 19 1 5448 12 9 0 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 378 29) #1# #6# 718) (function (ext::lambda-block #492# #493# #39# (declare (type boolean #494#)) nil (setf (bit (cl-protobufs.meshtastic::config.network-config-%%bool-values #495#) 0) (if #494# . #56#)))) ((inline cl-protobufs.meshtastic::config.network-config.%%has-wifi-enabled)) cl-protobufs.meshtastic::config.network-config.%%has-wifi-enabled (defun cl-protobufs.meshtastic::config.network-config.%%has-wifi-enabled) (#6# . 718) #496=(#495#) #497=#:cur-value29370 #Y(cl-protobufs.meshtastic::config.network-config.%%has-wifi-enabled nil nil (24 45 5498 26 13 0 19 1 5448 12 9 0 19 2 223 16 368 45 5506 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.%%has-wifi-enabled #496# #39# (let ((#497# (plusp (bit (cl-protobufs.meshtastic::config.network-config-%%bool-values #495#) 0)))) (not (eq #497# nil))))) ((inline cl-protobufs.meshtastic::config.network-config.clear-wifi-enabled)) cl-protobufs.meshtastic::config.network-config.clear-wifi-enabled (defun cl-protobufs.meshtastic::config.network-config.clear-wifi-enabled) (#6# . 718) #498=(#495#) #Y(cl-protobufs.meshtastic::config.network-config.clear-wifi-enabled nil nil (24 45 5498 26 13 0 19 1 5448 12 9 0 9 0 19 3 378 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.clear-wifi-enabled #498# #39# nil (setf (bit (cl-protobufs.meshtastic::config.network-config-%%bool-values #495#) 0) 0))) cl-protobufs.meshtastic::wifi-enabled (defmethod cl-protobufs.meshtastic::wifi-enabled (#495# cl-protobufs.meshtastic::config.network-config)) (#6# . 718) (cl-protobufs.meshtastic::config.network-config) (#495#) #Y(cl-protobufs.meshtastic::wifi-enabled nil nil (24 45 5498 26 13 0 19 1 5485 29) #1# #6# 718) #499=(setf cl-protobufs.meshtastic::wifi-enabled) (defmethod #499# #494# (#495# cl-protobufs.meshtastic::config.network-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.network-config) (#494# #495#) #:g32295 #:g32296 (setf cl-protobufs.meshtastic::config.network-config.wifi-enabled) #Y(#499# nil nil (24 45 5497 24 45 5498 26 10 0 45 5527 10 2 45 5528 13 0 13 1 33 5529 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.network-config.clear-wifi-enabled) (cl-protobufs.meshtastic::config.network-config.wifi-enabled) ((inline cl-protobufs.meshtastic::config.network-config.wifi-ssid)) cl-protobufs.meshtastic::config.network-config.wifi-ssid (defun cl-protobufs.meshtastic::config.network-config.wifi-ssid) (#6# . 718) #500=(#501=#:obj29371) #501# #Y(cl-protobufs.meshtastic::config.network-config.wifi-ssid nil nil (24 45 5538 26 13 0 19 1 5476 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.wifi-ssid #500# #39# (the string (cl-protobufs.meshtastic::config.network-config-%wifi-ssid #501#)))) ((inline #502=(setf cl-protobufs.meshtastic::config.network-config.wifi-ssid))) #502# (defun #502#) (#6# . 718) #503=(#504=#:new-value29373 #505=#:obj29372) #504# #505# #:g32299 #:g32300 #Y(#502# nil nil (24 45 5546 24 45 5547 26 10 0 45 5548 10 2 45 5549 13 1 15 5394 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #502# #503# #39# (declare (type string #504#)) nil (setf (cl-protobufs.meshtastic::config.network-config-%wifi-ssid #505#) #504#))) ((inline cl-protobufs.meshtastic::config.network-config.%%has-wifi-ssid)) cl-protobufs.meshtastic::config.network-config.%%has-wifi-ssid (defun cl-protobufs.meshtastic::config.network-config.%%has-wifi-ssid) (#6# . 718) #506=(#505#) #507=#:cur-value29374 length > #Y(cl-protobufs.meshtastic::config.network-config.%%has-wifi-ssid nil nil (24 45 5547 26 13 0 19 1 5476 45 5557 10 0 16 5558 12 9 0 19 2 5559 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.%%has-wifi-ssid #506# #39# (let ((#507# (cl-protobufs.meshtastic::config.network-config-%wifi-ssid #505#))) (> (length #507#) 0)))) ((inline cl-protobufs.meshtastic::config.network-config.clear-wifi-ssid)) cl-protobufs.meshtastic::config.network-config.clear-wifi-ssid (defun cl-protobufs.meshtastic::config.network-config.clear-wifi-ssid) (#6# . 718) #508=(#505#) #:g32303 #:g32304 #Y(cl-protobufs.meshtastic::config.network-config.clear-wifi-ssid nil nil (24 45 5547 26 10 0 45 5567 1 5409 45 5568 13 1 15 5394 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.clear-wifi-ssid #508# #39# nil (setf (cl-protobufs.meshtastic::config.network-config-%wifi-ssid #505#) #457#))) cl-protobufs.meshtastic::wifi-ssid (defmethod cl-protobufs.meshtastic::wifi-ssid (#505# cl-protobufs.meshtastic::config.network-config)) (#6# . 718) (cl-protobufs.meshtastic::config.network-config) (#505#) #Y(cl-protobufs.meshtastic::wifi-ssid nil nil (24 45 5547 26 13 0 19 1 5534 29) #1# #6# 718) #509=(setf cl-protobufs.meshtastic::wifi-ssid) (defmethod #509# #504# (#505# cl-protobufs.meshtastic::config.network-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.network-config) (#504# #505#) #:g32311 #:g32312 (setf cl-protobufs.meshtastic::config.network-config.wifi-ssid) #Y(#509# nil nil (24 45 5546 24 45 5547 26 10 0 45 5582 10 2 45 5583 13 0 13 1 33 5584 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.network-config.clear-wifi-ssid) (cl-protobufs.meshtastic::config.network-config.wifi-ssid) ((inline cl-protobufs.meshtastic::config.network-config.wifi-psk)) cl-protobufs.meshtastic::config.network-config.wifi-psk (defun cl-protobufs.meshtastic::config.network-config.wifi-psk) (#6# . 718) #510=(#511=#:obj29375) #511# #Y(cl-protobufs.meshtastic::config.network-config.wifi-psk nil nil (24 45 5593 26 13 0 19 1 5472 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.wifi-psk #510# #39# (the string (cl-protobufs.meshtastic::config.network-config-%wifi-psk #511#)))) ((inline #512=(setf cl-protobufs.meshtastic::config.network-config.wifi-psk))) #512# (defun #512#) (#6# . 718) #513=(#514=#:new-value29377 #515=#:obj29376) #514# #515# #:g32315 #:g32316 #Y(#512# nil nil (24 45 5601 24 45 5602 26 10 0 45 5603 10 2 45 5604 13 1 15 5394 9 2 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #512# #513# #39# (declare (type string #514#)) nil (setf (cl-protobufs.meshtastic::config.network-config-%wifi-psk #515#) #514#))) ((inline cl-protobufs.meshtastic::config.network-config.%%has-wifi-psk)) cl-protobufs.meshtastic::config.network-config.%%has-wifi-psk (defun cl-protobufs.meshtastic::config.network-config.%%has-wifi-psk) (#6# . 718) #516=(#515#) #517=#:cur-value29378 #Y(cl-protobufs.meshtastic::config.network-config.%%has-wifi-psk nil nil (24 45 5602 26 13 0 19 1 5472 45 5612 10 0 16 5558 12 9 0 19 2 5559 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.%%has-wifi-psk #516# #39# (let ((#517# (cl-protobufs.meshtastic::config.network-config-%wifi-psk #515#))) (> (length #517#) 0)))) ((inline cl-protobufs.meshtastic::config.network-config.clear-wifi-psk)) cl-protobufs.meshtastic::config.network-config.clear-wifi-psk (defun cl-protobufs.meshtastic::config.network-config.clear-wifi-psk) (#6# . 718) #518=(#515#) #:g32319 #:g32320 #Y(cl-protobufs.meshtastic::config.network-config.clear-wifi-psk nil nil (24 45 5602 26 10 0 45 5620 1 5409 45 5621 13 1 15 5394 9 2 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.clear-wifi-psk #518# #39# nil (setf (cl-protobufs.meshtastic::config.network-config-%wifi-psk #515#) #457#))) cl-protobufs.meshtastic::wifi-psk (defmethod cl-protobufs.meshtastic::wifi-psk (#515# cl-protobufs.meshtastic::config.network-config)) (#6# . 718) (cl-protobufs.meshtastic::config.network-config) (#515#) #Y(cl-protobufs.meshtastic::wifi-psk nil nil (24 45 5602 26 13 0 19 1 5589 29) #1# #6# 718) #519=(setf cl-protobufs.meshtastic::wifi-psk) (defmethod #519# #514# (#515# cl-protobufs.meshtastic::config.network-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.network-config) (#514# #515#) #:g32327 #:g32328 (setf cl-protobufs.meshtastic::config.network-config.wifi-psk) #Y(#519# nil nil (24 45 5601 24 45 5602 26 10 0 45 5635 10 2 45 5636 13 0 13 1 33 5637 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.network-config.clear-wifi-psk) (cl-protobufs.meshtastic::config.network-config.wifi-psk) ((inline cl-protobufs.meshtastic::config.network-config.ntp-server)) cl-protobufs.meshtastic::config.network-config.ntp-server (defun cl-protobufs.meshtastic::config.network-config.ntp-server) (#6# . 718) #520=(#521=#:obj29379) #521# #Y(cl-protobufs.meshtastic::config.network-config.ntp-server nil nil (24 45 5646 26 13 0 19 1 5468 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.ntp-server #520# #39# (the string (cl-protobufs.meshtastic::config.network-config-%ntp-server #521#)))) ((inline #522=(setf cl-protobufs.meshtastic::config.network-config.ntp-server))) #522# (defun #522#) (#6# . 718) #523=(#524=#:new-value29381 #525=#:obj29380) #524# #525# #:g32331 #:g32332 #Y(#522# nil nil (24 45 5654 24 45 5655 26 10 0 45 5656 10 2 45 5657 13 1 15 5394 9 3 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #522# #523# #39# (declare (type string #524#)) nil (setf (cl-protobufs.meshtastic::config.network-config-%ntp-server #525#) #524#))) ((inline cl-protobufs.meshtastic::config.network-config.%%has-ntp-server)) cl-protobufs.meshtastic::config.network-config.%%has-ntp-server (defun cl-protobufs.meshtastic::config.network-config.%%has-ntp-server) (#6# . 718) #526=(#525#) #527=#:cur-value29382 #Y(cl-protobufs.meshtastic::config.network-config.%%has-ntp-server nil nil (24 45 5655 26 13 0 19 1 5468 45 5665 10 0 16 5558 12 9 0 19 2 5559 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.%%has-ntp-server #526# #39# (let ((#527# (cl-protobufs.meshtastic::config.network-config-%ntp-server #525#))) (> (length #527#) 0)))) ((inline cl-protobufs.meshtastic::config.network-config.clear-ntp-server)) cl-protobufs.meshtastic::config.network-config.clear-ntp-server (defun cl-protobufs.meshtastic::config.network-config.clear-ntp-server) (#6# . 718) #528=(#525#) #:g32335 #:g32336 #Y(cl-protobufs.meshtastic::config.network-config.clear-ntp-server nil nil (24 45 5655 26 10 0 45 5673 1 5409 45 5674 13 1 15 5394 9 3 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.clear-ntp-server #528# #39# nil (setf (cl-protobufs.meshtastic::config.network-config-%ntp-server #525#) #457#))) cl-protobufs.meshtastic::ntp-server (defmethod cl-protobufs.meshtastic::ntp-server (#525# cl-protobufs.meshtastic::config.network-config)) (#6# . 718) (cl-protobufs.meshtastic::config.network-config) (#525#) #Y(cl-protobufs.meshtastic::ntp-server nil nil (24 45 5655 26 13 0 19 1 5642 29) #1# #6# 718) #529=(setf cl-protobufs.meshtastic::ntp-server) (defmethod #529# #524# (#525# cl-protobufs.meshtastic::config.network-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.network-config) (#524# #525#) #:g32343 #:g32344 (setf cl-protobufs.meshtastic::config.network-config.ntp-server) #Y(#529# nil nil (24 45 5654 24 45 5655 26 10 0 45 5688 10 2 45 5689 13 0 13 1 33 5690 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.network-config.clear-ntp-server) (cl-protobufs.meshtastic::config.network-config.ntp-server) ((inline cl-protobufs.meshtastic::config.network-config.eth-enabled)) cl-protobufs.meshtastic::config.network-config.eth-enabled (defun cl-protobufs.meshtastic::config.network-config.eth-enabled) (#6# . 718) #530=(#531=#:obj29383) #531# #Y(cl-protobufs.meshtastic::config.network-config.eth-enabled nil nil (24 45 5699 26 13 0 19 1 5448 12 9 1 19 2 223 16 368 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.eth-enabled #530# #39# (the boolean (plusp (bit (cl-protobufs.meshtastic::config.network-config-%%bool-values #531#) 1))))) ((inline #532=(setf cl-protobufs.meshtastic::config.network-config.eth-enabled))) #532# (defun #532#) (#6# . 718) #533=(#534=#:new-value29385 #535=#:obj29384) #534# #535# #Y(#532# nil nil (24 45 5707 24 45 5708 26 13 0 19 1 5448 12 9 1 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 378 29) #1# #6# 718) (function (ext::lambda-block #532# #533# #39# (declare (type boolean #534#)) nil (setf (bit (cl-protobufs.meshtastic::config.network-config-%%bool-values #535#) 1) (if #534# . #56#)))) ((inline cl-protobufs.meshtastic::config.network-config.%%has-eth-enabled)) cl-protobufs.meshtastic::config.network-config.%%has-eth-enabled (defun cl-protobufs.meshtastic::config.network-config.%%has-eth-enabled) (#6# . 718) #536=(#535#) #537=#:cur-value29386 #Y(cl-protobufs.meshtastic::config.network-config.%%has-eth-enabled nil nil (24 45 5708 26 13 0 19 1 5448 12 9 1 19 2 223 16 368 45 5716 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.%%has-eth-enabled #536# #39# (let ((#537# (plusp (bit (cl-protobufs.meshtastic::config.network-config-%%bool-values #535#) 1)))) (not (eq #537# nil))))) ((inline cl-protobufs.meshtastic::config.network-config.clear-eth-enabled)) cl-protobufs.meshtastic::config.network-config.clear-eth-enabled (defun cl-protobufs.meshtastic::config.network-config.clear-eth-enabled) (#6# . 718) #538=(#535#) #Y(cl-protobufs.meshtastic::config.network-config.clear-eth-enabled nil nil (24 45 5708 26 13 0 19 1 5448 12 9 1 9 0 19 3 378 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.clear-eth-enabled #538# #39# nil (setf (bit (cl-protobufs.meshtastic::config.network-config-%%bool-values #535#) 1) 0))) cl-protobufs.meshtastic::eth-enabled (defmethod cl-protobufs.meshtastic::eth-enabled (#535# cl-protobufs.meshtastic::config.network-config)) (#6# . 718) (cl-protobufs.meshtastic::config.network-config) (#535#) #Y(cl-protobufs.meshtastic::eth-enabled nil nil (24 45 5708 26 13 0 19 1 5695 29) #1# #6# 718) #539=(setf cl-protobufs.meshtastic::eth-enabled) (defmethod #539# #534# (#535# cl-protobufs.meshtastic::config.network-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.network-config) (#534# #535#) #:g32359 #:g32360 (setf cl-protobufs.meshtastic::config.network-config.eth-enabled) #Y(#539# nil nil (24 45 5707 24 45 5708 26 10 0 45 5737 10 2 45 5738 13 0 13 1 33 5739 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.network-config.clear-eth-enabled) (cl-protobufs.meshtastic::config.network-config.eth-enabled) ((inline cl-protobufs.meshtastic::config.network-config.address-mode)) (defun cl-protobufs.meshtastic::config.network-config.address-mode) (#6# . 718) #540=(#541=#:obj29387) #541# #Y(cl-protobufs.meshtastic::config.network-config.address-mode nil nil (24 45 5747 26 13 0 19 1 5464 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.address-mode #540# #39# (the cl-protobufs.meshtastic::%%%%config.network-config.address-mode (cl-protobufs.meshtastic::config.network-config-%address-mode #541#)))) ((inline #542=(setf cl-protobufs.meshtastic::config.network-config.address-mode))) #542# (defun #542#) (#6# . 718) #543=(#544=#:new-value29389 #545=#:obj29388) #544# #545# #:g32363 #:g32364 #Y(#542# nil nil (24 45 5755 24 45 5756 26 10 0 45 5757 10 2 45 5758 13 1 15 5394 9 4 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #542# #543# #39# (declare (type cl-protobufs.meshtastic::%%%%config.network-config.address-mode #544#)) nil (setf (cl-protobufs.meshtastic::config.network-config-%address-mode #545#) #544#))) ((inline cl-protobufs.meshtastic::config.network-config.%%has-address-mode)) cl-protobufs.meshtastic::config.network-config.%%has-address-mode (defun cl-protobufs.meshtastic::config.network-config.%%has-address-mode) (#6# . 718) #546=(#545#) #547=#:cur-value29390 #Y(cl-protobufs.meshtastic::config.network-config.%%has-address-mode nil nil (24 45 5756 26 13 0 19 1 5464 45 5766 13 0 11 4690 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.%%has-address-mode #546# #39# (let ((#547# (cl-protobufs.meshtastic::config.network-config-%address-mode #545#))) (not (eq #547# :dhcp))))) ((inline cl-protobufs.meshtastic::config.network-config.clear-address-mode)) cl-protobufs.meshtastic::config.network-config.clear-address-mode (defun cl-protobufs.meshtastic::config.network-config.clear-address-mode) (#6# . 718) #548=(#545#) #:g32367 #:g32368 #Y(cl-protobufs.meshtastic::config.network-config.clear-address-mode nil nil (24 45 5756 26 10 0 45 5774 11 4690 45 5775 13 1 15 5394 9 4 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.clear-address-mode #548# #39# nil (setf (cl-protobufs.meshtastic::config.network-config-%address-mode #545#) :dhcp))) cl-protobufs.meshtastic::address-mode (defmethod cl-protobufs.meshtastic::address-mode (#545# cl-protobufs.meshtastic::config.network-config)) (#6# . 718) (cl-protobufs.meshtastic::config.network-config) (#545#) #Y(cl-protobufs.meshtastic::address-mode nil nil (24 45 5756 26 13 0 19 1 4684 29) #1# #6# 718) #549=(setf cl-protobufs.meshtastic::address-mode) (defmethod #549# #544# (#545# cl-protobufs.meshtastic::config.network-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.network-config) (#544# #545#) #:g32375 #:g32376 (setf cl-protobufs.meshtastic::config.network-config.address-mode) #Y(#549# nil nil (24 45 5755 24 45 5756 26 10 0 45 5789 10 2 45 5790 13 0 13 1 33 5791 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.network-config.clear-address-mode) (cl-protobufs.meshtastic::config.network-config.address-mode) ((inline cl-protobufs.meshtastic::config.network-config.ipv4-config)) cl-protobufs.meshtastic::config.network-config.ipv4-config (defun cl-protobufs.meshtastic::config.network-config.ipv4-config) (#6# . 718) #550=(#551=#:obj29391) #551# #Y(cl-protobufs.meshtastic::config.network-config.ipv4-config nil nil (24 45 5800 26 13 0 19 1 5460 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.ipv4-config #550# #39# (the (or null cl-protobufs.meshtastic::config.network-config.ip-v4-config) (cl-protobufs.meshtastic::config.network-config-%ipv4-config #551#)))) ((inline #552=(setf cl-protobufs.meshtastic::config.network-config.ipv4-config))) #552# (defun #552#) (#6# . 718) #553=(#554=#:new-value29393 #555=#:obj29392) #554# #555# #:g32379 #:g32380 #Y(#552# nil nil (24 45 5808 24 45 5809 26 10 0 45 5810 10 2 45 5811 13 1 15 5394 9 5 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #552# #553# #39# (declare (type cl-protobufs.meshtastic::config.network-config.ip-v4-config #554#)) nil (setf (cl-protobufs.meshtastic::config.network-config-%ipv4-config #555#) #554#))) ((inline cl-protobufs.meshtastic::config.network-config.%%has-ipv4-config)) cl-protobufs.meshtastic::config.network-config.%%has-ipv4-config (defun cl-protobufs.meshtastic::config.network-config.%%has-ipv4-config) (#6# . 718) #556=(#555#) #557=#:cur-value29394 #Y(cl-protobufs.meshtastic::config.network-config.%%has-ipv4-config nil nil (24 45 5809 26 13 0 19 1 5460 45 5819 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.%%has-ipv4-config #556# #39# (let ((#557# (cl-protobufs.meshtastic::config.network-config-%ipv4-config #555#))) (not (eq #557# nil))))) ((inline cl-protobufs.meshtastic::config.network-config.clear-ipv4-config)) cl-protobufs.meshtastic::config.network-config.clear-ipv4-config (defun cl-protobufs.meshtastic::config.network-config.clear-ipv4-config) (#6# . 718) #558=(#555#) #:g32383 #:g32384 #Y(cl-protobufs.meshtastic::config.network-config.clear-ipv4-config nil nil (24 45 5809 26 10 0 45 5827 75 45 5828 13 1 15 5394 9 5 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.clear-ipv4-config #558# #39# nil (setf (cl-protobufs.meshtastic::config.network-config-%ipv4-config #555#) nil))) cl-protobufs.meshtastic::ipv4-config (defmethod cl-protobufs.meshtastic::ipv4-config (#555# cl-protobufs.meshtastic::config.network-config)) (#6# . 718) (cl-protobufs.meshtastic::config.network-config) (#555#) #Y(cl-protobufs.meshtastic::ipv4-config nil nil (24 45 5809 26 13 0 19 1 5796 29) #1# #6# 718) #559=(setf cl-protobufs.meshtastic::ipv4-config) (defmethod #559# #554# (#555# cl-protobufs.meshtastic::config.network-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.network-config) (#554# #555#) #:g32391 #:g32392 (setf cl-protobufs.meshtastic::config.network-config.ipv4-config) #Y(#559# nil nil (24 45 5808 24 45 5809 26 10 0 45 5842 10 2 45 5843 13 0 13 1 33 5844 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.network-config.clear-ipv4-config) (cl-protobufs.meshtastic::config.network-config.ipv4-config) ((inline cl-protobufs.meshtastic::config.network-config.rsyslog-server)) cl-protobufs.meshtastic::config.network-config.rsyslog-server (defun cl-protobufs.meshtastic::config.network-config.rsyslog-server) (#6# . 718) #560=(#561=#:obj29395) #561# #Y(cl-protobufs.meshtastic::config.network-config.rsyslog-server nil nil (24 45 5853 26 13 0 19 1 5456 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.rsyslog-server #560# #39# (the string (cl-protobufs.meshtastic::config.network-config-%rsyslog-server #561#)))) ((inline #562=(setf cl-protobufs.meshtastic::config.network-config.rsyslog-server))) #562# (defun #562#) (#6# . 718) #563=(#564=#:new-value29397 #565=#:obj29396) #564# #565# #:g32395 #:g32396 #Y(#562# nil nil (24 45 5861 24 45 5862 26 10 0 45 5863 10 2 45 5864 13 1 15 5394 9 6 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #562# #563# #39# (declare (type string #564#)) nil (setf (cl-protobufs.meshtastic::config.network-config-%rsyslog-server #565#) #564#))) ((inline cl-protobufs.meshtastic::config.network-config.%%has-rsyslog-server)) cl-protobufs.meshtastic::config.network-config.%%has-rsyslog-server (defun cl-protobufs.meshtastic::config.network-config.%%has-rsyslog-server) (#6# . 718) #566=(#565#) #567=#:cur-value29398 #Y(cl-protobufs.meshtastic::config.network-config.%%has-rsyslog-server nil nil (24 45 5862 26 13 0 19 1 5456 45 5872 10 0 16 5558 12 9 0 19 2 5559 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.%%has-rsyslog-server #566# #39# (let ((#567# (cl-protobufs.meshtastic::config.network-config-%rsyslog-server #565#))) (> (length #567#) 0)))) ((inline cl-protobufs.meshtastic::config.network-config.clear-rsyslog-server)) cl-protobufs.meshtastic::config.network-config.clear-rsyslog-server (defun cl-protobufs.meshtastic::config.network-config.clear-rsyslog-server) (#6# . 718) #568=(#565#) #:g32399 #:g32400 #Y(cl-protobufs.meshtastic::config.network-config.clear-rsyslog-server nil nil (24 45 5862 26 10 0 45 5880 1 5409 45 5881 13 1 15 5394 9 6 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network-config.clear-rsyslog-server #568# #39# nil (setf (cl-protobufs.meshtastic::config.network-config-%rsyslog-server #565#) #457#))) cl-protobufs.meshtastic::rsyslog-server (defmethod cl-protobufs.meshtastic::rsyslog-server (#565# cl-protobufs.meshtastic::config.network-config)) (#6# . 718) (cl-protobufs.meshtastic::config.network-config) (#565#) #Y(cl-protobufs.meshtastic::rsyslog-server nil nil (24 45 5862 26 13 0 19 1 5849 29) #1# #6# 718) #569=(setf cl-protobufs.meshtastic::rsyslog-server) (defmethod #569# #564# (#565# cl-protobufs.meshtastic::config.network-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.network-config) (#564# #565#) #:g32407 #:g32408 (setf cl-protobufs.meshtastic::config.network-config.rsyslog-server) #Y(#569# nil nil (24 45 5861 24 45 5862 26 10 0 45 5895 10 2 45 5896 13 0 13 1 33 5897 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.network-config.clear-rsyslog-server) (cl-protobufs.meshtastic::config.network-config.rsyslog-server) ((inline cl-protobufs.meshtastic::make-config.network-config)) cl-protobufs.meshtastic::make-config.network-config (defun cl-protobufs.meshtastic::make-config.network-config) (#6# . 718) #570=(&key (cl-protobufs.meshtastic::wifi-enabled :%unset) (cl-protobufs.meshtastic::wifi-ssid :%unset) (cl-protobufs.meshtastic::wifi-psk :%unset) (cl-protobufs.meshtastic::ntp-server :%unset) (cl-protobufs.meshtastic::eth-enabled :%unset) (cl-protobufs.meshtastic::address-mode :%unset) (cl-protobufs.meshtastic::ipv4-config :%unset) (cl-protobufs.meshtastic::rsyslog-server :%unset)) (nil :rsyslog-server :ipv4-config :address-mode :eth-enabled :ntp-server :wifi-psk :wifi-ssid :wifi-enabled) #571=#:obj29366 #:g32425 #:g32426 (setf cl-protobufs.meshtastic::config.network-config.wifi-enabled) #:g32427 #:g32428 (setf cl-protobufs.meshtastic::config.network-config.wifi-ssid) #:g32429 #:g32430 (setf cl-protobufs.meshtastic::config.network-config.wifi-psk) #:g32431 #:g32432 (setf cl-protobufs.meshtastic::config.network-config.ntp-server) #:g32433 #:g32434 (setf cl-protobufs.meshtastic::config.network-config.eth-enabled) #:g32435 #:g32436 (setf cl-protobufs.meshtastic::config.network-config.address-mode) #:g32437 #:g32438 (setf cl-protobufs.meshtastic::config.network-config.ipv4-config) #:g32439 #:g32440 (setf cl-protobufs.meshtastic::config.network-config.rsyslog-server) #Y(cl-protobufs.meshtastic::make-config.network-config nil nil (28 5906 22 40 3 14 777 46 5516 22 40 3 14 777 46 5571 22 40 3 14 777 46 5624 22 40 3 14 777 46 5677 22 40 3 14 777 46 5726 22 40 3 14 777 46 5778 22 40 3 14 777 46 5831 22 40 3 14 777 46 5884 19 0 5403 45 5907 13 8 11 777 17 332 76 39 21 10 0 45 5908 10 9 45 5909 13 0 13 1 33 5910 18 2 43 1 43 1 13 7 11 777 17 332 40 4 10 7 76 76 39 21 10 0 45 5911 10 8 45 5912 13 0 13 1 33 5913 18 2 43 1 43 1 13 6 11 777 17 332 40 4 10 6 76 76 39 21 10 0 45 5914 10 7 45 5915 13 0 13 1 33 5916 18 2 43 1 43 1 13 5 11 777 17 332 40 4 10 5 76 76 39 21 10 0 45 5917 10 6 45 5918 13 0 13 1 33 5919 18 2 43 1 43 1 13 4 11 777 17 332 76 39 21 10 0 45 5920 10 5 45 5921 13 0 13 1 33 5922 18 2 43 1 43 1 13 3 11 777 17 332 40 4 10 3 76 76 39 21 10 0 45 5923 10 4 45 5924 13 0 13 1 33 5925 18 2 43 1 43 1 13 2 11 777 17 332 40 4 10 2 76 76 39 21 10 0 45 5926 10 3 45 5927 13 0 13 1 33 5928 18 2 43 1 43 1 13 1 11 777 17 332 40 4 10 1 76 76 39 21 10 0 45 5929 10 2 45 5930 13 0 13 1 33 5931 18 2 43 1 43 1 10 0 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::make-config.network-config #570# #39# (let ((#571# (cl-protobufs.meshtastic::%make-config.network-config))) (unless (eq cl-protobufs.meshtastic::wifi-enabled :%unset) (setf (cl-protobufs.meshtastic::config.network-config.wifi-enabled #571#) cl-protobufs.meshtastic::wifi-enabled)) (unless (or (eq cl-protobufs.meshtastic::wifi-ssid :%unset) (not cl-protobufs.meshtastic::wifi-ssid)) (setf (cl-protobufs.meshtastic::config.network-config.wifi-ssid #571#) cl-protobufs.meshtastic::wifi-ssid)) (unless (or (eq cl-protobufs.meshtastic::wifi-psk :%unset) (not cl-protobufs.meshtastic::wifi-psk)) (setf (cl-protobufs.meshtastic::config.network-config.wifi-psk #571#) cl-protobufs.meshtastic::wifi-psk)) (unless (or (eq cl-protobufs.meshtastic::ntp-server :%unset) (not cl-protobufs.meshtastic::ntp-server)) (setf (cl-protobufs.meshtastic::config.network-config.ntp-server #571#) cl-protobufs.meshtastic::ntp-server)) (unless (eq cl-protobufs.meshtastic::eth-enabled :%unset) (setf (cl-protobufs.meshtastic::config.network-config.eth-enabled #571#) cl-protobufs.meshtastic::eth-enabled)) (unless (or (eq cl-protobufs.meshtastic::address-mode :%unset) (not cl-protobufs.meshtastic::address-mode)) (setf (cl-protobufs.meshtastic::config.network-config.address-mode #571#) cl-protobufs.meshtastic::address-mode)) (unless (or (eq cl-protobufs.meshtastic::ipv4-config :%unset) (not cl-protobufs.meshtastic::ipv4-config)) (setf (cl-protobufs.meshtastic::config.network-config.ipv4-config #571#) cl-protobufs.meshtastic::ipv4-config)) (unless (or (eq cl-protobufs.meshtastic::rsyslog-server :%unset) (not cl-protobufs.meshtastic::rsyslog-server)) (setf (cl-protobufs.meshtastic::config.network-config.rsyslog-server #571#) cl-protobufs.meshtastic::rsyslog-server)) #571#))) cl-protobufs.meshtastic::config.network-config.clear-%%is-set (defun cl-protobufs.meshtastic::config.network-config.clear-%%is-set) (#6# . 718) (#571#) #Y(cl-protobufs.meshtastic::config.network-config.clear-%%is-set nil nil (24 45 5907 26 13 0 19 1 5444 12 9 0 19 2 812 29) #1# #6# 718) (cl-protobufs.meshtastic::make-config.network-config cl-protobufs.meshtastic::config.network-config-%%is-set) (defmethod cl-protobufs::clear (#571# cl-protobufs.meshtastic::config.network-config)) (#6# . 718) (cl-protobufs.meshtastic::config.network-config) (#571#) #:g32447 #:g32448 #Y(cl-protobufs::clear nil nil (24 45 5907 26 10 0 45 5944 75 45 5945 13 1 15 204 9 0 13 0 19 4 118 43 1 43 1 13 0 19 1 5510 13 0 19 1 5563 13 0 19 1 5616 13 0 19 1 5669 13 0 19 1 5720 13 0 19 1 5770 13 0 19 1 5823 13 0 19 1 5876 13 0 19 1 5934 29) #1# #6# 718) 0 #:g32449 #:g32450 #:g32451 (setf slot-value) #:g32452 #:g32453 "NetworkConfig" #:g32454 (setf slot-value) #:g32455 #:g32456 "meshtastic.Config.NetworkConfig" #:g32457 (setf slot-value) #:g32458 #:g32459 #:g32460 (setf slot-value) #:g32461 #:g32462 #:g32463 (setf slot-value) #:g32464 #:g32465 0 #:g32466 (setf slot-value) #:g32467 #:g32468 #:g32469 (setf slot-value) #:g32470 #:g32471 #:g32472 (setf slot-value) #:g32473 #:g32474 #:g32475 (setf slot-value) #:g32476 #:g32477 #:g32478 (setf slot-value) 0 0 #:g32479 #:g32480 #:g32481 (setf slot-value) #:g32482 #:g32483 "wifi_enabled" #:g32484 (setf slot-value) #:g32485 #:g32486 "meshtastic.Config.NetworkConfig.wifi_enabled" #:g32487 (setf slot-value) #:g32488 #:g32489 #:g32490 (setf slot-value) #:g32491 #:g32492 #:g32493 (setf slot-value) #:g32494 #:g32495 #:g32496 (setf slot-value) #:g32497 #:g32498 #:g32499 (setf slot-value) #:g32500 #:g32501 #:g32502 (setf slot-value) #:g32503 #:g32504 #:g32505 (setf slot-value) #:g32506 #:g32507 #:g32508 (setf slot-value) #:g32509 #:g32510 cl-protobufs.meshtastic::%wifi-enabled #:g32511 (setf slot-value) #:g32512 #:g32513 #:g32514 (setf slot-value) #:g32515 #:g32516 "wifiEnabled" #:g32517 (setf slot-value) #:g32518 #:g32519 #:g32520 (setf slot-value) #:g32521 #:g32522 #:g32523 (setf slot-value) #:g32524 #:g32525 #:g32526 (setf slot-value) #:g32527 #:g32528 #:g32529 (setf slot-value) #:g32530 #:g32531 #:g32532 (setf slot-value) 0 0 #:g32533 #:g32534 #:g32535 (setf slot-value) #:g32536 #:g32537 "wifi_ssid" #:g32538 (setf slot-value) #:g32539 #:g32540 "meshtastic.Config.NetworkConfig.wifi_ssid" #:g32541 (setf slot-value) #:g32542 #:g32543 #:g32544 (setf slot-value) #:g32545 #:g32546 #:g32547 (setf slot-value) #:g32548 #:g32549 #:g32550 (setf slot-value) #:g32551 #:g32552 #:g32553 (setf slot-value) #:g32554 #:g32555 #:g32556 (setf slot-value) #:g32557 #:g32558 #:g32559 (setf slot-value) #:g32560 #:g32561 #:g32562 (setf slot-value) #:g32563 #:g32564 #:g32565 (setf slot-value) #:g32566 #:g32567 #:g32568 (setf slot-value) #:g32569 #:g32570 "wifiSsid" #:g32571 (setf slot-value) #:g32572 #:g32573 #:g32574 (setf slot-value) #:g32575 #:g32576 #:g32577 (setf slot-value) #:g32578 #:g32579 #:g32580 (setf slot-value) #:g32581 #:g32582 #:g32583 (setf slot-value) #:g32584 #:g32585 #:g32586 (setf slot-value) 0 0 #:g32587 #:g32588 #:g32589 (setf slot-value) #:g32590 #:g32591 "wifi_psk" #:g32592 (setf slot-value) #:g32593 #:g32594 "meshtastic.Config.NetworkConfig.wifi_psk" #:g32595 (setf slot-value) #:g32596 #:g32597 #:g32598 (setf slot-value) #:g32599 #:g32600 #:g32601 (setf slot-value) #:g32602 #:g32603 #:g32604 (setf slot-value) #:g32605 #:g32606 #:g32607 (setf slot-value) #:g32608 #:g32609 #:g32610 (setf slot-value) #:g32611 #:g32612 #:g32613 (setf slot-value) #:g32614 #:g32615 #:g32616 (setf slot-value) #:g32617 #:g32618 #:g32619 (setf slot-value) #:g32620 #:g32621 #:g32622 (setf slot-value) #:g32623 #:g32624 "wifiPsk" #:g32625 (setf slot-value) #:g32626 #:g32627 #:g32628 (setf slot-value) #:g32629 #:g32630 #:g32631 (setf slot-value) #:g32632 #:g32633 #:g32634 (setf slot-value) #:g32635 #:g32636 #:g32637 (setf slot-value) #:g32638 #:g32639 #:g32640 (setf slot-value) 0 0 #:g32641 #:g32642 #:g32643 (setf slot-value) #:g32644 #:g32645 "ntp_server" #:g32646 (setf slot-value) #:g32647 #:g32648 "meshtastic.Config.NetworkConfig.ntp_server" #:g32649 (setf slot-value) #:g32650 #:g32651 #:g32652 (setf slot-value) #:g32653 #:g32654 #:g32655 (setf slot-value) #:g32656 #:g32657 #:g32658 (setf slot-value) #:g32659 #:g32660 #:g32661 (setf slot-value) #:g32662 #:g32663 #:g32664 (setf slot-value) #:g32665 #:g32666 #:g32667 (setf slot-value) #:g32668 #:g32669 #:g32670 (setf slot-value) #:g32671 #:g32672 #:g32673 (setf slot-value) #:g32674 #:g32675 #:g32676 (setf slot-value) #:g32677 #:g32678 "ntpServer" #:g32679 (setf slot-value) #:g32680 #:g32681 #:g32682 (setf slot-value) #:g32683 #:g32684 #:g32685 (setf slot-value) #:g32686 #:g32687 #:g32688 (setf slot-value) #:g32689 #:g32690 #:g32691 (setf slot-value) #:g32692 #:g32693 #:g32694 (setf slot-value) 0 0 #:g32695 #:g32696 #:g32697 (setf slot-value) #:g32698 #:g32699 "eth_enabled" #:g32700 (setf slot-value) #:g32701 #:g32702 "meshtastic.Config.NetworkConfig.eth_enabled" #:g32703 (setf slot-value) #:g32704 #:g32705 #:g32706 (setf slot-value) #:g32707 #:g32708 #:g32709 (setf slot-value) #:g32710 #:g32711 #:g32712 (setf slot-value) #:g32713 #:g32714 #:g32715 (setf slot-value) #:g32716 #:g32717 #:g32718 (setf slot-value) #:g32719 #:g32720 #:g32721 (setf slot-value) #:g32722 #:g32723 #:g32724 (setf slot-value) #:g32725 #:g32726 cl-protobufs.meshtastic::%eth-enabled #:g32727 (setf slot-value) #:g32728 #:g32729 #:g32730 (setf slot-value) #:g32731 #:g32732 "ethEnabled" #:g32733 (setf slot-value) #:g32734 #:g32735 #:g32736 (setf slot-value) #:g32737 #:g32738 #:g32739 (setf slot-value) #:g32740 #:g32741 #:g32742 (setf slot-value) #:g32743 #:g32744 #:g32745 (setf slot-value) #:g32746 #:g32747 #:g32748 (setf slot-value) 0 0 #:g32749 #:g32750 #:g32751 (setf slot-value) #:g32752 #:g32753 "address_mode" #:g32754 (setf slot-value) #:g32755 #:g32756 "meshtastic.Config.NetworkConfig.address_mode" #:g32757 (setf slot-value) #:g32758 #:g32759 #:g32760 (setf slot-value) #:g32761 #:g32762 #:g32763 (setf slot-value) #:g32764 #:g32765 #:g32766 (setf slot-value) #:g32767 #:g32768 #:g32769 (setf slot-value) #:g32770 #:g32771 #:g32772 (setf slot-value) #:g32773 #:g32774 #:g32775 (setf slot-value) #:g32776 #:g32777 #:g32778 (setf slot-value) #:g32779 #:g32780 #:g32781 (setf slot-value) #:g32782 #:g32783 #:g32784 (setf slot-value) #:g32785 #:g32786 "addressMode" #:g32787 (setf slot-value) #:g32788 #:g32789 #:g32790 (setf slot-value) #:g32791 #:g32792 #:g32793 (setf slot-value) #:g32794 #:g32795 #:g32796 (setf slot-value) #:g32797 #:g32798 #:g32799 (setf slot-value) #:g32800 #:g32801 #:g32802 (setf slot-value) 0 0 #:g32803 #:g32804 #:g32805 (setf slot-value) #:g32806 #:g32807 "ipv4_config" #:g32808 (setf slot-value) #:g32809 #:g32810 "meshtastic.Config.NetworkConfig.ipv4_config" #:g32811 (setf slot-value) #:g32812 #:g32813 #:g32814 (setf slot-value) #:g32815 #:g32816 #:g32817 (setf slot-value) #:g32818 #:g32819 #:g32820 (setf slot-value) #:g32821 #:g32822 #:g32823 (setf slot-value) #:g32824 #:g32825 #:g32826 (setf slot-value) #:g32827 #:g32828 #:g32829 (setf slot-value) #:g32830 #:g32831 #:g32832 (setf slot-value) #:g32833 #:g32834 #:g32835 (setf slot-value) #:g32836 #:g32837 #:g32838 (setf slot-value) #:g32839 #:g32840 "ipv4Config" #:g32841 (setf slot-value) #:g32842 #:g32843 #:g32844 (setf slot-value) #:g32845 #:g32846 #:g32847 (setf slot-value) #:g32848 #:g32849 #:g32850 (setf slot-value) #:g32851 #:g32852 #:g32853 (setf slot-value) #:g32854 #:g32855 #:g32856 (setf slot-value) 0 #:g32857 #:g32858 #:g32859 (setf slot-value) #:g32860 #:g32861 "rsyslog_server" #:g32862 (setf slot-value) #:g32863 #:g32864 "meshtastic.Config.NetworkConfig.rsyslog_server" #:g32865 (setf slot-value) #:g32866 #:g32867 #:g32868 (setf slot-value) #:g32869 #:g32870 #:g32871 (setf slot-value) #:g32872 #:g32873 #:g32874 (setf slot-value) #:g32875 #:g32876 #:g32877 (setf slot-value) #:g32878 #:g32879 #:g32880 (setf slot-value) #:g32881 #:g32882 #:g32883 (setf slot-value) #:g32884 #:g32885 #:g32886 (setf slot-value) #:g32887 #:g32888 #:g32889 (setf slot-value) #:g32890 #:g32891 #:g32892 (setf slot-value) #:g32893 #:g32894 "rsyslogServer" #:g32895 (setf slot-value) #:g32896 #:g32897 #:g32898 (setf slot-value) #:g32899 #:g32900 #:g32901 (setf slot-value) #:g32902 #:g32903 #:g32904 (setf slot-value) #:g32905 #:g32906 #:g32907 (setf slot-value) #:g32908 #:g32909 #:g32910 (setf slot-value) cl-protobufs.meshtastic::%%%%config.display-config.gps-coordinate-format (deftype cl-protobufs.meshtastic::%%%%config.display-config.gps-coordinate-format nil (quote #572=(or (member . #573=(:dec :dms :utm :mgrs :olc :osgr)) #4#))) #572# cl-protobufs.meshtastic::config.display-config.gps-coordinate-format (deftype cl-protobufs.meshtastic::config.display-config.gps-coordinate-format nil (quote #574=(member . #573#))) #574# cl-protobufs.meshtastic::config.display-config.gps-coordinate-format-keyword-to-int (defun cl-protobufs.meshtastic::config.display-config.gps-coordinate-format-keyword-to-int) (#6# . 718) :dec :dms :utm :mgrs :olc :osgr #Y(cl-protobufs.meshtastic::config.display-config.gps-coordinate-format-keyword-to-int nil nil (24 45 28 26 10 0 42 6617 5 8 0 38 54 42 6618 5 8 1 38 47 42 6619 5 8 2 38 40 42 6620 5 8 3 38 33 42 6621 5 8 4 38 26 42 6622 5 8 5 38 19 10 0 16 36 12 14 37 19 2 38 12 14 39 14 40 19 3 41 45 42 10 0 73 43 1 29) #1# #6# 718) cl-protobufs.meshtastic::config.display-config.gps-coordinate-format-int-to-keyword (defun cl-protobufs.meshtastic::config.display-config.gps-coordinate-format-int-to-keyword) (#6# . 718) #Y(cl-protobufs.meshtastic::config.display-config.gps-coordinate-format-int-to-keyword nil nil (24 45 49 26 10 0 42 50 5 11 6617 38 37 42 51 5 11 6618 38 30 42 52 5 11 6619 38 23 42 53 5 11 6620 38 16 42 54 5 11 6621 38 9 42 55 5 11 6622 38 2 75 45 57 10 0 73 43 1 29) #1# #6# 718) #:g32915 #:g32916 #:g32917 #:g32918 #:g32919 #:g32920 (defmethod cl-protobufs::enum-keyword-to-int (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.display-config.gps-coordinate-format))) keyword) (#6# . 718) ((eql cl-protobufs.meshtastic::config.display-config.gps-coordinate-format) t) (cl-protobufs.implementation::e keyword) #Y(cl-protobufs::enum-keyword-to-int nil nil (24 45 72 24 45 73 26 13 0 19 1 6614 29) #1# #6# 718) (defmethod cl-protobufs::enum-int-to-keyword (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.display-config.gps-coordinate-format))) cl-protobufs.implementation::numeral) (#6# . 718) ((eql cl-protobufs.meshtastic::config.display-config.gps-coordinate-format) t) (cl-protobufs.implementation::e cl-protobufs.implementation::numeral) #Y(cl-protobufs::enum-int-to-keyword nil nil (24 45 72 24 45 49 26 13 0 19 1 6624 29) #1# #6# 718) cl-protobufs.meshtastic::+config.display-config.dec+ (defconstant cl-protobufs.meshtastic::+config.display-config.dec+) (#6# . 718) cl-protobufs.meshtastic::+config.display-config.dms+ (defconstant cl-protobufs.meshtastic::+config.display-config.dms+) (#6# . 718) cl-protobufs.meshtastic::+config.display-config.utm+ (defconstant cl-protobufs.meshtastic::+config.display-config.utm+) (#6# . 718) cl-protobufs.meshtastic::+config.display-config.mgrs+ (defconstant cl-protobufs.meshtastic::+config.display-config.mgrs+) (#6# . 718) cl-protobufs.meshtastic::+config.display-config.olc+ (defconstant cl-protobufs.meshtastic::+config.display-config.olc+) (#6# . 718) cl-protobufs.meshtastic::+config.display-config.osgr+ (defconstant cl-protobufs.meshtastic::+config.display-config.osgr+) (#6# . 718) (cl-protobufs.meshtastic::+config.display-config.dec+ cl-protobufs.meshtastic::+config.display-config.dms+ cl-protobufs.meshtastic::+config.display-config.utm+ cl-protobufs.meshtastic::+config.display-config.mgrs+ cl-protobufs.meshtastic::+config.display-config.olc+ cl-protobufs.meshtastic::+config.display-config.osgr+) (defmethod cl-protobufs.implementation::enum-default-value (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.display-config.gps-coordinate-format)))) (#6# . 718) ((eql cl-protobufs.meshtastic::config.display-config.gps-coordinate-format)) (cl-protobufs.implementation::e) #Y(cl-protobufs.implementation::enum-default-value nil nil (24 45 72 26 11 6617 73 29) #1# #6# 718) 0 "GpsCoordinateFormat" 0 0 0 0 0 0 0 0 0 0 0 0 (cl-protobufs.meshtastic::%%%%config.display-config.gps-coordinate-format) cl-protobufs.meshtastic::%%%%config.display-config.display-units (deftype cl-protobufs.meshtastic::%%%%config.display-config.display-units nil (quote #575=(or (member . #576=(:metric :imperial)) #4#))) #575# cl-protobufs.meshtastic::config.display-config.display-units (deftype cl-protobufs.meshtastic::config.display-config.display-units nil (quote #577=(member . #576#))) #577# cl-protobufs.meshtastic::config.display-config.display-units-keyword-to-int (defun cl-protobufs.meshtastic::config.display-config.display-units-keyword-to-int) (#6# . 718) :metric :imperial #Y(cl-protobufs.meshtastic::config.display-config.display-units-keyword-to-int nil nil (24 45 28 26 10 0 42 6692 5 8 0 38 26 42 6693 5 8 1 38 19 10 0 16 36 12 14 37 19 2 38 12 14 39 14 40 19 3 41 45 42 10 0 73 43 1 29) #1# #6# 718) cl-protobufs.meshtastic::config.display-config.display-units-int-to-keyword (defun cl-protobufs.meshtastic::config.display-config.display-units-int-to-keyword) (#6# . 718) #Y(cl-protobufs.meshtastic::config.display-config.display-units-int-to-keyword nil nil (24 45 49 26 10 0 42 50 5 11 6692 38 9 42 51 5 11 6693 38 2 75 45 57 10 0 73 43 1 29) #1# #6# 718) #:g32925 #:g32926 #:g32927 #:g32928 #:g32929 #:g32930 (defmethod cl-protobufs::enum-keyword-to-int (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.display-config.display-units))) keyword) (#6# . 718) ((eql cl-protobufs.meshtastic::config.display-config.display-units) t) (cl-protobufs.implementation::e keyword) #Y(cl-protobufs::enum-keyword-to-int nil nil (24 45 72 24 45 73 26 13 0 19 1 6689 29) #1# #6# 718) (defmethod cl-protobufs::enum-int-to-keyword (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.display-config.display-units))) cl-protobufs.implementation::numeral) (#6# . 718) ((eql cl-protobufs.meshtastic::config.display-config.display-units) t) (cl-protobufs.implementation::e cl-protobufs.implementation::numeral) #Y(cl-protobufs::enum-int-to-keyword nil nil (24 45 72 24 45 49 26 13 0 19 1 6695 29) #1# #6# 718) cl-protobufs.meshtastic::+config.display-config.metric+ (defconstant cl-protobufs.meshtastic::+config.display-config.metric+) (#6# . 718) cl-protobufs.meshtastic::+config.display-config.imperial+ (defconstant cl-protobufs.meshtastic::+config.display-config.imperial+) (#6# . 718) (cl-protobufs.meshtastic::+config.display-config.metric+ cl-protobufs.meshtastic::+config.display-config.imperial+) (defmethod cl-protobufs.implementation::enum-default-value (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.display-config.display-units)))) (#6# . 718) ((eql cl-protobufs.meshtastic::config.display-config.display-units)) (cl-protobufs.implementation::e) #Y(cl-protobufs.implementation::enum-default-value nil nil (24 45 72 26 11 6692 73 29) #1# #6# 718) 0 "DisplayUnits" 0 0 0 0 (cl-protobufs.meshtastic::%%%%config.display-config.display-units) cl-protobufs.meshtastic::%%%%config.display-config.oled-type (deftype cl-protobufs.meshtastic::%%%%config.display-config.oled-type nil (quote #578=(or (member . #579=(:oled-auto :oled-ssd1306 :oled-sh1106 :oled-sh1107)) #4#))) #578# cl-protobufs.meshtastic::config.display-config.oled-type (deftype cl-protobufs.meshtastic::config.display-config.oled-type nil (quote #580=(member . #579#))) #580# cl-protobufs.meshtastic::config.display-config.oled-type-keyword-to-int (defun cl-protobufs.meshtastic::config.display-config.oled-type-keyword-to-int) (#6# . 718) :oled-auto :oled-ssd1306 :oled-sh1106 :oled-sh1107 #Y(cl-protobufs.meshtastic::config.display-config.oled-type-keyword-to-int nil nil (24 45 28 26 10 0 42 6743 5 8 0 38 40 42 6744 5 8 1 38 33 42 6745 5 8 2 38 26 42 6746 5 8 3 38 19 10 0 16 36 12 14 37 19 2 38 12 14 39 14 40 19 3 41 45 42 10 0 73 43 1 29) #1# #6# 718) cl-protobufs.meshtastic::config.display-config.oled-type-int-to-keyword (defun cl-protobufs.meshtastic::config.display-config.oled-type-int-to-keyword) (#6# . 718) #Y(cl-protobufs.meshtastic::config.display-config.oled-type-int-to-keyword nil nil (24 45 49 26 10 0 42 50 5 11 6743 38 23 42 51 5 11 6744 38 16 42 52 5 11 6745 38 9 42 53 5 11 6746 38 2 75 45 57 10 0 73 43 1 29) #1# #6# 718) #:g32935 #:g32936 #:g32937 #:g32938 #:g32939 #:g32940 (defmethod cl-protobufs::enum-keyword-to-int (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.display-config.oled-type))) keyword) (#6# . 718) ((eql cl-protobufs.meshtastic::config.display-config.oled-type) t) (cl-protobufs.implementation::e keyword) #Y(cl-protobufs::enum-keyword-to-int nil nil (24 45 72 24 45 73 26 13 0 19 1 6740 29) #1# #6# 718) (defmethod cl-protobufs::enum-int-to-keyword (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.display-config.oled-type))) cl-protobufs.implementation::numeral) (#6# . 718) ((eql cl-protobufs.meshtastic::config.display-config.oled-type) t) (cl-protobufs.implementation::e cl-protobufs.implementation::numeral) #Y(cl-protobufs::enum-int-to-keyword nil nil (24 45 72 24 45 49 26 13 0 19 1 6748 29) #1# #6# 718) cl-protobufs.meshtastic::+config.display-config.oled-auto+ (defconstant cl-protobufs.meshtastic::+config.display-config.oled-auto+) (#6# . 718) cl-protobufs.meshtastic::+config.display-config.oled-ssd1306+ (defconstant cl-protobufs.meshtastic::+config.display-config.oled-ssd1306+) (#6# . 718) cl-protobufs.meshtastic::+config.display-config.oled-sh1106+ (defconstant cl-protobufs.meshtastic::+config.display-config.oled-sh1106+) (#6# . 718) cl-protobufs.meshtastic::+config.display-config.oled-sh1107+ (defconstant cl-protobufs.meshtastic::+config.display-config.oled-sh1107+) (#6# . 718) (cl-protobufs.meshtastic::+config.display-config.oled-auto+ cl-protobufs.meshtastic::+config.display-config.oled-ssd1306+ cl-protobufs.meshtastic::+config.display-config.oled-sh1106+ cl-protobufs.meshtastic::+config.display-config.oled-sh1107+) (defmethod cl-protobufs.implementation::enum-default-value (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.display-config.oled-type)))) (#6# . 718) ((eql cl-protobufs.meshtastic::config.display-config.oled-type)) (cl-protobufs.implementation::e) #Y(cl-protobufs.implementation::enum-default-value nil nil (24 45 72 26 11 6743 73 29) #1# #6# 718) 0 "OledType" 0 0 0 0 0 0 0 0 (cl-protobufs.meshtastic::%%%%config.display-config.oled-type) cl-protobufs.meshtastic::%%%%config.display-config.display-mode (deftype cl-protobufs.meshtastic::%%%%config.display-config.display-mode nil (quote #581=(or (member . #582=(:default :twocolor :inverted :color)) #4#))) #581# cl-protobufs.meshtastic::config.display-config.display-mode (deftype cl-protobufs.meshtastic::config.display-config.display-mode nil (quote #583=(member . #582#))) #583# cl-protobufs.meshtastic::config.display-config.display-mode-keyword-to-int (defun cl-protobufs.meshtastic::config.display-config.display-mode-keyword-to-int) (#6# . 718) :default :twocolor :inverted :color #Y(cl-protobufs.meshtastic::config.display-config.display-mode-keyword-to-int nil nil (24 45 28 26 10 0 42 6806 5 8 0 38 40 42 6807 5 8 1 38 33 42 6808 5 8 2 38 26 42 6809 5 8 3 38 19 10 0 16 36 12 14 37 19 2 38 12 14 39 14 40 19 3 41 45 42 10 0 73 43 1 29) #1# #6# 718) cl-protobufs.meshtastic::config.display-config.display-mode-int-to-keyword (defun cl-protobufs.meshtastic::config.display-config.display-mode-int-to-keyword) (#6# . 718) #Y(cl-protobufs.meshtastic::config.display-config.display-mode-int-to-keyword nil nil (24 45 49 26 10 0 42 50 5 11 6806 38 23 42 51 5 11 6807 38 16 42 52 5 11 6808 38 9 42 53 5 11 6809 38 2 75 45 57 10 0 73 43 1 29) #1# #6# 718) #:g32945 #:g32946 #:g32947 #:g32948 #:g32949 #:g32950 (defmethod cl-protobufs::enum-keyword-to-int (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.display-config.display-mode))) keyword) (#6# . 718) ((eql cl-protobufs.meshtastic::config.display-config.display-mode) t) (cl-protobufs.implementation::e keyword) #Y(cl-protobufs::enum-keyword-to-int nil nil (24 45 72 24 45 73 26 13 0 19 1 6803 29) #1# #6# 718) (defmethod cl-protobufs::enum-int-to-keyword (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.display-config.display-mode))) cl-protobufs.implementation::numeral) (#6# . 718) ((eql cl-protobufs.meshtastic::config.display-config.display-mode) t) (cl-protobufs.implementation::e cl-protobufs.implementation::numeral) #Y(cl-protobufs::enum-int-to-keyword nil nil (24 45 72 24 45 49 26 13 0 19 1 6811 29) #1# #6# 718) cl-protobufs.meshtastic::+config.display-config.default+ (defconstant cl-protobufs.meshtastic::+config.display-config.default+) (#6# . 718) cl-protobufs.meshtastic::+config.display-config.twocolor+ (defconstant cl-protobufs.meshtastic::+config.display-config.twocolor+) (#6# . 718) cl-protobufs.meshtastic::+config.display-config.inverted+ (defconstant cl-protobufs.meshtastic::+config.display-config.inverted+) (#6# . 718) cl-protobufs.meshtastic::+config.display-config.color+ (defconstant cl-protobufs.meshtastic::+config.display-config.color+) (#6# . 718) (cl-protobufs.meshtastic::+config.display-config.default+ cl-protobufs.meshtastic::+config.display-config.twocolor+ cl-protobufs.meshtastic::+config.display-config.inverted+ cl-protobufs.meshtastic::+config.display-config.color+) (defmethod cl-protobufs.implementation::enum-default-value (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.display-config.display-mode)))) (#6# . 718) ((eql cl-protobufs.meshtastic::config.display-config.display-mode)) (cl-protobufs.implementation::e) #Y(cl-protobufs.implementation::enum-default-value nil nil (24 45 72 26 11 6806 73 29) #1# #6# 718) 0 "DisplayMode" 0 0 0 0 0 0 0 0 (cl-protobufs.meshtastic::%%%%config.display-config.display-mode) ((inline cl-protobufs.meshtastic::%make-config.display-config)) cl-protobufs.meshtastic::config.display-config "CONFIG.DISPLAY-CONFIG-" ((cl-protobufs.meshtastic::%screen-on-secs 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%gps-format :dec :type keyword) (cl-protobufs.meshtastic::%auto-screen-carousel-secs 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%units :metric :type keyword) (cl-protobufs.meshtastic::%oled :oled-auto :type keyword) (cl-protobufs.meshtastic::%displaymode :default :type keyword) (cl-protobufs.implementation::%%bytes nil :type #10#) (cl-protobufs.implementation::%%bool-values #584=(make-array 4 :element-type #12# :initial-contents #585=#*0000) :type #586=(bit-vector 4)) (cl-protobufs.implementation::%%is-set #587=(make-array 0 . #16#) :type #588=(bit-vector 0))) (#18# (cl-protobufs.meshtastic::%screen-on-secs 0 cl-protobufs::uint32 nil 1 nil) (cl-protobufs.meshtastic::%gps-format :dec keyword nil 2 nil) (cl-protobufs.meshtastic::%auto-screen-carousel-secs 0 cl-protobufs::uint32 nil 3 nil) (cl-protobufs.meshtastic::%units :metric keyword nil 4 nil) (cl-protobufs.meshtastic::%oled :oled-auto keyword nil 5 nil) (cl-protobufs.meshtastic::%displaymode :default keyword nil 6 nil) (cl-protobufs.implementation::%%bytes nil #10# nil 7 nil) (cl-protobufs.implementation::%%bool-values #584# #586# nil 8 nil) (cl-protobufs.implementation::%%is-set #587# #588# nil 9 nil)) cl-protobufs.meshtastic::copy-config.display-config (cl-protobufs.meshtastic::%make-config.display-config) #589=(cl-protobufs.meshtastic::config.display-config (:constructor cl-protobufs.meshtastic::%make-config.display-config) . #20#) (defstruct #589#) (#6# . 718) cl-protobufs.meshtastic::%make-config.display-config (defun cl-protobufs.meshtastic::%make-config.display-config) (#6# . 718) #590=(&key #591=#:%%skipped-bytes (#592=#:%screen-on-secs 0) (#593=#:%gps-format :dec) (#594=#:%auto-screen-carousel-secs 0) (#595=#:%units :metric) (#596=#:%oled :oled-auto) (#597=#:%displaymode :default) #598=#:%%bytes (#599=#:%%bool-values (make-array 4 :element-type (quote bit) :initial-contents #585#)) (#600=#:%%is-set (make-array 0 :element-type (quote bit) :initial-element 0))) (nil :%%is-set :%%bool-values :%%bytes :%displaymode :%oled :%units :%auto-screen-carousel-secs :%gps-format :%screen-on-secs :%%skipped-bytes) #591# #592# #593# #594# #595# #596# #597# #598# #585# #599# #600# #601=(bit-vector 0) #602=(bit-vector 0) #603=(bit-vector 4) #604=(bit-vector 4) #605=(or null (simple-array (unsigned-byte 8))) #606=(or null (simple-array (unsigned-byte 8))) cl-protobufs.meshtastic::%displaymode cl-protobufs.meshtastic::%oled cl-protobufs.meshtastic::%units cl-protobufs.meshtastic::%auto-screen-carousel-secs cl-protobufs.meshtastic::%gps-format cl-protobufs.meshtastic::%screen-on-secs #607=(or null cl-protobufs::byte-vector) #608=(or null cl-protobufs::byte-vector) 0 #Y(cl-protobufs.meshtastic::%make-config.display-config nil nil (28 6874 22 40 2 77 46 6875 22 40 3 9 0 46 6876 22 40 3 14 6617 46 6877 22 40 3 9 0 46 6878 22 40 3 14 6692 46 6879 22 40 3 14 6743 46 6880 22 40 3 14 6806 46 6881 22 40 2 77 46 6882 22 40 15 9 4 14 222 15 223 14 224 15 6883 19 5 226 12 46 6884 22 40 15 9 0 14 222 15 223 14 228 9 0 19 5 226 12 46 6885 13 0 15 6886 19 2 231 76 39 12 13 0 15 6887 15 6861 15 233 19 4 234 13 1 15 6888 19 2 231 76 39 12 13 1 15 6889 15 6861 15 237 19 4 234 13 2 15 6890 19 2 231 76 39 12 13 2 15 6891 15 6861 15 240 19 4 234 13 3 15 73 19 2 231 76 39 12 13 3 15 73 15 6861 15 6892 19 4 234 13 4 15 73 19 2 231 76 39 12 13 4 15 73 15 6861 15 6893 19 4 234 13 5 15 73 19 2 231 76 39 12 13 5 15 73 15 6861 15 6894 19 4 234 13 6 15 241 19 2 231 76 39 12 13 6 15 241 15 6861 15 6895 19 4 234 13 7 15 73 19 2 231 76 39 12 13 7 15 73 15 6861 15 6896 19 4 234 13 8 15 241 19 2 231 76 39 12 13 8 15 241 15 6861 15 6897 19 4 234 13 9 15 6898 19 2 231 76 39 12 13 9 15 6899 15 6861 15 249 19 4 234 15 6900 13 9 13 8 13 7 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 11 251 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::%make-config.display-config #590# #39# (unless (typep #600# (quote #601#)) (si::structure-type-error #600# (quote #602#) (quote cl-protobufs.meshtastic::config.display-config) (quote cl-protobufs.implementation::%%is-set))) (unless (typep #599# (quote #603#)) (si::structure-type-error #599# (quote #604#) (quote cl-protobufs.meshtastic::config.display-config) (quote cl-protobufs.implementation::%%bool-values))) (unless (typep #598# (quote #605#)) (si::structure-type-error #598# (quote #606#) (quote cl-protobufs.meshtastic::config.display-config) (quote cl-protobufs.implementation::%%bytes))) (unless (typep #597# (quote keyword)) (si::structure-type-error #597# (quote keyword) (quote cl-protobufs.meshtastic::config.display-config) (quote cl-protobufs.meshtastic::%displaymode))) (unless (typep #596# (quote keyword)) (si::structure-type-error #596# (quote keyword) (quote cl-protobufs.meshtastic::config.display-config) (quote cl-protobufs.meshtastic::%oled))) (unless (typep #595# (quote keyword)) (si::structure-type-error #595# (quote keyword) (quote cl-protobufs.meshtastic::config.display-config) (quote cl-protobufs.meshtastic::%units))) (unless (typep #594# (quote cl-protobufs::uint32)) (si::structure-type-error #594# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.display-config) (quote cl-protobufs.meshtastic::%auto-screen-carousel-secs))) (unless (typep #593# (quote keyword)) (si::structure-type-error #593# (quote keyword) (quote cl-protobufs.meshtastic::config.display-config) (quote cl-protobufs.meshtastic::%gps-format))) (unless (typep #592# (quote cl-protobufs::uint32)) (si::structure-type-error #592# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.display-config) (quote cl-protobufs.meshtastic::%screen-on-secs))) (unless (typep #591# (quote #607#)) (si::structure-type-error #591# (quote #608#) (quote cl-protobufs.meshtastic::config.display-config) (quote cl-protobufs.implementation::%%skipped-bytes))) (si::make-structure (load-time-value (find-class (quote cl-protobufs.meshtastic::config.display-config))) #591# #592# #593# #594# #595# #596# #597# #598# #599# #600#))) cl-protobufs.meshtastic::config.display-config-%%is-set (cl-protobufs.meshtastic::config.display-config-%%is-set) #:g32961 #Y(nil nil nil (24 45 6905 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 6861 6 2 12 9 9 13 0 10 1 6 6 12 15 274 13 2 15 273 1 6861 6 2 12 8 9 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.display-config-%%bool-values (cl-protobufs.meshtastic::config.display-config-%%bool-values) #:g32962 #Y(nil nil nil (24 45 6909 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 6861 6 2 12 9 8 13 0 10 1 6 6 12 15 274 13 2 15 273 1 6861 6 2 12 8 8 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.display-config-%%bytes (cl-protobufs.meshtastic::config.display-config-%%bytes) #:g32963 #Y(nil nil nil (24 45 6913 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 6861 6 2 12 9 7 13 0 10 1 6 6 12 15 274 13 2 15 273 1 6861 6 2 12 8 7 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.display-config-%displaymode (cl-protobufs.meshtastic::config.display-config-%displaymode) #:g32964 #Y(nil nil nil (24 45 6917 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 6861 6 2 12 9 6 13 0 10 1 6 6 12 15 274 13 2 15 273 1 6861 6 2 12 8 6 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.display-config-%oled (cl-protobufs.meshtastic::config.display-config-%oled) #:g32965 #Y(nil nil nil (24 45 6921 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 6861 6 2 12 9 5 13 0 10 1 6 6 12 15 274 13 2 15 273 1 6861 6 2 12 8 5 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.display-config-%units (cl-protobufs.meshtastic::config.display-config-%units) #:g32966 #Y(nil nil nil (24 45 6925 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 6861 6 2 12 9 4 13 0 10 1 6 6 12 15 274 13 2 15 273 1 6861 6 2 12 8 4 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.display-config-%auto-screen-carousel-secs (cl-protobufs.meshtastic::config.display-config-%auto-screen-carousel-secs) #:g32967 #Y(nil nil nil (24 45 6929 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 6861 6 2 12 9 3 13 0 10 1 6 6 12 15 274 13 2 15 273 1 6861 6 2 12 8 3 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.display-config-%gps-format (cl-protobufs.meshtastic::config.display-config-%gps-format) #:g32968 #Y(nil nil nil (24 45 6933 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 6861 6 2 12 9 2 13 0 10 1 6 6 12 15 274 13 2 15 273 1 6861 6 2 12 8 2 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.display-config-%screen-on-secs (cl-protobufs.meshtastic::config.display-config-%screen-on-secs) #:g32969 #Y(nil nil nil (24 45 6937 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 6861 6 2 12 9 1 13 0 10 1 6 6 12 15 274 13 2 15 273 1 6861 6 2 12 8 1 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.display-config-%%skipped-bytes (cl-protobufs.meshtastic::config.display-config-%%skipped-bytes) #:g32970 #Y(nil nil nil (24 45 6941 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 6861 6 2 12 9 0 13 0 10 1 6 6 12 15 274 13 2 15 273 1 6861 6 2 12 8 0 6 4 12 72 6 43 2 29) #1# #6# 718) ((inline cl-protobufs.meshtastic::config.display-config.screen-on-secs)) cl-protobufs.meshtastic::config.display-config.screen-on-secs (defun cl-protobufs.meshtastic::config.display-config.screen-on-secs) (#6# . 718) #609=(#610=#:obj29400) #610# #Y(cl-protobufs.meshtastic::config.display-config.screen-on-secs nil nil (24 45 6948 26 13 0 19 1 6935 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.screen-on-secs #609# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.display-config-%screen-on-secs #610#)))) ((inline #611=(setf cl-protobufs.meshtastic::config.display-config.screen-on-secs))) #611# (defun #611#) (#6# . 718) #612=(#613=#:new-value29402 #614=#:obj29401) #613# #614# #:g32973 #:g32974 #Y(#611# nil nil (24 45 6956 24 45 6957 26 10 0 45 6958 10 2 45 6959 13 1 15 6861 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #611# #612# #39# (declare (type cl-protobufs::uint32 #613#)) nil (setf (cl-protobufs.meshtastic::config.display-config-%screen-on-secs #614#) #613#))) ((inline cl-protobufs.meshtastic::config.display-config.%%has-screen-on-secs)) cl-protobufs.meshtastic::config.display-config.%%has-screen-on-secs (defun cl-protobufs.meshtastic::config.display-config.%%has-screen-on-secs) (#6# . 718) #615=(#614#) #616=#:cur-value29403 #Y(cl-protobufs.meshtastic::config.display-config.%%has-screen-on-secs nil nil (24 45 6957 26 13 0 19 1 6935 45 6967 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.%%has-screen-on-secs #615# #39# (let ((#616# (cl-protobufs.meshtastic::config.display-config-%screen-on-secs #614#))) (not (eq #616# 0))))) ((inline cl-protobufs.meshtastic::config.display-config.clear-screen-on-secs)) cl-protobufs.meshtastic::config.display-config.clear-screen-on-secs (defun cl-protobufs.meshtastic::config.display-config.clear-screen-on-secs) (#6# . 718) #617=(#614#) #:g32977 #:g32978 #Y(cl-protobufs.meshtastic::config.display-config.clear-screen-on-secs nil nil (24 45 6957 26 10 0 45 6975 8 0 45 6976 13 1 15 6861 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.clear-screen-on-secs #617# #39# nil (setf (cl-protobufs.meshtastic::config.display-config-%screen-on-secs #614#) 0))) cl-protobufs.meshtastic::screen-on-secs (defmethod cl-protobufs.meshtastic::screen-on-secs (#614# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (cl-protobufs.meshtastic::config.display-config) (#614#) #Y(cl-protobufs.meshtastic::screen-on-secs nil nil (24 45 6957 26 13 0 19 1 6944 29) #1# #6# 718) #618=(setf cl-protobufs.meshtastic::screen-on-secs) (defmethod #618# #613# (#614# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.display-config) (#613# #614#) #:g32985 #:g32986 (setf cl-protobufs.meshtastic::config.display-config.screen-on-secs) #Y(#618# nil nil (24 45 6956 24 45 6957 26 10 0 45 6990 10 2 45 6991 13 0 13 1 33 6992 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.display-config.clear-screen-on-secs) (cl-protobufs.meshtastic::config.display-config.screen-on-secs) ((inline cl-protobufs.meshtastic::config.display-config.gps-format)) cl-protobufs.meshtastic::config.display-config.gps-format (defun cl-protobufs.meshtastic::config.display-config.gps-format) (#6# . 718) #619=(#620=#:obj29404) #620# #Y(cl-protobufs.meshtastic::config.display-config.gps-format nil nil (24 45 7001 26 13 0 19 1 6931 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.gps-format #619# #39# (the cl-protobufs.meshtastic::%%%%config.display-config.gps-coordinate-format (cl-protobufs.meshtastic::config.display-config-%gps-format #620#)))) ((inline #621=(setf cl-protobufs.meshtastic::config.display-config.gps-format))) #621# (defun #621#) (#6# . 718) #622=(#623=#:new-value29406 #624=#:obj29405) #623# #624# #:g32989 #:g32990 #Y(#621# nil nil (24 45 7009 24 45 7010 26 10 0 45 7011 10 2 45 7012 13 1 15 6861 9 2 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #621# #622# #39# (declare (type cl-protobufs.meshtastic::%%%%config.display-config.gps-coordinate-format #623#)) nil (setf (cl-protobufs.meshtastic::config.display-config-%gps-format #624#) #623#))) ((inline cl-protobufs.meshtastic::config.display-config.%%has-gps-format)) cl-protobufs.meshtastic::config.display-config.%%has-gps-format (defun cl-protobufs.meshtastic::config.display-config.%%has-gps-format) (#6# . 718) #625=(#624#) #626=#:cur-value29407 #Y(cl-protobufs.meshtastic::config.display-config.%%has-gps-format nil nil (24 45 7010 26 13 0 19 1 6931 45 7020 13 0 11 6617 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.%%has-gps-format #625# #39# (let ((#626# (cl-protobufs.meshtastic::config.display-config-%gps-format #624#))) (not (eq #626# :dec))))) ((inline cl-protobufs.meshtastic::config.display-config.clear-gps-format)) cl-protobufs.meshtastic::config.display-config.clear-gps-format (defun cl-protobufs.meshtastic::config.display-config.clear-gps-format) (#6# . 718) #627=(#624#) #:g32993 #:g32994 #Y(cl-protobufs.meshtastic::config.display-config.clear-gps-format nil nil (24 45 7010 26 10 0 45 7028 11 6617 45 7029 13 1 15 6861 9 2 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.clear-gps-format #627# #39# nil (setf (cl-protobufs.meshtastic::config.display-config-%gps-format #624#) :dec))) cl-protobufs.meshtastic::gps-format (defmethod cl-protobufs.meshtastic::gps-format (#624# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (cl-protobufs.meshtastic::config.display-config) (#624#) #Y(cl-protobufs.meshtastic::gps-format nil nil (24 45 7010 26 13 0 19 1 6997 29) #1# #6# 718) #628=(setf cl-protobufs.meshtastic::gps-format) (defmethod #628# #623# (#624# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.display-config) (#623# #624#) #:g33001 #:g33002 (setf cl-protobufs.meshtastic::config.display-config.gps-format) #Y(#628# nil nil (24 45 7009 24 45 7010 26 10 0 45 7043 10 2 45 7044 13 0 13 1 33 7045 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.display-config.clear-gps-format) (cl-protobufs.meshtastic::config.display-config.gps-format) ((inline cl-protobufs.meshtastic::config.display-config.auto-screen-carousel-secs)) cl-protobufs.meshtastic::config.display-config.auto-screen-carousel-secs (defun cl-protobufs.meshtastic::config.display-config.auto-screen-carousel-secs) (#6# . 718) #629=(#630=#:obj29408) #630# #Y(cl-protobufs.meshtastic::config.display-config.auto-screen-carousel-secs nil nil (24 45 7054 26 13 0 19 1 6927 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.auto-screen-carousel-secs #629# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.display-config-%auto-screen-carousel-secs #630#)))) ((inline #631=(setf cl-protobufs.meshtastic::config.display-config.auto-screen-carousel-secs))) #631# (defun #631#) (#6# . 718) #632=(#633=#:new-value29410 #634=#:obj29409) #633# #634# #:g33005 #:g33006 #Y(#631# nil nil (24 45 7062 24 45 7063 26 10 0 45 7064 10 2 45 7065 13 1 15 6861 9 3 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #631# #632# #39# (declare (type cl-protobufs::uint32 #633#)) nil (setf (cl-protobufs.meshtastic::config.display-config-%auto-screen-carousel-secs #634#) #633#))) ((inline cl-protobufs.meshtastic::config.display-config.%%has-auto-screen-carousel-secs)) cl-protobufs.meshtastic::config.display-config.%%has-auto-screen-carousel-secs (defun cl-protobufs.meshtastic::config.display-config.%%has-auto-screen-carousel-secs) (#6# . 718) #635=(#634#) #636=#:cur-value29411 #Y(cl-protobufs.meshtastic::config.display-config.%%has-auto-screen-carousel-secs nil nil (24 45 7063 26 13 0 19 1 6927 45 7073 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.%%has-auto-screen-carousel-secs #635# #39# (let ((#636# (cl-protobufs.meshtastic::config.display-config-%auto-screen-carousel-secs #634#))) (not (eq #636# 0))))) ((inline cl-protobufs.meshtastic::config.display-config.clear-auto-screen-carousel-secs)) cl-protobufs.meshtastic::config.display-config.clear-auto-screen-carousel-secs (defun cl-protobufs.meshtastic::config.display-config.clear-auto-screen-carousel-secs) (#6# . 718) #637=(#634#) #:g33009 #:g33010 #Y(cl-protobufs.meshtastic::config.display-config.clear-auto-screen-carousel-secs nil nil (24 45 7063 26 10 0 45 7081 8 0 45 7082 13 1 15 6861 9 3 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.clear-auto-screen-carousel-secs #637# #39# nil (setf (cl-protobufs.meshtastic::config.display-config-%auto-screen-carousel-secs #634#) 0))) cl-protobufs.meshtastic::auto-screen-carousel-secs (defmethod cl-protobufs.meshtastic::auto-screen-carousel-secs (#634# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (cl-protobufs.meshtastic::config.display-config) (#634#) #Y(cl-protobufs.meshtastic::auto-screen-carousel-secs nil nil (24 45 7063 26 13 0 19 1 7050 29) #1# #6# 718) #638=(setf cl-protobufs.meshtastic::auto-screen-carousel-secs) (defmethod #638# #633# (#634# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.display-config) (#633# #634#) #:g33017 #:g33018 (setf cl-protobufs.meshtastic::config.display-config.auto-screen-carousel-secs) #Y(#638# nil nil (24 45 7062 24 45 7063 26 10 0 45 7096 10 2 45 7097 13 0 13 1 33 7098 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.display-config.clear-auto-screen-carousel-secs) (cl-protobufs.meshtastic::config.display-config.auto-screen-carousel-secs) ((inline cl-protobufs.meshtastic::config.display-config.compass-north-top)) cl-protobufs.meshtastic::config.display-config.compass-north-top (defun cl-protobufs.meshtastic::config.display-config.compass-north-top) (#6# . 718) #639=(#640=#:obj29412) #640# #Y(cl-protobufs.meshtastic::config.display-config.compass-north-top nil nil (24 45 7107 26 13 0 19 1 6907 12 9 0 19 2 223 16 368 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.compass-north-top #639# #39# (the boolean (plusp (bit (cl-protobufs.meshtastic::config.display-config-%%bool-values #640#) 0))))) ((inline #641=(setf cl-protobufs.meshtastic::config.display-config.compass-north-top))) #641# (defun #641#) (#6# . 718) #642=(#643=#:new-value29414 #644=#:obj29413) #643# #644# #Y(#641# nil nil (24 45 7115 24 45 7116 26 13 0 19 1 6907 12 9 0 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 378 29) #1# #6# 718) (function (ext::lambda-block #641# #642# #39# (declare (type boolean #643#)) nil (setf (bit (cl-protobufs.meshtastic::config.display-config-%%bool-values #644#) 0) (if #643# . #56#)))) ((inline cl-protobufs.meshtastic::config.display-config.%%has-compass-north-top)) cl-protobufs.meshtastic::config.display-config.%%has-compass-north-top (defun cl-protobufs.meshtastic::config.display-config.%%has-compass-north-top) (#6# . 718) #645=(#644#) #646=#:cur-value29415 #Y(cl-protobufs.meshtastic::config.display-config.%%has-compass-north-top nil nil (24 45 7116 26 13 0 19 1 6907 12 9 0 19 2 223 16 368 45 7124 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.%%has-compass-north-top #645# #39# (let ((#646# (plusp (bit (cl-protobufs.meshtastic::config.display-config-%%bool-values #644#) 0)))) (not (eq #646# nil))))) ((inline cl-protobufs.meshtastic::config.display-config.clear-compass-north-top)) cl-protobufs.meshtastic::config.display-config.clear-compass-north-top (defun cl-protobufs.meshtastic::config.display-config.clear-compass-north-top) (#6# . 718) #647=(#644#) #Y(cl-protobufs.meshtastic::config.display-config.clear-compass-north-top nil nil (24 45 7116 26 13 0 19 1 6907 12 9 0 9 0 19 3 378 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.clear-compass-north-top #647# #39# nil (setf (bit (cl-protobufs.meshtastic::config.display-config-%%bool-values #644#) 0) 0))) cl-protobufs.meshtastic::compass-north-top (defmethod cl-protobufs.meshtastic::compass-north-top (#644# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (cl-protobufs.meshtastic::config.display-config) (#644#) #Y(cl-protobufs.meshtastic::compass-north-top nil nil (24 45 7116 26 13 0 19 1 7103 29) #1# #6# 718) #648=(setf cl-protobufs.meshtastic::compass-north-top) (defmethod #648# #643# (#644# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.display-config) (#643# #644#) #:g33033 #:g33034 (setf cl-protobufs.meshtastic::config.display-config.compass-north-top) #Y(#648# nil nil (24 45 7115 24 45 7116 26 10 0 45 7145 10 2 45 7146 13 0 13 1 33 7147 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.display-config.clear-compass-north-top) (cl-protobufs.meshtastic::config.display-config.compass-north-top) ((inline cl-protobufs.meshtastic::config.display-config.flip-screen)) cl-protobufs.meshtastic::config.display-config.flip-screen (defun cl-protobufs.meshtastic::config.display-config.flip-screen) (#6# . 718) #649=(#650=#:obj29416) #650# #Y(cl-protobufs.meshtastic::config.display-config.flip-screen nil nil (24 45 7156 26 13 0 19 1 6907 12 9 1 19 2 223 16 368 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.flip-screen #649# #39# (the boolean (plusp (bit (cl-protobufs.meshtastic::config.display-config-%%bool-values #650#) 1))))) ((inline #651=(setf cl-protobufs.meshtastic::config.display-config.flip-screen))) #651# (defun #651#) (#6# . 718) #652=(#653=#:new-value29418 #654=#:obj29417) #653# #654# #Y(#651# nil nil (24 45 7164 24 45 7165 26 13 0 19 1 6907 12 9 1 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 378 29) #1# #6# 718) (function (ext::lambda-block #651# #652# #39# (declare (type boolean #653#)) nil (setf (bit (cl-protobufs.meshtastic::config.display-config-%%bool-values #654#) 1) (if #653# . #56#)))) ((inline cl-protobufs.meshtastic::config.display-config.%%has-flip-screen)) cl-protobufs.meshtastic::config.display-config.%%has-flip-screen (defun cl-protobufs.meshtastic::config.display-config.%%has-flip-screen) (#6# . 718) #655=(#654#) #656=#:cur-value29419 #Y(cl-protobufs.meshtastic::config.display-config.%%has-flip-screen nil nil (24 45 7165 26 13 0 19 1 6907 12 9 1 19 2 223 16 368 45 7173 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.%%has-flip-screen #655# #39# (let ((#656# (plusp (bit (cl-protobufs.meshtastic::config.display-config-%%bool-values #654#) 1)))) (not (eq #656# nil))))) ((inline cl-protobufs.meshtastic::config.display-config.clear-flip-screen)) cl-protobufs.meshtastic::config.display-config.clear-flip-screen (defun cl-protobufs.meshtastic::config.display-config.clear-flip-screen) (#6# . 718) #657=(#654#) #Y(cl-protobufs.meshtastic::config.display-config.clear-flip-screen nil nil (24 45 7165 26 13 0 19 1 6907 12 9 1 9 0 19 3 378 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.clear-flip-screen #657# #39# nil (setf (bit (cl-protobufs.meshtastic::config.display-config-%%bool-values #654#) 1) 0))) cl-protobufs.meshtastic::flip-screen (defmethod cl-protobufs.meshtastic::flip-screen (#654# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (cl-protobufs.meshtastic::config.display-config) (#654#) #Y(cl-protobufs.meshtastic::flip-screen nil nil (24 45 7165 26 13 0 19 1 7152 29) #1# #6# 718) #658=(setf cl-protobufs.meshtastic::flip-screen) (defmethod #658# #653# (#654# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.display-config) (#653# #654#) #:g33049 #:g33050 (setf cl-protobufs.meshtastic::config.display-config.flip-screen) #Y(#658# nil nil (24 45 7164 24 45 7165 26 10 0 45 7194 10 2 45 7195 13 0 13 1 33 7196 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.display-config.clear-flip-screen) (cl-protobufs.meshtastic::config.display-config.flip-screen) ((inline cl-protobufs.meshtastic::config.display-config.units)) cl-protobufs.meshtastic::config.display-config.units (defun cl-protobufs.meshtastic::config.display-config.units) (#6# . 718) #659=(#660=#:obj29420) #660# #Y(cl-protobufs.meshtastic::config.display-config.units nil nil (24 45 7205 26 13 0 19 1 6923 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.units #659# #39# (the cl-protobufs.meshtastic::%%%%config.display-config.display-units (cl-protobufs.meshtastic::config.display-config-%units #660#)))) ((inline #661=(setf cl-protobufs.meshtastic::config.display-config.units))) #661# (defun #661#) (#6# . 718) #662=(#663=#:new-value29422 #664=#:obj29421) #663# #664# #:g33053 #:g33054 #Y(#661# nil nil (24 45 7213 24 45 7214 26 10 0 45 7215 10 2 45 7216 13 1 15 6861 9 4 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #661# #662# #39# (declare (type cl-protobufs.meshtastic::%%%%config.display-config.display-units #663#)) nil (setf (cl-protobufs.meshtastic::config.display-config-%units #664#) #663#))) ((inline cl-protobufs.meshtastic::config.display-config.%%has-units)) cl-protobufs.meshtastic::config.display-config.%%has-units (defun cl-protobufs.meshtastic::config.display-config.%%has-units) (#6# . 718) #665=(#664#) #666=#:cur-value29423 #Y(cl-protobufs.meshtastic::config.display-config.%%has-units nil nil (24 45 7214 26 13 0 19 1 6923 45 7224 13 0 11 6692 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.%%has-units #665# #39# (let ((#666# (cl-protobufs.meshtastic::config.display-config-%units #664#))) (not (eq #666# :metric))))) ((inline cl-protobufs.meshtastic::config.display-config.clear-units)) cl-protobufs.meshtastic::config.display-config.clear-units (defun cl-protobufs.meshtastic::config.display-config.clear-units) (#6# . 718) #667=(#664#) #:g33057 #:g33058 #Y(cl-protobufs.meshtastic::config.display-config.clear-units nil nil (24 45 7214 26 10 0 45 7232 11 6692 45 7233 13 1 15 6861 9 4 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.clear-units #667# #39# nil (setf (cl-protobufs.meshtastic::config.display-config-%units #664#) :metric))) cl-protobufs.meshtastic::units (defmethod cl-protobufs.meshtastic::units (#664# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (cl-protobufs.meshtastic::config.display-config) (#664#) #Y(cl-protobufs.meshtastic::units nil nil (24 45 7214 26 13 0 19 1 7201 29) #1# #6# 718) #668=(setf cl-protobufs.meshtastic::units) (defmethod #668# #663# (#664# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.display-config) (#663# #664#) #:g33065 #:g33066 (setf cl-protobufs.meshtastic::config.display-config.units) #Y(#668# nil nil (24 45 7213 24 45 7214 26 10 0 45 7247 10 2 45 7248 13 0 13 1 33 7249 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.display-config.clear-units) (cl-protobufs.meshtastic::config.display-config.units) ((inline cl-protobufs.meshtastic::config.display-config.oled)) cl-protobufs.meshtastic::config.display-config.oled (defun cl-protobufs.meshtastic::config.display-config.oled) (#6# . 718) #669=(#670=#:obj29424) #670# #Y(cl-protobufs.meshtastic::config.display-config.oled nil nil (24 45 7258 26 13 0 19 1 6919 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.oled #669# #39# (the cl-protobufs.meshtastic::%%%%config.display-config.oled-type (cl-protobufs.meshtastic::config.display-config-%oled #670#)))) ((inline #671=(setf cl-protobufs.meshtastic::config.display-config.oled))) #671# (defun #671#) (#6# . 718) #672=(#673=#:new-value29426 #674=#:obj29425) #673# #674# #:g33069 #:g33070 #Y(#671# nil nil (24 45 7266 24 45 7267 26 10 0 45 7268 10 2 45 7269 13 1 15 6861 9 5 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #671# #672# #39# (declare (type cl-protobufs.meshtastic::%%%%config.display-config.oled-type #673#)) nil (setf (cl-protobufs.meshtastic::config.display-config-%oled #674#) #673#))) ((inline cl-protobufs.meshtastic::config.display-config.%%has-oled)) cl-protobufs.meshtastic::config.display-config.%%has-oled (defun cl-protobufs.meshtastic::config.display-config.%%has-oled) (#6# . 718) #675=(#674#) #676=#:cur-value29427 #Y(cl-protobufs.meshtastic::config.display-config.%%has-oled nil nil (24 45 7267 26 13 0 19 1 6919 45 7277 13 0 11 6743 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.%%has-oled #675# #39# (let ((#676# (cl-protobufs.meshtastic::config.display-config-%oled #674#))) (not (eq #676# :oled-auto))))) ((inline cl-protobufs.meshtastic::config.display-config.clear-oled)) cl-protobufs.meshtastic::config.display-config.clear-oled (defun cl-protobufs.meshtastic::config.display-config.clear-oled) (#6# . 718) #677=(#674#) #:g33073 #:g33074 #Y(cl-protobufs.meshtastic::config.display-config.clear-oled nil nil (24 45 7267 26 10 0 45 7285 11 6743 45 7286 13 1 15 6861 9 5 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.clear-oled #677# #39# nil (setf (cl-protobufs.meshtastic::config.display-config-%oled #674#) :oled-auto))) cl-protobufs.meshtastic::oled (defmethod cl-protobufs.meshtastic::oled (#674# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (cl-protobufs.meshtastic::config.display-config) (#674#) #Y(cl-protobufs.meshtastic::oled nil nil (24 45 7267 26 13 0 19 1 7254 29) #1# #6# 718) #678=(setf cl-protobufs.meshtastic::oled) (defmethod #678# #673# (#674# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.display-config) (#673# #674#) #:g33081 #:g33082 (setf cl-protobufs.meshtastic::config.display-config.oled) #Y(#678# nil nil (24 45 7266 24 45 7267 26 10 0 45 7300 10 2 45 7301 13 0 13 1 33 7302 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.display-config.clear-oled) (cl-protobufs.meshtastic::config.display-config.oled) ((inline cl-protobufs.meshtastic::config.display-config.displaymode)) cl-protobufs.meshtastic::config.display-config.displaymode (defun cl-protobufs.meshtastic::config.display-config.displaymode) (#6# . 718) #679=(#680=#:obj29428) #680# #Y(cl-protobufs.meshtastic::config.display-config.displaymode nil nil (24 45 7311 26 13 0 19 1 6915 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.displaymode #679# #39# (the cl-protobufs.meshtastic::%%%%config.display-config.display-mode (cl-protobufs.meshtastic::config.display-config-%displaymode #680#)))) ((inline #681=(setf cl-protobufs.meshtastic::config.display-config.displaymode))) #681# (defun #681#) (#6# . 718) #682=(#683=#:new-value29430 #684=#:obj29429) #683# #684# #:g33085 #:g33086 #Y(#681# nil nil (24 45 7319 24 45 7320 26 10 0 45 7321 10 2 45 7322 13 1 15 6861 9 6 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #681# #682# #39# (declare (type cl-protobufs.meshtastic::%%%%config.display-config.display-mode #683#)) nil (setf (cl-protobufs.meshtastic::config.display-config-%displaymode #684#) #683#))) ((inline cl-protobufs.meshtastic::config.display-config.%%has-displaymode)) cl-protobufs.meshtastic::config.display-config.%%has-displaymode (defun cl-protobufs.meshtastic::config.display-config.%%has-displaymode) (#6# . 718) #685=(#684#) #686=#:cur-value29431 #Y(cl-protobufs.meshtastic::config.display-config.%%has-displaymode nil nil (24 45 7320 26 13 0 19 1 6915 45 7330 13 0 11 6806 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.%%has-displaymode #685# #39# (let ((#686# (cl-protobufs.meshtastic::config.display-config-%displaymode #684#))) (not (eq #686# :default))))) ((inline cl-protobufs.meshtastic::config.display-config.clear-displaymode)) cl-protobufs.meshtastic::config.display-config.clear-displaymode (defun cl-protobufs.meshtastic::config.display-config.clear-displaymode) (#6# . 718) #687=(#684#) #:g33089 #:g33090 #Y(cl-protobufs.meshtastic::config.display-config.clear-displaymode nil nil (24 45 7320 26 10 0 45 7338 11 6806 45 7339 13 1 15 6861 9 6 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.clear-displaymode #687# #39# nil (setf (cl-protobufs.meshtastic::config.display-config-%displaymode #684#) :default))) cl-protobufs.meshtastic::displaymode (defmethod cl-protobufs.meshtastic::displaymode (#684# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (cl-protobufs.meshtastic::config.display-config) (#684#) #Y(cl-protobufs.meshtastic::displaymode nil nil (24 45 7320 26 13 0 19 1 7307 29) #1# #6# 718) #688=(setf cl-protobufs.meshtastic::displaymode) (defmethod #688# #683# (#684# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.display-config) (#683# #684#) #:g33097 #:g33098 (setf cl-protobufs.meshtastic::config.display-config.displaymode) #Y(#688# nil nil (24 45 7319 24 45 7320 26 10 0 45 7353 10 2 45 7354 13 0 13 1 33 7355 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.display-config.clear-displaymode) (cl-protobufs.meshtastic::config.display-config.displaymode) ((inline cl-protobufs.meshtastic::config.display-config.heading-bold)) cl-protobufs.meshtastic::config.display-config.heading-bold (defun cl-protobufs.meshtastic::config.display-config.heading-bold) (#6# . 718) #689=(#690=#:obj29432) #690# #Y(cl-protobufs.meshtastic::config.display-config.heading-bold nil nil (24 45 7364 26 13 0 19 1 6907 12 9 2 19 2 223 16 368 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.heading-bold #689# #39# (the boolean (plusp (bit (cl-protobufs.meshtastic::config.display-config-%%bool-values #690#) 2))))) ((inline #691=(setf cl-protobufs.meshtastic::config.display-config.heading-bold))) #691# (defun #691#) (#6# . 718) #692=(#693=#:new-value29434 #694=#:obj29433) #693# #694# #Y(#691# nil nil (24 45 7372 24 45 7373 26 13 0 19 1 6907 12 9 2 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 378 29) #1# #6# 718) (function (ext::lambda-block #691# #692# #39# (declare (type boolean #693#)) nil (setf (bit (cl-protobufs.meshtastic::config.display-config-%%bool-values #694#) 2) (if #693# . #56#)))) ((inline cl-protobufs.meshtastic::config.display-config.%%has-heading-bold)) cl-protobufs.meshtastic::config.display-config.%%has-heading-bold (defun cl-protobufs.meshtastic::config.display-config.%%has-heading-bold) (#6# . 718) #695=(#694#) #696=#:cur-value29435 #Y(cl-protobufs.meshtastic::config.display-config.%%has-heading-bold nil nil (24 45 7373 26 13 0 19 1 6907 12 9 2 19 2 223 16 368 45 7381 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.%%has-heading-bold #695# #39# (let ((#696# (plusp (bit (cl-protobufs.meshtastic::config.display-config-%%bool-values #694#) 2)))) (not (eq #696# nil))))) ((inline cl-protobufs.meshtastic::config.display-config.clear-heading-bold)) cl-protobufs.meshtastic::config.display-config.clear-heading-bold (defun cl-protobufs.meshtastic::config.display-config.clear-heading-bold) (#6# . 718) #697=(#694#) #Y(cl-protobufs.meshtastic::config.display-config.clear-heading-bold nil nil (24 45 7373 26 13 0 19 1 6907 12 9 2 9 0 19 3 378 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.clear-heading-bold #697# #39# nil (setf (bit (cl-protobufs.meshtastic::config.display-config-%%bool-values #694#) 2) 0))) cl-protobufs.meshtastic::heading-bold (defmethod cl-protobufs.meshtastic::heading-bold (#694# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (cl-protobufs.meshtastic::config.display-config) (#694#) #Y(cl-protobufs.meshtastic::heading-bold nil nil (24 45 7373 26 13 0 19 1 7360 29) #1# #6# 718) #698=(setf cl-protobufs.meshtastic::heading-bold) (defmethod #698# #693# (#694# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.display-config) (#693# #694#) #:g33113 #:g33114 (setf cl-protobufs.meshtastic::config.display-config.heading-bold) #Y(#698# nil nil (24 45 7372 24 45 7373 26 10 0 45 7402 10 2 45 7403 13 0 13 1 33 7404 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.display-config.clear-heading-bold) (cl-protobufs.meshtastic::config.display-config.heading-bold) ((inline cl-protobufs.meshtastic::config.display-config.wake-on-tap-or-motion)) cl-protobufs.meshtastic::config.display-config.wake-on-tap-or-motion (defun cl-protobufs.meshtastic::config.display-config.wake-on-tap-or-motion) (#6# . 718) #699=(#700=#:obj29436) #700# #Y(cl-protobufs.meshtastic::config.display-config.wake-on-tap-or-motion nil nil (24 45 7413 26 13 0 19 1 6907 12 9 3 19 2 223 16 368 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.wake-on-tap-or-motion #699# #39# (the boolean (plusp (bit (cl-protobufs.meshtastic::config.display-config-%%bool-values #700#) 3))))) ((inline #701=(setf cl-protobufs.meshtastic::config.display-config.wake-on-tap-or-motion))) #701# (defun #701#) (#6# . 718) #702=(#703=#:new-value29438 #704=#:obj29437) #703# #704# #Y(#701# nil nil (24 45 7421 24 45 7422 26 13 0 19 1 6907 12 9 3 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 378 29) #1# #6# 718) (function (ext::lambda-block #701# #702# #39# (declare (type boolean #703#)) nil (setf (bit (cl-protobufs.meshtastic::config.display-config-%%bool-values #704#) 3) (if #703# . #56#)))) ((inline cl-protobufs.meshtastic::config.display-config.%%has-wake-on-tap-or-motion)) cl-protobufs.meshtastic::config.display-config.%%has-wake-on-tap-or-motion (defun cl-protobufs.meshtastic::config.display-config.%%has-wake-on-tap-or-motion) (#6# . 718) #705=(#704#) #706=#:cur-value29439 #Y(cl-protobufs.meshtastic::config.display-config.%%has-wake-on-tap-or-motion nil nil (24 45 7422 26 13 0 19 1 6907 12 9 3 19 2 223 16 368 45 7430 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.%%has-wake-on-tap-or-motion #705# #39# (let ((#706# (plusp (bit (cl-protobufs.meshtastic::config.display-config-%%bool-values #704#) 3)))) (not (eq #706# nil))))) ((inline cl-protobufs.meshtastic::config.display-config.clear-wake-on-tap-or-motion)) cl-protobufs.meshtastic::config.display-config.clear-wake-on-tap-or-motion (defun cl-protobufs.meshtastic::config.display-config.clear-wake-on-tap-or-motion) (#6# . 718) #707=(#704#) #Y(cl-protobufs.meshtastic::config.display-config.clear-wake-on-tap-or-motion nil nil (24 45 7422 26 13 0 19 1 6907 12 9 3 9 0 19 3 378 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display-config.clear-wake-on-tap-or-motion #707# #39# nil (setf (bit (cl-protobufs.meshtastic::config.display-config-%%bool-values #704#) 3) 0))) cl-protobufs.meshtastic::wake-on-tap-or-motion (defmethod cl-protobufs.meshtastic::wake-on-tap-or-motion (#704# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (cl-protobufs.meshtastic::config.display-config) (#704#) #Y(cl-protobufs.meshtastic::wake-on-tap-or-motion nil nil (24 45 7422 26 13 0 19 1 7409 29) #1# #6# 718) #708=(setf cl-protobufs.meshtastic::wake-on-tap-or-motion) (defmethod #708# #703# (#704# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.display-config) (#703# #704#) #:g33129 #:g33130 (setf cl-protobufs.meshtastic::config.display-config.wake-on-tap-or-motion) #Y(#708# nil nil (24 45 7421 24 45 7422 26 10 0 45 7451 10 2 45 7452 13 0 13 1 33 7453 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.display-config.clear-wake-on-tap-or-motion) (cl-protobufs.meshtastic::config.display-config.wake-on-tap-or-motion) ((inline cl-protobufs.meshtastic::make-config.display-config)) cl-protobufs.meshtastic::make-config.display-config (defun cl-protobufs.meshtastic::make-config.display-config) (#6# . 718) #709=(&key (cl-protobufs.meshtastic::screen-on-secs :%unset) (cl-protobufs.meshtastic::gps-format :%unset) (cl-protobufs.meshtastic::auto-screen-carousel-secs :%unset) (cl-protobufs.meshtastic::compass-north-top :%unset) (cl-protobufs.meshtastic::flip-screen :%unset) (cl-protobufs.meshtastic::units :%unset) (cl-protobufs.meshtastic::oled :%unset) (cl-protobufs.meshtastic::displaymode :%unset) (cl-protobufs.meshtastic::heading-bold :%unset) (cl-protobufs.meshtastic::wake-on-tap-or-motion :%unset)) (nil :wake-on-tap-or-motion :heading-bold :displaymode :oled :units :flip-screen :compass-north-top :auto-screen-carousel-secs :gps-format :screen-on-secs) #710=#:obj29399 #:g33151 #:g33152 (setf cl-protobufs.meshtastic::config.display-config.screen-on-secs) #:g33153 #:g33154 (setf cl-protobufs.meshtastic::config.display-config.gps-format) #:g33155 #:g33156 (setf cl-protobufs.meshtastic::config.display-config.auto-screen-carousel-secs) #:g33157 #:g33158 (setf cl-protobufs.meshtastic::config.display-config.compass-north-top) #:g33159 #:g33160 (setf cl-protobufs.meshtastic::config.display-config.flip-screen) #:g33161 #:g33162 (setf cl-protobufs.meshtastic::config.display-config.units) #:g33163 #:g33164 (setf cl-protobufs.meshtastic::config.display-config.oled) #:g33165 #:g33166 (setf cl-protobufs.meshtastic::config.display-config.displaymode) #:g33167 #:g33168 (setf cl-protobufs.meshtastic::config.display-config.heading-bold) #:g33169 #:g33170 (setf cl-protobufs.meshtastic::config.display-config.wake-on-tap-or-motion) #Y(cl-protobufs.meshtastic::make-config.display-config nil nil (28 7462 22 40 3 14 777 46 6979 22 40 3 14 777 46 7032 22 40 3 14 777 46 7085 22 40 3 14 777 46 7134 22 40 3 14 777 46 7183 22 40 3 14 777 46 7236 22 40 3 14 777 46 7289 22 40 3 14 777 46 7342 22 40 3 14 777 46 7391 22 40 3 14 777 46 7440 19 0 6870 45 7463 13 10 11 777 17 332 40 4 10 10 76 76 39 21 10 0 45 7464 10 11 45 7465 13 0 13 1 33 7466 18 2 43 1 43 1 13 9 11 777 17 332 40 4 10 9 76 76 39 21 10 0 45 7467 10 10 45 7468 13 0 13 1 33 7469 18 2 43 1 43 1 13 8 11 777 17 332 40 4 10 8 76 76 39 21 10 0 45 7470 10 9 45 7471 13 0 13 1 33 7472 18 2 43 1 43 1 13 7 11 777 17 332 76 39 21 10 0 45 7473 10 8 45 7474 13 0 13 1 33 7475 18 2 43 1 43 1 13 6 11 777 17 332 76 39 21 10 0 45 7476 10 7 45 7477 13 0 13 1 33 7478 18 2 43 1 43 1 13 5 11 777 17 332 40 4 10 5 76 76 39 21 10 0 45 7479 10 6 45 7480 13 0 13 1 33 7481 18 2 43 1 43 1 13 4 11 777 17 332 40 4 10 4 76 76 39 21 10 0 45 7482 10 5 45 7483 13 0 13 1 33 7484 18 2 43 1 43 1 13 3 11 777 17 332 40 4 10 3 76 76 39 21 10 0 45 7485 10 4 45 7486 13 0 13 1 33 7487 18 2 43 1 43 1 13 2 11 777 17 332 76 39 21 10 0 45 7488 10 3 45 7489 13 0 13 1 33 7490 18 2 43 1 43 1 13 1 11 777 17 332 76 39 21 10 0 45 7491 10 2 45 7492 13 0 13 1 33 7493 18 2 43 1 43 1 10 0 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::make-config.display-config #709# #39# (let ((#710# (cl-protobufs.meshtastic::%make-config.display-config))) (unless (or (eq cl-protobufs.meshtastic::screen-on-secs :%unset) (not cl-protobufs.meshtastic::screen-on-secs)) (setf (cl-protobufs.meshtastic::config.display-config.screen-on-secs #710#) cl-protobufs.meshtastic::screen-on-secs)) (unless (or (eq cl-protobufs.meshtastic::gps-format :%unset) (not cl-protobufs.meshtastic::gps-format)) (setf (cl-protobufs.meshtastic::config.display-config.gps-format #710#) cl-protobufs.meshtastic::gps-format)) (unless (or (eq cl-protobufs.meshtastic::auto-screen-carousel-secs :%unset) (not cl-protobufs.meshtastic::auto-screen-carousel-secs)) (setf (cl-protobufs.meshtastic::config.display-config.auto-screen-carousel-secs #710#) cl-protobufs.meshtastic::auto-screen-carousel-secs)) (unless (eq cl-protobufs.meshtastic::compass-north-top :%unset) (setf (cl-protobufs.meshtastic::config.display-config.compass-north-top #710#) cl-protobufs.meshtastic::compass-north-top)) (unless (eq cl-protobufs.meshtastic::flip-screen :%unset) (setf (cl-protobufs.meshtastic::config.display-config.flip-screen #710#) cl-protobufs.meshtastic::flip-screen)) (unless (or (eq cl-protobufs.meshtastic::units :%unset) (not cl-protobufs.meshtastic::units)) (setf (cl-protobufs.meshtastic::config.display-config.units #710#) cl-protobufs.meshtastic::units)) (unless (or (eq cl-protobufs.meshtastic::oled :%unset) (not cl-protobufs.meshtastic::oled)) (setf (cl-protobufs.meshtastic::config.display-config.oled #710#) cl-protobufs.meshtastic::oled)) (unless (or (eq cl-protobufs.meshtastic::displaymode :%unset) (not cl-protobufs.meshtastic::displaymode)) (setf (cl-protobufs.meshtastic::config.display-config.displaymode #710#) cl-protobufs.meshtastic::displaymode)) (unless (eq cl-protobufs.meshtastic::heading-bold :%unset) (setf (cl-protobufs.meshtastic::config.display-config.heading-bold #710#) cl-protobufs.meshtastic::heading-bold)) (unless (eq cl-protobufs.meshtastic::wake-on-tap-or-motion :%unset) (setf (cl-protobufs.meshtastic::config.display-config.wake-on-tap-or-motion #710#) cl-protobufs.meshtastic::wake-on-tap-or-motion)) #710#))) cl-protobufs.meshtastic::config.display-config.clear-%%is-set (defun cl-protobufs.meshtastic::config.display-config.clear-%%is-set) (#6# . 718) (#710#) #Y(cl-protobufs.meshtastic::config.display-config.clear-%%is-set nil nil (24 45 7463 26 13 0 19 1 6903 12 9 0 19 2 812 29) #1# #6# 718) (cl-protobufs.meshtastic::make-config.display-config cl-protobufs.meshtastic::config.display-config-%%is-set) (defmethod cl-protobufs::clear (#710# cl-protobufs.meshtastic::config.display-config)) (#6# . 718) (cl-protobufs.meshtastic::config.display-config) (#710#) #:g33177 #:g33178 #Y(cl-protobufs::clear nil nil (24 45 7463 26 10 0 45 7506 75 45 7507 13 1 15 204 9 0 13 0 19 4 118 43 1 43 1 13 0 19 1 6971 13 0 19 1 7024 13 0 19 1 7077 13 0 19 1 7128 13 0 19 1 7177 13 0 19 1 7228 13 0 19 1 7281 13 0 19 1 7334 13 0 19 1 7385 13 0 19 1 7434 13 0 19 1 7496 29) #1# #6# 718) 0 #:g33179 #:g33180 #:g33181 (setf slot-value) #:g33182 #:g33183 "DisplayConfig" #:g33184 (setf slot-value) #:g33185 #:g33186 "meshtastic.Config.DisplayConfig" #:g33187 (setf slot-value) #:g33188 #:g33189 #:g33190 (setf slot-value) #:g33191 #:g33192 #:g33193 (setf slot-value) #:g33194 #:g33195 0 #:g33196 (setf slot-value) #:g33197 #:g33198 #:g33199 (setf slot-value) #:g33200 #:g33201 #:g33202 (setf slot-value) #:g33203 #:g33204 #:g33205 (setf slot-value) #:g33206 #:g33207 #:g33208 (setf slot-value) 0 0 #:g33209 #:g33210 #:g33211 (setf slot-value) #:g33212 #:g33213 "screen_on_secs" #:g33214 (setf slot-value) #:g33215 #:g33216 "meshtastic.Config.DisplayConfig.screen_on_secs" #:g33217 (setf slot-value) #:g33218 #:g33219 #:g33220 (setf slot-value) #:g33221 #:g33222 #:g33223 (setf slot-value) #:g33224 #:g33225 #:g33226 (setf slot-value) #:g33227 #:g33228 #:g33229 (setf slot-value) #:g33230 #:g33231 #:g33232 (setf slot-value) #:g33233 #:g33234 #:g33235 (setf slot-value) #:g33236 #:g33237 #:g33238 (setf slot-value) #:g33239 #:g33240 #:g33241 (setf slot-value) #:g33242 #:g33243 #:g33244 (setf slot-value) #:g33245 #:g33246 "screenOnSecs" #:g33247 (setf slot-value) #:g33248 #:g33249 #:g33250 (setf slot-value) #:g33251 #:g33252 #:g33253 (setf slot-value) #:g33254 #:g33255 #:g33256 (setf slot-value) #:g33257 #:g33258 #:g33259 (setf slot-value) #:g33260 #:g33261 #:g33262 (setf slot-value) 0 0 #:g33263 #:g33264 #:g33265 (setf slot-value) #:g33266 #:g33267 "gps_format" #:g33268 (setf slot-value) #:g33269 #:g33270 "meshtastic.Config.DisplayConfig.gps_format" #:g33271 (setf slot-value) #:g33272 #:g33273 #:g33274 (setf slot-value) #:g33275 #:g33276 #:g33277 (setf slot-value) #:g33278 #:g33279 #:g33280 (setf slot-value) #:g33281 #:g33282 #:g33283 (setf slot-value) #:g33284 #:g33285 #:g33286 (setf slot-value) #:g33287 #:g33288 #:g33289 (setf slot-value) #:g33290 #:g33291 #:g33292 (setf slot-value) #:g33293 #:g33294 #:g33295 (setf slot-value) #:g33296 #:g33297 #:g33298 (setf slot-value) #:g33299 #:g33300 "gpsFormat" #:g33301 (setf slot-value) #:g33302 #:g33303 #:g33304 (setf slot-value) #:g33305 #:g33306 #:g33307 (setf slot-value) #:g33308 #:g33309 #:g33310 (setf slot-value) #:g33311 #:g33312 #:g33313 (setf slot-value) #:g33314 #:g33315 #:g33316 (setf slot-value) 0 0 #:g33317 #:g33318 #:g33319 (setf slot-value) #:g33320 #:g33321 "auto_screen_carousel_secs" #:g33322 (setf slot-value) #:g33323 #:g33324 "meshtastic.Config.DisplayConfig.auto_screen_carousel_secs" #:g33325 (setf slot-value) #:g33326 #:g33327 #:g33328 (setf slot-value) #:g33329 #:g33330 #:g33331 (setf slot-value) #:g33332 #:g33333 #:g33334 (setf slot-value) #:g33335 #:g33336 #:g33337 (setf slot-value) #:g33338 #:g33339 #:g33340 (setf slot-value) #:g33341 #:g33342 #:g33343 (setf slot-value) #:g33344 #:g33345 #:g33346 (setf slot-value) #:g33347 #:g33348 #:g33349 (setf slot-value) #:g33350 #:g33351 #:g33352 (setf slot-value) #:g33353 #:g33354 "autoScreenCarouselSecs" #:g33355 (setf slot-value) #:g33356 #:g33357 #:g33358 (setf slot-value) #:g33359 #:g33360 #:g33361 (setf slot-value) #:g33362 #:g33363 #:g33364 (setf slot-value) #:g33365 #:g33366 #:g33367 (setf slot-value) #:g33368 #:g33369 #:g33370 (setf slot-value) 0 0 #:g33371 #:g33372 #:g33373 (setf slot-value) #:g33374 #:g33375 "compass_north_top" #:g33376 (setf slot-value) #:g33377 #:g33378 "meshtastic.Config.DisplayConfig.compass_north_top" #:g33379 (setf slot-value) #:g33380 #:g33381 #:g33382 (setf slot-value) #:g33383 #:g33384 #:g33385 (setf slot-value) #:g33386 #:g33387 #:g33388 (setf slot-value) #:g33389 #:g33390 #:g33391 (setf slot-value) #:g33392 #:g33393 #:g33394 (setf slot-value) #:g33395 #:g33396 #:g33397 (setf slot-value) #:g33398 #:g33399 #:g33400 (setf slot-value) #:g33401 #:g33402 cl-protobufs.meshtastic::%compass-north-top #:g33403 (setf slot-value) #:g33404 #:g33405 #:g33406 (setf slot-value) #:g33407 #:g33408 "compassNorthTop" #:g33409 (setf slot-value) #:g33410 #:g33411 #:g33412 (setf slot-value) #:g33413 #:g33414 #:g33415 (setf slot-value) #:g33416 #:g33417 #:g33418 (setf slot-value) #:g33419 #:g33420 #:g33421 (setf slot-value) #:g33422 #:g33423 #:g33424 (setf slot-value) 0 0 #:g33425 #:g33426 #:g33427 (setf slot-value) #:g33428 #:g33429 "flip_screen" #:g33430 (setf slot-value) #:g33431 #:g33432 "meshtastic.Config.DisplayConfig.flip_screen" #:g33433 (setf slot-value) #:g33434 #:g33435 #:g33436 (setf slot-value) #:g33437 #:g33438 #:g33439 (setf slot-value) #:g33440 #:g33441 #:g33442 (setf slot-value) #:g33443 #:g33444 #:g33445 (setf slot-value) #:g33446 #:g33447 #:g33448 (setf slot-value) #:g33449 #:g33450 #:g33451 (setf slot-value) #:g33452 #:g33453 #:g33454 (setf slot-value) #:g33455 #:g33456 cl-protobufs.meshtastic::%flip-screen #:g33457 (setf slot-value) #:g33458 #:g33459 #:g33460 (setf slot-value) #:g33461 #:g33462 "flipScreen" #:g33463 (setf slot-value) #:g33464 #:g33465 #:g33466 (setf slot-value) #:g33467 #:g33468 #:g33469 (setf slot-value) #:g33470 #:g33471 #:g33472 (setf slot-value) #:g33473 #:g33474 #:g33475 (setf slot-value) #:g33476 #:g33477 #:g33478 (setf slot-value) 0 0 #:g33479 #:g33480 #:g33481 (setf slot-value) #:g33482 #:g33483 "units" #:g33484 (setf slot-value) #:g33485 #:g33486 "meshtastic.Config.DisplayConfig.units" #:g33487 (setf slot-value) #:g33488 #:g33489 #:g33490 (setf slot-value) #:g33491 #:g33492 #:g33493 (setf slot-value) #:g33494 #:g33495 #:g33496 (setf slot-value) #:g33497 #:g33498 #:g33499 (setf slot-value) #:g33500 #:g33501 #:g33502 (setf slot-value) #:g33503 #:g33504 #:g33505 (setf slot-value) #:g33506 #:g33507 #:g33508 (setf slot-value) #:g33509 #:g33510 #:g33511 (setf slot-value) #:g33512 #:g33513 #:g33514 (setf slot-value) #:g33515 #:g33516 "units" #:g33517 (setf slot-value) #:g33518 #:g33519 #:g33520 (setf slot-value) #:g33521 #:g33522 #:g33523 (setf slot-value) #:g33524 #:g33525 #:g33526 (setf slot-value) #:g33527 #:g33528 #:g33529 (setf slot-value) #:g33530 #:g33531 #:g33532 (setf slot-value) 0 0 #:g33533 #:g33534 #:g33535 (setf slot-value) #:g33536 #:g33537 "oled" #:g33538 (setf slot-value) #:g33539 #:g33540 "meshtastic.Config.DisplayConfig.oled" #:g33541 (setf slot-value) #:g33542 #:g33543 #:g33544 (setf slot-value) #:g33545 #:g33546 #:g33547 (setf slot-value) #:g33548 #:g33549 #:g33550 (setf slot-value) #:g33551 #:g33552 #:g33553 (setf slot-value) #:g33554 #:g33555 #:g33556 (setf slot-value) #:g33557 #:g33558 #:g33559 (setf slot-value) #:g33560 #:g33561 #:g33562 (setf slot-value) #:g33563 #:g33564 #:g33565 (setf slot-value) #:g33566 #:g33567 #:g33568 (setf slot-value) #:g33569 #:g33570 "oled" #:g33571 (setf slot-value) #:g33572 #:g33573 #:g33574 (setf slot-value) #:g33575 #:g33576 #:g33577 (setf slot-value) #:g33578 #:g33579 #:g33580 (setf slot-value) #:g33581 #:g33582 #:g33583 (setf slot-value) #:g33584 #:g33585 #:g33586 (setf slot-value) 0 0 #:g33587 #:g33588 #:g33589 (setf slot-value) #:g33590 #:g33591 "displaymode" #:g33592 (setf slot-value) #:g33593 #:g33594 "meshtastic.Config.DisplayConfig.displaymode" #:g33595 (setf slot-value) #:g33596 #:g33597 #:g33598 (setf slot-value) #:g33599 #:g33600 #:g33601 (setf slot-value) #:g33602 #:g33603 #:g33604 (setf slot-value) #:g33605 #:g33606 #:g33607 (setf slot-value) #:g33608 #:g33609 #:g33610 (setf slot-value) #:g33611 #:g33612 #:g33613 (setf slot-value) #:g33614 #:g33615 #:g33616 (setf slot-value) #:g33617 #:g33618 #:g33619 (setf slot-value) #:g33620 #:g33621 #:g33622 (setf slot-value) #:g33623 #:g33624 "displaymode" #:g33625 (setf slot-value) #:g33626 #:g33627 #:g33628 (setf slot-value) #:g33629 #:g33630 #:g33631 (setf slot-value) #:g33632 #:g33633 #:g33634 (setf slot-value) #:g33635 #:g33636 #:g33637 (setf slot-value) #:g33638 #:g33639 #:g33640 (setf slot-value) 0 0 #:g33641 #:g33642 #:g33643 (setf slot-value) #:g33644 #:g33645 "heading_bold" #:g33646 (setf slot-value) #:g33647 #:g33648 "meshtastic.Config.DisplayConfig.heading_bold" #:g33649 (setf slot-value) #:g33650 #:g33651 #:g33652 (setf slot-value) #:g33653 #:g33654 #:g33655 (setf slot-value) #:g33656 #:g33657 #:g33658 (setf slot-value) #:g33659 #:g33660 #:g33661 (setf slot-value) #:g33662 #:g33663 #:g33664 (setf slot-value) #:g33665 #:g33666 #:g33667 (setf slot-value) #:g33668 #:g33669 #:g33670 (setf slot-value) #:g33671 #:g33672 cl-protobufs.meshtastic::%heading-bold #:g33673 (setf slot-value) #:g33674 #:g33675 #:g33676 (setf slot-value) #:g33677 #:g33678 "headingBold" #:g33679 (setf slot-value) #:g33680 #:g33681 #:g33682 (setf slot-value) #:g33683 #:g33684 #:g33685 (setf slot-value) #:g33686 #:g33687 #:g33688 (setf slot-value) #:g33689 #:g33690 #:g33691 (setf slot-value) #:g33692 #:g33693 #:g33694 (setf slot-value) 0 #:g33695 #:g33696 #:g33697 (setf slot-value) #:g33698 #:g33699 "wake_on_tap_or_motion" #:g33700 (setf slot-value) #:g33701 #:g33702 "meshtastic.Config.DisplayConfig.wake_on_tap_or_motion" #:g33703 (setf slot-value) #:g33704 #:g33705 #:g33706 (setf slot-value) #:g33707 #:g33708 #:g33709 (setf slot-value) #:g33710 #:g33711 #:g33712 (setf slot-value) #:g33713 #:g33714 #:g33715 (setf slot-value) #:g33716 #:g33717 #:g33718 (setf slot-value) #:g33719 #:g33720 #:g33721 (setf slot-value) #:g33722 #:g33723 #:g33724 (setf slot-value) #:g33725 #:g33726 cl-protobufs.meshtastic::%wake-on-tap-or-motion #:g33727 (setf slot-value) #:g33728 #:g33729 #:g33730 (setf slot-value) #:g33731 #:g33732 "wakeOnTapOrMotion" #:g33733 (setf slot-value) #:g33734 #:g33735 #:g33736 (setf slot-value) #:g33737 #:g33738 #:g33739 (setf slot-value) #:g33740 #:g33741 #:g33742 (setf slot-value) #:g33743 #:g33744 #:g33745 (setf slot-value) #:g33746 #:g33747 #:g33748 (setf slot-value) cl-protobufs.meshtastic::%%%%config.lo-ra-config.region-code (deftype cl-protobufs.meshtastic::%%%%config.lo-ra-config.region-code nil (quote #711=(or (member . #712=(:unset :us :eu-433 :eu-868 :cn :jp :anz :kr :tw :ru :in :nz-865 :th :lora-24 :ua-433 :ua-868)) #4#))) #711# cl-protobufs.meshtastic::config.lo-ra-config.region-code (deftype cl-protobufs.meshtastic::config.lo-ra-config.region-code nil (quote #713=(member . #712#))) #713# cl-protobufs.meshtastic::config.lo-ra-config.region-code-keyword-to-int (defun cl-protobufs.meshtastic::config.lo-ra-config.region-code-keyword-to-int) (#6# . 718) :us :eu-433 :eu-868 :cn :jp :anz :kr :tw :ru :in :nz-865 :th :lora-24 :ua-433 :ua-868 #Y(cl-protobufs.meshtastic::config.lo-ra-config.region-code-keyword-to-int nil nil (24 45 28 26 10 0 42 1608 5 8 0 38 124 42 8335 5 8 1 38 117 42 8336 5 8 2 38 110 42 8337 5 8 3 38 103 42 8338 5 8 4 38 96 42 8339 5 8 5 38 89 42 8340 5 8 6 38 82 42 8341 5 8 7 38 75 42 8342 5 8 8 38 68 42 8343 5 8 9 38 61 42 8344 5 8 10 38 54 42 8345 5 8 11 38 47 42 8346 5 8 12 38 40 42 8347 5 8 13 38 33 42 8348 5 8 14 38 26 42 8349 5 8 15 38 19 10 0 16 36 12 14 37 19 2 38 12 14 39 14 40 19 3 41 45 42 10 0 73 43 1 29) #1# #6# 718) cl-protobufs.meshtastic::config.lo-ra-config.region-code-int-to-keyword (defun cl-protobufs.meshtastic::config.lo-ra-config.region-code-int-to-keyword) (#6# . 718) 7 9 10 11 12 13 14 15 #Y(cl-protobufs.meshtastic::config.lo-ra-config.region-code-int-to-keyword nil nil (24 45 49 26 10 0 42 50 5 11 1608 38 107 42 51 5 11 8335 38 100 42 52 5 11 8336 38 93 42 53 5 11 8337 38 86 42 54 5 11 8338 38 79 42 55 5 11 8339 38 72 42 56 5 11 8340 38 65 42 8354 5 11 8341 38 58 42 1623 5 11 8342 38 51 42 8355 5 11 8343 38 44 42 8356 5 11 8344 38 37 42 8357 5 11 8345 38 30 42 8358 5 11 8346 38 23 42 8359 5 11 8347 38 16 42 8360 5 11 8348 38 9 42 8361 5 11 8349 38 2 75 45 57 10 0 73 43 1 29) #1# #6# 718) #:g33753 #:g33754 #:g33755 #:g33756 #:g33757 #:g33758 (defmethod cl-protobufs::enum-keyword-to-int (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.lo-ra-config.region-code))) keyword) (#6# . 718) ((eql cl-protobufs.meshtastic::config.lo-ra-config.region-code) t) (cl-protobufs.implementation::e keyword) #Y(cl-protobufs::enum-keyword-to-int nil nil (24 45 72 24 45 73 26 13 0 19 1 8332 29) #1# #6# 718) (defmethod cl-protobufs::enum-int-to-keyword (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.lo-ra-config.region-code))) cl-protobufs.implementation::numeral) (#6# . 718) ((eql cl-protobufs.meshtastic::config.lo-ra-config.region-code) t) (cl-protobufs.implementation::e cl-protobufs.implementation::numeral) #Y(cl-protobufs::enum-int-to-keyword nil nil (24 45 72 24 45 49 26 13 0 19 1 8351 29) #1# #6# 718) cl-protobufs.meshtastic::+config.lo-ra-config.unset+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.unset+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.us+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.us+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.eu-433+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.eu-433+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.eu-868+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.eu-868+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.cn+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.cn+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.jp+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.jp+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.anz+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.anz+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.kr+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.kr+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.tw+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.tw+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.ru+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.ru+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.in+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.in+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.nz-865+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.nz-865+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.th+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.th+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.lora-24+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.lora-24+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.ua-433+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.ua-433+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.ua-868+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.ua-868+) (#6# . 718) (cl-protobufs.meshtastic::+config.lo-ra-config.unset+ cl-protobufs.meshtastic::+config.lo-ra-config.us+ cl-protobufs.meshtastic::+config.lo-ra-config.eu-433+ cl-protobufs.meshtastic::+config.lo-ra-config.eu-868+ cl-protobufs.meshtastic::+config.lo-ra-config.cn+ cl-protobufs.meshtastic::+config.lo-ra-config.jp+ cl-protobufs.meshtastic::+config.lo-ra-config.anz+ cl-protobufs.meshtastic::+config.lo-ra-config.kr+ cl-protobufs.meshtastic::+config.lo-ra-config.tw+ cl-protobufs.meshtastic::+config.lo-ra-config.ru+ cl-protobufs.meshtastic::+config.lo-ra-config.in+ cl-protobufs.meshtastic::+config.lo-ra-config.nz-865+ cl-protobufs.meshtastic::+config.lo-ra-config.th+ cl-protobufs.meshtastic::+config.lo-ra-config.lora-24+ cl-protobufs.meshtastic::+config.lo-ra-config.ua-433+ cl-protobufs.meshtastic::+config.lo-ra-config.ua-868+) (defmethod cl-protobufs.implementation::enum-default-value (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.lo-ra-config.region-code)))) (#6# . 718) ((eql cl-protobufs.meshtastic::config.lo-ra-config.region-code)) (cl-protobufs.implementation::e) #Y(cl-protobufs.implementation::enum-default-value nil nil (24 45 72 26 11 1608 73 29) #1# #6# 718) 0 "RegionCode" 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 (cl-protobufs.meshtastic::%%%%config.lo-ra-config.region-code) cl-protobufs.meshtastic::%%%%config.lo-ra-config.modem-preset (deftype cl-protobufs.meshtastic::%%%%config.lo-ra-config.modem-preset nil (quote #714=(or (member . #715=(:long-fast :long-slow :very-long-slow :medium-slow :medium-fast :short-slow :short-fast :long-moderate)) #4#))) #714# cl-protobufs.meshtastic::config.lo-ra-config.modem-preset (deftype cl-protobufs.meshtastic::config.lo-ra-config.modem-preset nil (quote #716=(member . #715#))) #716# cl-protobufs.meshtastic::config.lo-ra-config.modem-preset-keyword-to-int (defun cl-protobufs.meshtastic::config.lo-ra-config.modem-preset-keyword-to-int) (#6# . 718) :long-fast :long-slow :very-long-slow :medium-slow :medium-fast :short-slow :short-fast :long-moderate #Y(cl-protobufs.meshtastic::config.lo-ra-config.modem-preset-keyword-to-int nil nil (24 45 28 26 10 0 42 8477 5 8 0 38 68 42 8478 5 8 1 38 61 42 8479 5 8 2 38 54 42 8480 5 8 3 38 47 42 8481 5 8 4 38 40 42 8482 5 8 5 38 33 42 8483 5 8 6 38 26 42 8484 5 8 7 38 19 10 0 16 36 12 14 37 19 2 38 12 14 39 14 40 19 3 41 45 42 10 0 73 43 1 29) #1# #6# 718) cl-protobufs.meshtastic::config.lo-ra-config.modem-preset-int-to-keyword (defun cl-protobufs.meshtastic::config.lo-ra-config.modem-preset-int-to-keyword) (#6# . 718) #Y(cl-protobufs.meshtastic::config.lo-ra-config.modem-preset-int-to-keyword nil nil (24 45 49 26 10 0 42 50 5 11 8477 38 51 42 51 5 11 8478 38 44 42 52 5 11 8479 38 37 42 53 5 11 8480 38 30 42 54 5 11 8481 38 23 42 55 5 11 8482 38 16 42 56 5 11 8483 38 9 42 8354 5 11 8484 38 2 75 45 57 10 0 73 43 1 29) #1# #6# 718) #:g33763 #:g33764 #:g33765 #:g33766 #:g33767 #:g33768 (defmethod cl-protobufs::enum-keyword-to-int (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.lo-ra-config.modem-preset))) keyword) (#6# . 718) ((eql cl-protobufs.meshtastic::config.lo-ra-config.modem-preset) t) (cl-protobufs.implementation::e keyword) #Y(cl-protobufs::enum-keyword-to-int nil nil (24 45 72 24 45 73 26 13 0 19 1 8474 29) #1# #6# 718) (defmethod cl-protobufs::enum-int-to-keyword (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.lo-ra-config.modem-preset))) cl-protobufs.implementation::numeral) (#6# . 718) ((eql cl-protobufs.meshtastic::config.lo-ra-config.modem-preset) t) (cl-protobufs.implementation::e cl-protobufs.implementation::numeral) #Y(cl-protobufs::enum-int-to-keyword nil nil (24 45 72 24 45 49 26 13 0 19 1 8486 29) #1# #6# 718) cl-protobufs.meshtastic::+config.lo-ra-config.long-fast+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.long-fast+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.long-slow+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.long-slow+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.very-long-slow+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.very-long-slow+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.medium-slow+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.medium-slow+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.medium-fast+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.medium-fast+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.short-slow+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.short-slow+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.short-fast+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.short-fast+) (#6# . 718) cl-protobufs.meshtastic::+config.lo-ra-config.long-moderate+ (defconstant cl-protobufs.meshtastic::+config.lo-ra-config.long-moderate+) (#6# . 718) (cl-protobufs.meshtastic::+config.lo-ra-config.long-fast+ cl-protobufs.meshtastic::+config.lo-ra-config.long-slow+ cl-protobufs.meshtastic::+config.lo-ra-config.very-long-slow+ cl-protobufs.meshtastic::+config.lo-ra-config.medium-slow+ cl-protobufs.meshtastic::+config.lo-ra-config.medium-fast+ cl-protobufs.meshtastic::+config.lo-ra-config.short-slow+ cl-protobufs.meshtastic::+config.lo-ra-config.short-fast+ cl-protobufs.meshtastic::+config.lo-ra-config.long-moderate+) (defmethod cl-protobufs.implementation::enum-default-value (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.lo-ra-config.modem-preset)))) (#6# . 718) ((eql cl-protobufs.meshtastic::config.lo-ra-config.modem-preset)) (cl-protobufs.implementation::e) #Y(cl-protobufs.implementation::enum-default-value nil nil (24 45 72 26 11 8477 73 29) #1# #6# 718) 0 "ModemPreset" 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 (cl-protobufs.meshtastic::%%%%config.lo-ra-config.modem-preset) ((inline cl-protobufs.meshtastic::%make-config.lo-ra-config)) cl-protobufs.meshtastic::config.lo-ra-config "CONFIG.LO-RA-CONFIG-" ((cl-protobufs.meshtastic::%modem-preset :long-fast :type keyword) (cl-protobufs.meshtastic::%bandwidth 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%spread-factor 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%coding-rate 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%frequency-offset #275# :type float) (cl-protobufs.meshtastic::%region :unset :type keyword) (cl-protobufs.meshtastic::%hop-limit 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%tx-power 0 :type cl-protobufs::int32) (cl-protobufs.meshtastic::%channel-num 0 :type cl-protobufs::uint32) (cl-protobufs.meshtastic::%override-frequency #275# :type float) (cl-protobufs.meshtastic::%ignore-incoming nil :type #717=(cl-protobufs::list-of cl-protobufs::uint32)) (cl-protobufs.implementation::%%bytes nil :type #10#) (cl-protobufs.implementation::%%bool-values #718=(make-array 4 :element-type #12# :initial-contents #719=#*0000) :type #720=(bit-vector 4)) (cl-protobufs.implementation::%%is-set #721=(make-array 0 . #16#) :type #722=(bit-vector 0))) (#18# (cl-protobufs.meshtastic::%modem-preset :long-fast keyword nil 1 nil) (cl-protobufs.meshtastic::%bandwidth 0 cl-protobufs::uint32 nil 2 nil) (cl-protobufs.meshtastic::%spread-factor 0 cl-protobufs::uint32 nil 3 nil) (cl-protobufs.meshtastic::%coding-rate 0 cl-protobufs::uint32 nil 4 nil) (cl-protobufs.meshtastic::%frequency-offset #275# float nil 5 nil) (cl-protobufs.meshtastic::%region :unset keyword nil 6 nil) (cl-protobufs.meshtastic::%hop-limit 0 cl-protobufs::uint32 nil 7 nil) (cl-protobufs.meshtastic::%tx-power 0 cl-protobufs::int32 nil 8 nil) (cl-protobufs.meshtastic::%channel-num 0 cl-protobufs::uint32 nil 9 nil) (cl-protobufs.meshtastic::%override-frequency #275# float nil 10 nil) (cl-protobufs.meshtastic::%ignore-incoming nil #717# nil 11 nil) (cl-protobufs.implementation::%%bytes nil #10# nil 12 nil) (cl-protobufs.implementation::%%bool-values #718# #720# nil 13 nil) (cl-protobufs.implementation::%%is-set #721# #722# nil 14 nil)) cl-protobufs.meshtastic::copy-config.lo-ra-config (cl-protobufs.meshtastic::%make-config.lo-ra-config) #723=(cl-protobufs.meshtastic::config.lo-ra-config (:constructor cl-protobufs.meshtastic::%make-config.lo-ra-config) . #20#) (defstruct #723#) (#6# . 718) cl-protobufs.meshtastic::%make-config.lo-ra-config (defun cl-protobufs.meshtastic::%make-config.lo-ra-config) (#6# . 718) #724=(&key #725=#:%%skipped-bytes (#726=#:%modem-preset :long-fast) (#727=#:%bandwidth 0) (#728=#:%spread-factor 0) (#729=#:%coding-rate 0) (#730=#:%frequency-offset #275#) (#731=#:%region :unset) (#732=#:%hop-limit 0) (#733=#:%tx-power 0) (#734=#:%channel-num 0) (#735=#:%override-frequency #275#) #736=#:%ignore-incoming #737=#:%%bytes (#738=#:%%bool-values (make-array 4 :element-type (quote bit) :initial-contents #719#)) (#739=#:%%is-set (make-array 0 :element-type (quote bit) :initial-element 0))) (nil :%%is-set :%%bool-values :%%bytes :%ignore-incoming :%override-frequency :%channel-num :%tx-power :%hop-limit :%region :%frequency-offset :%coding-rate :%spread-factor :%bandwidth :%modem-preset :%%skipped-bytes) #725# #726# #727# #728# #729# #730# #731# #732# #733# #734# #735# #736# #737# #719# #738# #739# #740=(bit-vector 0) #741=(bit-vector 0) #742=(bit-vector 4) #743=(bit-vector 4) #744=(or null (simple-array (unsigned-byte 8))) #745=(or null (simple-array (unsigned-byte 8))) #746=(or cons null) #747=(cl-protobufs::list-of cl-protobufs::uint32) cl-protobufs.meshtastic::%ignore-incoming cl-protobufs.meshtastic::%override-frequency cl-protobufs.meshtastic::%channel-num cl-protobufs::int32 cl-protobufs.meshtastic::%tx-power cl-protobufs.meshtastic::%hop-limit cl-protobufs.meshtastic::%region cl-protobufs.meshtastic::%frequency-offset cl-protobufs.meshtastic::%coding-rate cl-protobufs.meshtastic::%spread-factor cl-protobufs.meshtastic::%bandwidth cl-protobufs.meshtastic::%modem-preset #748=(or null cl-protobufs::byte-vector) #749=(or null cl-protobufs::byte-vector) 0 #Y(cl-protobufs.meshtastic::%make-config.lo-ra-config nil nil (28 8569 22 40 2 77 46 8570 22 40 3 14 8477 46 8571 22 40 3 9 0 46 8572 22 40 3 9 0 46 8573 22 40 3 9 0 46 8574 22 40 3 15 3341 46 8575 22 40 3 14 1608 46 8576 22 40 3 9 0 46 8577 22 40 3 9 0 46 8578 22 40 3 9 0 46 8579 22 40 3 15 3341 46 8580 22 40 2 77 46 8581 22 40 2 77 46 8582 22 40 15 9 4 14 222 15 223 14 224 15 8583 19 5 226 12 46 8584 22 40 15 9 0 14 222 15 223 14 228 9 0 19 5 226 12 46 8585 13 0 15 8586 19 2 231 76 39 12 13 0 15 8587 15 8556 15 233 19 4 234 13 1 15 8588 19 2 231 76 39 12 13 1 15 8589 15 8556 15 237 19 4 234 13 2 15 8590 19 2 231 76 39 12 13 2 15 8591 15 8556 15 240 19 4 234 13 3 15 8592 19 2 231 76 39 12 13 3 15 8593 15 8556 15 8594 19 4 234 13 4 15 3365 19 2 231 76 39 12 13 4 15 3365 15 8556 15 8595 19 4 234 13 5 15 241 19 2 231 76 39 12 13 5 15 241 15 8556 15 8596 19 4 234 13 6 15 8597 19 2 231 76 39 12 13 6 15 8597 15 8556 15 8598 19 4 234 13 7 15 241 19 2 231 76 39 12 13 7 15 241 15 8556 15 8599 19 4 234 13 8 15 73 19 2 231 76 39 12 13 8 15 73 15 8556 15 8600 19 4 234 13 9 15 3365 19 2 231 76 39 12 13 9 15 3365 15 8556 15 8601 19 4 234 13 10 15 241 19 2 231 76 39 12 13 10 15 241 15 8556 15 8602 19 4 234 13 11 15 241 19 2 231 76 39 12 13 11 15 241 15 8556 15 8603 19 4 234 13 12 15 241 19 2 231 76 39 12 13 12 15 241 15 8556 15 8604 19 4 234 13 13 15 73 19 2 231 76 39 12 13 13 15 73 15 8556 15 8605 19 4 234 13 14 15 8606 19 2 231 76 39 12 13 14 15 8607 15 8556 15 249 19 4 234 15 8608 13 14 13 13 13 12 13 11 13 10 13 9 13 8 13 7 13 6 13 5 13 4 13 3 13 2 13 1 13 0 19 16 251 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::%make-config.lo-ra-config #724# #39# (unless (typep #739# (quote #740#)) (si::structure-type-error #739# (quote #741#) (quote cl-protobufs.meshtastic::config.lo-ra-config) (quote cl-protobufs.implementation::%%is-set))) (unless (typep #738# (quote #742#)) (si::structure-type-error #738# (quote #743#) (quote cl-protobufs.meshtastic::config.lo-ra-config) (quote cl-protobufs.implementation::%%bool-values))) (unless (typep #737# (quote #744#)) (si::structure-type-error #737# (quote #745#) (quote cl-protobufs.meshtastic::config.lo-ra-config) (quote cl-protobufs.implementation::%%bytes))) (unless (typep #736# (quote #746#)) (si::structure-type-error #736# (quote #747#) (quote cl-protobufs.meshtastic::config.lo-ra-config) (quote cl-protobufs.meshtastic::%ignore-incoming))) (unless (typep #735# (quote float)) (si::structure-type-error #735# (quote float) (quote cl-protobufs.meshtastic::config.lo-ra-config) (quote cl-protobufs.meshtastic::%override-frequency))) (unless (typep #734# (quote cl-protobufs::uint32)) (si::structure-type-error #734# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.lo-ra-config) (quote cl-protobufs.meshtastic::%channel-num))) (unless (typep #733# (quote cl-protobufs::int32)) (si::structure-type-error #733# (quote cl-protobufs::int32) (quote cl-protobufs.meshtastic::config.lo-ra-config) (quote cl-protobufs.meshtastic::%tx-power))) (unless (typep #732# (quote cl-protobufs::uint32)) (si::structure-type-error #732# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.lo-ra-config) (quote cl-protobufs.meshtastic::%hop-limit))) (unless (typep #731# (quote keyword)) (si::structure-type-error #731# (quote keyword) (quote cl-protobufs.meshtastic::config.lo-ra-config) (quote cl-protobufs.meshtastic::%region))) (unless (typep #730# (quote float)) (si::structure-type-error #730# (quote float) (quote cl-protobufs.meshtastic::config.lo-ra-config) (quote cl-protobufs.meshtastic::%frequency-offset))) (unless (typep #729# (quote cl-protobufs::uint32)) (si::structure-type-error #729# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.lo-ra-config) (quote cl-protobufs.meshtastic::%coding-rate))) (unless (typep #728# (quote cl-protobufs::uint32)) (si::structure-type-error #728# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.lo-ra-config) (quote cl-protobufs.meshtastic::%spread-factor))) (unless (typep #727# (quote cl-protobufs::uint32)) (si::structure-type-error #727# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.lo-ra-config) (quote cl-protobufs.meshtastic::%bandwidth))) (unless (typep #726# (quote keyword)) (si::structure-type-error #726# (quote keyword) (quote cl-protobufs.meshtastic::config.lo-ra-config) (quote cl-protobufs.meshtastic::%modem-preset))) (unless (typep #725# (quote #748#)) (si::structure-type-error #725# (quote #749#) (quote cl-protobufs.meshtastic::config.lo-ra-config) (quote cl-protobufs.implementation::%%skipped-bytes))) (si::make-structure (load-time-value (find-class (quote cl-protobufs.meshtastic::config.lo-ra-config))) #725# #726# #727# #728# #729# #730# #731# #732# #733# #734# #735# #736# #737# #738# #739#))) cl-protobufs.meshtastic::config.lo-ra-config-%%is-set (cl-protobufs.meshtastic::config.lo-ra-config-%%is-set) #:g33784 #Y(nil nil nil (24 45 8613 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 8556 6 2 12 9 14 13 0 10 1 6 6 12 15 274 13 2 15 273 1 8556 6 2 12 8 14 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.lo-ra-config-%%bool-values (cl-protobufs.meshtastic::config.lo-ra-config-%%bool-values) #:g33785 #Y(nil nil nil (24 45 8617 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 8556 6 2 12 9 13 13 0 10 1 6 6 12 15 274 13 2 15 273 1 8556 6 2 12 8 13 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.lo-ra-config-%%bytes (cl-protobufs.meshtastic::config.lo-ra-config-%%bytes) #:g33786 #Y(nil nil nil (24 45 8621 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 8556 6 2 12 9 12 13 0 10 1 6 6 12 15 274 13 2 15 273 1 8556 6 2 12 8 12 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.lo-ra-config-%ignore-incoming (cl-protobufs.meshtastic::config.lo-ra-config-%ignore-incoming) #:g33787 #Y(nil nil nil (24 45 8625 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 8556 6 2 12 9 11 13 0 10 1 6 6 12 15 274 13 2 15 273 1 8556 6 2 12 8 11 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.lo-ra-config-%override-frequency (cl-protobufs.meshtastic::config.lo-ra-config-%override-frequency) #:g33788 #Y(nil nil nil (24 45 8629 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 8556 6 2 12 9 10 13 0 10 1 6 6 12 15 274 13 2 15 273 1 8556 6 2 12 8 10 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.lo-ra-config-%channel-num (cl-protobufs.meshtastic::config.lo-ra-config-%channel-num) #:g33789 #Y(nil nil nil (24 45 8633 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 8556 6 2 12 9 9 13 0 10 1 6 6 12 15 274 13 2 15 273 1 8556 6 2 12 8 9 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.lo-ra-config-%tx-power (cl-protobufs.meshtastic::config.lo-ra-config-%tx-power) #:g33790 #Y(nil nil nil (24 45 8637 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 8556 6 2 12 9 8 13 0 10 1 6 6 12 15 274 13 2 15 273 1 8556 6 2 12 8 8 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.lo-ra-config-%hop-limit (cl-protobufs.meshtastic::config.lo-ra-config-%hop-limit) #:g33791 #Y(nil nil nil (24 45 8641 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 8556 6 2 12 9 7 13 0 10 1 6 6 12 15 274 13 2 15 273 1 8556 6 2 12 8 7 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.lo-ra-config-%region (cl-protobufs.meshtastic::config.lo-ra-config-%region) #:g33792 #Y(nil nil nil (24 45 8645 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 8556 6 2 12 9 6 13 0 10 1 6 6 12 15 274 13 2 15 273 1 8556 6 2 12 8 6 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.lo-ra-config-%frequency-offset (cl-protobufs.meshtastic::config.lo-ra-config-%frequency-offset) #:g33793 #Y(nil nil nil (24 45 8649 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 8556 6 2 12 9 5 13 0 10 1 6 6 12 15 274 13 2 15 273 1 8556 6 2 12 8 5 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.lo-ra-config-%coding-rate (cl-protobufs.meshtastic::config.lo-ra-config-%coding-rate) #:g33794 #Y(nil nil nil (24 45 8653 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 8556 6 2 12 9 4 13 0 10 1 6 6 12 15 274 13 2 15 273 1 8556 6 2 12 8 4 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.lo-ra-config-%spread-factor (cl-protobufs.meshtastic::config.lo-ra-config-%spread-factor) #:g33795 #Y(nil nil nil (24 45 8657 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 8556 6 2 12 9 3 13 0 10 1 6 6 12 15 274 13 2 15 273 1 8556 6 2 12 8 3 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.lo-ra-config-%bandwidth (cl-protobufs.meshtastic::config.lo-ra-config-%bandwidth) #:g33796 #Y(nil nil nil (24 45 8661 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 8556 6 2 12 9 2 13 0 10 1 6 6 12 15 274 13 2 15 273 1 8556 6 2 12 8 2 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.lo-ra-config-%modem-preset (cl-protobufs.meshtastic::config.lo-ra-config-%modem-preset) #:g33797 #Y(nil nil nil (24 45 8665 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 8556 6 2 12 9 1 13 0 10 1 6 6 12 15 274 13 2 15 273 1 8556 6 2 12 8 1 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.lo-ra-config-%%skipped-bytes (cl-protobufs.meshtastic::config.lo-ra-config-%%skipped-bytes) #:g33798 #Y(nil nil nil (24 45 8669 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 8556 6 2 12 9 0 13 0 10 1 6 6 12 15 274 13 2 15 273 1 8556 6 2 12 8 0 6 4 12 72 6 43 2 29) #1# #6# 718) ((inline cl-protobufs.meshtastic::config.lo-ra-config.use-preset)) cl-protobufs.meshtastic::config.lo-ra-config.use-preset (defun cl-protobufs.meshtastic::config.lo-ra-config.use-preset) (#6# . 718) #750=(#751=#:obj29441) #751# #Y(cl-protobufs.meshtastic::config.lo-ra-config.use-preset nil nil (24 45 8676 26 13 0 19 1 8615 12 9 0 19 2 223 16 368 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.use-preset #750# #39# (the boolean (plusp (bit (cl-protobufs.meshtastic::config.lo-ra-config-%%bool-values #751#) 0))))) ((inline #752=(setf cl-protobufs.meshtastic::config.lo-ra-config.use-preset))) #752# (defun #752#) (#6# . 718) #753=(#754=#:new-value29443 #755=#:obj29442) #754# #755# #Y(#752# nil nil (24 45 8684 24 45 8685 26 13 0 19 1 8615 12 9 0 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 378 29) #1# #6# 718) (function (ext::lambda-block #752# #753# #39# (declare (type boolean #754#)) nil (setf (bit (cl-protobufs.meshtastic::config.lo-ra-config-%%bool-values #755#) 0) (if #754# . #56#)))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.%%has-use-preset)) cl-protobufs.meshtastic::config.lo-ra-config.%%has-use-preset (defun cl-protobufs.meshtastic::config.lo-ra-config.%%has-use-preset) (#6# . 718) #756=(#755#) #757=#:cur-value29444 #Y(cl-protobufs.meshtastic::config.lo-ra-config.%%has-use-preset nil nil (24 45 8685 26 13 0 19 1 8615 12 9 0 19 2 223 16 368 45 8693 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.%%has-use-preset #756# #39# (let ((#757# (plusp (bit (cl-protobufs.meshtastic::config.lo-ra-config-%%bool-values #755#) 0)))) (not (eq #757# nil))))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.clear-use-preset)) cl-protobufs.meshtastic::config.lo-ra-config.clear-use-preset (defun cl-protobufs.meshtastic::config.lo-ra-config.clear-use-preset) (#6# . 718) #758=(#755#) #Y(cl-protobufs.meshtastic::config.lo-ra-config.clear-use-preset nil nil (24 45 8685 26 13 0 19 1 8615 12 9 0 9 0 19 3 378 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.clear-use-preset #758# #39# nil (setf (bit (cl-protobufs.meshtastic::config.lo-ra-config-%%bool-values #755#) 0) 0))) cl-protobufs.meshtastic::use-preset (defmethod cl-protobufs.meshtastic::use-preset (#755# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (cl-protobufs.meshtastic::config.lo-ra-config) (#755#) #Y(cl-protobufs.meshtastic::use-preset nil nil (24 45 8685 26 13 0 19 1 8672 29) #1# #6# 718) #759=(setf cl-protobufs.meshtastic::use-preset) (defmethod #759# #754# (#755# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.lo-ra-config) (#754# #755#) #:g33813 #:g33814 (setf cl-protobufs.meshtastic::config.lo-ra-config.use-preset) #Y(#759# nil nil (24 45 8684 24 45 8685 26 10 0 45 8714 10 2 45 8715 13 0 13 1 33 8716 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.lo-ra-config.clear-use-preset) (cl-protobufs.meshtastic::config.lo-ra-config.use-preset) ((inline cl-protobufs.meshtastic::config.lo-ra-config.modem-preset)) (defun cl-protobufs.meshtastic::config.lo-ra-config.modem-preset) (#6# . 718) #760=(#761=#:obj29445) #761# #Y(cl-protobufs.meshtastic::config.lo-ra-config.modem-preset nil nil (24 45 8724 26 13 0 19 1 8663 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.modem-preset #760# #39# (the cl-protobufs.meshtastic::%%%%config.lo-ra-config.modem-preset (cl-protobufs.meshtastic::config.lo-ra-config-%modem-preset #761#)))) ((inline #762=(setf cl-protobufs.meshtastic::config.lo-ra-config.modem-preset))) #762# (defun #762#) (#6# . 718) #763=(#764=#:new-value29447 #765=#:obj29446) #764# #765# #:g33817 #:g33818 #Y(#762# nil nil (24 45 8732 24 45 8733 26 10 0 45 8734 10 2 45 8735 13 1 15 8556 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #762# #763# #39# (declare (type cl-protobufs.meshtastic::%%%%config.lo-ra-config.modem-preset #764#)) nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%modem-preset #765#) #764#))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.%%has-modem-preset)) cl-protobufs.meshtastic::config.lo-ra-config.%%has-modem-preset (defun cl-protobufs.meshtastic::config.lo-ra-config.%%has-modem-preset) (#6# . 718) #766=(#765#) #767=#:cur-value29448 #Y(cl-protobufs.meshtastic::config.lo-ra-config.%%has-modem-preset nil nil (24 45 8733 26 13 0 19 1 8663 45 8743 13 0 11 8477 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.%%has-modem-preset #766# #39# (let ((#767# (cl-protobufs.meshtastic::config.lo-ra-config-%modem-preset #765#))) (not (eq #767# :long-fast))))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.clear-modem-preset)) cl-protobufs.meshtastic::config.lo-ra-config.clear-modem-preset (defun cl-protobufs.meshtastic::config.lo-ra-config.clear-modem-preset) (#6# . 718) #768=(#765#) #:g33821 #:g33822 #Y(cl-protobufs.meshtastic::config.lo-ra-config.clear-modem-preset nil nil (24 45 8733 26 10 0 45 8751 11 8477 45 8752 13 1 15 8556 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.clear-modem-preset #768# #39# nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%modem-preset #765#) :long-fast))) cl-protobufs.meshtastic::modem-preset (defmethod cl-protobufs.meshtastic::modem-preset (#765# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (cl-protobufs.meshtastic::config.lo-ra-config) (#765#) #Y(cl-protobufs.meshtastic::modem-preset nil nil (24 45 8733 26 13 0 19 1 8471 29) #1# #6# 718) #769=(setf cl-protobufs.meshtastic::modem-preset) (defmethod #769# #764# (#765# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.lo-ra-config) (#764# #765#) #:g33829 #:g33830 (setf cl-protobufs.meshtastic::config.lo-ra-config.modem-preset) #Y(#769# nil nil (24 45 8732 24 45 8733 26 10 0 45 8766 10 2 45 8767 13 0 13 1 33 8768 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.lo-ra-config.clear-modem-preset) (cl-protobufs.meshtastic::config.lo-ra-config.modem-preset) ((inline cl-protobufs.meshtastic::config.lo-ra-config.bandwidth)) cl-protobufs.meshtastic::config.lo-ra-config.bandwidth (defun cl-protobufs.meshtastic::config.lo-ra-config.bandwidth) (#6# . 718) #770=(#771=#:obj29449) #771# #Y(cl-protobufs.meshtastic::config.lo-ra-config.bandwidth nil nil (24 45 8777 26 13 0 19 1 8659 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.bandwidth #770# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.lo-ra-config-%bandwidth #771#)))) ((inline #772=(setf cl-protobufs.meshtastic::config.lo-ra-config.bandwidth))) #772# (defun #772#) (#6# . 718) #773=(#774=#:new-value29451 #775=#:obj29450) #774# #775# #:g33833 #:g33834 #Y(#772# nil nil (24 45 8785 24 45 8786 26 10 0 45 8787 10 2 45 8788 13 1 15 8556 9 2 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #772# #773# #39# (declare (type cl-protobufs::uint32 #774#)) nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%bandwidth #775#) #774#))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.%%has-bandwidth)) cl-protobufs.meshtastic::config.lo-ra-config.%%has-bandwidth (defun cl-protobufs.meshtastic::config.lo-ra-config.%%has-bandwidth) (#6# . 718) #776=(#775#) #777=#:cur-value29452 #Y(cl-protobufs.meshtastic::config.lo-ra-config.%%has-bandwidth nil nil (24 45 8786 26 13 0 19 1 8659 45 8796 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.%%has-bandwidth #776# #39# (let ((#777# (cl-protobufs.meshtastic::config.lo-ra-config-%bandwidth #775#))) (not (eq #777# 0))))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.clear-bandwidth)) cl-protobufs.meshtastic::config.lo-ra-config.clear-bandwidth (defun cl-protobufs.meshtastic::config.lo-ra-config.clear-bandwidth) (#6# . 718) #778=(#775#) #:g33837 #:g33838 #Y(cl-protobufs.meshtastic::config.lo-ra-config.clear-bandwidth nil nil (24 45 8786 26 10 0 45 8804 8 0 45 8805 13 1 15 8556 9 2 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.clear-bandwidth #778# #39# nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%bandwidth #775#) 0))) cl-protobufs.meshtastic::bandwidth (defmethod cl-protobufs.meshtastic::bandwidth (#775# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (cl-protobufs.meshtastic::config.lo-ra-config) (#775#) #Y(cl-protobufs.meshtastic::bandwidth nil nil (24 45 8786 26 13 0 19 1 8773 29) #1# #6# 718) #779=(setf cl-protobufs.meshtastic::bandwidth) (defmethod #779# #774# (#775# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.lo-ra-config) (#774# #775#) #:g33845 #:g33846 (setf cl-protobufs.meshtastic::config.lo-ra-config.bandwidth) #Y(#779# nil nil (24 45 8785 24 45 8786 26 10 0 45 8819 10 2 45 8820 13 0 13 1 33 8821 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.lo-ra-config.clear-bandwidth) (cl-protobufs.meshtastic::config.lo-ra-config.bandwidth) ((inline cl-protobufs.meshtastic::config.lo-ra-config.spread-factor)) cl-protobufs.meshtastic::config.lo-ra-config.spread-factor (defun cl-protobufs.meshtastic::config.lo-ra-config.spread-factor) (#6# . 718) #780=(#781=#:obj29453) #781# #Y(cl-protobufs.meshtastic::config.lo-ra-config.spread-factor nil nil (24 45 8830 26 13 0 19 1 8655 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.spread-factor #780# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.lo-ra-config-%spread-factor #781#)))) ((inline #782=(setf cl-protobufs.meshtastic::config.lo-ra-config.spread-factor))) #782# (defun #782#) (#6# . 718) #783=(#784=#:new-value29455 #785=#:obj29454) #784# #785# #:g33849 #:g33850 #Y(#782# nil nil (24 45 8838 24 45 8839 26 10 0 45 8840 10 2 45 8841 13 1 15 8556 9 3 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #782# #783# #39# (declare (type cl-protobufs::uint32 #784#)) nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%spread-factor #785#) #784#))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.%%has-spread-factor)) cl-protobufs.meshtastic::config.lo-ra-config.%%has-spread-factor (defun cl-protobufs.meshtastic::config.lo-ra-config.%%has-spread-factor) (#6# . 718) #786=(#785#) #787=#:cur-value29456 #Y(cl-protobufs.meshtastic::config.lo-ra-config.%%has-spread-factor nil nil (24 45 8839 26 13 0 19 1 8655 45 8849 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.%%has-spread-factor #786# #39# (let ((#787# (cl-protobufs.meshtastic::config.lo-ra-config-%spread-factor #785#))) (not (eq #787# 0))))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.clear-spread-factor)) cl-protobufs.meshtastic::config.lo-ra-config.clear-spread-factor (defun cl-protobufs.meshtastic::config.lo-ra-config.clear-spread-factor) (#6# . 718) #788=(#785#) #:g33853 #:g33854 #Y(cl-protobufs.meshtastic::config.lo-ra-config.clear-spread-factor nil nil (24 45 8839 26 10 0 45 8857 8 0 45 8858 13 1 15 8556 9 3 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.clear-spread-factor #788# #39# nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%spread-factor #785#) 0))) cl-protobufs.meshtastic::spread-factor (defmethod cl-protobufs.meshtastic::spread-factor (#785# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (cl-protobufs.meshtastic::config.lo-ra-config) (#785#) #Y(cl-protobufs.meshtastic::spread-factor nil nil (24 45 8839 26 13 0 19 1 8826 29) #1# #6# 718) #789=(setf cl-protobufs.meshtastic::spread-factor) (defmethod #789# #784# (#785# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.lo-ra-config) (#784# #785#) #:g33861 #:g33862 (setf cl-protobufs.meshtastic::config.lo-ra-config.spread-factor) #Y(#789# nil nil (24 45 8838 24 45 8839 26 10 0 45 8872 10 2 45 8873 13 0 13 1 33 8874 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.lo-ra-config.clear-spread-factor) (cl-protobufs.meshtastic::config.lo-ra-config.spread-factor) ((inline cl-protobufs.meshtastic::config.lo-ra-config.coding-rate)) cl-protobufs.meshtastic::config.lo-ra-config.coding-rate (defun cl-protobufs.meshtastic::config.lo-ra-config.coding-rate) (#6# . 718) #790=(#791=#:obj29457) #791# #Y(cl-protobufs.meshtastic::config.lo-ra-config.coding-rate nil nil (24 45 8883 26 13 0 19 1 8651 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.coding-rate #790# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.lo-ra-config-%coding-rate #791#)))) ((inline #792=(setf cl-protobufs.meshtastic::config.lo-ra-config.coding-rate))) #792# (defun #792#) (#6# . 718) #793=(#794=#:new-value29459 #795=#:obj29458) #794# #795# #:g33865 #:g33866 #Y(#792# nil nil (24 45 8891 24 45 8892 26 10 0 45 8893 10 2 45 8894 13 1 15 8556 9 4 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #792# #793# #39# (declare (type cl-protobufs::uint32 #794#)) nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%coding-rate #795#) #794#))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.%%has-coding-rate)) cl-protobufs.meshtastic::config.lo-ra-config.%%has-coding-rate (defun cl-protobufs.meshtastic::config.lo-ra-config.%%has-coding-rate) (#6# . 718) #796=(#795#) #797=#:cur-value29460 #Y(cl-protobufs.meshtastic::config.lo-ra-config.%%has-coding-rate nil nil (24 45 8892 26 13 0 19 1 8651 45 8902 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.%%has-coding-rate #796# #39# (let ((#797# (cl-protobufs.meshtastic::config.lo-ra-config-%coding-rate #795#))) (not (eq #797# 0))))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.clear-coding-rate)) cl-protobufs.meshtastic::config.lo-ra-config.clear-coding-rate (defun cl-protobufs.meshtastic::config.lo-ra-config.clear-coding-rate) (#6# . 718) #798=(#795#) #:g33869 #:g33870 #Y(cl-protobufs.meshtastic::config.lo-ra-config.clear-coding-rate nil nil (24 45 8892 26 10 0 45 8910 8 0 45 8911 13 1 15 8556 9 4 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.clear-coding-rate #798# #39# nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%coding-rate #795#) 0))) cl-protobufs.meshtastic::coding-rate (defmethod cl-protobufs.meshtastic::coding-rate (#795# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (cl-protobufs.meshtastic::config.lo-ra-config) (#795#) #Y(cl-protobufs.meshtastic::coding-rate nil nil (24 45 8892 26 13 0 19 1 8879 29) #1# #6# 718) #799=(setf cl-protobufs.meshtastic::coding-rate) (defmethod #799# #794# (#795# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.lo-ra-config) (#794# #795#) #:g33877 #:g33878 (setf cl-protobufs.meshtastic::config.lo-ra-config.coding-rate) #Y(#799# nil nil (24 45 8891 24 45 8892 26 10 0 45 8925 10 2 45 8926 13 0 13 1 33 8927 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.lo-ra-config.clear-coding-rate) (cl-protobufs.meshtastic::config.lo-ra-config.coding-rate) ((inline cl-protobufs.meshtastic::config.lo-ra-config.frequency-offset)) cl-protobufs.meshtastic::config.lo-ra-config.frequency-offset (defun cl-protobufs.meshtastic::config.lo-ra-config.frequency-offset) (#6# . 718) #800=(#801=#:obj29461) #801# #Y(cl-protobufs.meshtastic::config.lo-ra-config.frequency-offset nil nil (24 45 8936 26 13 0 19 1 8647 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.frequency-offset #800# #39# (the float (cl-protobufs.meshtastic::config.lo-ra-config-%frequency-offset #801#)))) ((inline #802=(setf cl-protobufs.meshtastic::config.lo-ra-config.frequency-offset))) #802# (defun #802#) (#6# . 718) #803=(#804=#:new-value29463 #805=#:obj29462) #804# #805# #:g33881 #:g33882 #Y(#802# nil nil (24 45 8944 24 45 8945 26 10 0 45 8946 10 2 45 8947 13 1 15 8556 9 5 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #802# #803# #39# (declare (type float #804#)) nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%frequency-offset #805#) #804#))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.%%has-frequency-offset)) cl-protobufs.meshtastic::config.lo-ra-config.%%has-frequency-offset (defun cl-protobufs.meshtastic::config.lo-ra-config.%%has-frequency-offset) (#6# . 718) #806=(#805#) #807=#:cur-value29464 #Y(cl-protobufs.meshtastic::config.lo-ra-config.%%has-frequency-offset nil nil (24 45 8945 26 13 0 19 1 8647 45 8955 13 0 15 3341 19 2 3548 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.%%has-frequency-offset #806# #39# (let ((#807# (cl-protobufs.meshtastic::config.lo-ra-config-%frequency-offset #805#))) (not (= #807# #275#))))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.clear-frequency-offset)) cl-protobufs.meshtastic::config.lo-ra-config.clear-frequency-offset (defun cl-protobufs.meshtastic::config.lo-ra-config.clear-frequency-offset) (#6# . 718) #808=(#805#) #:g33885 #:g33886 #Y(cl-protobufs.meshtastic::config.lo-ra-config.clear-frequency-offset nil nil (24 45 8945 26 10 0 45 8963 1 3341 45 8964 13 1 15 8556 9 5 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.clear-frequency-offset #808# #39# nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%frequency-offset #805#) #275#))) cl-protobufs.meshtastic::frequency-offset (defmethod cl-protobufs.meshtastic::frequency-offset (#805# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (cl-protobufs.meshtastic::config.lo-ra-config) (#805#) #Y(cl-protobufs.meshtastic::frequency-offset nil nil (24 45 8945 26 13 0 19 1 8932 29) #1# #6# 718) #809=(setf cl-protobufs.meshtastic::frequency-offset) (defmethod #809# #804# (#805# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.lo-ra-config) (#804# #805#) #:g33893 #:g33894 (setf cl-protobufs.meshtastic::config.lo-ra-config.frequency-offset) #Y(#809# nil nil (24 45 8944 24 45 8945 26 10 0 45 8978 10 2 45 8979 13 0 13 1 33 8980 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.lo-ra-config.clear-frequency-offset) (cl-protobufs.meshtastic::config.lo-ra-config.frequency-offset) ((inline cl-protobufs.meshtastic::config.lo-ra-config.region)) cl-protobufs.meshtastic::config.lo-ra-config.region (defun cl-protobufs.meshtastic::config.lo-ra-config.region) (#6# . 718) #810=(#811=#:obj29465) #811# #Y(cl-protobufs.meshtastic::config.lo-ra-config.region nil nil (24 45 8989 26 13 0 19 1 8643 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.region #810# #39# (the cl-protobufs.meshtastic::%%%%config.lo-ra-config.region-code (cl-protobufs.meshtastic::config.lo-ra-config-%region #811#)))) ((inline #812=(setf cl-protobufs.meshtastic::config.lo-ra-config.region))) #812# (defun #812#) (#6# . 718) #813=(#814=#:new-value29467 #815=#:obj29466) #814# #815# #:g33897 #:g33898 #Y(#812# nil nil (24 45 8997 24 45 8998 26 10 0 45 8999 10 2 45 9000 13 1 15 8556 9 6 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #812# #813# #39# (declare (type cl-protobufs.meshtastic::%%%%config.lo-ra-config.region-code #814#)) nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%region #815#) #814#))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.%%has-region)) cl-protobufs.meshtastic::config.lo-ra-config.%%has-region (defun cl-protobufs.meshtastic::config.lo-ra-config.%%has-region) (#6# . 718) #816=(#815#) #817=#:cur-value29468 #Y(cl-protobufs.meshtastic::config.lo-ra-config.%%has-region nil nil (24 45 8998 26 13 0 19 1 8643 45 9008 13 0 11 1608 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.%%has-region #816# #39# (let ((#817# (cl-protobufs.meshtastic::config.lo-ra-config-%region #815#))) (not (eq #817# :unset))))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.clear-region)) cl-protobufs.meshtastic::config.lo-ra-config.clear-region (defun cl-protobufs.meshtastic::config.lo-ra-config.clear-region) (#6# . 718) #818=(#815#) #:g33901 #:g33902 #Y(cl-protobufs.meshtastic::config.lo-ra-config.clear-region nil nil (24 45 8998 26 10 0 45 9016 11 1608 45 9017 13 1 15 8556 9 6 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.clear-region #818# #39# nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%region #815#) :unset))) cl-protobufs.meshtastic::region (defmethod cl-protobufs.meshtastic::region (#815# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (cl-protobufs.meshtastic::config.lo-ra-config) (#815#) #Y(cl-protobufs.meshtastic::region nil nil (24 45 8998 26 13 0 19 1 8985 29) #1# #6# 718) #819=(setf cl-protobufs.meshtastic::region) (defmethod #819# #814# (#815# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.lo-ra-config) (#814# #815#) #:g33909 #:g33910 (setf cl-protobufs.meshtastic::config.lo-ra-config.region) #Y(#819# nil nil (24 45 8997 24 45 8998 26 10 0 45 9031 10 2 45 9032 13 0 13 1 33 9033 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.lo-ra-config.clear-region) (cl-protobufs.meshtastic::config.lo-ra-config.region) ((inline cl-protobufs.meshtastic::config.lo-ra-config.hop-limit)) cl-protobufs.meshtastic::config.lo-ra-config.hop-limit (defun cl-protobufs.meshtastic::config.lo-ra-config.hop-limit) (#6# . 718) #820=(#821=#:obj29469) #821# #Y(cl-protobufs.meshtastic::config.lo-ra-config.hop-limit nil nil (24 45 9042 26 13 0 19 1 8639 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.hop-limit #820# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.lo-ra-config-%hop-limit #821#)))) ((inline #822=(setf cl-protobufs.meshtastic::config.lo-ra-config.hop-limit))) #822# (defun #822#) (#6# . 718) #823=(#824=#:new-value29471 #825=#:obj29470) #824# #825# #:g33913 #:g33914 #Y(#822# nil nil (24 45 9050 24 45 9051 26 10 0 45 9052 10 2 45 9053 13 1 15 8556 9 7 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #822# #823# #39# (declare (type cl-protobufs::uint32 #824#)) nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%hop-limit #825#) #824#))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.%%has-hop-limit)) cl-protobufs.meshtastic::config.lo-ra-config.%%has-hop-limit (defun cl-protobufs.meshtastic::config.lo-ra-config.%%has-hop-limit) (#6# . 718) #826=(#825#) #827=#:cur-value29472 #Y(cl-protobufs.meshtastic::config.lo-ra-config.%%has-hop-limit nil nil (24 45 9051 26 13 0 19 1 8639 45 9061 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.%%has-hop-limit #826# #39# (let ((#827# (cl-protobufs.meshtastic::config.lo-ra-config-%hop-limit #825#))) (not (eq #827# 0))))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.clear-hop-limit)) cl-protobufs.meshtastic::config.lo-ra-config.clear-hop-limit (defun cl-protobufs.meshtastic::config.lo-ra-config.clear-hop-limit) (#6# . 718) #828=(#825#) #:g33917 #:g33918 #Y(cl-protobufs.meshtastic::config.lo-ra-config.clear-hop-limit nil nil (24 45 9051 26 10 0 45 9069 8 0 45 9070 13 1 15 8556 9 7 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.clear-hop-limit #828# #39# nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%hop-limit #825#) 0))) cl-protobufs.meshtastic::hop-limit (defmethod cl-protobufs.meshtastic::hop-limit (#825# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (cl-protobufs.meshtastic::config.lo-ra-config) (#825#) #Y(cl-protobufs.meshtastic::hop-limit nil nil (24 45 9051 26 13 0 19 1 9038 29) #1# #6# 718) #829=(setf cl-protobufs.meshtastic::hop-limit) (defmethod #829# #824# (#825# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.lo-ra-config) (#824# #825#) #:g33925 #:g33926 (setf cl-protobufs.meshtastic::config.lo-ra-config.hop-limit) #Y(#829# nil nil (24 45 9050 24 45 9051 26 10 0 45 9084 10 2 45 9085 13 0 13 1 33 9086 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.lo-ra-config.clear-hop-limit) (cl-protobufs.meshtastic::config.lo-ra-config.hop-limit) ((inline cl-protobufs.meshtastic::config.lo-ra-config.tx-enabled)) cl-protobufs.meshtastic::config.lo-ra-config.tx-enabled (defun cl-protobufs.meshtastic::config.lo-ra-config.tx-enabled) (#6# . 718) #830=(#831=#:obj29473) #831# #Y(cl-protobufs.meshtastic::config.lo-ra-config.tx-enabled nil nil (24 45 9095 26 13 0 19 1 8615 12 9 1 19 2 223 16 368 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.tx-enabled #830# #39# (the boolean (plusp (bit (cl-protobufs.meshtastic::config.lo-ra-config-%%bool-values #831#) 1))))) ((inline #832=(setf cl-protobufs.meshtastic::config.lo-ra-config.tx-enabled))) #832# (defun #832#) (#6# . 718) #833=(#834=#:new-value29475 #835=#:obj29474) #834# #835# #Y(#832# nil nil (24 45 9103 24 45 9104 26 13 0 19 1 8615 12 9 1 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 378 29) #1# #6# 718) (function (ext::lambda-block #832# #833# #39# (declare (type boolean #834#)) nil (setf (bit (cl-protobufs.meshtastic::config.lo-ra-config-%%bool-values #835#) 1) (if #834# . #56#)))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.%%has-tx-enabled)) cl-protobufs.meshtastic::config.lo-ra-config.%%has-tx-enabled (defun cl-protobufs.meshtastic::config.lo-ra-config.%%has-tx-enabled) (#6# . 718) #836=(#835#) #837=#:cur-value29476 #Y(cl-protobufs.meshtastic::config.lo-ra-config.%%has-tx-enabled nil nil (24 45 9104 26 13 0 19 1 8615 12 9 1 19 2 223 16 368 45 9112 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.%%has-tx-enabled #836# #39# (let ((#837# (plusp (bit (cl-protobufs.meshtastic::config.lo-ra-config-%%bool-values #835#) 1)))) (not (eq #837# nil))))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.clear-tx-enabled)) cl-protobufs.meshtastic::config.lo-ra-config.clear-tx-enabled (defun cl-protobufs.meshtastic::config.lo-ra-config.clear-tx-enabled) (#6# . 718) #838=(#835#) #Y(cl-protobufs.meshtastic::config.lo-ra-config.clear-tx-enabled nil nil (24 45 9104 26 13 0 19 1 8615 12 9 1 9 0 19 3 378 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.clear-tx-enabled #838# #39# nil (setf (bit (cl-protobufs.meshtastic::config.lo-ra-config-%%bool-values #835#) 1) 0))) cl-protobufs.meshtastic::tx-enabled (defmethod cl-protobufs.meshtastic::tx-enabled (#835# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (cl-protobufs.meshtastic::config.lo-ra-config) (#835#) #Y(cl-protobufs.meshtastic::tx-enabled nil nil (24 45 9104 26 13 0 19 1 9091 29) #1# #6# 718) #839=(setf cl-protobufs.meshtastic::tx-enabled) (defmethod #839# #834# (#835# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.lo-ra-config) (#834# #835#) #:g33941 #:g33942 (setf cl-protobufs.meshtastic::config.lo-ra-config.tx-enabled) #Y(#839# nil nil (24 45 9103 24 45 9104 26 10 0 45 9133 10 2 45 9134 13 0 13 1 33 9135 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.lo-ra-config.clear-tx-enabled) (cl-protobufs.meshtastic::config.lo-ra-config.tx-enabled) ((inline cl-protobufs.meshtastic::config.lo-ra-config.tx-power)) cl-protobufs.meshtastic::config.lo-ra-config.tx-power (defun cl-protobufs.meshtastic::config.lo-ra-config.tx-power) (#6# . 718) #840=(#841=#:obj29477) #841# #Y(cl-protobufs.meshtastic::config.lo-ra-config.tx-power nil nil (24 45 9144 26 13 0 19 1 8635 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.tx-power #840# #39# (the cl-protobufs::int32 (cl-protobufs.meshtastic::config.lo-ra-config-%tx-power #841#)))) ((inline #842=(setf cl-protobufs.meshtastic::config.lo-ra-config.tx-power))) #842# (defun #842#) (#6# . 718) #843=(#844=#:new-value29479 #845=#:obj29478) #844# #845# #:g33945 #:g33946 #Y(#842# nil nil (24 45 9152 24 45 9153 26 10 0 45 9154 10 2 45 9155 13 1 15 8556 9 8 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #842# #843# #39# (declare (type cl-protobufs::int32 #844#)) nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%tx-power #845#) #844#))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.%%has-tx-power)) cl-protobufs.meshtastic::config.lo-ra-config.%%has-tx-power (defun cl-protobufs.meshtastic::config.lo-ra-config.%%has-tx-power) (#6# . 718) #846=(#845#) #847=#:cur-value29480 #Y(cl-protobufs.meshtastic::config.lo-ra-config.%%has-tx-power nil nil (24 45 9153 26 13 0 19 1 8635 45 9163 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.%%has-tx-power #846# #39# (let ((#847# (cl-protobufs.meshtastic::config.lo-ra-config-%tx-power #845#))) (not (eq #847# 0))))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.clear-tx-power)) cl-protobufs.meshtastic::config.lo-ra-config.clear-tx-power (defun cl-protobufs.meshtastic::config.lo-ra-config.clear-tx-power) (#6# . 718) #848=(#845#) #:g33949 #:g33950 #Y(cl-protobufs.meshtastic::config.lo-ra-config.clear-tx-power nil nil (24 45 9153 26 10 0 45 9171 8 0 45 9172 13 1 15 8556 9 8 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.clear-tx-power #848# #39# nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%tx-power #845#) 0))) cl-protobufs.meshtastic::tx-power (defmethod cl-protobufs.meshtastic::tx-power (#845# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (cl-protobufs.meshtastic::config.lo-ra-config) (#845#) #Y(cl-protobufs.meshtastic::tx-power nil nil (24 45 9153 26 13 0 19 1 9140 29) #1# #6# 718) #849=(setf cl-protobufs.meshtastic::tx-power) (defmethod #849# #844# (#845# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.lo-ra-config) (#844# #845#) #:g33957 #:g33958 (setf cl-protobufs.meshtastic::config.lo-ra-config.tx-power) #Y(#849# nil nil (24 45 9152 24 45 9153 26 10 0 45 9186 10 2 45 9187 13 0 13 1 33 9188 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.lo-ra-config.clear-tx-power) (cl-protobufs.meshtastic::config.lo-ra-config.tx-power) ((inline cl-protobufs.meshtastic::config.lo-ra-config.channel-num)) cl-protobufs.meshtastic::config.lo-ra-config.channel-num (defun cl-protobufs.meshtastic::config.lo-ra-config.channel-num) (#6# . 718) #850=(#851=#:obj29481) #851# #Y(cl-protobufs.meshtastic::config.lo-ra-config.channel-num nil nil (24 45 9197 26 13 0 19 1 8631 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.channel-num #850# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.lo-ra-config-%channel-num #851#)))) ((inline #852=(setf cl-protobufs.meshtastic::config.lo-ra-config.channel-num))) #852# (defun #852#) (#6# . 718) #853=(#854=#:new-value29483 #855=#:obj29482) #854# #855# #:g33961 #:g33962 #Y(#852# nil nil (24 45 9205 24 45 9206 26 10 0 45 9207 10 2 45 9208 13 1 15 8556 9 9 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #852# #853# #39# (declare (type cl-protobufs::uint32 #854#)) nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%channel-num #855#) #854#))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.%%has-channel-num)) cl-protobufs.meshtastic::config.lo-ra-config.%%has-channel-num (defun cl-protobufs.meshtastic::config.lo-ra-config.%%has-channel-num) (#6# . 718) #856=(#855#) #857=#:cur-value29484 #Y(cl-protobufs.meshtastic::config.lo-ra-config.%%has-channel-num nil nil (24 45 9206 26 13 0 19 1 8631 45 9216 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.%%has-channel-num #856# #39# (let ((#857# (cl-protobufs.meshtastic::config.lo-ra-config-%channel-num #855#))) (not (eq #857# 0))))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.clear-channel-num)) cl-protobufs.meshtastic::config.lo-ra-config.clear-channel-num (defun cl-protobufs.meshtastic::config.lo-ra-config.clear-channel-num) (#6# . 718) #858=(#855#) #:g33965 #:g33966 #Y(cl-protobufs.meshtastic::config.lo-ra-config.clear-channel-num nil nil (24 45 9206 26 10 0 45 9224 8 0 45 9225 13 1 15 8556 9 9 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.clear-channel-num #858# #39# nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%channel-num #855#) 0))) cl-protobufs.meshtastic::channel-num (defmethod cl-protobufs.meshtastic::channel-num (#855# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (cl-protobufs.meshtastic::config.lo-ra-config) (#855#) #Y(cl-protobufs.meshtastic::channel-num nil nil (24 45 9206 26 13 0 19 1 9193 29) #1# #6# 718) #859=(setf cl-protobufs.meshtastic::channel-num) (defmethod #859# #854# (#855# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.lo-ra-config) (#854# #855#) #:g33973 #:g33974 (setf cl-protobufs.meshtastic::config.lo-ra-config.channel-num) #Y(#859# nil nil (24 45 9205 24 45 9206 26 10 0 45 9239 10 2 45 9240 13 0 13 1 33 9241 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.lo-ra-config.clear-channel-num) (cl-protobufs.meshtastic::config.lo-ra-config.channel-num) ((inline cl-protobufs.meshtastic::config.lo-ra-config.override-duty-cycle)) cl-protobufs.meshtastic::config.lo-ra-config.override-duty-cycle (defun cl-protobufs.meshtastic::config.lo-ra-config.override-duty-cycle) (#6# . 718) #860=(#861=#:obj29485) #861# #Y(cl-protobufs.meshtastic::config.lo-ra-config.override-duty-cycle nil nil (24 45 9250 26 13 0 19 1 8615 12 9 2 19 2 223 16 368 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.override-duty-cycle #860# #39# (the boolean (plusp (bit (cl-protobufs.meshtastic::config.lo-ra-config-%%bool-values #861#) 2))))) ((inline #862=(setf cl-protobufs.meshtastic::config.lo-ra-config.override-duty-cycle))) #862# (defun #862#) (#6# . 718) #863=(#864=#:new-value29487 #865=#:obj29486) #864# #865# #Y(#862# nil nil (24 45 9258 24 45 9259 26 13 0 19 1 8615 12 9 2 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 378 29) #1# #6# 718) (function (ext::lambda-block #862# #863# #39# (declare (type boolean #864#)) nil (setf (bit (cl-protobufs.meshtastic::config.lo-ra-config-%%bool-values #865#) 2) (if #864# . #56#)))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.%%has-override-duty-cycle)) cl-protobufs.meshtastic::config.lo-ra-config.%%has-override-duty-cycle (defun cl-protobufs.meshtastic::config.lo-ra-config.%%has-override-duty-cycle) (#6# . 718) #866=(#865#) #867=#:cur-value29488 #Y(cl-protobufs.meshtastic::config.lo-ra-config.%%has-override-duty-cycle nil nil (24 45 9259 26 13 0 19 1 8615 12 9 2 19 2 223 16 368 45 9267 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.%%has-override-duty-cycle #866# #39# (let ((#867# (plusp (bit (cl-protobufs.meshtastic::config.lo-ra-config-%%bool-values #865#) 2)))) (not (eq #867# nil))))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.clear-override-duty-cycle)) cl-protobufs.meshtastic::config.lo-ra-config.clear-override-duty-cycle (defun cl-protobufs.meshtastic::config.lo-ra-config.clear-override-duty-cycle) (#6# . 718) #868=(#865#) #Y(cl-protobufs.meshtastic::config.lo-ra-config.clear-override-duty-cycle nil nil (24 45 9259 26 13 0 19 1 8615 12 9 2 9 0 19 3 378 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.clear-override-duty-cycle #868# #39# nil (setf (bit (cl-protobufs.meshtastic::config.lo-ra-config-%%bool-values #865#) 2) 0))) cl-protobufs.meshtastic::override-duty-cycle (defmethod cl-protobufs.meshtastic::override-duty-cycle (#865# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (cl-protobufs.meshtastic::config.lo-ra-config) (#865#) #Y(cl-protobufs.meshtastic::override-duty-cycle nil nil (24 45 9259 26 13 0 19 1 9246 29) #1# #6# 718) #869=(setf cl-protobufs.meshtastic::override-duty-cycle) (defmethod #869# #864# (#865# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.lo-ra-config) (#864# #865#) #:g33989 #:g33990 (setf cl-protobufs.meshtastic::config.lo-ra-config.override-duty-cycle) #Y(#869# nil nil (24 45 9258 24 45 9259 26 10 0 45 9288 10 2 45 9289 13 0 13 1 33 9290 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.lo-ra-config.clear-override-duty-cycle) (cl-protobufs.meshtastic::config.lo-ra-config.override-duty-cycle) ((inline cl-protobufs.meshtastic::config.lo-ra-config.sx126x-rx-boosted-gain)) cl-protobufs.meshtastic::config.lo-ra-config.sx126x-rx-boosted-gain (defun cl-protobufs.meshtastic::config.lo-ra-config.sx126x-rx-boosted-gain) (#6# . 718) #870=(#871=#:obj29489) #871# #Y(cl-protobufs.meshtastic::config.lo-ra-config.sx126x-rx-boosted-gain nil nil (24 45 9299 26 13 0 19 1 8615 12 9 3 19 2 223 16 368 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.sx126x-rx-boosted-gain #870# #39# (the boolean (plusp (bit (cl-protobufs.meshtastic::config.lo-ra-config-%%bool-values #871#) 3))))) ((inline #872=(setf cl-protobufs.meshtastic::config.lo-ra-config.sx126x-rx-boosted-gain))) #872# (defun #872#) (#6# . 718) #873=(#874=#:new-value29491 #875=#:obj29490) #874# #875# #Y(#872# nil nil (24 45 9307 24 45 9308 26 13 0 19 1 8615 12 9 3 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 378 29) #1# #6# 718) (function (ext::lambda-block #872# #873# #39# (declare (type boolean #874#)) nil (setf (bit (cl-protobufs.meshtastic::config.lo-ra-config-%%bool-values #875#) 3) (if #874# . #56#)))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.%%has-sx126x-rx-boosted-gain)) cl-protobufs.meshtastic::config.lo-ra-config.%%has-sx126x-rx-boosted-gain (defun cl-protobufs.meshtastic::config.lo-ra-config.%%has-sx126x-rx-boosted-gain) (#6# . 718) #876=(#875#) #877=#:cur-value29492 #Y(cl-protobufs.meshtastic::config.lo-ra-config.%%has-sx126x-rx-boosted-gain nil nil (24 45 9308 26 13 0 19 1 8615 12 9 3 19 2 223 16 368 45 9316 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.%%has-sx126x-rx-boosted-gain #876# #39# (let ((#877# (plusp (bit (cl-protobufs.meshtastic::config.lo-ra-config-%%bool-values #875#) 3)))) (not (eq #877# nil))))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.clear-sx126x-rx-boosted-gain)) cl-protobufs.meshtastic::config.lo-ra-config.clear-sx126x-rx-boosted-gain (defun cl-protobufs.meshtastic::config.lo-ra-config.clear-sx126x-rx-boosted-gain) (#6# . 718) #878=(#875#) #Y(cl-protobufs.meshtastic::config.lo-ra-config.clear-sx126x-rx-boosted-gain nil nil (24 45 9308 26 13 0 19 1 8615 12 9 3 9 0 19 3 378 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.clear-sx126x-rx-boosted-gain #878# #39# nil (setf (bit (cl-protobufs.meshtastic::config.lo-ra-config-%%bool-values #875#) 3) 0))) cl-protobufs.meshtastic::sx126x-rx-boosted-gain (defmethod cl-protobufs.meshtastic::sx126x-rx-boosted-gain (#875# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (cl-protobufs.meshtastic::config.lo-ra-config) (#875#) #Y(cl-protobufs.meshtastic::sx126x-rx-boosted-gain nil nil (24 45 9308 26 13 0 19 1 9295 29) #1# #6# 718) #879=(setf cl-protobufs.meshtastic::sx126x-rx-boosted-gain) (defmethod #879# #874# (#875# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.lo-ra-config) (#874# #875#) #:g34005 #:g34006 (setf cl-protobufs.meshtastic::config.lo-ra-config.sx126x-rx-boosted-gain) #Y(#879# nil nil (24 45 9307 24 45 9308 26 10 0 45 9337 10 2 45 9338 13 0 13 1 33 9339 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.lo-ra-config.clear-sx126x-rx-boosted-gain) (cl-protobufs.meshtastic::config.lo-ra-config.sx126x-rx-boosted-gain) ((inline cl-protobufs.meshtastic::config.lo-ra-config.override-frequency)) cl-protobufs.meshtastic::config.lo-ra-config.override-frequency (defun cl-protobufs.meshtastic::config.lo-ra-config.override-frequency) (#6# . 718) #880=(#881=#:obj29493) #881# #Y(cl-protobufs.meshtastic::config.lo-ra-config.override-frequency nil nil (24 45 9348 26 13 0 19 1 8627 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.override-frequency #880# #39# (the float (cl-protobufs.meshtastic::config.lo-ra-config-%override-frequency #881#)))) ((inline #882=(setf cl-protobufs.meshtastic::config.lo-ra-config.override-frequency))) #882# (defun #882#) (#6# . 718) #883=(#884=#:new-value29495 #885=#:obj29494) #884# #885# #:g34009 #:g34010 #Y(#882# nil nil (24 45 9356 24 45 9357 26 10 0 45 9358 10 2 45 9359 13 1 15 8556 9 10 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #882# #883# #39# (declare (type float #884#)) nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%override-frequency #885#) #884#))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.%%has-override-frequency)) cl-protobufs.meshtastic::config.lo-ra-config.%%has-override-frequency (defun cl-protobufs.meshtastic::config.lo-ra-config.%%has-override-frequency) (#6# . 718) #886=(#885#) #887=#:cur-value29496 #Y(cl-protobufs.meshtastic::config.lo-ra-config.%%has-override-frequency nil nil (24 45 9357 26 13 0 19 1 8627 45 9367 13 0 15 3341 19 2 3548 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.%%has-override-frequency #886# #39# (let ((#887# (cl-protobufs.meshtastic::config.lo-ra-config-%override-frequency #885#))) (not (= #887# #275#))))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.clear-override-frequency)) cl-protobufs.meshtastic::config.lo-ra-config.clear-override-frequency (defun cl-protobufs.meshtastic::config.lo-ra-config.clear-override-frequency) (#6# . 718) #888=(#885#) #:g34013 #:g34014 #Y(cl-protobufs.meshtastic::config.lo-ra-config.clear-override-frequency nil nil (24 45 9357 26 10 0 45 9375 1 3341 45 9376 13 1 15 8556 9 10 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.clear-override-frequency #888# #39# nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%override-frequency #885#) #275#))) cl-protobufs.meshtastic::override-frequency (defmethod cl-protobufs.meshtastic::override-frequency (#885# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (cl-protobufs.meshtastic::config.lo-ra-config) (#885#) #Y(cl-protobufs.meshtastic::override-frequency nil nil (24 45 9357 26 13 0 19 1 9344 29) #1# #6# 718) #889=(setf cl-protobufs.meshtastic::override-frequency) (defmethod #889# #884# (#885# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.lo-ra-config) (#884# #885#) #:g34021 #:g34022 (setf cl-protobufs.meshtastic::config.lo-ra-config.override-frequency) #Y(#889# nil nil (24 45 9356 24 45 9357 26 10 0 45 9390 10 2 45 9391 13 0 13 1 33 9392 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.lo-ra-config.clear-override-frequency) (cl-protobufs.meshtastic::config.lo-ra-config.override-frequency) ((inline cl-protobufs.meshtastic::config.lo-ra-config.ignore-incoming)) cl-protobufs.meshtastic::config.lo-ra-config.ignore-incoming (defun cl-protobufs.meshtastic::config.lo-ra-config.ignore-incoming) (#6# . 718) #890=(#891=#:obj29497) #891# #Y(cl-protobufs.meshtastic::config.lo-ra-config.ignore-incoming nil nil (24 45 9401 26 13 0 19 1 8623 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.ignore-incoming #890# #39# (the (cl-protobufs::list-of cl-protobufs::uint32) (cl-protobufs.meshtastic::config.lo-ra-config-%ignore-incoming #891#)))) ((inline #892=(setf cl-protobufs.meshtastic::config.lo-ra-config.ignore-incoming))) #892# (defun #892#) (#6# . 718) #893=(#894=#:new-value29499 #895=#:obj29498) #894# #895# #:g34025 #:g34026 #Y(#892# nil nil (24 45 9409 24 45 9410 26 10 0 45 9411 10 2 45 9412 13 1 15 8556 9 11 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #892# #893# #39# (declare (type (cl-protobufs::list-of cl-protobufs::uint32) #894#)) nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%ignore-incoming #895#) #894#))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.%%has-ignore-incoming)) cl-protobufs.meshtastic::config.lo-ra-config.%%has-ignore-incoming (defun cl-protobufs.meshtastic::config.lo-ra-config.%%has-ignore-incoming) (#6# . 718) #896=(#895#) #897=#:cur-value29500 #Y(cl-protobufs.meshtastic::config.lo-ra-config.%%has-ignore-incoming nil nil (24 45 9410 26 13 0 19 1 8623 45 9420 10 0 73 39 4 11 40 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.%%has-ignore-incoming #896# #39# (let ((#897# (cl-protobufs.meshtastic::config.lo-ra-config-%ignore-incoming #895#))) (and #897# t)))) ((inline cl-protobufs.meshtastic::config.lo-ra-config.clear-ignore-incoming)) cl-protobufs.meshtastic::config.lo-ra-config.clear-ignore-incoming (defun cl-protobufs.meshtastic::config.lo-ra-config.clear-ignore-incoming) (#6# . 718) #898=(#895#) #:g34029 #:g34030 #Y(cl-protobufs.meshtastic::config.lo-ra-config.clear-ignore-incoming nil nil (24 45 9410 26 10 0 45 9428 75 45 9429 13 1 15 8556 9 11 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lo-ra-config.clear-ignore-incoming #898# #39# nil (setf (cl-protobufs.meshtastic::config.lo-ra-config-%ignore-incoming #895#) nil))) cl-protobufs.meshtastic::ignore-incoming (defmethod cl-protobufs.meshtastic::ignore-incoming (#895# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (cl-protobufs.meshtastic::config.lo-ra-config) (#895#) #Y(cl-protobufs.meshtastic::ignore-incoming nil nil (24 45 9410 26 13 0 19 1 9397 29) #1# #6# 718) #899=(setf cl-protobufs.meshtastic::ignore-incoming) (defmethod #899# #894# (#895# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.lo-ra-config) (#894# #895#) #:g34037 #:g34038 (setf cl-protobufs.meshtastic::config.lo-ra-config.ignore-incoming) #Y(#899# nil nil (24 45 9409 24 45 9410 26 10 0 45 9443 10 2 45 9444 13 0 13 1 33 9445 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.lo-ra-config.clear-ignore-incoming) (cl-protobufs.meshtastic::config.lo-ra-config.ignore-incoming) cl-protobufs.meshtastic::config.lo-ra-config.push-ignore-incoming (defun cl-protobufs.meshtastic::config.lo-ra-config.push-ignore-incoming) (#6# . 718) (#900=#:element29502 #901=#:obj29501) #900# #901# #:g34044 #:g34042 #:g34043 (setf cl-protobufs.meshtastic::config.lo-ra-config.ignore-incoming) #Y(cl-protobufs.meshtastic::config.lo-ra-config.push-ignore-incoming nil nil (24 45 9453 24 45 9454 26 10 1 45 9455 10 1 45 9456 13 1 13 0 19 1 9397 3 45 9457 13 0 13 1 33 9458 18 2 43 3 29) #1# #6# 718) cl-protobufs.meshtastic::config.lo-ra-config.length-of-ignore-incoming (defun cl-protobufs.meshtastic::config.lo-ra-config.length-of-ignore-incoming) (#6# . 718) (#901#) #Y(cl-protobufs.meshtastic::config.lo-ra-config.length-of-ignore-incoming nil nil (24 45 9454 26 13 0 19 1 9397 16 5558 29) #1# #6# 718) cl-protobufs.meshtastic::config.lo-ra-config.nth-ignore-incoming (defun cl-protobufs.meshtastic::config.lo-ra-config.nth-ignore-incoming) (#6# . 718) (#902=#:n29503 #901#) #902# < "Repeated field ~S is length ~D but element ~D was requested." cl-protobufs::protobuf-error nth #Y(cl-protobufs.meshtastic::config.lo-ra-config.nth-ignore-incoming nil nil (24 45 9469 24 45 9454 26 13 0 19 1 9397 16 5558 45 5558 13 0 13 2 19 2 9470 39 12 15 9471 15 9432 13 0 13 2 19 4 9472 13 2 13 1 19 1 9397 17 9473 43 1 29) #1# #6# 718) cl-protobufs.meshtastic::push-ignore-incoming (defmethod cl-protobufs.meshtastic::push-ignore-incoming #900# (#901# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.lo-ra-config) (#900# #901#) #Y(cl-protobufs.meshtastic::push-ignore-incoming nil nil (24 45 9453 24 45 9454 26 13 1 13 0 19 2 9449 29) #1# #6# 718) cl-protobufs.meshtastic::length-of-ignore-incoming (defmethod cl-protobufs.meshtastic::length-of-ignore-incoming (#901# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (cl-protobufs.meshtastic::config.lo-ra-config) (#901#) #Y(cl-protobufs.meshtastic::length-of-ignore-incoming nil nil (24 45 9454 26 13 0 19 1 9460 29) #1# #6# 718) cl-protobufs.meshtastic::nth-ignore-incoming (defmethod cl-protobufs.meshtastic::nth-ignore-incoming (#902# integer) (#901# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (integer cl-protobufs.meshtastic::config.lo-ra-config) (#902# #901#) #Y(cl-protobufs.meshtastic::nth-ignore-incoming nil nil (24 45 9469 24 45 9454 26 13 1 13 0 19 2 9465 29) #1# #6# 718) (cl-protobufs.meshtastic::push-ignore-incoming cl-protobufs.meshtastic::config.lo-ra-config.push-ignore-incoming cl-protobufs.meshtastic::config.lo-ra-config.nth-ignore-incoming cl-protobufs.meshtastic::nth-ignore-incoming cl-protobufs.meshtastic::config.lo-ra-config.length-of-ignore-incoming cl-protobufs.meshtastic::length-of-ignore-incoming) ((inline cl-protobufs.meshtastic::make-config.lo-ra-config)) cl-protobufs.meshtastic::make-config.lo-ra-config (defun cl-protobufs.meshtastic::make-config.lo-ra-config) (#6# . 718) #903=(&key (cl-protobufs.meshtastic::use-preset :%unset) (cl-protobufs.meshtastic::modem-preset :%unset) (cl-protobufs.meshtastic::bandwidth :%unset) (cl-protobufs.meshtastic::spread-factor :%unset) (cl-protobufs.meshtastic::coding-rate :%unset) (cl-protobufs.meshtastic::frequency-offset :%unset) (cl-protobufs.meshtastic::region :%unset) (cl-protobufs.meshtastic::hop-limit :%unset) (cl-protobufs.meshtastic::tx-enabled :%unset) (cl-protobufs.meshtastic::tx-power :%unset) (cl-protobufs.meshtastic::channel-num :%unset) (cl-protobufs.meshtastic::override-duty-cycle :%unset) (cl-protobufs.meshtastic::sx126x-rx-boosted-gain :%unset) (cl-protobufs.meshtastic::override-frequency :%unset) (cl-protobufs.meshtastic::ignore-incoming :%unset)) (nil :ignore-incoming :override-frequency :sx126x-rx-boosted-gain :override-duty-cycle :channel-num :tx-power :tx-enabled :hop-limit :region :frequency-offset :coding-rate :spread-factor :bandwidth :modem-preset :use-preset) #904=#:obj29440 #:g34075 #:g34076 (setf cl-protobufs.meshtastic::config.lo-ra-config.use-preset) #:g34077 #:g34078 (setf cl-protobufs.meshtastic::config.lo-ra-config.modem-preset) #:g34079 #:g34080 (setf cl-protobufs.meshtastic::config.lo-ra-config.bandwidth) #:g34081 #:g34082 (setf cl-protobufs.meshtastic::config.lo-ra-config.spread-factor) #:g34083 #:g34084 (setf cl-protobufs.meshtastic::config.lo-ra-config.coding-rate) #:g34085 #:g34086 (setf cl-protobufs.meshtastic::config.lo-ra-config.frequency-offset) #:g34087 #:g34088 (setf cl-protobufs.meshtastic::config.lo-ra-config.region) #:g34089 #:g34090 (setf cl-protobufs.meshtastic::config.lo-ra-config.hop-limit) #:g34091 #:g34092 (setf cl-protobufs.meshtastic::config.lo-ra-config.tx-enabled) #:g34093 #:g34094 (setf cl-protobufs.meshtastic::config.lo-ra-config.tx-power) #:g34095 #:g34096 (setf cl-protobufs.meshtastic::config.lo-ra-config.channel-num) #:g34097 #:g34098 (setf cl-protobufs.meshtastic::config.lo-ra-config.override-duty-cycle) #:g34099 #:g34100 (setf cl-protobufs.meshtastic::config.lo-ra-config.sx126x-rx-boosted-gain) #:g34101 #:g34102 (setf cl-protobufs.meshtastic::config.lo-ra-config.override-frequency) #:g34103 #:g34104 (setf cl-protobufs.meshtastic::config.lo-ra-config.ignore-incoming) #Y(cl-protobufs.meshtastic::make-config.lo-ra-config nil nil (28 9499 22 40 3 14 777 46 8703 22 40 3 14 777 46 8755 22 40 3 14 777 46 8808 22 40 3 14 777 46 8861 22 40 3 14 777 46 8914 22 40 3 14 777 46 8967 22 40 3 14 777 46 9020 22 40 3 14 777 46 9073 22 40 3 14 777 46 9122 22 40 3 14 777 46 9175 22 40 3 14 777 46 9228 22 40 3 14 777 46 9277 22 40 3 14 777 46 9326 22 40 3 14 777 46 9379 22 40 3 14 777 46 9432 19 0 8565 45 9500 13 15 11 777 17 332 76 39 21 10 0 45 9501 10 16 45 9502 13 0 13 1 33 9503 18 2 43 1 43 1 13 14 11 777 17 332 40 4 10 14 76 76 39 21 10 0 45 9504 10 15 45 9505 13 0 13 1 33 9506 18 2 43 1 43 1 13 13 11 777 17 332 40 4 10 13 76 76 39 21 10 0 45 9507 10 14 45 9508 13 0 13 1 33 9509 18 2 43 1 43 1 13 12 11 777 17 332 40 4 10 12 76 76 39 21 10 0 45 9510 10 13 45 9511 13 0 13 1 33 9512 18 2 43 1 43 1 13 11 11 777 17 332 40 4 10 11 76 76 39 21 10 0 45 9513 10 12 45 9514 13 0 13 1 33 9515 18 2 43 1 43 1 13 10 11 777 17 332 40 4 10 10 76 76 39 21 10 0 45 9516 10 11 45 9517 13 0 13 1 33 9518 18 2 43 1 43 1 13 9 11 777 17 332 40 4 10 9 76 76 39 21 10 0 45 9519 10 10 45 9520 13 0 13 1 33 9521 18 2 43 1 43 1 13 8 11 777 17 332 40 4 10 8 76 76 39 21 10 0 45 9522 10 9 45 9523 13 0 13 1 33 9524 18 2 43 1 43 1 13 7 11 777 17 332 76 39 21 10 0 45 9525 10 8 45 9526 13 0 13 1 33 9527 18 2 43 1 43 1 13 6 11 777 17 332 40 4 10 6 76 76 39 21 10 0 45 9528 10 7 45 9529 13 0 13 1 33 9530 18 2 43 1 43 1 13 5 11 777 17 332 40 4 10 5 76 76 39 21 10 0 45 9531 10 6 45 9532 13 0 13 1 33 9533 18 2 43 1 43 1 13 4 11 777 17 332 76 39 21 10 0 45 9534 10 5 45 9535 13 0 13 1 33 9536 18 2 43 1 43 1 13 3 11 777 17 332 76 39 21 10 0 45 9537 10 4 45 9538 13 0 13 1 33 9539 18 2 43 1 43 1 13 2 11 777 17 332 40 4 10 2 76 76 39 21 10 0 45 9540 10 3 45 9541 13 0 13 1 33 9542 18 2 43 1 43 1 13 1 11 777 17 332 40 4 10 1 76 76 39 21 10 0 45 9543 10 2 45 9544 13 0 13 1 33 9545 18 2 43 1 43 1 10 0 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::make-config.lo-ra-config #903# #39# (let ((#904# (cl-protobufs.meshtastic::%make-config.lo-ra-config))) (unless (eq cl-protobufs.meshtastic::use-preset :%unset) (setf (cl-protobufs.meshtastic::config.lo-ra-config.use-preset #904#) cl-protobufs.meshtastic::use-preset)) (unless (or (eq cl-protobufs.meshtastic::modem-preset :%unset) (not cl-protobufs.meshtastic::modem-preset)) (setf (cl-protobufs.meshtastic::config.lo-ra-config.modem-preset #904#) cl-protobufs.meshtastic::modem-preset)) (unless (or (eq cl-protobufs.meshtastic::bandwidth :%unset) (not cl-protobufs.meshtastic::bandwidth)) (setf (cl-protobufs.meshtastic::config.lo-ra-config.bandwidth #904#) cl-protobufs.meshtastic::bandwidth)) (unless (or (eq cl-protobufs.meshtastic::spread-factor :%unset) (not cl-protobufs.meshtastic::spread-factor)) (setf (cl-protobufs.meshtastic::config.lo-ra-config.spread-factor #904#) cl-protobufs.meshtastic::spread-factor)) (unless (or (eq cl-protobufs.meshtastic::coding-rate :%unset) (not cl-protobufs.meshtastic::coding-rate)) (setf (cl-protobufs.meshtastic::config.lo-ra-config.coding-rate #904#) cl-protobufs.meshtastic::coding-rate)) (unless (or (eq cl-protobufs.meshtastic::frequency-offset :%unset) (not cl-protobufs.meshtastic::frequency-offset)) (setf (cl-protobufs.meshtastic::config.lo-ra-config.frequency-offset #904#) cl-protobufs.meshtastic::frequency-offset)) (unless (or (eq cl-protobufs.meshtastic::region :%unset) (not cl-protobufs.meshtastic::region)) (setf (cl-protobufs.meshtastic::config.lo-ra-config.region #904#) cl-protobufs.meshtastic::region)) (unless (or (eq cl-protobufs.meshtastic::hop-limit :%unset) (not cl-protobufs.meshtastic::hop-limit)) (setf (cl-protobufs.meshtastic::config.lo-ra-config.hop-limit #904#) cl-protobufs.meshtastic::hop-limit)) (unless (eq cl-protobufs.meshtastic::tx-enabled :%unset) (setf (cl-protobufs.meshtastic::config.lo-ra-config.tx-enabled #904#) cl-protobufs.meshtastic::tx-enabled)) (unless (or (eq cl-protobufs.meshtastic::tx-power :%unset) (not cl-protobufs.meshtastic::tx-power)) (setf (cl-protobufs.meshtastic::config.lo-ra-config.tx-power #904#) cl-protobufs.meshtastic::tx-power)) (unless (or (eq cl-protobufs.meshtastic::channel-num :%unset) (not cl-protobufs.meshtastic::channel-num)) (setf (cl-protobufs.meshtastic::config.lo-ra-config.channel-num #904#) cl-protobufs.meshtastic::channel-num)) (unless (eq cl-protobufs.meshtastic::override-duty-cycle :%unset) (setf (cl-protobufs.meshtastic::config.lo-ra-config.override-duty-cycle #904#) cl-protobufs.meshtastic::override-duty-cycle)) (unless (eq cl-protobufs.meshtastic::sx126x-rx-boosted-gain :%unset) (setf (cl-protobufs.meshtastic::config.lo-ra-config.sx126x-rx-boosted-gain #904#) cl-protobufs.meshtastic::sx126x-rx-boosted-gain)) (unless (or (eq cl-protobufs.meshtastic::override-frequency :%unset) (not cl-protobufs.meshtastic::override-frequency)) (setf (cl-protobufs.meshtastic::config.lo-ra-config.override-frequency #904#) cl-protobufs.meshtastic::override-frequency)) (unless (or (eq cl-protobufs.meshtastic::ignore-incoming :%unset) (not cl-protobufs.meshtastic::ignore-incoming)) (setf (cl-protobufs.meshtastic::config.lo-ra-config.ignore-incoming #904#) cl-protobufs.meshtastic::ignore-incoming)) #904#))) cl-protobufs.meshtastic::config.lo-ra-config.clear-%%is-set (defun cl-protobufs.meshtastic::config.lo-ra-config.clear-%%is-set) (#6# . 718) (#904#) #Y(cl-protobufs.meshtastic::config.lo-ra-config.clear-%%is-set nil nil (24 45 9500 26 13 0 19 1 8611 12 9 0 19 2 812 29) #1# #6# 718) (cl-protobufs.meshtastic::make-config.lo-ra-config cl-protobufs.meshtastic::config.lo-ra-config-%%is-set) (defmethod cl-protobufs::clear (#904# cl-protobufs.meshtastic::config.lo-ra-config)) (#6# . 718) (cl-protobufs.meshtastic::config.lo-ra-config) (#904#) #:g34111 #:g34112 #Y(cl-protobufs::clear nil nil (24 45 9500 26 10 0 45 9558 75 45 9559 13 1 15 204 9 0 13 0 19 4 118 43 1 43 1 13 0 19 1 8697 13 0 19 1 8747 13 0 19 1 8800 13 0 19 1 8853 13 0 19 1 8906 13 0 19 1 8959 13 0 19 1 9012 13 0 19 1 9065 13 0 19 1 9116 13 0 19 1 9167 13 0 19 1 9220 13 0 19 1 9271 13 0 19 1 9320 13 0 19 1 9371 13 0 19 1 9424 13 0 19 1 9548 29) #1# #6# 718) 0 #:g34113 #:g34114 #:g34115 (setf slot-value) #:g34116 #:g34117 "LoRaConfig" #:g34118 (setf slot-value) #:g34119 #:g34120 "meshtastic.Config.LoRaConfig" #:g34121 (setf slot-value) #:g34122 #:g34123 #:g34124 (setf slot-value) #:g34125 #:g34126 #:g34127 (setf slot-value) #:g34128 #:g34129 0 #:g34130 (setf slot-value) #:g34131 #:g34132 #:g34133 (setf slot-value) #:g34134 #:g34135 #:g34136 (setf slot-value) #:g34137 #:g34138 #:g34139 (setf slot-value) #:g34140 #:g34141 #:g34142 (setf slot-value) 0 0 #:g34143 #:g34144 #:g34145 (setf slot-value) #:g34146 #:g34147 "use_preset" #:g34148 (setf slot-value) #:g34149 #:g34150 "meshtastic.Config.LoRaConfig.use_preset" #:g34151 (setf slot-value) #:g34152 #:g34153 #:g34154 (setf slot-value) #:g34155 #:g34156 #:g34157 (setf slot-value) #:g34158 #:g34159 #:g34160 (setf slot-value) #:g34161 #:g34162 #:g34163 (setf slot-value) #:g34164 #:g34165 #:g34166 (setf slot-value) #:g34167 #:g34168 #:g34169 (setf slot-value) #:g34170 #:g34171 #:g34172 (setf slot-value) #:g34173 #:g34174 cl-protobufs.meshtastic::%use-preset #:g34175 (setf slot-value) #:g34176 #:g34177 #:g34178 (setf slot-value) #:g34179 #:g34180 "usePreset" #:g34181 (setf slot-value) #:g34182 #:g34183 #:g34184 (setf slot-value) #:g34185 #:g34186 #:g34187 (setf slot-value) #:g34188 #:g34189 #:g34190 (setf slot-value) #:g34191 #:g34192 #:g34193 (setf slot-value) #:g34194 #:g34195 #:g34196 (setf slot-value) 0 0 #:g34197 #:g34198 #:g34199 (setf slot-value) #:g34200 #:g34201 "modem_preset" #:g34202 (setf slot-value) #:g34203 #:g34204 "meshtastic.Config.LoRaConfig.modem_preset" #:g34205 (setf slot-value) #:g34206 #:g34207 #:g34208 (setf slot-value) #:g34209 #:g34210 #:g34211 (setf slot-value) #:g34212 #:g34213 #:g34214 (setf slot-value) #:g34215 #:g34216 #:g34217 (setf slot-value) #:g34218 #:g34219 #:g34220 (setf slot-value) #:g34221 #:g34222 #:g34223 (setf slot-value) #:g34224 #:g34225 #:g34226 (setf slot-value) #:g34227 #:g34228 #:g34229 (setf slot-value) #:g34230 #:g34231 #:g34232 (setf slot-value) #:g34233 #:g34234 "modemPreset" #:g34235 (setf slot-value) #:g34236 #:g34237 #:g34238 (setf slot-value) #:g34239 #:g34240 #:g34241 (setf slot-value) #:g34242 #:g34243 #:g34244 (setf slot-value) #:g34245 #:g34246 #:g34247 (setf slot-value) #:g34248 #:g34249 #:g34250 (setf slot-value) 0 0 #:g34251 #:g34252 #:g34253 (setf slot-value) #:g34254 #:g34255 "bandwidth" #:g34256 (setf slot-value) #:g34257 #:g34258 "meshtastic.Config.LoRaConfig.bandwidth" #:g34259 (setf slot-value) #:g34260 #:g34261 #:g34262 (setf slot-value) #:g34263 #:g34264 #:g34265 (setf slot-value) #:g34266 #:g34267 #:g34268 (setf slot-value) #:g34269 #:g34270 #:g34271 (setf slot-value) #:g34272 #:g34273 #:g34274 (setf slot-value) #:g34275 #:g34276 #:g34277 (setf slot-value) #:g34278 #:g34279 #:g34280 (setf slot-value) #:g34281 #:g34282 #:g34283 (setf slot-value) #:g34284 #:g34285 #:g34286 (setf slot-value) #:g34287 #:g34288 "bandwidth" #:g34289 (setf slot-value) #:g34290 #:g34291 #:g34292 (setf slot-value) #:g34293 #:g34294 #:g34295 (setf slot-value) #:g34296 #:g34297 #:g34298 (setf slot-value) #:g34299 #:g34300 #:g34301 (setf slot-value) #:g34302 #:g34303 #:g34304 (setf slot-value) 0 0 #:g34305 #:g34306 #:g34307 (setf slot-value) #:g34308 #:g34309 "spread_factor" #:g34310 (setf slot-value) #:g34311 #:g34312 "meshtastic.Config.LoRaConfig.spread_factor" #:g34313 (setf slot-value) #:g34314 #:g34315 #:g34316 (setf slot-value) #:g34317 #:g34318 #:g34319 (setf slot-value) #:g34320 #:g34321 #:g34322 (setf slot-value) #:g34323 #:g34324 #:g34325 (setf slot-value) #:g34326 #:g34327 #:g34328 (setf slot-value) #:g34329 #:g34330 #:g34331 (setf slot-value) #:g34332 #:g34333 #:g34334 (setf slot-value) #:g34335 #:g34336 #:g34337 (setf slot-value) #:g34338 #:g34339 #:g34340 (setf slot-value) #:g34341 #:g34342 "spreadFactor" #:g34343 (setf slot-value) #:g34344 #:g34345 #:g34346 (setf slot-value) #:g34347 #:g34348 #:g34349 (setf slot-value) #:g34350 #:g34351 #:g34352 (setf slot-value) #:g34353 #:g34354 #:g34355 (setf slot-value) #:g34356 #:g34357 #:g34358 (setf slot-value) 0 0 #:g34359 #:g34360 #:g34361 (setf slot-value) #:g34362 #:g34363 "coding_rate" #:g34364 (setf slot-value) #:g34365 #:g34366 "meshtastic.Config.LoRaConfig.coding_rate" #:g34367 (setf slot-value) #:g34368 #:g34369 #:g34370 (setf slot-value) #:g34371 #:g34372 #:g34373 (setf slot-value) #:g34374 #:g34375 #:g34376 (setf slot-value) #:g34377 #:g34378 #:g34379 (setf slot-value) #:g34380 #:g34381 #:g34382 (setf slot-value) #:g34383 #:g34384 #:g34385 (setf slot-value) #:g34386 #:g34387 #:g34388 (setf slot-value) #:g34389 #:g34390 #:g34391 (setf slot-value) #:g34392 #:g34393 #:g34394 (setf slot-value) #:g34395 #:g34396 "codingRate" #:g34397 (setf slot-value) #:g34398 #:g34399 #:g34400 (setf slot-value) #:g34401 #:g34402 #:g34403 (setf slot-value) #:g34404 #:g34405 #:g34406 (setf slot-value) #:g34407 #:g34408 #:g34409 (setf slot-value) #:g34410 #:g34411 #:g34412 (setf slot-value) 0 0 #:g34413 #:g34414 #:g34415 (setf slot-value) #:g34416 #:g34417 "frequency_offset" #:g34418 (setf slot-value) #:g34419 #:g34420 "meshtastic.Config.LoRaConfig.frequency_offset" #:g34421 (setf slot-value) #:g34422 #:g34423 #:g34424 (setf slot-value) #:g34425 #:g34426 #:g34427 (setf slot-value) #:g34428 #:g34429 #:g34430 (setf slot-value) #:g34431 #:g34432 #:g34433 (setf slot-value) #:g34434 #:g34435 #:g34436 (setf slot-value) #:g34437 #:g34438 #:g34439 (setf slot-value) #:g34440 #:g34441 #:g34442 (setf slot-value) #:g34443 #:g34444 #:g34445 (setf slot-value) #:g34446 #:g34447 #:g34448 (setf slot-value) #:g34449 #:g34450 "frequencyOffset" #:g34451 (setf slot-value) #:g34452 #:g34453 #:g34454 (setf slot-value) #:g34455 #:g34456 #:g34457 (setf slot-value) #:g34458 #:g34459 #:g34460 (setf slot-value) #:g34461 #:g34462 #:g34463 (setf slot-value) #:g34464 #:g34465 #:g34466 (setf slot-value) 0 0 #:g34467 #:g34468 #:g34469 (setf slot-value) #:g34470 #:g34471 "region" #:g34472 (setf slot-value) #:g34473 #:g34474 "meshtastic.Config.LoRaConfig.region" #:g34475 (setf slot-value) #:g34476 #:g34477 #:g34478 (setf slot-value) #:g34479 #:g34480 #:g34481 (setf slot-value) #:g34482 #:g34483 #:g34484 (setf slot-value) #:g34485 #:g34486 #:g34487 (setf slot-value) #:g34488 #:g34489 #:g34490 (setf slot-value) #:g34491 #:g34492 #:g34493 (setf slot-value) #:g34494 #:g34495 #:g34496 (setf slot-value) #:g34497 #:g34498 #:g34499 (setf slot-value) #:g34500 #:g34501 #:g34502 (setf slot-value) #:g34503 #:g34504 "region" #:g34505 (setf slot-value) #:g34506 #:g34507 #:g34508 (setf slot-value) #:g34509 #:g34510 #:g34511 (setf slot-value) #:g34512 #:g34513 #:g34514 (setf slot-value) #:g34515 #:g34516 #:g34517 (setf slot-value) #:g34518 #:g34519 #:g34520 (setf slot-value) 0 0 #:g34521 #:g34522 #:g34523 (setf slot-value) #:g34524 #:g34525 "hop_limit" #:g34526 (setf slot-value) #:g34527 #:g34528 "meshtastic.Config.LoRaConfig.hop_limit" #:g34529 (setf slot-value) #:g34530 #:g34531 #:g34532 (setf slot-value) #:g34533 #:g34534 #:g34535 (setf slot-value) #:g34536 #:g34537 #:g34538 (setf slot-value) #:g34539 #:g34540 #:g34541 (setf slot-value) #:g34542 #:g34543 #:g34544 (setf slot-value) #:g34545 #:g34546 #:g34547 (setf slot-value) #:g34548 #:g34549 #:g34550 (setf slot-value) #:g34551 #:g34552 #:g34553 (setf slot-value) #:g34554 #:g34555 #:g34556 (setf slot-value) #:g34557 #:g34558 "hopLimit" #:g34559 (setf slot-value) #:g34560 #:g34561 #:g34562 (setf slot-value) #:g34563 #:g34564 #:g34565 (setf slot-value) #:g34566 #:g34567 #:g34568 (setf slot-value) #:g34569 #:g34570 #:g34571 (setf slot-value) #:g34572 #:g34573 #:g34574 (setf slot-value) 0 0 #:g34575 #:g34576 #:g34577 (setf slot-value) #:g34578 #:g34579 "tx_enabled" #:g34580 (setf slot-value) #:g34581 #:g34582 "meshtastic.Config.LoRaConfig.tx_enabled" #:g34583 (setf slot-value) #:g34584 #:g34585 #:g34586 (setf slot-value) #:g34587 #:g34588 #:g34589 (setf slot-value) #:g34590 #:g34591 #:g34592 (setf slot-value) #:g34593 #:g34594 #:g34595 (setf slot-value) #:g34596 #:g34597 #:g34598 (setf slot-value) #:g34599 #:g34600 #:g34601 (setf slot-value) #:g34602 #:g34603 #:g34604 (setf slot-value) #:g34605 #:g34606 cl-protobufs.meshtastic::%tx-enabled #:g34607 (setf slot-value) #:g34608 #:g34609 #:g34610 (setf slot-value) #:g34611 #:g34612 "txEnabled" #:g34613 (setf slot-value) #:g34614 #:g34615 #:g34616 (setf slot-value) #:g34617 #:g34618 #:g34619 (setf slot-value) #:g34620 #:g34621 #:g34622 (setf slot-value) #:g34623 #:g34624 #:g34625 (setf slot-value) #:g34626 #:g34627 #:g34628 (setf slot-value) 0 0 #:g34629 #:g34630 #:g34631 (setf slot-value) #:g34632 #:g34633 "tx_power" #:g34634 (setf slot-value) #:g34635 #:g34636 "meshtastic.Config.LoRaConfig.tx_power" #:g34637 (setf slot-value) #:g34638 #:g34639 #:g34640 (setf slot-value) #:g34641 #:g34642 #:g34643 (setf slot-value) #:g34644 #:g34645 #:g34646 (setf slot-value) #:g34647 #:g34648 #:g34649 (setf slot-value) #:g34650 #:g34651 #:g34652 (setf slot-value) #:g34653 #:g34654 #:g34655 (setf slot-value) #:g34656 #:g34657 #:g34658 (setf slot-value) #:g34659 #:g34660 #:g34661 (setf slot-value) #:g34662 #:g34663 #:g34664 (setf slot-value) #:g34665 #:g34666 "txPower" #:g34667 (setf slot-value) #:g34668 #:g34669 #:g34670 (setf slot-value) #:g34671 #:g34672 #:g34673 (setf slot-value) #:g34674 #:g34675 #:g34676 (setf slot-value) #:g34677 #:g34678 #:g34679 (setf slot-value) #:g34680 #:g34681 #:g34682 (setf slot-value) 0 0 #:g34683 #:g34684 #:g34685 (setf slot-value) #:g34686 #:g34687 "channel_num" #:g34688 (setf slot-value) #:g34689 #:g34690 "meshtastic.Config.LoRaConfig.channel_num" #:g34691 (setf slot-value) #:g34692 #:g34693 #:g34694 (setf slot-value) #:g34695 #:g34696 #:g34697 (setf slot-value) #:g34698 #:g34699 #:g34700 (setf slot-value) #:g34701 #:g34702 #:g34703 (setf slot-value) #:g34704 #:g34705 #:g34706 (setf slot-value) #:g34707 #:g34708 #:g34709 (setf slot-value) #:g34710 #:g34711 #:g34712 (setf slot-value) #:g34713 #:g34714 #:g34715 (setf slot-value) #:g34716 #:g34717 #:g34718 (setf slot-value) #:g34719 #:g34720 "channelNum" #:g34721 (setf slot-value) #:g34722 #:g34723 #:g34724 (setf slot-value) #:g34725 #:g34726 #:g34727 (setf slot-value) #:g34728 #:g34729 #:g34730 (setf slot-value) #:g34731 #:g34732 #:g34733 (setf slot-value) #:g34734 #:g34735 #:g34736 (setf slot-value) 0 0 #:g34737 #:g34738 #:g34739 (setf slot-value) #:g34740 #:g34741 "override_duty_cycle" #:g34742 (setf slot-value) #:g34743 #:g34744 "meshtastic.Config.LoRaConfig.override_duty_cycle" #:g34745 (setf slot-value) #:g34746 #:g34747 #:g34748 (setf slot-value) #:g34749 #:g34750 #:g34751 (setf slot-value) #:g34752 #:g34753 #:g34754 (setf slot-value) #:g34755 #:g34756 #:g34757 (setf slot-value) #:g34758 #:g34759 #:g34760 (setf slot-value) #:g34761 #:g34762 #:g34763 (setf slot-value) #:g34764 #:g34765 #:g34766 (setf slot-value) #:g34767 #:g34768 cl-protobufs.meshtastic::%override-duty-cycle #:g34769 (setf slot-value) #:g34770 #:g34771 #:g34772 (setf slot-value) #:g34773 #:g34774 "overrideDutyCycle" #:g34775 (setf slot-value) #:g34776 #:g34777 #:g34778 (setf slot-value) #:g34779 #:g34780 #:g34781 (setf slot-value) #:g34782 #:g34783 #:g34784 (setf slot-value) #:g34785 #:g34786 #:g34787 (setf slot-value) #:g34788 #:g34789 #:g34790 (setf slot-value) 0 0 #:g34791 #:g34792 #:g34793 (setf slot-value) #:g34794 #:g34795 "sx126x_rx_boosted_gain" #:g34796 (setf slot-value) #:g34797 #:g34798 "meshtastic.Config.LoRaConfig.sx126x_rx_boosted_gain" #:g34799 (setf slot-value) #:g34800 #:g34801 #:g34802 (setf slot-value) #:g34803 #:g34804 #:g34805 (setf slot-value) #:g34806 #:g34807 #:g34808 (setf slot-value) #:g34809 #:g34810 #:g34811 (setf slot-value) #:g34812 #:g34813 #:g34814 (setf slot-value) #:g34815 #:g34816 #:g34817 (setf slot-value) #:g34818 #:g34819 #:g34820 (setf slot-value) #:g34821 #:g34822 cl-protobufs.meshtastic::%sx126x-rx-boosted-gain #:g34823 (setf slot-value) #:g34824 #:g34825 #:g34826 (setf slot-value) #:g34827 #:g34828 "sx126xRxBoostedGain" #:g34829 (setf slot-value) #:g34830 #:g34831 #:g34832 (setf slot-value) #:g34833 #:g34834 #:g34835 (setf slot-value) #:g34836 #:g34837 #:g34838 (setf slot-value) #:g34839 #:g34840 #:g34841 (setf slot-value) #:g34842 #:g34843 #:g34844 (setf slot-value) 0 0 #:g34845 #:g34846 #:g34847 (setf slot-value) #:g34848 #:g34849 "override_frequency" #:g34850 (setf slot-value) #:g34851 #:g34852 "meshtastic.Config.LoRaConfig.override_frequency" #:g34853 (setf slot-value) #:g34854 #:g34855 #:g34856 (setf slot-value) #:g34857 #:g34858 #:g34859 (setf slot-value) #:g34860 #:g34861 #:g34862 (setf slot-value) #:g34863 #:g34864 #:g34865 (setf slot-value) #:g34866 #:g34867 #:g34868 (setf slot-value) #:g34869 #:g34870 #:g34871 (setf slot-value) #:g34872 #:g34873 #:g34874 (setf slot-value) #:g34875 #:g34876 #:g34877 (setf slot-value) #:g34878 #:g34879 #:g34880 (setf slot-value) #:g34881 #:g34882 "overrideFrequency" #:g34883 (setf slot-value) #:g34884 #:g34885 #:g34886 (setf slot-value) #:g34887 #:g34888 #:g34889 (setf slot-value) #:g34890 #:g34891 #:g34892 (setf slot-value) #:g34893 #:g34894 #:g34895 (setf slot-value) #:g34896 #:g34897 #:g34898 (setf slot-value) 0 #:g34899 #:g34900 #:g34901 (setf slot-value) #:g34902 #:g34903 "ignore_incoming" #:g34904 (setf slot-value) #:g34905 #:g34906 "meshtastic.Config.LoRaConfig.ignore_incoming" #:g34907 (setf slot-value) #:g34908 #:g34909 #:g34910 (setf slot-value) #:g34911 #:g34912 #:g34913 (setf slot-value) #:g34914 #:g34915 #:g34916 (setf slot-value) #:g34917 #:g34918 :repeated #:g34919 (setf slot-value) #:g34920 #:g34921 #:g34922 (setf slot-value) #:g34923 #:g34924 #:g34925 (setf slot-value) #:g34926 #:g34927 #:g34928 (setf slot-value) #:g34929 #:g34930 #:g34931 (setf slot-value) #:g34932 #:g34933 #:g34934 (setf slot-value) #:g34935 #:g34936 "ignoreIncoming" #:g34937 (setf slot-value) #:g34938 #:g34939 #:g34940 (setf slot-value) #:g34941 #:g34942 #:g34943 (setf slot-value) #:g34944 #:g34945 :list #:g34946 (setf slot-value) #:g34947 #:g34948 #:g34949 (setf slot-value) #:g34950 #:g34951 #:g34952 (setf slot-value) cl-protobufs.meshtastic::%%%%config.bluetooth-config.pairing-mode (deftype cl-protobufs.meshtastic::%%%%config.bluetooth-config.pairing-mode nil (quote #905=(or (member . #906=(:random-pin :fixed-pin :no-pin)) #4#))) #905# cl-protobufs.meshtastic::config.bluetooth-config.pairing-mode (deftype cl-protobufs.meshtastic::config.bluetooth-config.pairing-mode nil (quote #907=(member . #906#))) #907# cl-protobufs.meshtastic::config.bluetooth-config.pairing-mode-keyword-to-int (defun cl-protobufs.meshtastic::config.bluetooth-config.pairing-mode-keyword-to-int) (#6# . 718) :random-pin :fixed-pin :no-pin #Y(cl-protobufs.meshtastic::config.bluetooth-config.pairing-mode-keyword-to-int nil nil (24 45 28 26 10 0 42 10774 5 8 0 38 33 42 10775 5 8 1 38 26 42 10776 5 8 2 38 19 10 0 16 36 12 14 37 19 2 38 12 14 39 14 40 19 3 41 45 42 10 0 73 43 1 29) #1# #6# 718) cl-protobufs.meshtastic::config.bluetooth-config.pairing-mode-int-to-keyword (defun cl-protobufs.meshtastic::config.bluetooth-config.pairing-mode-int-to-keyword) (#6# . 718) #Y(cl-protobufs.meshtastic::config.bluetooth-config.pairing-mode-int-to-keyword nil nil (24 45 49 26 10 0 42 50 5 11 10774 38 16 42 51 5 11 10775 38 9 42 52 5 11 10776 38 2 75 45 57 10 0 73 43 1 29) #1# #6# 718) #:g34957 #:g34958 #:g34959 #:g34960 #:g34961 #:g34962 (defmethod cl-protobufs::enum-keyword-to-int (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.bluetooth-config.pairing-mode))) keyword) (#6# . 718) ((eql cl-protobufs.meshtastic::config.bluetooth-config.pairing-mode) t) (cl-protobufs.implementation::e keyword) #Y(cl-protobufs::enum-keyword-to-int nil nil (24 45 72 24 45 73 26 13 0 19 1 10771 29) #1# #6# 718) (defmethod cl-protobufs::enum-int-to-keyword (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.bluetooth-config.pairing-mode))) cl-protobufs.implementation::numeral) (#6# . 718) ((eql cl-protobufs.meshtastic::config.bluetooth-config.pairing-mode) t) (cl-protobufs.implementation::e cl-protobufs.implementation::numeral) #Y(cl-protobufs::enum-int-to-keyword nil nil (24 45 72 24 45 49 26 13 0 19 1 10778 29) #1# #6# 718) cl-protobufs.meshtastic::+config.bluetooth-config.random-pin+ (defconstant cl-protobufs.meshtastic::+config.bluetooth-config.random-pin+) (#6# . 718) cl-protobufs.meshtastic::+config.bluetooth-config.fixed-pin+ (defconstant cl-protobufs.meshtastic::+config.bluetooth-config.fixed-pin+) (#6# . 718) cl-protobufs.meshtastic::+config.bluetooth-config.no-pin+ (defconstant cl-protobufs.meshtastic::+config.bluetooth-config.no-pin+) (#6# . 718) (cl-protobufs.meshtastic::+config.bluetooth-config.random-pin+ cl-protobufs.meshtastic::+config.bluetooth-config.fixed-pin+ cl-protobufs.meshtastic::+config.bluetooth-config.no-pin+) (defmethod cl-protobufs.implementation::enum-default-value (cl-protobufs.implementation::e (eql (quote cl-protobufs.meshtastic::config.bluetooth-config.pairing-mode)))) (#6# . 718) ((eql cl-protobufs.meshtastic::config.bluetooth-config.pairing-mode)) (cl-protobufs.implementation::e) #Y(cl-protobufs.implementation::enum-default-value nil nil (24 45 72 26 11 10774 73 29) #1# #6# 718) 0 "PairingMode" 0 0 0 0 0 0 (cl-protobufs.meshtastic::%%%%config.bluetooth-config.pairing-mode) ((inline cl-protobufs.meshtastic::%make-config.bluetooth-config)) cl-protobufs.meshtastic::config.bluetooth-config "CONFIG.BLUETOOTH-CONFIG-" ((cl-protobufs.meshtastic::%mode :random-pin :type keyword) (cl-protobufs.meshtastic::%fixed-pin 0 :type cl-protobufs::uint32) (cl-protobufs.implementation::%%bytes nil :type #10#) (cl-protobufs.implementation::%%bool-values #908=(make-array 1 :element-type #12# :initial-contents #909=#*0) :type #910=(bit-vector 1)) (cl-protobufs.implementation::%%is-set #911=(make-array 0 . #16#) :type #912=(bit-vector 0))) (#18# (cl-protobufs.meshtastic::%mode :random-pin keyword nil 1 nil) (cl-protobufs.meshtastic::%fixed-pin 0 cl-protobufs::uint32 nil 2 nil) (cl-protobufs.implementation::%%bytes nil #10# nil 3 nil) (cl-protobufs.implementation::%%bool-values #908# #910# nil 4 nil) (cl-protobufs.implementation::%%is-set #911# #912# nil 5 nil)) cl-protobufs.meshtastic::copy-config.bluetooth-config (cl-protobufs.meshtastic::%make-config.bluetooth-config) #913=(cl-protobufs.meshtastic::config.bluetooth-config (:constructor cl-protobufs.meshtastic::%make-config.bluetooth-config) . #20#) (defstruct #913#) (#6# . 718) cl-protobufs.meshtastic::%make-config.bluetooth-config (defun cl-protobufs.meshtastic::%make-config.bluetooth-config) (#6# . 718) #914=(&key #915=#:%%skipped-bytes (#916=#:%mode :random-pin) (#917=#:%fixed-pin 0) #918=#:%%bytes (#919=#:%%bool-values (make-array 1 :element-type (quote bit) :initial-contents #909#)) (#920=#:%%is-set (make-array 0 :element-type (quote bit) :initial-element 0))) (nil :%%is-set :%%bool-values :%%bytes :%fixed-pin :%mode :%%skipped-bytes) #915# #916# #917# #918# #909# #919# #920# #921=(bit-vector 0) #922=(bit-vector 0) #923=(bit-vector 1) #924=(bit-vector 1) #925=(or null (simple-array (unsigned-byte 8))) #926=(or null (simple-array (unsigned-byte 8))) cl-protobufs.meshtastic::%fixed-pin cl-protobufs.meshtastic::%mode #927=(or null cl-protobufs::byte-vector) #928=(or null cl-protobufs::byte-vector) 0 #Y(cl-protobufs.meshtastic::%make-config.bluetooth-config nil nil (28 10836 22 40 2 77 46 10837 22 40 3 14 10774 46 10838 22 40 3 9 0 46 10839 22 40 2 77 46 10840 22 40 15 9 1 14 222 15 223 14 224 15 10841 19 5 226 12 46 10842 22 40 15 9 0 14 222 15 223 14 228 9 0 19 5 226 12 46 10843 13 0 15 10844 19 2 231 76 39 12 13 0 15 10845 15 10823 15 233 19 4 234 13 1 15 10846 19 2 231 76 39 12 13 1 15 10847 15 10823 15 237 19 4 234 13 2 15 10848 19 2 231 76 39 12 13 2 15 10849 15 10823 15 240 19 4 234 13 3 15 241 19 2 231 76 39 12 13 3 15 241 15 10823 15 10850 19 4 234 13 4 15 73 19 2 231 76 39 12 13 4 15 73 15 10823 15 10851 19 4 234 13 5 15 10852 19 2 231 76 39 12 13 5 15 10853 15 10823 15 249 19 4 234 15 10854 13 5 13 4 13 3 13 2 13 1 13 0 19 7 251 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::%make-config.bluetooth-config #914# #39# (unless (typep #920# (quote #921#)) (si::structure-type-error #920# (quote #922#) (quote cl-protobufs.meshtastic::config.bluetooth-config) (quote cl-protobufs.implementation::%%is-set))) (unless (typep #919# (quote #923#)) (si::structure-type-error #919# (quote #924#) (quote cl-protobufs.meshtastic::config.bluetooth-config) (quote cl-protobufs.implementation::%%bool-values))) (unless (typep #918# (quote #925#)) (si::structure-type-error #918# (quote #926#) (quote cl-protobufs.meshtastic::config.bluetooth-config) (quote cl-protobufs.implementation::%%bytes))) (unless (typep #917# (quote cl-protobufs::uint32)) (si::structure-type-error #917# (quote cl-protobufs::uint32) (quote cl-protobufs.meshtastic::config.bluetooth-config) (quote cl-protobufs.meshtastic::%fixed-pin))) (unless (typep #916# (quote keyword)) (si::structure-type-error #916# (quote keyword) (quote cl-protobufs.meshtastic::config.bluetooth-config) (quote cl-protobufs.meshtastic::%mode))) (unless (typep #915# (quote #927#)) (si::structure-type-error #915# (quote #928#) (quote cl-protobufs.meshtastic::config.bluetooth-config) (quote cl-protobufs.implementation::%%skipped-bytes))) (si::make-structure (load-time-value (find-class (quote cl-protobufs.meshtastic::config.bluetooth-config))) #915# #916# #917# #918# #919# #920#))) cl-protobufs.meshtastic::config.bluetooth-config-%%is-set (cl-protobufs.meshtastic::config.bluetooth-config-%%is-set) #:g34969 #Y(nil nil nil (24 45 10859 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 10823 6 2 12 9 5 13 0 10 1 6 6 12 15 274 13 2 15 273 1 10823 6 2 12 8 5 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.bluetooth-config-%%bool-values (cl-protobufs.meshtastic::config.bluetooth-config-%%bool-values) #:g34970 #Y(nil nil nil (24 45 10863 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 10823 6 2 12 9 4 13 0 10 1 6 6 12 15 274 13 2 15 273 1 10823 6 2 12 8 4 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.bluetooth-config-%%bytes (cl-protobufs.meshtastic::config.bluetooth-config-%%bytes) #:g34971 #Y(nil nil nil (24 45 10867 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 10823 6 2 12 9 3 13 0 10 1 6 6 12 15 274 13 2 15 273 1 10823 6 2 12 8 3 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.bluetooth-config-%fixed-pin (cl-protobufs.meshtastic::config.bluetooth-config-%fixed-pin) #:g34972 #Y(nil nil nil (24 45 10871 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 10823 6 2 12 9 2 13 0 10 1 6 6 12 15 274 13 2 15 273 1 10823 6 2 12 8 2 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.bluetooth-config-%mode (cl-protobufs.meshtastic::config.bluetooth-config-%mode) #:g34973 #Y(nil nil nil (24 45 10875 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 10823 6 2 12 9 1 13 0 10 1 6 6 12 15 274 13 2 15 273 1 10823 6 2 12 8 1 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config.bluetooth-config-%%skipped-bytes (cl-protobufs.meshtastic::config.bluetooth-config-%%skipped-bytes) #:g34974 #Y(nil nil nil (24 45 10879 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 10823 6 2 12 9 0 13 0 10 1 6 6 12 15 274 13 2 15 273 1 10823 6 2 12 8 0 6 4 12 72 6 43 2 29) #1# #6# 718) ((inline cl-protobufs.meshtastic::config.bluetooth-config.enabled)) cl-protobufs.meshtastic::config.bluetooth-config.enabled (defun cl-protobufs.meshtastic::config.bluetooth-config.enabled) (#6# . 718) #929=(#930=#:obj29505) #930# #Y(cl-protobufs.meshtastic::config.bluetooth-config.enabled nil nil (24 45 10886 26 13 0 19 1 10861 12 9 0 19 2 223 16 368 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.bluetooth-config.enabled #929# #39# (the boolean (plusp (bit (cl-protobufs.meshtastic::config.bluetooth-config-%%bool-values #930#) 0))))) ((inline #931=(setf cl-protobufs.meshtastic::config.bluetooth-config.enabled))) #931# (defun #931#) (#6# . 718) #932=(#933=#:new-value29507 #934=#:obj29506) #933# #934# #Y(#931# nil nil (24 45 10894 24 45 10895 26 13 0 19 1 10861 12 9 0 10 1 39 6 8 1 73 38 4 8 0 73 12 19 3 378 29) #1# #6# 718) (function (ext::lambda-block #931# #932# #39# (declare (type boolean #933#)) nil (setf (bit (cl-protobufs.meshtastic::config.bluetooth-config-%%bool-values #934#) 0) (if #933# . #56#)))) ((inline cl-protobufs.meshtastic::config.bluetooth-config.%%has-enabled)) cl-protobufs.meshtastic::config.bluetooth-config.%%has-enabled (defun cl-protobufs.meshtastic::config.bluetooth-config.%%has-enabled) (#6# . 718) #935=(#934#) #936=#:cur-value29508 #Y(cl-protobufs.meshtastic::config.bluetooth-config.%%has-enabled nil nil (24 45 10895 26 13 0 19 1 10861 12 9 0 19 2 223 16 368 45 10903 13 0 75 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.bluetooth-config.%%has-enabled #935# #39# (let ((#936# (plusp (bit (cl-protobufs.meshtastic::config.bluetooth-config-%%bool-values #934#) 0)))) (not (eq #936# nil))))) ((inline cl-protobufs.meshtastic::config.bluetooth-config.clear-enabled)) cl-protobufs.meshtastic::config.bluetooth-config.clear-enabled (defun cl-protobufs.meshtastic::config.bluetooth-config.clear-enabled) (#6# . 718) #937=(#934#) #Y(cl-protobufs.meshtastic::config.bluetooth-config.clear-enabled nil nil (24 45 10895 26 13 0 19 1 10861 12 9 0 9 0 19 3 378 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.bluetooth-config.clear-enabled #937# #39# nil (setf (bit (cl-protobufs.meshtastic::config.bluetooth-config-%%bool-values #934#) 0) 0))) cl-protobufs.meshtastic::enabled (defmethod cl-protobufs.meshtastic::enabled (#934# cl-protobufs.meshtastic::config.bluetooth-config)) (#6# . 718) (cl-protobufs.meshtastic::config.bluetooth-config) (#934#) #Y(cl-protobufs.meshtastic::enabled nil nil (24 45 10895 26 13 0 19 1 10882 29) #1# #6# 718) #938=(setf cl-protobufs.meshtastic::enabled) (defmethod #938# #933# (#934# cl-protobufs.meshtastic::config.bluetooth-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.bluetooth-config) (#933# #934#) #:g34989 #:g34990 (setf cl-protobufs.meshtastic::config.bluetooth-config.enabled) #Y(#938# nil nil (24 45 10894 24 45 10895 26 10 0 45 10924 10 2 45 10925 13 0 13 1 33 10926 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.bluetooth-config.clear-enabled) (cl-protobufs.meshtastic::config.bluetooth-config.enabled) ((inline cl-protobufs.meshtastic::config.bluetooth-config.mode)) cl-protobufs.meshtastic::config.bluetooth-config.mode (defun cl-protobufs.meshtastic::config.bluetooth-config.mode) (#6# . 718) #939=(#940=#:obj29509) #940# #Y(cl-protobufs.meshtastic::config.bluetooth-config.mode nil nil (24 45 10935 26 13 0 19 1 10873 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.bluetooth-config.mode #939# #39# (the cl-protobufs.meshtastic::%%%%config.bluetooth-config.pairing-mode (cl-protobufs.meshtastic::config.bluetooth-config-%mode #940#)))) ((inline #941=(setf cl-protobufs.meshtastic::config.bluetooth-config.mode))) #941# (defun #941#) (#6# . 718) #942=(#943=#:new-value29511 #944=#:obj29510) #943# #944# #:g34993 #:g34994 #Y(#941# nil nil (24 45 10943 24 45 10944 26 10 0 45 10945 10 2 45 10946 13 1 15 10823 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #941# #942# #39# (declare (type cl-protobufs.meshtastic::%%%%config.bluetooth-config.pairing-mode #943#)) nil (setf (cl-protobufs.meshtastic::config.bluetooth-config-%mode #944#) #943#))) ((inline cl-protobufs.meshtastic::config.bluetooth-config.%%has-mode)) cl-protobufs.meshtastic::config.bluetooth-config.%%has-mode (defun cl-protobufs.meshtastic::config.bluetooth-config.%%has-mode) (#6# . 718) #945=(#944#) #946=#:cur-value29512 #Y(cl-protobufs.meshtastic::config.bluetooth-config.%%has-mode nil nil (24 45 10944 26 13 0 19 1 10873 45 10954 13 0 11 10774 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.bluetooth-config.%%has-mode #945# #39# (let ((#946# (cl-protobufs.meshtastic::config.bluetooth-config-%mode #944#))) (not (eq #946# :random-pin))))) ((inline cl-protobufs.meshtastic::config.bluetooth-config.clear-mode)) cl-protobufs.meshtastic::config.bluetooth-config.clear-mode (defun cl-protobufs.meshtastic::config.bluetooth-config.clear-mode) (#6# . 718) #947=(#944#) #:g34997 #:g34998 #Y(cl-protobufs.meshtastic::config.bluetooth-config.clear-mode nil nil (24 45 10944 26 10 0 45 10962 11 10774 45 10963 13 1 15 10823 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.bluetooth-config.clear-mode #947# #39# nil (setf (cl-protobufs.meshtastic::config.bluetooth-config-%mode #944#) :random-pin))) cl-protobufs.meshtastic::mode (defmethod cl-protobufs.meshtastic::mode (#944# cl-protobufs.meshtastic::config.bluetooth-config)) (#6# . 718) (cl-protobufs.meshtastic::config.bluetooth-config) (#944#) #Y(cl-protobufs.meshtastic::mode nil nil (24 45 10944 26 13 0 19 1 10931 29) #1# #6# 718) #948=(setf cl-protobufs.meshtastic::mode) (defmethod #948# #943# (#944# cl-protobufs.meshtastic::config.bluetooth-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.bluetooth-config) (#943# #944#) #:g35005 #:g35006 (setf cl-protobufs.meshtastic::config.bluetooth-config.mode) #Y(#948# nil nil (24 45 10943 24 45 10944 26 10 0 45 10977 10 2 45 10978 13 0 13 1 33 10979 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.bluetooth-config.clear-mode) (cl-protobufs.meshtastic::config.bluetooth-config.mode) ((inline cl-protobufs.meshtastic::config.bluetooth-config.fixed-pin)) cl-protobufs.meshtastic::config.bluetooth-config.fixed-pin (defun cl-protobufs.meshtastic::config.bluetooth-config.fixed-pin) (#6# . 718) #949=(#950=#:obj29513) #950# #Y(cl-protobufs.meshtastic::config.bluetooth-config.fixed-pin nil nil (24 45 10988 26 13 0 19 1 10869 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.bluetooth-config.fixed-pin #949# #39# (the cl-protobufs::uint32 (cl-protobufs.meshtastic::config.bluetooth-config-%fixed-pin #950#)))) ((inline #951=(setf cl-protobufs.meshtastic::config.bluetooth-config.fixed-pin))) #951# (defun #951#) (#6# . 718) #952=(#953=#:new-value29515 #954=#:obj29514) #953# #954# #:g35009 #:g35010 #Y(#951# nil nil (24 45 10996 24 45 10997 26 10 0 45 10998 10 2 45 10999 13 1 15 10823 9 2 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #951# #952# #39# (declare (type cl-protobufs::uint32 #953#)) nil (setf (cl-protobufs.meshtastic::config.bluetooth-config-%fixed-pin #954#) #953#))) ((inline cl-protobufs.meshtastic::config.bluetooth-config.%%has-fixed-pin)) cl-protobufs.meshtastic::config.bluetooth-config.%%has-fixed-pin (defun cl-protobufs.meshtastic::config.bluetooth-config.%%has-fixed-pin) (#6# . 718) #955=(#954#) #956=#:cur-value29516 #Y(cl-protobufs.meshtastic::config.bluetooth-config.%%has-fixed-pin nil nil (24 45 10997 26 13 0 19 1 10869 45 11007 13 0 8 0 17 332 76 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.bluetooth-config.%%has-fixed-pin #955# #39# (let ((#956# (cl-protobufs.meshtastic::config.bluetooth-config-%fixed-pin #954#))) (not (eq #956# 0))))) ((inline cl-protobufs.meshtastic::config.bluetooth-config.clear-fixed-pin)) cl-protobufs.meshtastic::config.bluetooth-config.clear-fixed-pin (defun cl-protobufs.meshtastic::config.bluetooth-config.clear-fixed-pin) (#6# . 718) #957=(#954#) #:g35013 #:g35014 #Y(cl-protobufs.meshtastic::config.bluetooth-config.clear-fixed-pin nil nil (24 45 10997 26 10 0 45 11015 8 0 45 11016 13 1 15 10823 9 2 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.bluetooth-config.clear-fixed-pin #957# #39# nil (setf (cl-protobufs.meshtastic::config.bluetooth-config-%fixed-pin #954#) 0))) cl-protobufs.meshtastic::fixed-pin (defmethod cl-protobufs.meshtastic::fixed-pin (#954# cl-protobufs.meshtastic::config.bluetooth-config)) (#6# . 718) (cl-protobufs.meshtastic::config.bluetooth-config) (#954#) #Y(cl-protobufs.meshtastic::fixed-pin nil nil (24 45 10997 26 13 0 19 1 10984 29) #1# #6# 718) #958=(setf cl-protobufs.meshtastic::fixed-pin) (defmethod #958# #953# (#954# cl-protobufs.meshtastic::config.bluetooth-config)) (#6# . 718) (t cl-protobufs.meshtastic::config.bluetooth-config) (#953# #954#) #:g35021 #:g35022 (setf cl-protobufs.meshtastic::config.bluetooth-config.fixed-pin) #Y(#958# nil nil (24 45 10996 24 45 10997 26 10 0 45 11030 10 2 45 11031 13 0 13 1 33 11032 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.bluetooth-config.clear-fixed-pin) (cl-protobufs.meshtastic::config.bluetooth-config.fixed-pin) ((inline cl-protobufs.meshtastic::make-config.bluetooth-config)) cl-protobufs.meshtastic::make-config.bluetooth-config (defun cl-protobufs.meshtastic::make-config.bluetooth-config) (#6# . 718) #959=(&key (cl-protobufs.meshtastic::enabled :%unset) (cl-protobufs.meshtastic::mode :%unset) (cl-protobufs.meshtastic::fixed-pin :%unset)) (nil :fixed-pin :mode :enabled) #960=#:obj29504 #:g35029 #:g35030 (setf cl-protobufs.meshtastic::config.bluetooth-config.enabled) #:g35031 #:g35032 (setf cl-protobufs.meshtastic::config.bluetooth-config.mode) #:g35033 #:g35034 (setf cl-protobufs.meshtastic::config.bluetooth-config.fixed-pin) #Y(cl-protobufs.meshtastic::make-config.bluetooth-config nil nil (28 11041 22 40 3 14 777 46 10913 22 40 3 14 777 46 10966 22 40 3 14 777 46 11019 19 0 10832 45 11042 13 3 11 777 17 332 76 39 21 10 0 45 11043 10 4 45 11044 13 0 13 1 33 11045 18 2 43 1 43 1 13 2 11 777 17 332 40 4 10 2 76 76 39 21 10 0 45 11046 10 3 45 11047 13 0 13 1 33 11048 18 2 43 1 43 1 13 1 11 777 17 332 40 4 10 1 76 76 39 21 10 0 45 11049 10 2 45 11050 13 0 13 1 33 11051 18 2 43 1 43 1 10 0 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::make-config.bluetooth-config #959# #39# (let ((#960# (cl-protobufs.meshtastic::%make-config.bluetooth-config))) (unless (eq cl-protobufs.meshtastic::enabled :%unset) (setf (cl-protobufs.meshtastic::config.bluetooth-config.enabled #960#) cl-protobufs.meshtastic::enabled)) (unless (or (eq cl-protobufs.meshtastic::mode :%unset) (not cl-protobufs.meshtastic::mode)) (setf (cl-protobufs.meshtastic::config.bluetooth-config.mode #960#) cl-protobufs.meshtastic::mode)) (unless (or (eq cl-protobufs.meshtastic::fixed-pin :%unset) (not cl-protobufs.meshtastic::fixed-pin)) (setf (cl-protobufs.meshtastic::config.bluetooth-config.fixed-pin #960#) cl-protobufs.meshtastic::fixed-pin)) #960#))) cl-protobufs.meshtastic::config.bluetooth-config.clear-%%is-set (defun cl-protobufs.meshtastic::config.bluetooth-config.clear-%%is-set) (#6# . 718) (#960#) #Y(cl-protobufs.meshtastic::config.bluetooth-config.clear-%%is-set nil nil (24 45 11042 26 13 0 19 1 10857 12 9 0 19 2 812 29) #1# #6# 718) (cl-protobufs.meshtastic::make-config.bluetooth-config cl-protobufs.meshtastic::config.bluetooth-config-%%is-set) (defmethod cl-protobufs::clear (#960# cl-protobufs.meshtastic::config.bluetooth-config)) (#6# . 718) (cl-protobufs.meshtastic::config.bluetooth-config) (#960#) #:g35041 #:g35042 #Y(cl-protobufs::clear nil nil (24 45 11042 26 10 0 45 11064 75 45 11065 13 1 15 204 9 0 13 0 19 4 118 43 1 43 1 13 0 19 1 10907 13 0 19 1 10958 13 0 19 1 11011 13 0 19 1 11054 29) #1# #6# 718) 0 #:g35043 #:g35044 #:g35045 (setf slot-value) #:g35046 #:g35047 "BluetoothConfig" #:g35048 (setf slot-value) #:g35049 #:g35050 "meshtastic.Config.BluetoothConfig" #:g35051 (setf slot-value) #:g35052 #:g35053 #:g35054 (setf slot-value) #:g35055 #:g35056 #:g35057 (setf slot-value) #:g35058 #:g35059 0 #:g35060 (setf slot-value) #:g35061 #:g35062 #:g35063 (setf slot-value) #:g35064 #:g35065 #:g35066 (setf slot-value) #:g35067 #:g35068 #:g35069 (setf slot-value) #:g35070 #:g35071 #:g35072 (setf slot-value) 0 0 #:g35073 #:g35074 #:g35075 (setf slot-value) #:g35076 #:g35077 "enabled" #:g35078 (setf slot-value) #:g35079 #:g35080 "meshtastic.Config.BluetoothConfig.enabled" #:g35081 (setf slot-value) #:g35082 #:g35083 #:g35084 (setf slot-value) #:g35085 #:g35086 #:g35087 (setf slot-value) #:g35088 #:g35089 #:g35090 (setf slot-value) #:g35091 #:g35092 #:g35093 (setf slot-value) #:g35094 #:g35095 #:g35096 (setf slot-value) #:g35097 #:g35098 #:g35099 (setf slot-value) #:g35100 #:g35101 #:g35102 (setf slot-value) #:g35103 #:g35104 cl-protobufs.meshtastic::%enabled #:g35105 (setf slot-value) #:g35106 #:g35107 #:g35108 (setf slot-value) #:g35109 #:g35110 "enabled" #:g35111 (setf slot-value) #:g35112 #:g35113 #:g35114 (setf slot-value) #:g35115 #:g35116 #:g35117 (setf slot-value) #:g35118 #:g35119 #:g35120 (setf slot-value) #:g35121 #:g35122 #:g35123 (setf slot-value) #:g35124 #:g35125 #:g35126 (setf slot-value) 0 0 #:g35127 #:g35128 #:g35129 (setf slot-value) #:g35130 #:g35131 "mode" #:g35132 (setf slot-value) #:g35133 #:g35134 "meshtastic.Config.BluetoothConfig.mode" #:g35135 (setf slot-value) #:g35136 #:g35137 #:g35138 (setf slot-value) #:g35139 #:g35140 #:g35141 (setf slot-value) #:g35142 #:g35143 #:g35144 (setf slot-value) #:g35145 #:g35146 #:g35147 (setf slot-value) #:g35148 #:g35149 #:g35150 (setf slot-value) #:g35151 #:g35152 #:g35153 (setf slot-value) #:g35154 #:g35155 #:g35156 (setf slot-value) #:g35157 #:g35158 #:g35159 (setf slot-value) #:g35160 #:g35161 #:g35162 (setf slot-value) #:g35163 #:g35164 "mode" #:g35165 (setf slot-value) #:g35166 #:g35167 #:g35168 (setf slot-value) #:g35169 #:g35170 #:g35171 (setf slot-value) #:g35172 #:g35173 #:g35174 (setf slot-value) #:g35175 #:g35176 #:g35177 (setf slot-value) #:g35178 #:g35179 #:g35180 (setf slot-value) 0 #:g35181 #:g35182 #:g35183 (setf slot-value) #:g35184 #:g35185 "fixed_pin" #:g35186 (setf slot-value) #:g35187 #:g35188 "meshtastic.Config.BluetoothConfig.fixed_pin" #:g35189 (setf slot-value) #:g35190 #:g35191 #:g35192 (setf slot-value) #:g35193 #:g35194 #:g35195 (setf slot-value) #:g35196 #:g35197 #:g35198 (setf slot-value) #:g35199 #:g35200 #:g35201 (setf slot-value) #:g35202 #:g35203 #:g35204 (setf slot-value) #:g35205 #:g35206 #:g35207 (setf slot-value) #:g35208 #:g35209 #:g35210 (setf slot-value) #:g35211 #:g35212 #:g35213 (setf slot-value) #:g35214 #:g35215 #:g35216 (setf slot-value) #:g35217 #:g35218 "fixedPin" #:g35219 (setf slot-value) #:g35220 #:g35221 #:g35222 (setf slot-value) #:g35223 #:g35224 #:g35225 (setf slot-value) #:g35226 #:g35227 #:g35228 (setf slot-value) #:g35229 #:g35230 #:g35231 (setf slot-value) #:g35232 #:g35233 #:g35234 (setf slot-value) ((inline cl-protobufs.meshtastic::%make-config)) "CONFIG-" ((cl-protobufs.implementation::%%bytes nil :type #10#) (cl-protobufs.implementation::%%is-set #961=(make-array 0 . #16#) :type #962=(bit-vector 0)) (cl-protobufs.meshtastic::%payload-variant #963=(cl-protobufs.implementation::make-oneof) :type cl-protobufs.implementation::oneof)) (#18# (cl-protobufs.implementation::%%bytes nil #10# nil 1 nil) (cl-protobufs.implementation::%%is-set #961# #962# nil 2 nil) (cl-protobufs.meshtastic::%payload-variant #963# cl-protobufs.implementation::oneof nil 3 nil)) cl-protobufs.meshtastic::copy-config (cl-protobufs.meshtastic::%make-config) #964=(cl-protobufs.meshtastic::config (:constructor cl-protobufs.meshtastic::%make-config) . #20#) (defstruct #964#) (#6# . 718) cl-protobufs.meshtastic::%make-config (defun cl-protobufs.meshtastic::%make-config) (#6# . 718) #965=(&key #966=#:%%skipped-bytes #967=#:%%bytes (#968=#:%%is-set (make-array 0 :element-type (quote bit) :initial-element 0)) (#969=#:%payload-variant (cl-protobufs.implementation::make-oneof))) (nil :%payload-variant :%%is-set :%%bytes :%%skipped-bytes) #966# #967# #968# cl-protobufs.implementation::make-oneof #969# cl-protobufs.implementation::oneof cl-protobufs.meshtastic::%payload-variant #970=(bit-vector 0) #971=(bit-vector 0) #972=(or null (simple-array (unsigned-byte 8))) #973=(or null (simple-array (unsigned-byte 8))) #974=(or null cl-protobufs::byte-vector) #975=(or null cl-protobufs::byte-vector) 0 #Y(cl-protobufs.meshtastic::%make-config nil nil (28 11355 22 40 2 77 46 11356 22 40 2 77 46 11357 22 40 15 9 0 14 222 15 223 14 228 9 0 19 5 226 12 46 11358 22 40 5 19 0 11359 12 46 11360 13 0 15 11361 19 2 231 76 39 12 13 0 15 11361 15 8 15 11362 19 4 234 13 1 15 11363 19 2 231 76 39 12 13 1 15 11364 15 8 15 233 19 4 234 13 2 15 11365 19 2 231 76 39 12 13 2 15 11366 15 8 15 240 19 4 234 13 3 15 11367 19 2 231 76 39 12 13 3 15 11368 15 8 15 249 19 4 234 15 11369 13 3 13 2 13 1 13 0 19 5 251 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::%make-config #965# #39# (unless (typep #969# (quote cl-protobufs.implementation::oneof)) (si::structure-type-error #969# (quote cl-protobufs.implementation::oneof) (quote cl-protobufs.meshtastic::config) (quote cl-protobufs.meshtastic::%payload-variant))) (unless (typep #968# (quote #970#)) (si::structure-type-error #968# (quote #971#) (quote cl-protobufs.meshtastic::config) (quote cl-protobufs.implementation::%%is-set))) (unless (typep #967# (quote #972#)) (si::structure-type-error #967# (quote #973#) (quote cl-protobufs.meshtastic::config) (quote cl-protobufs.implementation::%%bytes))) (unless (typep #966# (quote #974#)) (si::structure-type-error #966# (quote #975#) (quote cl-protobufs.meshtastic::config) (quote cl-protobufs.implementation::%%skipped-bytes))) (si::make-structure (load-time-value (find-class (quote cl-protobufs.meshtastic::config))) #966# #967# #968# #969#))) cl-protobufs.meshtastic::config-%payload-variant (cl-protobufs.meshtastic::config-%payload-variant) #:g35239 #Y(nil nil nil (24 45 11374 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 8 6 2 12 9 3 13 0 10 1 6 6 12 15 274 13 2 15 273 1 8 6 2 12 8 3 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config-%%is-set (cl-protobufs.meshtastic::config-%%is-set) #:g35240 #Y(nil nil nil (24 45 11378 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 8 6 2 12 9 2 13 0 10 1 6 6 12 15 274 13 2 15 273 1 8 6 2 12 8 2 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config-%%bytes (cl-protobufs.meshtastic::config-%%bytes) #:g35241 #Y(nil nil nil (24 45 11382 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 8 6 2 12 9 1 13 0 10 1 6 6 12 15 274 13 2 15 273 1 8 6 2 12 8 1 6 4 12 72 6 43 2 29) #1# #6# 718) cl-protobufs.meshtastic::config-%%skipped-bytes (cl-protobufs.meshtastic::config-%%skipped-bytes) #:g35242 #Y(nil nil nil (24 45 11386 24 45 268 26 19 0 269 12 19 0 269 12 46 270 46 271 77 77 13 0 13 1 15 272 13 2 15 273 1 8 6 2 12 9 0 13 0 10 1 6 6 12 15 274 13 2 15 273 1 8 6 2 12 8 0 6 4 12 72 6 43 2 29) #1# #6# 718) ((inline cl-protobufs.meshtastic::config.payload-variant-case)) cl-protobufs.meshtastic::config.payload-variant-case (defun cl-protobufs.meshtastic::config.payload-variant-case) (#6# . 718) #976=(#977=#:obj29518) #977# cl-protobufs.implementation::oneof-set-field #:g35244 cl-protobufs.meshtastic::device cl-protobufs.meshtastic::position cl-protobufs.meshtastic::power cl-protobufs.meshtastic::network cl-protobufs.meshtastic::display cl-protobufs.meshtastic::lora cl-protobufs.meshtastic::bluetooth nil (0 1 2 3 4 5 6 nil) si::ecase-error #Y(cl-protobufs.meshtastic::config.payload-variant-case nil nil (24 45 11393 26 13 0 19 1 11372 12 19 1 11394 45 11395 10 0 42 50 6 1 11396 73 38 62 42 51 6 1 11397 73 38 54 42 52 6 1 11398 73 38 46 42 53 6 1 11399 73 38 38 42 54 6 1 11400 73 38 30 42 55 6 1 11401 73 38 22 42 56 6 1 11402 73 38 14 42 11403 5 75 73 38 7 13 0 1 11404 17 11405 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.payload-variant-case #976# #39# (ecase (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #977#)) (0 (quote cl-protobufs.meshtastic::device)) (1 (quote cl-protobufs.meshtastic::position)) (2 (quote cl-protobufs.meshtastic::power)) (3 (quote cl-protobufs.meshtastic::network)) (4 (quote cl-protobufs.meshtastic::display)) (5 (quote cl-protobufs.meshtastic::lora)) (6 (quote cl-protobufs.meshtastic::bluetooth)) ((nil) nil)))) ((inline cl-protobufs.meshtastic::config.%%has-payload-variant)) cl-protobufs.meshtastic::config.%%has-payload-variant (defun cl-protobufs.meshtastic::config.%%has-payload-variant) (#6# . 718) #978=(#977#) eql #Y(cl-protobufs.meshtastic::config.%%has-payload-variant nil nil (24 45 11393 26 13 0 19 1 11372 12 19 1 11394 12 75 17 11413 76 73 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.%%has-payload-variant #978# #39# (not (eql (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #977#)) nil)))) ((inline cl-protobufs.meshtastic::config.has-payload-variant)) cl-protobufs.meshtastic::config.has-payload-variant (defun cl-protobufs.meshtastic::config.has-payload-variant) (#6# . 718) #979=(#977#) #Y(cl-protobufs.meshtastic::config.has-payload-variant nil nil (24 45 11393 26 13 0 19 1 11409 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.has-payload-variant #979# #39# (cl-protobufs.meshtastic::config.%%has-payload-variant #977#))) ((inline cl-protobufs.meshtastic::config.clear-payload-variant)) cl-protobufs.meshtastic::config.clear-payload-variant (defun cl-protobufs.meshtastic::config.clear-payload-variant) (#6# . 718) #980=(#977#) #:g35249 #:g35250 #:g35251 #:g35252 #Y(cl-protobufs.meshtastic::config.clear-payload-variant nil nil (24 45 11393 26 13 0 19 1 11372 45 11428 75 45 11429 13 1 15 11361 9 0 13 0 19 4 118 43 1 43 1 13 0 19 1 11372 45 11430 75 45 11431 13 1 15 11361 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.clear-payload-variant #980# #39# (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #977#)) nil) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #977#)) nil))) (cl-protobufs.meshtastic::config.payload-variant-case cl-protobufs.meshtastic::config.has-payload-variant cl-protobufs.meshtastic::config.clear-payload-variant) ((inline cl-protobufs.meshtastic::config.device)) cl-protobufs.meshtastic::config.device (defun cl-protobufs.meshtastic::config.device) (#6# . 718) #981=(#982=#:obj29519) #982# cl-protobufs.implementation::oneof-value #Y(cl-protobufs.meshtastic::config.device nil nil (24 45 11440 26 13 0 19 1 11372 12 19 1 11394 12 8 0 17 332 39 12 13 0 19 1 11372 12 19 1 11441 38 3 75 73 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.device #981# #39# (if (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #982#)) 0) (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #982#)) nil))) ((inline #983=(setf cl-protobufs.meshtastic::config.device))) #983# (defun #983#) (#6# . 718) #984=(#985=#:new-value29520 #982#) #985# #:g35257 #:g35258 #:g35259 #:g35260 #Y(#983# nil nil (24 45 11449 24 45 11440 26 13 0 19 1 11372 45 11450 8 0 45 11451 13 1 15 11361 9 1 13 0 19 4 118 43 1 43 1 13 0 19 1 11372 45 11452 10 2 45 11453 13 1 15 11361 9 0 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #983# #984# #39# (declare (type cl-protobufs.meshtastic::config.device-config #985#)) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #982#)) 0) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #982#)) #985#))) ((inline cl-protobufs.meshtastic::config.%%has-device)) cl-protobufs.meshtastic::config.%%has-device (defun cl-protobufs.meshtastic::config.%%has-device) (#6# . 718) #986=(#982#) #Y(cl-protobufs.meshtastic::config.%%has-device nil nil (24 45 11440 26 13 0 19 1 11372 12 19 1 11394 12 8 0 17 332 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.%%has-device #986# #39# (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #982#)) 0))) ((inline cl-protobufs.meshtastic::config.has-device)) cl-protobufs.meshtastic::config.has-device (defun cl-protobufs.meshtastic::config.has-device) (#6# . 718) #987=(#982#) #Y(cl-protobufs.meshtastic::config.has-device nil nil (24 45 11440 26 13 0 19 1 11457 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.has-device #987# #39# (cl-protobufs.meshtastic::config.%%has-device #982#))) ((inline cl-protobufs.meshtastic::config.clear-device)) cl-protobufs.meshtastic::config.clear-device (defun cl-protobufs.meshtastic::config.clear-device) (#6# . 718) #988=(#982#) #:g35265 #:g35266 #:g35267 #:g35268 #Y(cl-protobufs.meshtastic::config.clear-device nil nil (24 45 11440 26 13 0 19 1 11457 73 39 51 13 0 19 1 11372 45 11475 75 45 11476 13 1 15 11361 9 0 13 0 19 4 118 43 1 43 1 13 0 19 1 11372 45 11477 75 45 11478 13 1 15 11361 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.clear-device #988# #39# (when (cl-protobufs.meshtastic::config.%%has-device #982#) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #982#)) nil) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #982#)) nil)))) (defmethod cl-protobufs.meshtastic::device (#982# cl-protobufs.meshtastic::config)) (#6# . 718) (cl-protobufs.meshtastic::config) (#982#) #Y(cl-protobufs.meshtastic::device nil nil (24 45 11440 26 13 0 19 1 11436 29) #1# #6# 718) #989=(setf cl-protobufs.meshtastic::device) (defmethod #989# #985# (#982# cl-protobufs.meshtastic::config)) (#6# . 718) (t cl-protobufs.meshtastic::config) (#985# #982#) #:g35275 #:g35276 (setf cl-protobufs.meshtastic::config.device) #Y(#989# nil nil (24 45 11449 24 45 11440 26 10 0 45 11491 10 2 45 11492 13 0 13 1 33 11493 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.has-device cl-protobufs.meshtastic::config.clear-device cl-protobufs.meshtastic::config.device) ((inline cl-protobufs.meshtastic::config.position)) cl-protobufs.meshtastic::config.position (defun cl-protobufs.meshtastic::config.position) (#6# . 718) #990=(#991=#:obj29523) #991# #Y(cl-protobufs.meshtastic::config.position nil nil (24 45 11501 26 13 0 19 1 11372 12 19 1 11394 12 8 1 17 332 39 12 13 0 19 1 11372 12 19 1 11441 38 3 75 73 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.position #990# #39# (if (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #991#)) 1) (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #991#)) nil))) ((inline #992=(setf cl-protobufs.meshtastic::config.position))) #992# (defun #992#) (#6# . 718) #993=(#994=#:new-value29524 #991#) #994# #:g35281 #:g35282 #:g35283 #:g35284 #Y(#992# nil nil (24 45 11509 24 45 11501 26 13 0 19 1 11372 45 11510 8 1 45 11511 13 1 15 11361 9 1 13 0 19 4 118 43 1 43 1 13 0 19 1 11372 45 11512 10 2 45 11513 13 1 15 11361 9 0 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #992# #993# #39# (declare (type cl-protobufs.meshtastic::config.position-config #994#)) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #991#)) 1) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #991#)) #994#))) ((inline cl-protobufs.meshtastic::config.%%has-position)) cl-protobufs.meshtastic::config.%%has-position (defun cl-protobufs.meshtastic::config.%%has-position) (#6# . 718) #995=(#991#) #Y(cl-protobufs.meshtastic::config.%%has-position nil nil (24 45 11501 26 13 0 19 1 11372 12 19 1 11394 12 8 1 17 332 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.%%has-position #995# #39# (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #991#)) 1))) ((inline cl-protobufs.meshtastic::config.has-position)) cl-protobufs.meshtastic::config.has-position (defun cl-protobufs.meshtastic::config.has-position) (#6# . 718) #996=(#991#) #Y(cl-protobufs.meshtastic::config.has-position nil nil (24 45 11501 26 13 0 19 1 11517 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.has-position #996# #39# (cl-protobufs.meshtastic::config.%%has-position #991#))) ((inline cl-protobufs.meshtastic::config.clear-position)) cl-protobufs.meshtastic::config.clear-position (defun cl-protobufs.meshtastic::config.clear-position) (#6# . 718) #997=(#991#) #:g35289 #:g35290 #:g35291 #:g35292 #Y(cl-protobufs.meshtastic::config.clear-position nil nil (24 45 11501 26 13 0 19 1 11517 73 39 51 13 0 19 1 11372 45 11535 75 45 11536 13 1 15 11361 9 0 13 0 19 4 118 43 1 43 1 13 0 19 1 11372 45 11537 75 45 11538 13 1 15 11361 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.clear-position #997# #39# (when (cl-protobufs.meshtastic::config.%%has-position #991#) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #991#)) nil) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #991#)) nil)))) (defmethod cl-protobufs.meshtastic::position (#991# cl-protobufs.meshtastic::config)) (#6# . 718) (cl-protobufs.meshtastic::config) (#991#) #Y(cl-protobufs.meshtastic::position nil nil (24 45 11501 26 13 0 19 1 11497 29) #1# #6# 718) #998=(setf cl-protobufs.meshtastic::position) (defmethod #998# #994# (#991# cl-protobufs.meshtastic::config)) (#6# . 718) (t cl-protobufs.meshtastic::config) (#994# #991#) #:g35299 #:g35300 (setf cl-protobufs.meshtastic::config.position) #Y(#998# nil nil (24 45 11509 24 45 11501 26 10 0 45 11551 10 2 45 11552 13 0 13 1 33 11553 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.has-position cl-protobufs.meshtastic::config.clear-position cl-protobufs.meshtastic::config.position) ((inline cl-protobufs.meshtastic::config.power)) cl-protobufs.meshtastic::config.power (defun cl-protobufs.meshtastic::config.power) (#6# . 718) #999=(#1000=#:obj29527) #1000# #Y(cl-protobufs.meshtastic::config.power nil nil (24 45 11561 26 13 0 19 1 11372 12 19 1 11394 12 8 2 17 332 39 12 13 0 19 1 11372 12 19 1 11441 38 3 75 73 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.power #999# #39# (if (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1000#)) 2) (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #1000#)) nil))) ((inline #1001=(setf cl-protobufs.meshtastic::config.power))) #1001# (defun #1001#) (#6# . 718) #1002=(#1003=#:new-value29528 #1000#) #1003# #:g35305 #:g35306 #:g35307 #:g35308 #Y(#1001# nil nil (24 45 11569 24 45 11561 26 13 0 19 1 11372 45 11570 8 2 45 11571 13 1 15 11361 9 1 13 0 19 4 118 43 1 43 1 13 0 19 1 11372 45 11572 10 2 45 11573 13 1 15 11361 9 0 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #1001# #1002# #39# (declare (type cl-protobufs.meshtastic::config.power-config #1003#)) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1000#)) 2) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #1000#)) #1003#))) ((inline cl-protobufs.meshtastic::config.%%has-power)) cl-protobufs.meshtastic::config.%%has-power (defun cl-protobufs.meshtastic::config.%%has-power) (#6# . 718) #1004=(#1000#) #Y(cl-protobufs.meshtastic::config.%%has-power nil nil (24 45 11561 26 13 0 19 1 11372 12 19 1 11394 12 8 2 17 332 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.%%has-power #1004# #39# (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1000#)) 2))) ((inline cl-protobufs.meshtastic::config.has-power)) cl-protobufs.meshtastic::config.has-power (defun cl-protobufs.meshtastic::config.has-power) (#6# . 718) #1005=(#1000#) #Y(cl-protobufs.meshtastic::config.has-power nil nil (24 45 11561 26 13 0 19 1 11577 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.has-power #1005# #39# (cl-protobufs.meshtastic::config.%%has-power #1000#))) ((inline cl-protobufs.meshtastic::config.clear-power)) cl-protobufs.meshtastic::config.clear-power (defun cl-protobufs.meshtastic::config.clear-power) (#6# . 718) #1006=(#1000#) #:g35313 #:g35314 #:g35315 #:g35316 #Y(cl-protobufs.meshtastic::config.clear-power nil nil (24 45 11561 26 13 0 19 1 11577 73 39 51 13 0 19 1 11372 45 11595 75 45 11596 13 1 15 11361 9 0 13 0 19 4 118 43 1 43 1 13 0 19 1 11372 45 11597 75 45 11598 13 1 15 11361 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.clear-power #1006# #39# (when (cl-protobufs.meshtastic::config.%%has-power #1000#) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #1000#)) nil) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1000#)) nil)))) (defmethod cl-protobufs.meshtastic::power (#1000# cl-protobufs.meshtastic::config)) (#6# . 718) (cl-protobufs.meshtastic::config) (#1000#) #Y(cl-protobufs.meshtastic::power nil nil (24 45 11561 26 13 0 19 1 11557 29) #1# #6# 718) #1007=(setf cl-protobufs.meshtastic::power) (defmethod #1007# #1003# (#1000# cl-protobufs.meshtastic::config)) (#6# . 718) (t cl-protobufs.meshtastic::config) (#1003# #1000#) #:g35323 #:g35324 (setf cl-protobufs.meshtastic::config.power) #Y(#1007# nil nil (24 45 11569 24 45 11561 26 10 0 45 11611 10 2 45 11612 13 0 13 1 33 11613 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.has-power cl-protobufs.meshtastic::config.clear-power cl-protobufs.meshtastic::config.power) ((inline cl-protobufs.meshtastic::config.network)) cl-protobufs.meshtastic::config.network (defun cl-protobufs.meshtastic::config.network) (#6# . 718) #1008=(#1009=#:obj29531) #1009# #Y(cl-protobufs.meshtastic::config.network nil nil (24 45 11621 26 13 0 19 1 11372 12 19 1 11394 12 8 3 17 332 39 12 13 0 19 1 11372 12 19 1 11441 38 3 75 73 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.network #1008# #39# (if (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1009#)) 3) (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #1009#)) nil))) ((inline #1010=(setf cl-protobufs.meshtastic::config.network))) #1010# (defun #1010#) (#6# . 718) #1011=(#1012=#:new-value29532 #1009#) #1012# #:g35329 #:g35330 #:g35331 #:g35332 #Y(#1010# nil nil (24 45 11629 24 45 11621 26 13 0 19 1 11372 45 11630 8 3 45 11631 13 1 15 11361 9 1 13 0 19 4 118 43 1 43 1 13 0 19 1 11372 45 11632 10 2 45 11633 13 1 15 11361 9 0 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #1010# #1011# #39# (declare (type cl-protobufs.meshtastic::config.network-config #1012#)) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1009#)) 3) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #1009#)) #1012#))) ((inline cl-protobufs.meshtastic::config.%%has-network)) cl-protobufs.meshtastic::config.%%has-network (defun cl-protobufs.meshtastic::config.%%has-network) (#6# . 718) #1013=(#1009#) #Y(cl-protobufs.meshtastic::config.%%has-network nil nil (24 45 11621 26 13 0 19 1 11372 12 19 1 11394 12 8 3 17 332 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.%%has-network #1013# #39# (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1009#)) 3))) ((inline cl-protobufs.meshtastic::config.has-network)) cl-protobufs.meshtastic::config.has-network (defun cl-protobufs.meshtastic::config.has-network) (#6# . 718) #1014=(#1009#) #Y(cl-protobufs.meshtastic::config.has-network nil nil (24 45 11621 26 13 0 19 1 11637 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.has-network #1014# #39# (cl-protobufs.meshtastic::config.%%has-network #1009#))) ((inline cl-protobufs.meshtastic::config.clear-network)) cl-protobufs.meshtastic::config.clear-network (defun cl-protobufs.meshtastic::config.clear-network) (#6# . 718) #1015=(#1009#) #:g35337 #:g35338 #:g35339 #:g35340 #Y(cl-protobufs.meshtastic::config.clear-network nil nil (24 45 11621 26 13 0 19 1 11637 73 39 51 13 0 19 1 11372 45 11655 75 45 11656 13 1 15 11361 9 0 13 0 19 4 118 43 1 43 1 13 0 19 1 11372 45 11657 75 45 11658 13 1 15 11361 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.clear-network #1015# #39# (when (cl-protobufs.meshtastic::config.%%has-network #1009#) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #1009#)) nil) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1009#)) nil)))) (defmethod cl-protobufs.meshtastic::network (#1009# cl-protobufs.meshtastic::config)) (#6# . 718) (cl-protobufs.meshtastic::config) (#1009#) #Y(cl-protobufs.meshtastic::network nil nil (24 45 11621 26 13 0 19 1 11617 29) #1# #6# 718) #1016=(setf cl-protobufs.meshtastic::network) (defmethod #1016# #1012# (#1009# cl-protobufs.meshtastic::config)) (#6# . 718) (t cl-protobufs.meshtastic::config) (#1012# #1009#) #:g35347 #:g35348 (setf cl-protobufs.meshtastic::config.network) #Y(#1016# nil nil (24 45 11629 24 45 11621 26 10 0 45 11671 10 2 45 11672 13 0 13 1 33 11673 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.has-network cl-protobufs.meshtastic::config.clear-network cl-protobufs.meshtastic::config.network) ((inline cl-protobufs.meshtastic::config.display)) cl-protobufs.meshtastic::config.display (defun cl-protobufs.meshtastic::config.display) (#6# . 718) #1017=(#1018=#:obj29535) #1018# #Y(cl-protobufs.meshtastic::config.display nil nil (24 45 11681 26 13 0 19 1 11372 12 19 1 11394 12 8 4 17 332 39 12 13 0 19 1 11372 12 19 1 11441 38 3 75 73 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.display #1017# #39# (if (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1018#)) 4) (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #1018#)) nil))) ((inline #1019=(setf cl-protobufs.meshtastic::config.display))) #1019# (defun #1019#) (#6# . 718) #1020=(#1021=#:new-value29536 #1018#) #1021# #:g35353 #:g35354 #:g35355 #:g35356 #Y(#1019# nil nil (24 45 11689 24 45 11681 26 13 0 19 1 11372 45 11690 8 4 45 11691 13 1 15 11361 9 1 13 0 19 4 118 43 1 43 1 13 0 19 1 11372 45 11692 10 2 45 11693 13 1 15 11361 9 0 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #1019# #1020# #39# (declare (type cl-protobufs.meshtastic::config.display-config #1021#)) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1018#)) 4) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #1018#)) #1021#))) ((inline cl-protobufs.meshtastic::config.%%has-display)) cl-protobufs.meshtastic::config.%%has-display (defun cl-protobufs.meshtastic::config.%%has-display) (#6# . 718) #1022=(#1018#) #Y(cl-protobufs.meshtastic::config.%%has-display nil nil (24 45 11681 26 13 0 19 1 11372 12 19 1 11394 12 8 4 17 332 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.%%has-display #1022# #39# (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1018#)) 4))) ((inline cl-protobufs.meshtastic::config.has-display)) cl-protobufs.meshtastic::config.has-display (defun cl-protobufs.meshtastic::config.has-display) (#6# . 718) #1023=(#1018#) #Y(cl-protobufs.meshtastic::config.has-display nil nil (24 45 11681 26 13 0 19 1 11697 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.has-display #1023# #39# (cl-protobufs.meshtastic::config.%%has-display #1018#))) ((inline cl-protobufs.meshtastic::config.clear-display)) cl-protobufs.meshtastic::config.clear-display (defun cl-protobufs.meshtastic::config.clear-display) (#6# . 718) #1024=(#1018#) #:g35361 #:g35362 #:g35363 #:g35364 #Y(cl-protobufs.meshtastic::config.clear-display nil nil (24 45 11681 26 13 0 19 1 11697 73 39 51 13 0 19 1 11372 45 11715 75 45 11716 13 1 15 11361 9 0 13 0 19 4 118 43 1 43 1 13 0 19 1 11372 45 11717 75 45 11718 13 1 15 11361 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.clear-display #1024# #39# (when (cl-protobufs.meshtastic::config.%%has-display #1018#) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #1018#)) nil) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1018#)) nil)))) (defmethod cl-protobufs.meshtastic::display (#1018# cl-protobufs.meshtastic::config)) (#6# . 718) (cl-protobufs.meshtastic::config) (#1018#) #Y(cl-protobufs.meshtastic::display nil nil (24 45 11681 26 13 0 19 1 11677 29) #1# #6# 718) #1025=(setf cl-protobufs.meshtastic::display) (defmethod #1025# #1021# (#1018# cl-protobufs.meshtastic::config)) (#6# . 718) (t cl-protobufs.meshtastic::config) (#1021# #1018#) #:g35371 #:g35372 (setf cl-protobufs.meshtastic::config.display) #Y(#1025# nil nil (24 45 11689 24 45 11681 26 10 0 45 11731 10 2 45 11732 13 0 13 1 33 11733 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.has-display cl-protobufs.meshtastic::config.clear-display cl-protobufs.meshtastic::config.display) ((inline cl-protobufs.meshtastic::config.lora)) cl-protobufs.meshtastic::config.lora (defun cl-protobufs.meshtastic::config.lora) (#6# . 718) #1026=(#1027=#:obj29539) #1027# #Y(cl-protobufs.meshtastic::config.lora nil nil (24 45 11741 26 13 0 19 1 11372 12 19 1 11394 12 8 5 17 332 39 12 13 0 19 1 11372 12 19 1 11441 38 3 75 73 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.lora #1026# #39# (if (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1027#)) 5) (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #1027#)) nil))) ((inline #1028=(setf cl-protobufs.meshtastic::config.lora))) #1028# (defun #1028#) (#6# . 718) #1029=(#1030=#:new-value29540 #1027#) #1030# #:g35377 #:g35378 #:g35379 #:g35380 #Y(#1028# nil nil (24 45 11749 24 45 11741 26 13 0 19 1 11372 45 11750 8 5 45 11751 13 1 15 11361 9 1 13 0 19 4 118 43 1 43 1 13 0 19 1 11372 45 11752 10 2 45 11753 13 1 15 11361 9 0 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #1028# #1029# #39# (declare (type cl-protobufs.meshtastic::config.lo-ra-config #1030#)) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1027#)) 5) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #1027#)) #1030#))) ((inline cl-protobufs.meshtastic::config.%%has-lora)) cl-protobufs.meshtastic::config.%%has-lora (defun cl-protobufs.meshtastic::config.%%has-lora) (#6# . 718) #1031=(#1027#) #Y(cl-protobufs.meshtastic::config.%%has-lora nil nil (24 45 11741 26 13 0 19 1 11372 12 19 1 11394 12 8 5 17 332 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.%%has-lora #1031# #39# (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1027#)) 5))) ((inline cl-protobufs.meshtastic::config.has-lora)) cl-protobufs.meshtastic::config.has-lora (defun cl-protobufs.meshtastic::config.has-lora) (#6# . 718) #1032=(#1027#) #Y(cl-protobufs.meshtastic::config.has-lora nil nil (24 45 11741 26 13 0 19 1 11757 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.has-lora #1032# #39# (cl-protobufs.meshtastic::config.%%has-lora #1027#))) ((inline cl-protobufs.meshtastic::config.clear-lora)) cl-protobufs.meshtastic::config.clear-lora (defun cl-protobufs.meshtastic::config.clear-lora) (#6# . 718) #1033=(#1027#) #:g35385 #:g35386 #:g35387 #:g35388 #Y(cl-protobufs.meshtastic::config.clear-lora nil nil (24 45 11741 26 13 0 19 1 11757 73 39 51 13 0 19 1 11372 45 11775 75 45 11776 13 1 15 11361 9 0 13 0 19 4 118 43 1 43 1 13 0 19 1 11372 45 11777 75 45 11778 13 1 15 11361 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.clear-lora #1033# #39# (when (cl-protobufs.meshtastic::config.%%has-lora #1027#) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #1027#)) nil) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1027#)) nil)))) (defmethod cl-protobufs.meshtastic::lora (#1027# cl-protobufs.meshtastic::config)) (#6# . 718) (cl-protobufs.meshtastic::config) (#1027#) #Y(cl-protobufs.meshtastic::lora nil nil (24 45 11741 26 13 0 19 1 11737 29) #1# #6# 718) #1034=(setf cl-protobufs.meshtastic::lora) (defmethod #1034# #1030# (#1027# cl-protobufs.meshtastic::config)) (#6# . 718) (t cl-protobufs.meshtastic::config) (#1030# #1027#) #:g35395 #:g35396 (setf cl-protobufs.meshtastic::config.lora) #Y(#1034# nil nil (24 45 11749 24 45 11741 26 10 0 45 11791 10 2 45 11792 13 0 13 1 33 11793 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.has-lora cl-protobufs.meshtastic::config.clear-lora cl-protobufs.meshtastic::config.lora) ((inline cl-protobufs.meshtastic::config.bluetooth)) cl-protobufs.meshtastic::config.bluetooth (defun cl-protobufs.meshtastic::config.bluetooth) (#6# . 718) #1035=(#1036=#:obj29543) #1036# #Y(cl-protobufs.meshtastic::config.bluetooth nil nil (24 45 11801 26 13 0 19 1 11372 12 19 1 11394 12 8 6 17 332 39 12 13 0 19 1 11372 12 19 1 11441 38 3 75 73 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.bluetooth #1035# #39# (if (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1036#)) 6) (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #1036#)) nil))) ((inline #1037=(setf cl-protobufs.meshtastic::config.bluetooth))) #1037# (defun #1037#) (#6# . 718) #1038=(#1039=#:new-value29544 #1036#) #1039# #:g35401 #:g35402 #:g35403 #:g35404 #Y(#1037# nil nil (24 45 11809 24 45 11801 26 13 0 19 1 11372 45 11810 8 6 45 11811 13 1 15 11361 9 1 13 0 19 4 118 43 1 43 1 13 0 19 1 11372 45 11812 10 2 45 11813 13 1 15 11361 9 0 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block #1037# #1038# #39# (declare (type cl-protobufs.meshtastic::config.bluetooth-config #1039#)) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1036#)) 6) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #1036#)) #1039#))) ((inline cl-protobufs.meshtastic::config.%%has-bluetooth)) cl-protobufs.meshtastic::config.%%has-bluetooth (defun cl-protobufs.meshtastic::config.%%has-bluetooth) (#6# . 718) #1040=(#1036#) #Y(cl-protobufs.meshtastic::config.%%has-bluetooth nil nil (24 45 11801 26 13 0 19 1 11372 12 19 1 11394 12 8 6 17 332 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.%%has-bluetooth #1040# #39# (eq (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1036#)) 6))) ((inline cl-protobufs.meshtastic::config.has-bluetooth)) cl-protobufs.meshtastic::config.has-bluetooth (defun cl-protobufs.meshtastic::config.has-bluetooth) (#6# . 718) #1041=(#1036#) #Y(cl-protobufs.meshtastic::config.has-bluetooth nil nil (24 45 11801 26 13 0 19 1 11817 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.has-bluetooth #1041# #39# (cl-protobufs.meshtastic::config.%%has-bluetooth #1036#))) ((inline cl-protobufs.meshtastic::config.clear-bluetooth)) cl-protobufs.meshtastic::config.clear-bluetooth (defun cl-protobufs.meshtastic::config.clear-bluetooth) (#6# . 718) #1042=(#1036#) #:g35409 #:g35410 #:g35411 #:g35412 #Y(cl-protobufs.meshtastic::config.clear-bluetooth nil nil (24 45 11801 26 13 0 19 1 11817 73 39 51 13 0 19 1 11372 45 11835 75 45 11836 13 1 15 11361 9 0 13 0 19 4 118 43 1 43 1 13 0 19 1 11372 45 11837 75 45 11838 13 1 15 11361 9 1 13 0 19 4 118 43 1 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::config.clear-bluetooth #1042# #39# (when (cl-protobufs.meshtastic::config.%%has-bluetooth #1036#) (setf (cl-protobufs.implementation::oneof-value (cl-protobufs.meshtastic::config-%payload-variant #1036#)) nil) (setf (cl-protobufs.implementation::oneof-set-field (cl-protobufs.meshtastic::config-%payload-variant #1036#)) nil)))) (defmethod cl-protobufs.meshtastic::bluetooth (#1036# cl-protobufs.meshtastic::config)) (#6# . 718) (cl-protobufs.meshtastic::config) (#1036#) #Y(cl-protobufs.meshtastic::bluetooth nil nil (24 45 11801 26 13 0 19 1 11797 29) #1# #6# 718) #1043=(setf cl-protobufs.meshtastic::bluetooth) (defmethod #1043# #1039# (#1036# cl-protobufs.meshtastic::config)) (#6# . 718) (t cl-protobufs.meshtastic::config) (#1039# #1036#) #:g35419 #:g35420 (setf cl-protobufs.meshtastic::config.bluetooth) #Y(#1043# nil nil (24 45 11809 24 45 11801 26 10 0 45 11851 10 2 45 11852 13 0 13 1 33 11853 18 2 43 1 43 1 29) #1# #6# 718) (cl-protobufs.meshtastic::config.has-bluetooth cl-protobufs.meshtastic::config.clear-bluetooth cl-protobufs.meshtastic::config.bluetooth) ((inline cl-protobufs.meshtastic::make-config)) cl-protobufs.meshtastic::make-config (defun cl-protobufs.meshtastic::make-config) (#6# . 718) #1044=(&key (cl-protobufs.meshtastic::payload-variant :%unset) (cl-protobufs.meshtastic::device :%unset) (cl-protobufs.meshtastic::position :%unset) (cl-protobufs.meshtastic::power :%unset) (cl-protobufs.meshtastic::network :%unset) (cl-protobufs.meshtastic::display :%unset) (cl-protobufs.meshtastic::lora :%unset) (cl-protobufs.meshtastic::bluetooth :%unset)) (nil :bluetooth :lora :display :network :power :position :device :payload-variant) cl-protobufs.meshtastic::payload-variant #1045=#:obj29517 #:g35438 #:g35439 (setf cl-protobufs.meshtastic::config.device) #:g35440 #:g35441 (setf cl-protobufs.meshtastic::config.position) #:g35442 #:g35443 (setf cl-protobufs.meshtastic::config.power) #:g35444 #:g35445 (setf cl-protobufs.meshtastic::config.network) #:g35446 #:g35447 (setf cl-protobufs.meshtastic::config.display) #:g35448 #:g35449 (setf cl-protobufs.meshtastic::config.lora) #:g35450 #:g35451 (setf cl-protobufs.meshtastic::config.bluetooth) #:g35452 #:g35453 #:g35454 (setf slot-value) #Y(cl-protobufs.meshtastic::make-config nil nil (28 11861 22 40 3 14 777 46 11862 22 40 3 14 777 46 11396 22 40 3 14 777 46 11397 22 40 3 14 777 46 11398 22 40 3 14 777 46 11399 22 40 3 14 777 46 11400 22 40 3 14 777 46 11401 22 40 3 14 777 46 11402 19 0 11351 45 11863 13 7 11 777 17 332 40 4 10 7 76 76 39 21 10 0 45 11864 10 8 45 11865 13 0 13 1 33 11866 18 2 43 1 43 1 13 6 11 777 17 332 40 4 10 6 76 76 39 21 10 0 45 11867 10 7 45 11868 13 0 13 1 33 11869 18 2 43 1 43 1 13 5 11 777 17 332 40 4 10 5 76 76 39 21 10 0 45 11870 10 6 45 11871 13 0 13 1 33 11872 18 2 43 1 43 1 13 4 11 777 17 332 40 4 10 4 76 76 39 21 10 0 45 11873 10 5 45 11874 13 0 13 1 33 11875 18 2 43 1 43 1 13 3 11 777 17 332 40 4 10 3 76 76 39 21 10 0 45 11876 10 4 45 11877 13 0 13 1 33 11878 18 2 43 1 43 1 13 2 11 777 17 332 40 4 10 2 76 76 39 21 10 0 45 11879 10 3 45 11880 13 0 13 1 33 11881 18 2 43 1 43 1 13 1 11 777 17 332 40 4 10 1 76 76 39 21 10 0 45 11882 10 2 45 11883 13 0 13 1 33 11884 18 2 43 1 43 1 13 8 11 777 17 332 40 4 10 8 76 76 39 27 10 0 45 11885 1 11362 45 11886 10 10 45 11887 13 0 13 2 13 1 33 11888 18 3 43 1 43 2 10 0 73 43 1 29) #1# #6# 718) (function (ext::lambda-block cl-protobufs.meshtastic::make-config #1044# #39# (let ((#1045# (cl-protobufs.meshtastic::%make-config))) (unless (or (eq cl-protobufs.meshtastic::device :%unset) (not cl-protobufs.meshtastic::device)) (setf (cl-protobufs.meshtastic::config.device #1045#) cl-protobufs.meshtastic::device)) (unless (or (eq cl-protobufs.meshtastic::position :%unset) (not cl-protobufs.meshtastic::position)) (setf (cl-protobufs.meshtastic::config.position #1045#) cl-protobufs.meshtastic::position)) (unless (or (eq cl-protobufs.meshtastic::power :%unset) (not cl-protobufs.meshtastic::power)) (setf (cl-protobufs.meshtastic::config.power #1045#) cl-protobufs.meshtastic::power)) (unless (or (eq cl-protobufs.meshtastic::network :%unset) (not cl-protobufs.meshtastic::network)) (setf (cl-protobufs.meshtastic::config.network #1045#) cl-protobufs.meshtastic::network)) (unless (or (eq cl-protobufs.meshtastic::display :%unset) (not cl-protobufs.meshtastic::display)) (setf (cl-protobufs.meshtastic::config.display #1045#) cl-protobufs.meshtastic::display)) (unless (or (eq cl-protobufs.meshtastic::lora :%unset) (not cl-protobufs.meshtastic::lora)) (setf (cl-protobufs.meshtastic::config.lora #1045#) cl-protobufs.meshtastic::lora)) (unless (or (eq cl-protobufs.meshtastic::bluetooth :%unset) (not cl-protobufs.meshtastic::bluetooth)) (setf (cl-protobufs.meshtastic::config.bluetooth #1045#) cl-protobufs.meshtastic::bluetooth)) (unless (or (eq cl-protobufs.meshtastic::payload-variant :%unset) (not cl-protobufs.meshtastic::payload-variant)) (setf (slot-value #1045# (quote cl-protobufs.meshtastic::%payload-variant)) cl-protobufs.meshtastic::payload-variant)) #1045#))) cl-protobufs.meshtastic::config.clear-%%is-set (defun cl-protobufs.meshtastic::config.clear-%%is-set) (#6# . 718) (#1045#) #Y(cl-protobufs.meshtastic::config.clear-%%is-set nil nil (24 45 11863 26 13 0 19 1 11376 12 9 0 19 2 812 29) #1# #6# 718) (cl-protobufs.meshtastic::make-config cl-protobufs.meshtastic::config-%%is-set) (defmethod cl-protobufs::clear (#1045# cl-protobufs.meshtastic::config)) (#6# . 718) (cl-protobufs.meshtastic::config) (#1045#) #:g35461 #:g35462 #Y(cl-protobufs::clear nil nil (24 45 11863 26 10 0 45 11901 75 45 11902 13 1 15 204 9 0 13 0 19 4 118 43 1 43 1 13 0 19 1 11891 13 0 19 1 11424 29) #1# #6# 718) 0 #:g35463 #:g35464 #:g35465 (setf slot-value) #:g35466 #:g35467 "Config" #:g35468 (setf slot-value) #:g35469 #:g35470 "meshtastic.Config" #:g35471 (setf slot-value) #:g35472 #:g35473 #:g35474 (setf slot-value) #:g35475 #:g35476 #:g35477 (setf slot-value) #:g35478 #:g35479 #:g35480 (setf slot-value) #:g35481 #:g35482 0 #:g35483 (setf slot-value) #:g35484 #:g35485 #:g35486 (setf slot-value) #:g35487 #:g35488 #:g35489 (setf slot-value) #:g35490 #:g35491 #:g35492 (setf slot-value) 0 0 cl-protobufs.implementation::oneof-descriptor 0 (7) :adjustable (0 0 0 0 0 0 0) 0 si::row-major-aset 0 0 0 0 0 0 #:g35507 #:g35508 #:g35509 (setf slot-value) #:g35510 #:g35511 "bluetooth" #:g35512 (setf slot-value) #:g35513 #:g35514 "meshtastic.Config.bluetooth" #:g35515 (setf slot-value) #:g35516 #:g35517 #:g35518 (setf slot-value) #:g35519 #:g35520 #:g35521 (setf slot-value) #:g35522 #:g35523 #:g35524 (setf slot-value) #:g35525 #:g35526 #:g35527 (setf slot-value) #:g35528 #:g35529 #:g35530 (setf slot-value) #:g35531 #:g35532 #:g35533 (setf slot-value) #:g35534 #:g35535 #:g35536 (setf slot-value) #:g35537 #:g35538 #:g35539 (setf slot-value) #:g35540 #:g35541 #:g35542 (setf slot-value) #:g35543 #:g35544 "bluetooth" #:g35545 (setf slot-value) #:g35546 #:g35547 #:g35548 (setf slot-value) #:g35549 #:g35550 #:g35551 (setf slot-value) #:g35552 #:g35553 #:g35554 (setf slot-value) #:g35555 #:g35556 #:g35557 (setf slot-value) #:g35558 #:g35559 #:g35560 (setf slot-value) #:g35561 #:g35562 #:g35563 (setf slot-value) #:g35564 #:g35565 "lora" #:g35566 (setf slot-value) #:g35567 #:g35568 "meshtastic.Config.lora" #:g35569 (setf slot-value) #:g35570 #:g35571 #:g35572 (setf slot-value) #:g35573 #:g35574 #:g35575 (setf slot-value) #:g35576 #:g35577 #:g35578 (setf slot-value) #:g35579 #:g35580 #:g35581 (setf slot-value) #:g35582 #:g35583 #:g35584 (setf slot-value) #:g35585 #:g35586 #:g35587 (setf slot-value) #:g35588 #:g35589 #:g35590 (setf slot-value) #:g35591 #:g35592 #:g35593 (setf slot-value) #:g35594 #:g35595 #:g35596 (setf slot-value) #:g35597 #:g35598 "lora" #:g35599 (setf slot-value) #:g35600 #:g35601 #:g35602 (setf slot-value) #:g35603 #:g35604 #:g35605 (setf slot-value) #:g35606 #:g35607 #:g35608 (setf slot-value) #:g35609 #:g35610 #:g35611 (setf slot-value) #:g35612 #:g35613 #:g35614 (setf slot-value) #:g35615 #:g35616 #:g35617 (setf slot-value) #:g35618 #:g35619 "display" #:g35620 (setf slot-value) #:g35621 #:g35622 "meshtastic.Config.display" #:g35623 (setf slot-value) #:g35624 #:g35625 #:g35626 (setf slot-value) #:g35627 #:g35628 #:g35629 (setf slot-value) #:g35630 #:g35631 #:g35632 (setf slot-value) #:g35633 #:g35634 #:g35635 (setf slot-value) #:g35636 #:g35637 #:g35638 (setf slot-value) #:g35639 #:g35640 #:g35641 (setf slot-value) #:g35642 #:g35643 #:g35644 (setf slot-value) #:g35645 #:g35646 #:g35647 (setf slot-value) #:g35648 #:g35649 #:g35650 (setf slot-value) #:g35651 #:g35652 "display" #:g35653 (setf slot-value) #:g35654 #:g35655 #:g35656 (setf slot-value) #:g35657 #:g35658 #:g35659 (setf slot-value) #:g35660 #:g35661 #:g35662 (setf slot-value) #:g35663 #:g35664 #:g35665 (setf slot-value) #:g35666 #:g35667 #:g35668 (setf slot-value) #:g35669 #:g35670 #:g35671 (setf slot-value) #:g35672 #:g35673 "network" #:g35674 (setf slot-value) #:g35675 #:g35676 "meshtastic.Config.network" #:g35677 (setf slot-value) #:g35678 #:g35679 #:g35680 (setf slot-value) #:g35681 #:g35682 #:g35683 (setf slot-value) #:g35684 #:g35685 #:g35686 (setf slot-value) #:g35687 #:g35688 #:g35689 (setf slot-value) #:g35690 #:g35691 #:g35692 (setf slot-value) #:g35693 #:g35694 #:g35695 (setf slot-value) #:g35696 #:g35697 #:g35698 (setf slot-value) #:g35699 #:g35700 #:g35701 (setf slot-value) #:g35702 #:g35703 #:g35704 (setf slot-value) #:g35705 #:g35706 "network" #:g35707 (setf slot-value) #:g35708 #:g35709 #:g35710 (setf slot-value) #:g35711 #:g35712 #:g35713 (setf slot-value) #:g35714 #:g35715 #:g35716 (setf slot-value) #:g35717 #:g35718 #:g35719 (setf slot-value) #:g35720 #:g35721 #:g35722 (setf slot-value) #:g35723 #:g35724 #:g35725 (setf slot-value) #:g35726 #:g35727 "power" #:g35728 (setf slot-value) #:g35729 #:g35730 "meshtastic.Config.power" #:g35731 (setf slot-value) #:g35732 #:g35733 #:g35734 (setf slot-value) #:g35735 #:g35736 #:g35737 (setf slot-value) #:g35738 #:g35739 #:g35740 (setf slot-value) #:g35741 #:g35742 #:g35743 (setf slot-value) #:g35744 #:g35745 #:g35746 (setf slot-value) #:g35747 #:g35748 #:g35749 (setf slot-value) #:g35750 #:g35751 #:g35752 (setf slot-value) #:g35753 #:g35754 #:g35755 (setf slot-value) #:g35756 #:g35757 #:g35758 (setf slot-value) #:g35759 #:g35760 "power" #:g35761 (setf slot-value) #:g35762 #:g35763 #:g35764 (setf slot-value) #:g35765 #:g35766 #:g35767 (setf slot-value) #:g35768 #:g35769 #:g35770 (setf slot-value) #:g35771 #:g35772 #:g35773 (setf slot-value) #:g35774 #:g35775 #:g35776 (setf slot-value) #:g35777 #:g35778 #:g35779 (setf slot-value) #:g35780 #:g35781 "position" #:g35782 (setf slot-value) #:g35783 #:g35784 "meshtastic.Config.position" #:g35785 (setf slot-value) #:g35786 #:g35787 #:g35788 (setf slot-value) #:g35789 #:g35790 #:g35791 (setf slot-value) #:g35792 #:g35793 #:g35794 (setf slot-value) #:g35795 #:g35796 #:g35797 (setf slot-value) #:g35798 #:g35799 #:g35800 (setf slot-value) #:g35801 #:g35802 #:g35803 (setf slot-value) #:g35804 #:g35805 #:g35806 (setf slot-value) #:g35807 #:g35808 #:g35809 (setf slot-value) #:g35810 #:g35811 #:g35812 (setf slot-value) #:g35813 #:g35814 "position" #:g35815 (setf slot-value) #:g35816 #:g35817 #:g35818 (setf slot-value) #:g35819 #:g35820 #:g35821 (setf slot-value) #:g35822 #:g35823 #:g35824 (setf slot-value) #:g35825 #:g35826 #:g35827 (setf slot-value) #:g35828 #:g35829 #:g35830 (setf slot-value) #:g35831 #:g35832 #:g35833 (setf slot-value) #:g35834 #:g35835 "device" #:g35836 (setf slot-value) #:g35837 #:g35838 "meshtastic.Config.device" #:g35839 (setf slot-value) #:g35840 #:g35841 #:g35842 (setf slot-value) #:g35843 #:g35844 #:g35845 (setf slot-value) #:g35846 #:g35847 #:g35848 (setf slot-value) #:g35849 #:g35850 #:g35851 (setf slot-value) #:g35852 #:g35853 #:g35854 (setf slot-value) #:g35855 #:g35856 #:g35857 (setf slot-value) #:g35858 #:g35859 #:g35860 (setf slot-value) #:g35861 #:g35862 #:g35863 (setf slot-value) #:g35864 #:g35865 #:g35866 (setf slot-value) #:g35867 #:g35868 "device" #:g35869 (setf slot-value) #:g35870 #:g35871 #:g35872 (setf slot-value) #:g35873 #:g35874 #:g35875 (setf slot-value) #:g35876 #:g35877 #:g35878 (setf slot-value) #:g35879 #:g35880 #:g35881 (setf slot-value) #:g35882 #:g35883 #:g35884 (setf slot-value) (cl-protobufs.meshtastic::adc-multiplier-override cl-protobufs.meshtastic::address-mode cl-protobufs.meshtastic::auto-screen-carousel-secs cl-protobufs.meshtastic::bandwidth cl-protobufs.meshtastic::bluetooth cl-protobufs.meshtastic::broadcast-smart-minimum-distance cl-protobufs.meshtastic::broadcast-smart-minimum-interval-secs cl-protobufs.meshtastic::button-gpio cl-protobufs.meshtastic::buzzer-gpio cl-protobufs.meshtastic::channel-num cl-protobufs.meshtastic::coding-rate cl-protobufs.meshtastic::compass-north-top cl-protobufs.meshtastic::config cl-protobufs.meshtastic::config.bluetooth-config cl-protobufs.meshtastic::config.bluetooth-config.pairing-mode cl-protobufs.meshtastic::config.bluetooth-config.pairing-mode-int-to-keyword cl-protobufs.meshtastic::config.bluetooth-config.pairing-mode-keyword-to-int cl-protobufs.meshtastic::config.device-config cl-protobufs.meshtastic::config.device-config.rebroadcast-mode cl-protobufs.meshtastic::config.device-config.rebroadcast-mode-int-to-keyword cl-protobufs.meshtastic::config.device-config.rebroadcast-mode-keyword-to-int cl-protobufs.meshtastic::config.device-config.role cl-protobufs.meshtastic::config.device-config.role-int-to-keyword cl-protobufs.meshtastic::config.device-config.role-keyword-to-int cl-protobufs.meshtastic::config.display-config cl-protobufs.meshtastic::config.display-config.display-mode cl-protobufs.meshtastic::config.display-config.display-mode-int-to-keyword cl-protobufs.meshtastic::config.display-config.display-mode-keyword-to-int cl-protobufs.meshtastic::config.display-config.display-units cl-protobufs.meshtastic::config.display-config.display-units-int-to-keyword cl-protobufs.meshtastic::config.display-config.display-units-keyword-to-int cl-protobufs.meshtastic::config.display-config.gps-coordinate-format cl-protobufs.meshtastic::config.display-config.gps-coordinate-format-int-to-keyword cl-protobufs.meshtastic::config.display-config.gps-coordinate-format-keyword-to-int cl-protobufs.meshtastic::config.display-config.oled-type cl-protobufs.meshtastic::config.display-config.oled-type-int-to-keyword cl-protobufs.meshtastic::config.display-config.oled-type-keyword-to-int cl-protobufs.meshtastic::config.lo-ra-config cl-protobufs.meshtastic::config.lo-ra-config.modem-preset cl-protobufs.meshtastic::config.lo-ra-config.modem-preset-int-to-keyword cl-protobufs.meshtastic::config.lo-ra-config.modem-preset-keyword-to-int cl-protobufs.meshtastic::config.lo-ra-config.region-code cl-protobufs.meshtastic::config.lo-ra-config.region-code-int-to-keyword cl-protobufs.meshtastic::config.lo-ra-config.region-code-keyword-to-int cl-protobufs.meshtastic::config.network-config cl-protobufs.meshtastic::config.network-config.address-mode cl-protobufs.meshtastic::config.network-config.address-mode-int-to-keyword cl-protobufs.meshtastic::config.network-config.address-mode-keyword-to-int cl-protobufs.meshtastic::config.network-config.ip-v4-config cl-protobufs.meshtastic::config.position-config cl-protobufs.meshtastic::config.position-config.position-flags cl-protobufs.meshtastic::config.position-config.position-flags-int-to-keyword cl-protobufs.meshtastic::config.position-config.position-flags-keyword-to-int cl-protobufs.meshtastic::config.power-config cl-protobufs.meshtastic::debug-log-enabled cl-protobufs.meshtastic::device cl-protobufs.meshtastic::device-battery-ina-address cl-protobufs.meshtastic::display cl-protobufs.meshtastic::displaymode cl-protobufs.meshtastic::dns cl-protobufs.meshtastic::double-tap-as-button-press cl-protobufs.meshtastic::enabled cl-protobufs.meshtastic::eth-enabled cl-protobufs.meshtastic::fixed-pin cl-protobufs.meshtastic::fixed-position cl-protobufs.meshtastic::flip-screen cl-protobufs.meshtastic::frequency-offset cl-protobufs.meshtastic::gateway cl-protobufs.meshtastic::gps-attempt-time cl-protobufs.meshtastic::gps-enabled cl-protobufs.meshtastic::gps-format cl-protobufs.meshtastic::gps-update-interval cl-protobufs.meshtastic::heading-bold cl-protobufs.meshtastic::hop-limit cl-protobufs.meshtastic::ignore-incoming cl-protobufs.meshtastic::ip cl-protobufs.meshtastic::ipv4-config cl-protobufs.meshtastic::is-managed cl-protobufs.meshtastic::is-power-saving cl-protobufs.meshtastic::lora cl-protobufs.meshtastic::ls-secs cl-protobufs.meshtastic::mesh-sds-timeout-secs cl-protobufs.meshtastic::min-wake-secs cl-protobufs.meshtastic::mode cl-protobufs.meshtastic::modem-preset cl-protobufs.meshtastic::network cl-protobufs.meshtastic::node-info-broadcast-secs cl-protobufs.meshtastic::ntp-server cl-protobufs.meshtastic::oled cl-protobufs.meshtastic::on-battery-shutdown-after-secs cl-protobufs.meshtastic::override-duty-cycle cl-protobufs.meshtastic::override-frequency cl-protobufs.meshtastic::position cl-protobufs.meshtastic::position-broadcast-secs cl-protobufs.meshtastic::position-broadcast-smart-enabled cl-protobufs.meshtastic::position-flags cl-protobufs.meshtastic::power cl-protobufs.meshtastic::rebroadcast-mode cl-protobufs.meshtastic::region cl-protobufs.meshtastic::role cl-protobufs.meshtastic::rsyslog-server cl-protobufs.meshtastic::rx-gpio cl-protobufs.meshtastic::screen-on-secs cl-protobufs.meshtastic::sds-secs cl-protobufs.meshtastic::serial-enabled cl-protobufs.meshtastic::spread-factor cl-protobufs.meshtastic::subnet cl-protobufs.meshtastic::sx126x-rx-boosted-gain cl-protobufs.meshtastic::tx-enabled cl-protobufs.meshtastic::tx-gpio cl-protobufs.meshtastic::tx-power cl-protobufs.meshtastic::units cl-protobufs.meshtastic::use-preset cl-protobufs.meshtastic::wait-bluetooth-secs cl-protobufs.meshtastic::wake-on-tap-or-motion cl-protobufs.meshtastic::wifi-enabled cl-protobufs.meshtastic::wifi-psk cl-protobufs.meshtastic::wifi-ssid))) #6# 0) #Y(si::bytecodes nil nil (1 2 16 3 76 73 39 18 15 4 77 77 77 77 15 5 77 77 77 77 77 77 19 12 6 29) #1# #6# 133) #Y(si::bytecodes nil nil (1 7 16 1 29) #1# #6# 539) #Y(si::bytecodes nil nil (15 8 14 9 14 10 14 11 15 12 19 5 13 29) #1# #6# 582) #Y(si::bytecodes nil nil (15 14 15 15 15 16 19 3 17 15 18 15 19 15 20 19 3 17 15 21 15 22 15 23 15 24 19 4 25 15 21 14 26 77 15 27 19 4 25 15 21 1 43 12 19 2 44 15 45 15 22 15 46 15 47 19 4 25 15 45 14 26 77 15 48 19 4 25 15 45 1 58 12 19 2 44 1 18 45 59 1 60 45 61 1 45 45 62 13 2 13 0 13 1 19 3 63 43 1 43 2 1 18 45 64 1 65 45 66 1 21 45 67 13 2 13 0 13 1 19 3 63 43 1 43 2 15 65 15 22 15 68 15 69 19 4 25 15 65 77 15 70 15 71 1 74 12 19 5 75 15 60 15 22 15 76 15 77 19 4 25 15 60 77 15 78 15 79 1 80 12 19 5 75 15 81 8 0 17 82 15 81 15 22 15 83 15 84 19 4 25 15 85 8 1 17 82 15 85 15 22 15 86 15 87 19 4 25 15 88 8 2 17 82 15 88 15 22 15 89 15 90 19 4 25 15 91 8 3 17 82 15 91 15 22 15 92 15 93 19 4 25 15 94 8 4 17 82 15 94 15 22 15 95 15 96 19 4 25 15 97 8 5 17 82 15 97 15 22 15 98 15 99 19 4 25 15 100 8 6 17 82 15 100 15 22 15 101 15 102 19 4 25 15 103 19 1 104 15 105 15 22 15 106 15 107 19 4 25 15 105 77 15 108 15 109 1 110 12 19 5 75 15 116 19 1 117 78 114 15 114 19 1 115 78 111 77 75 3 78 120 15 126 19 1 117 78 125 15 125 19 1 115 78 121 15 121 15 126 9 0 15 29 19 4 118 15 121 15 126 9 1 9 0 19 4 118 77 75 3 78 123 15 125 19 1 115 78 127 15 127 15 126 9 0 15 30 19 4 118 15 127 15 126 9 1 9 1 19 4 118 77 75 3 78 128 15 125 19 1 115 78 129 15 129 15 126 9 0 15 31 19 4 118 15 129 15 126 9 1 9 2 19 4 118 77 75 3 78 130 15 125 19 1 115 78 131 15 131 15 126 9 0 15 32 19 4 118 15 131 15 126 9 1 9 3 19 4 118 77 75 3 78 132 15 125 19 1 115 78 133 15 133 15 126 9 0 15 33 19 4 118 15 133 15 126 9 1 9 4 19 4 118 77 75 3 78 134 15 125 19 1 115 78 135 15 135 15 126 9 0 15 34 19 4 118 15 135 15 126 9 1 9 5 19 4 118 77 75 3 78 136 15 125 19 1 115 78 137 15 137 15 126 9 0 15 35 19 4 118 15 137 15 126 9 1 9 6 19 4 118 15 136 1 137 17 122 15 136 75 17 124 15 134 1 135 17 122 15 134 1 136 17 124 15 132 1 133 17 122 15 132 1 134 17 124 15 130 1 131 17 122 15 130 1 132 17 124 15 128 1 129 17 122 15 128 1 130 17 124 15 123 1 127 17 122 15 123 1 128 17 124 15 120 1 121 17 122 15 120 1 123 17 124 15 111 15 116 9 0 15 18 19 4 118 15 111 15 116 9 1 15 119 19 4 118 15 111 15 116 9 2 15 120 19 4 118 15 18 15 111 14 112 19 3 113 15 138 19 1 104 15 139 15 140 15 141 19 3 17 15 142 15 143 15 144 19 3 17 15 145 15 22 15 146 15 147 19 4 25 15 145 14 26 77 15 27 19 4 25 15 145 1 151 12 19 2 44 15 152 15 22 15 153 15 154 19 4 25 15 152 14 26 77 15 48 19 4 25 15 152 1 155 12 19 2 44 1 142 45 156 1 60 45 157 1 152 45 158 13 2 13 0 13 1 19 3 63 43 1 43 2 1 142 45 159 1 65 45 160 1 145 45 161 13 2 13 0 13 1 19 3 63 43 1 43 2 15 65 15 22 15 162 15 163 19 4 25 15 65 77 15 164 15 165 1 166 12 19 5 75 15 60 15 22 15 167 15 168 19 4 25 15 60 77 15 169 15 170 1 171 12 19 5 75 15 172 8 0 17 82 15 172 15 22 15 173 15 174 19 4 25 15 175 8 1 17 82 15 175 15 22 15 176 15 177 19 4 25 15 178 8 2 17 82 15 178 15 22 15 179 15 180 19 4 25 15 181 19 1 104 15 105 15 22 15 182 15 183 19 4 25 15 105 77 15 184 15 185 1 186 12 19 5 75 15 114 19 1 115 78 187 77 75 3 78 189 15 125 19 1 115 78 190 15 190 15 126 9 0 15 148 19 4 118 15 190 15 126 9 1 9 0 19 4 118 77 75 3 78 191 15 125 19 1 115 78 192 15 192 15 126 9 0 15 149 19 4 118 15 192 15 126 9 1 9 1 19 4 118 77 75 3 78 193 15 125 19 1 115 78 194 15 194 15 126 9 0 15 150 19 4 118 15 194 15 126 9 1 9 2 19 4 118 15 193 1 194 17 122 15 193 75 17 124 15 191 1 192 17 122 15 191 1 193 17 124 15 189 1 190 17 122 15 189 1 191 17 124 15 187 15 116 9 0 15 142 19 4 118 15 187 15 116 9 1 15 188 19 4 118 15 187 15 116 9 2 15 189 19 4 118 15 142 15 187 14 112 19 3 113 15 195 19 1 104 15 196 15 197 19 2 198 15 199 15 200 77 77 15 201 15 202 15 203 15 204 77 77 15 205 9 9 77 77 77 19 15 206 15 207 15 22 15 208 15 209 19 4 25 15 210 15 22 15 211 15 212 19 4 25 15 210 14 26 77 15 213 19 4 25 15 199 19 1 117 78 250 15 210 1 252 12 19 2 44 15 210 15 253 15 254 19 3 255 1 256 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 264 14 11 13 0 19 6 265 43 1 15 256 15 266 1 275 12 19 3 255 1 276 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 277 14 11 13 0 19 6 265 43 1 15 276 15 266 1 279 12 19 3 255 1 280 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 281 14 11 13 0 19 6 265 43 1 15 280 15 266 1 283 12 19 3 255 1 284 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 285 14 11 13 0 19 6 265 43 1 15 284 15 266 1 287 12 19 3 255 1 288 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 289 14 11 13 0 19 6 265 43 1 15 288 15 266 1 291 12 19 3 255 1 292 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 293 14 11 13 0 19 6 265 43 1 15 292 15 266 1 295 12 19 3 255 1 296 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 297 14 11 13 0 19 6 265 43 1 15 296 15 266 1 299 12 19 3 255 1 300 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 301 14 11 13 0 19 6 265 43 1 15 300 15 266 1 303 12 19 3 255 1 304 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 305 14 11 13 0 19 6 265 43 1 15 304 15 266 1 307 12 19 3 255 15 196 15 308 19 2 198 15 18 15 22 15 309 15 310 19 4 25 15 18 14 26 77 15 311 19 4 25 15 18 1 313 12 19 2 44 15 18 15 253 15 314 19 3 255 15 196 15 315 19 2 198 15 316 15 22 15 317 15 318 19 4 25 15 316 14 26 77 15 319 19 4 25 15 316 1 324 12 19 2 44 15 316 15 253 15 325 19 3 255 15 196 15 326 19 2 198 15 327 15 22 15 328 15 329 19 4 25 15 327 14 26 77 15 330 19 4 25 15 327 1 333 12 19 2 44 15 327 15 253 15 334 19 3 255 15 196 15 335 19 2 198 15 336 15 22 15 337 15 338 19 4 25 15 336 14 26 77 15 339 19 4 25 15 336 1 342 12 19 2 44 15 336 15 253 15 343 19 3 255 15 344 15 22 15 345 15 346 19 4 25 15 344 77 15 347 15 348 1 349 12 19 5 75 15 350 15 22 15 351 15 352 19 4 25 15 350 77 15 353 15 354 1 358 12 19 5 75 15 199 15 344 19 2 359 15 360 19 1 104 15 361 19 1 104 15 196 15 362 19 2 198 15 363 15 22 15 364 15 365 19 4 25 15 363 14 26 77 15 366 19 4 25 15 363 1 369 12 19 2 44 15 363 15 253 15 370 19 3 255 15 196 15 371 19 2 198 15 372 15 22 15 373 15 374 19 4 25 15 372 14 26 77 15 375 19 4 25 15 372 1 379 12 19 2 44 15 372 15 253 15 380 19 3 255 15 196 15 381 19 2 198 15 382 15 22 15 383 15 384 19 4 25 15 382 14 26 77 15 385 19 4 25 15 382 1 387 12 19 2 44 15 382 15 253 15 388 19 3 255 15 196 15 389 19 2 198 15 390 15 22 15 391 15 392 19 4 25 15 390 14 26 77 15 393 19 4 25 15 390 1 394 12 19 2 44 15 390 15 253 15 395 19 3 255 15 396 15 22 15 397 15 398 19 4 25 15 396 77 15 399 15 400 1 401 12 19 5 75 15 402 15 22 15 403 15 404 19 4 25 15 402 77 15 405 15 406 1 410 12 19 5 75 15 199 15 396 19 2 359 15 411 19 1 104 15 412 19 1 104 15 196 15 413 19 2 198 15 414 15 22 15 415 15 416 19 4 25 15 414 14 26 77 15 417 19 4 25 15 414 1 419 12 19 2 44 15 414 15 253 15 420 19 3 255 15 196 15 421 19 2 198 15 422 15 22 15 423 15 424 19 4 25 15 422 14 26 77 15 425 19 4 25 15 422 1 428 12 19 2 44 15 422 15 253 15 429 19 3 255 15 196 15 430 19 2 198 15 431 15 22 15 432 15 433 19 4 25 15 431 14 26 77 15 434 19 4 25 15 431 1 436 12 19 2 44 15 431 15 253 15 437 19 3 255 15 196 15 438 19 2 198 15 439 15 22 15 440 15 441 19 4 25 15 439 14 26 77 15 442 19 4 25 15 439 1 443 12 19 2 44 15 439 15 253 15 444 19 3 255 15 445 15 22 15 446 15 447 19 4 25 15 445 77 15 448 15 449 1 450 12 19 5 75 15 451 15 22 15 452 15 453 19 4 25 15 451 77 15 454 15 455 1 459 12 19 5 75 15 199 15 445 19 2 359 15 460 19 1 104 15 461 19 1 104 15 196 15 462 19 2 198 15 463 15 22 15 464 15 465 19 4 25 15 463 14 26 77 15 466 19 4 25 15 463 1 468 12 19 2 44 15 463 15 253 15 469 19 3 255 15 196 15 470 19 2 198 15 471 15 22 15 472 15 473 19 4 25 15 471 14 26 77 15 474 19 4 25 15 471 1 479 12 19 2 44 15 471 15 253 15 480 19 3 255 15 196 15 481 19 2 198 15 482 15 22 15 483 15 484 19 4 25 15 482 14 26 77 15 485 19 4 25 15 482 1 487 12 19 2 44 15 482 15 253 15 488 19 3 255 15 196 15 489 19 2 198 15 490 15 22 15 491 15 492 19 4 25 15 490 14 26 77 15 493 19 4 25 15 490 1 496 12 19 2 44 15 490 15 253 15 497 19 3 255 15 498 15 22 15 499 15 500 19 4 25 15 498 77 15 501 15 502 1 503 12 19 5 75 15 504 15 22 15 505 15 506 19 4 25 15 504 77 15 507 15 508 1 512 12 19 5 75 15 199 15 498 19 2 359 15 513 19 1 104 15 514 19 1 104 15 196 15 515 19 2 198 15 516 15 22 15 517 15 518 19 4 25 15 516 14 26 77 15 519 19 4 25 15 516 1 521 12 19 2 44 15 516 15 253 15 522 19 3 255 15 196 15 523 19 2 198 15 524 15 22 15 525 15 526 19 4 25 15 524 14 26 77 15 527 19 4 25 15 524 1 532 12 19 2 44 15 524 15 253 15 533 19 3 255 15 196 15 534 19 2 198 15 535 15 22 15 536 15 537 19 4 25 15 535 14 26 77 15 538 19 4 25 15 535 1 540 12 19 2 44 15 535 15 253 15 541 19 3 255 15 196 15 542 19 2 198 15 543 15 22 15 544 15 545 19 4 25 15 543 14 26 77 15 546 19 4 25 15 543 1 549 12 19 2 44 15 543 15 253 15 550 19 3 255 15 551 15 22 15 552 15 553 19 4 25 15 551 77 15 554 15 555 1 556 12 19 5 75 15 557 15 22 15 558 15 559 19 4 25 15 557 77 15 560 15 561 1 565 12 19 5 75 15 199 15 551 19 2 359 15 566 19 1 104 15 567 19 1 104 15 196 15 568 19 2 198 15 142 15 22 15 569 15 570 19 4 25 15 142 14 26 77 15 571 19 4 25 15 142 1 573 12 19 2 44 15 142 15 253 15 574 19 3 255 15 196 15 575 19 2 198 15 576 15 22 15 577 15 578 19 4 25 15 576 14 26 77 15 579 19 4 25 15 576 1 584 12 19 2 44 15 576 15 253 15 585 19 3 255 15 196 15 586 19 2 198 15 587 15 22 15 588 15 589 19 4 25 15 587 14 26 77 15 590 19 4 25 15 587 1 592 12 19 2 44 15 587 15 253 15 593 19 3 255 15 196 15 594 19 2 198 15 595 15 22 15 596 15 597 19 4 25 15 595 14 26 77 15 598 19 4 25 15 595 1 601 12 19 2 44 15 595 15 253 15 602 19 3 255 15 603 15 22 15 604 15 605 19 4 25 15 603 77 15 606 15 607 1 608 12 19 5 75 15 609 15 22 15 610 15 611 19 4 25 15 609 77 15 612 15 613 1 617 12 19 5 75 15 199 15 603 19 2 359 15 618 19 1 104 15 619 19 1 104 15 196 15 620 19 2 198 15 621 15 22 15 622 15 623 19 4 25 15 621 14 26 77 15 624 19 4 25 15 621 1 626 12 19 2 44 15 621 15 253 15 627 19 3 255 15 196 15 628 19 2 198 15 629 15 22 15 630 15 631 19 4 25 15 629 14 26 77 15 632 19 4 25 15 629 1 637 12 19 2 44 15 629 15 253 15 638 19 3 255 15 196 15 639 19 2 198 15 640 15 22 15 641 15 642 19 4 25 15 640 14 26 77 15 643 19 4 25 15 640 1 645 12 19 2 44 15 640 15 253 15 646 19 3 255 15 196 15 647 19 2 198 15 648 15 22 15 649 15 650 19 4 25 15 648 14 26 77 15 651 19 4 25 15 648 1 654 12 19 2 44 15 648 15 253 15 655 19 3 255 15 656 15 22 15 657 15 658 19 4 25 15 656 77 15 659 15 660 1 661 12 19 5 75 15 662 15 22 15 663 15 664 19 4 25 15 662 77 15 665 15 666 1 670 12 19 5 75 15 199 15 656 19 2 359 15 671 19 1 104 15 672 19 1 104 15 196 15 673 19 2 198 15 674 15 22 15 675 15 676 19 4 25 15 674 14 26 77 15 677 19 4 25 15 674 1 679 12 19 2 44 15 674 15 253 15 680 19 3 255 15 196 15 681 19 2 198 15 682 15 22 15 683 15 684 19 4 25 15 682 14 26 77 15 685 19 4 25 15 682 1 688 12 19 2 44 15 682 15 253 15 689 19 3 255 15 196 15 690 19 2 198 15 691 15 22 15 692 15 693 19 4 25 15 691 14 26 77 15 694 19 4 25 15 691 1 696 12 19 2 44 15 691 15 253 15 697 19 3 255 15 196 15 698 19 2 198 15 699 15 22 15 700 15 701 19 4 25 15 699 14 26 77 15 702 19 4 25 15 699 1 703 12 19 2 44 15 699 15 253 15 704 19 3 255 15 705 15 22 15 706 15 707 19 4 25 15 705 77 15 708 15 709 1 710 12 19 5 75 15 711 15 22 15 712 15 713 19 4 25 15 711 77 15 714 15 715 1 719 12 19 5 75 15 199 15 705 19 2 359 15 720 19 1 104 15 721 19 1 104 15 196 15 722 19 2 198 15 723 15 22 15 724 15 725 19 4 25 15 723 14 26 77 15 726 19 4 25 15 723 1 728 12 19 2 44 15 723 15 253 15 729 19 3 255 15 196 15 730 19 2 198 15 731 15 22 15 732 15 733 19 4 25 15 731 14 26 77 15 734 19 4 25 15 731 1 737 12 19 2 44 15 731 15 253 15 738 19 3 255 15 196 15 739 19 2 198 15 740 15 22 15 741 15 742 19 4 25 15 740 14 26 77 15 743 19 4 25 15 740 1 745 12 19 2 44 15 740 15 253 15 746 19 3 255 15 196 15 747 19 2 198 15 748 15 22 15 749 15 750 19 4 25 15 748 14 26 77 15 751 19 4 25 15 748 1 752 12 19 2 44 15 748 15 253 15 753 19 3 255 15 754 15 22 15 755 15 756 19 4 25 15 754 77 15 757 15 758 1 759 12 19 5 75 15 760 15 22 15 761 15 762 19 4 25 15 760 77 15 763 15 764 1 768 12 19 5 75 15 199 15 754 19 2 359 15 769 19 1 104 15 770 19 1 104 15 196 15 771 19 2 198 15 772 15 22 15 773 15 774 19 4 25 15 772 14 26 77 15 775 19 4 25 15 772 1 806 12 19 2 44 15 772 15 253 15 807 19 3 255 15 808 15 22 15 809 15 810 19 4 25 15 808 14 26 77 15 811 19 4 25 15 808 1 813 12 19 2 44 15 814 19 1 104 15 815 15 22 15 816 15 817 19 4 25 15 815 77 15 818 15 819 1 822 12 19 5 75 15 827 19 1 117 78 825 15 825 19 1 115 45 826 15 824 13 0 14 824 19 3 113 10 0 43 1 78 823 77 75 3 78 858 15 886 19 1 117 78 885 15 885 19 1 115 78 883 1 883 45 887 1 829 45 888 1 18 45 889 13 0 13 2 13 1 33 890 18 3 43 1 43 2 1 883 45 891 1 834 45 892 1 893 45 894 13 0 13 2 13 1 33 895 18 3 43 1 43 2 1 883 45 896 1 840 45 897 1 898 45 899 13 0 13 2 13 1 33 900 18 3 43 1 43 2 1 883 45 901 1 846 45 902 75 45 903 13 0 13 2 13 1 33 904 18 3 43 1 43 2 1 883 45 905 1 906 45 907 1 112 45 908 13 0 13 2 13 1 33 909 18 3 43 1 43 2 1 883 45 910 1 911 45 912 1 14 45 913 13 0 13 2 13 1 33 914 18 3 43 1 43 2 1 883 45 915 1 916 45 917 1 918 45 919 13 0 13 2 13 1 33 920 18 3 43 1 43 2 1 883 45 921 1 922 45 923 8 1 45 924 13 0 13 2 13 1 33 925 18 3 43 1 43 2 1 883 45 926 1 927 45 928 75 45 929 13 0 13 2 13 1 33 930 18 3 43 1 43 2 1 883 45 931 1 932 45 933 75 45 934 13 0 13 2 13 1 33 935 18 3 43 1 43 2 1 883 45 936 1 937 45 938 1 246 45 939 13 0 13 2 13 1 33 940 18 3 43 1 43 2 1 883 45 941 1 942 45 943 1 344 45 944 13 0 13 2 13 1 33 945 18 3 43 1 43 2 1 883 45 946 1 947 45 948 1 949 45 950 13 0 13 2 13 1 33 951 18 3 43 1 43 2 1 883 45 952 1 953 45 954 1 29 45 955 13 0 13 2 13 1 33 956 18 3 43 1 43 2 1 883 45 957 1 958 45 959 75 45 960 13 0 13 2 13 1 33 961 18 3 43 1 43 2 1 883 45 962 1 963 45 964 75 45 965 13 0 13 2 13 1 33 966 18 3 43 1 43 2 1 883 45 967 1 968 45 969 75 45 970 13 0 13 2 13 1 33 971 18 3 43 1 43 2 1 883 45 972 1 973 45 974 75 45 975 13 0 13 2 13 1 33 976 18 3 43 1 43 2 77 75 3 78 884 15 885 19 1 115 78 977 1 977 45 979 1 829 45 980 1 981 45 982 13 0 13 2 13 1 33 983 18 3 43 1 43 2 1 977 45 984 1 834 45 985 1 986 45 987 13 0 13 2 13 1 33 988 18 3 43 1 43 2 1 977 45 989 1 840 45 990 1 991 45 992 13 0 13 2 13 1 33 993 18 3 43 1 43 2 1 977 45 994 1 846 45 995 75 45 996 13 0 13 2 13 1 33 997 18 3 43 1 43 2 1 977 45 998 1 906 45 999 1 1000 45 1001 13 0 13 2 13 1 33 1002 18 3 43 1 43 2 1 977 45 1003 1 911 45 1004 1 981 45 1005 13 0 13 2 13 1 33 1006 18 3 43 1 43 2 1 977 45 1007 1 916 45 1008 1 918 45 1009 13 0 13 2 13 1 33 1010 18 3 43 1 43 2 1 977 45 1011 1 922 45 1012 8 2 45 1013 13 0 13 2 13 1 33 1014 18 3 43 1 43 2 1 977 45 1015 1 927 45 1016 75 45 1017 13 0 13 2 13 1 33 1018 18 3 43 1 43 2 1 977 45 1019 1 932 45 1020 75 45 1021 13 0 13 2 13 1 33 1022 18 3 43 1 43 2 1 977 45 1023 1 937 45 1024 1 1025 45 1026 13 0 13 2 13 1 33 1027 18 3 43 1 43 2 1 977 45 1028 1 942 45 1029 1 396 45 1030 13 0 13 2 13 1 33 1031 18 3 43 1 43 2 1 977 45 1032 1 947 45 1033 1 1034 45 1035 13 0 13 2 13 1 33 1036 18 3 43 1 43 2 1 977 45 1037 1 953 45 1038 1 1039 45 1040 13 0 13 2 13 1 33 1041 18 3 43 1 43 2 1 977 45 1042 1 958 45 1043 75 45 1044 13 0 13 2 13 1 33 1045 18 3 43 1 43 2 1 977 45 1046 1 963 45 1047 75 45 1048 13 0 13 2 13 1 33 1049 18 3 43 1 43 2 1 977 45 1050 1 968 45 1051 75 45 1052 13 0 13 2 13 1 33 1053 18 3 43 1 43 2 1 977 45 1054 1 973 45 1055 8 0 45 1056 13 0 13 2 13 1 33 1057 18 3 43 1 43 2 77 75 3 78 978 15 885 19 1 115 78 1058 1 1058 45 1060 1 829 45 1061 1 981 45 1062 13 0 13 2 13 1 33 1063 18 3 43 1 43 2 1 1058 45 1064 1 834 45 1065 1 1066 45 1067 13 0 13 2 13 1 33 1068 18 3 43 1 43 2 1 1058 45 1069 1 840 45 1070 1 1071 45 1072 13 0 13 2 13 1 33 1073 18 3 43 1 43 2 1 1058 45 1074 1 846 45 1075 75 45 1076 13 0 13 2 13 1 33 1077 18 3 43 1 43 2 1 1058 45 1078 1 906 45 1079 1 1000 45 1080 13 0 13 2 13 1 33 1081 18 3 43 1 43 2 1 1058 45 1082 1 911 45 1083 1 981 45 1084 13 0 13 2 13 1 33 1085 18 3 43 1 43 2 1 1058 45 1086 1 916 45 1087 1 918 45 1088 13 0 13 2 13 1 33 1089 18 3 43 1 43 2 1 1058 45 1090 1 922 45 1091 8 3 45 1092 13 0 13 2 13 1 33 1093 18 3 43 1 43 2 1 1058 45 1094 1 927 45 1095 75 45 1096 13 0 13 2 13 1 33 1097 18 3 43 1 43 2 1 1058 45 1098 1 932 45 1099 75 45 1100 13 0 13 2 13 1 33 1101 18 3 43 1 43 2 1 1058 45 1102 1 937 45 1103 1 1104 45 1105 13 0 13 2 13 1 33 1106 18 3 43 1 43 2 1 1058 45 1107 1 942 45 1108 1 445 45 1109 13 0 13 2 13 1 33 1110 18 3 43 1 43 2 1 1058 45 1111 1 947 45 1112 1 1113 45 1114 13 0 13 2 13 1 33 1115 18 3 43 1 43 2 1 1058 45 1116 1 953 45 1117 1 1039 45 1118 13 0 13 2 13 1 33 1119 18 3 43 1 43 2 1 1058 45 1120 1 958 45 1121 75 45 1122 13 0 13 2 13 1 33 1123 18 3 43 1 43 2 1 1058 45 1124 1 963 45 1125 75 45 1126 13 0 13 2 13 1 33 1127 18 3 43 1 43 2 1 1058 45 1128 1 968 45 1129 75 45 1130 13 0 13 2 13 1 33 1131 18 3 43 1 43 2 1 1058 45 1132 1 973 45 1133 8 1 45 1134 13 0 13 2 13 1 33 1135 18 3 43 1 43 2 77 75 3 78 1059 15 885 19 1 115 78 1136 1 1136 45 1138 1 829 45 1139 1 241 45 1140 13 0 13 2 13 1 33 1141 18 3 43 1 43 2 1 1136 45 1142 1 834 45 1143 1 1144 45 1145 13 0 13 2 13 1 33 1146 18 3 43 1 43 2 1 1136 45 1147 1 840 45 1148 1 1149 45 1150 13 0 13 2 13 1 33 1151 18 3 43 1 43 2 1 1136 45 1152 1 846 45 1153 75 45 1154 13 0 13 2 13 1 33 1155 18 3 43 1 43 2 1 1136 45 1156 1 906 45 1157 1 1000 45 1158 13 0 13 2 13 1 33 1159 18 3 43 1 43 2 1 1136 45 1160 1 911 45 1161 1 241 45 1162 13 0 13 2 13 1 33 1163 18 3 43 1 43 2 1 1136 45 1164 1 916 45 1165 1 918 45 1166 13 0 13 2 13 1 33 1167 18 3 43 1 43 2 1 1136 45 1168 1 922 45 1169 8 4 45 1170 13 0 13 2 13 1 33 1171 18 3 43 1 43 2 1 1136 45 1172 1 927 45 1173 75 45 1174 13 0 13 2 13 1 33 1175 18 3 43 1 43 2 1 1136 45 1176 1 932 45 1177 75 45 1178 13 0 13 2 13 1 33 1179 18 3 43 1 43 2 1 1136 45 1180 1 937 45 1181 1 245 45 1182 13 0 13 2 13 1 33 1183 18 3 43 1 43 2 1 1136 45 1184 1 942 45 1185 1 498 45 1186 13 0 13 2 13 1 33 1187 18 3 43 1 43 2 1 1136 45 1188 1 947 45 1189 1 1190 45 1191 13 0 13 2 13 1 33 1192 18 3 43 1 43 2 1 1136 45 1193 1 953 45 1194 1 1039 45 1195 13 0 13 2 13 1 33 1196 18 3 43 1 43 2 1 1136 45 1197 1 958 45 1198 75 45 1199 13 0 13 2 13 1 33 1200 18 3 43 1 43 2 1 1136 45 1201 1 963 45 1202 75 45 1203 13 0 13 2 13 1 33 1204 18 3 43 1 43 2 1 1136 45 1205 1 968 45 1206 75 45 1207 13 0 13 2 13 1 33 1208 18 3 43 1 43 2 1 1136 45 1209 1 973 45 1210 75 45 1211 13 0 13 2 13 1 33 1212 18 3 43 1 43 2 77 75 3 78 1137 15 885 19 1 115 78 1213 1 1213 45 1215 1 829 45 1216 1 241 45 1217 13 0 13 2 13 1 33 1218 18 3 43 1 43 2 1 1213 45 1219 1 834 45 1220 1 1221 45 1222 13 0 13 2 13 1 33 1223 18 3 43 1 43 2 1 1213 45 1224 1 840 45 1225 1 1226 45 1227 13 0 13 2 13 1 33 1228 18 3 43 1 43 2 1 1213 45 1229 1 846 45 1230 75 45 1231 13 0 13 2 13 1 33 1232 18 3 43 1 43 2 1 1213 45 1233 1 906 45 1234 1 1000 45 1235 13 0 13 2 13 1 33 1236 18 3 43 1 43 2 1 1213 45 1237 1 911 45 1238 1 241 45 1239 13 0 13 2 13 1 33 1240 18 3 43 1 43 2 1 1213 45 1241 1 916 45 1242 1 918 45 1243 13 0 13 2 13 1 33 1244 18 3 43 1 43 2 1 1213 45 1245 1 922 45 1246 8 5 45 1247 13 0 13 2 13 1 33 1248 18 3 43 1 43 2 1 1213 45 1249 1 927 45 1250 75 45 1251 13 0 13 2 13 1 33 1252 18 3 43 1 43 2 1 1213 45 1253 1 932 45 1254 75 45 1255 13 0 13 2 13 1 33 1256 18 3 43 1 43 2 1 1213 45 1257 1 937 45 1258 1 244 45 1259 13 0 13 2 13 1 33 1260 18 3 43 1 43 2 1 1213 45 1261 1 942 45 1262 1 551 45 1263 13 0 13 2 13 1 33 1264 18 3 43 1 43 2 1 1213 45 1265 1 947 45 1266 1 1267 45 1268 13 0 13 2 13 1 33 1269 18 3 43 1 43 2 1 1213 45 1270 1 953 45 1271 1 1039 45 1272 13 0 13 2 13 1 33 1273 18 3 43 1 43 2 1 1213 45 1274 1 958 45 1275 75 45 1276 13 0 13 2 13 1 33 1277 18 3 43 1 43 2 1 1213 45 1278 1 963 45 1279 75 45 1280 13 0 13 2 13 1 33 1281 18 3 43 1 43 2 1 1213 45 1282 1 968 45 1283 75 45 1284 13 0 13 2 13 1 33 1285 18 3 43 1 43 2 1 1213 45 1286 1 973 45 1287 75 45 1288 13 0 13 2 13 1 33 1289 18 3 43 1 43 2 77 75 3 78 1214 15 885 19 1 115 78 1290 1 1290 45 1292 1 829 45 1293 1 142 45 1294 13 0 13 2 13 1 33 1295 18 3 43 1 43 2 1 1290 45 1296 1 834 45 1297 1 1298 45 1299 13 0 13 2 13 1 33 1300 18 3 43 1 43 2 1 1290 45 1301 1 840 45 1302 1 1303 45 1304 13 0 13 2 13 1 33 1305 18 3 43 1 43 2 1 1290 45 1306 1 846 45 1307 75 45 1308 13 0 13 2 13 1 33 1309 18 3 43 1 43 2 1 1290 45 1310 1 906 45 1311 1 112 45 1312 13 0 13 2 13 1 33 1313 18 3 43 1 43 2 1 1290 45 1314 1 911 45 1315 1 139 45 1316 13 0 13 2 13 1 33 1317 18 3 43 1 43 2 1 1290 45 1318 1 916 45 1319 1 918 45 1320 13 0 13 2 13 1 33 1321 18 3 43 1 43 2 1 1290 45 1322 1 922 45 1323 8 6 45 1324 13 0 13 2 13 1 33 1325 18 3 43 1 43 2 1 1290 45 1326 1 927 45 1327 75 45 1328 13 0 13 2 13 1 33 1329 18 3 43 1 43 2 1 1290 45 1330 1 932 45 1331 75 45 1332 13 0 13 2 13 1 33 1333 18 3 43 1 43 2 1 1290 45 1334 1 937 45 1335 1 243 45 1336 13 0 13 2 13 1 33 1337 18 3 43 1 43 2 1 1290 45 1338 1 942 45 1339 1 603 45 1340 13 0 13 2 13 1 33 1341 18 3 43 1 43 2 1 1290 45 1342 1 947 45 1343 1 1344 45 1345 13 0 13 2 13 1 33 1346 18 3 43 1 43 2 1 1290 45 1347 1 953 45 1348 1 148 45 1349 13 0 13 2 13 1 33 1350 18 3 43 1 43 2 1 1290 45 1351 1 958 45 1352 75 45 1353 13 0 13 2 13 1 33 1354 18 3 43 1 43 2 1 1290 45 1355 1 963 45 1356 75 45 1357 13 0 13 2 13 1 33 1358 18 3 43 1 43 2 1 1290 45 1359 1 968 45 1360 75 45 1361 13 0 13 2 13 1 33 1362 18 3 43 1 43 2 1 1290 45 1363 1 973 45 1364 75 45 1365 13 0 13 2 13 1 33 1366 18 3 43 1 43 2 77 75 3 78 1291 15 885 19 1 115 78 1367 1 1367 45 1369 1 829 45 1370 1 241 45 1371 13 0 13 2 13 1 33 1372 18 3 43 1 43 2 1 1367 45 1373 1 834 45 1374 1 1375 45 1376 13 0 13 2 13 1 33 1377 18 3 43 1 43 2 1 1367 45 1378 1 840 45 1379 1 1380 45 1381 13 0 13 2 13 1 33 1382 18 3 43 1 43 2 1 1367 45 1383 1 846 45 1384 75 45 1385 13 0 13 2 13 1 33 1386 18 3 43 1 43 2 1 1367 45 1387 1 906 45 1388 1 1000 45 1389 13 0 13 2 13 1 33 1390 18 3 43 1 43 2 1 1367 45 1391 1 911 45 1392 1 241 45 1393 13 0 13 2 13 1 33 1394 18 3 43 1 43 2 1 1367 45 1395 1 916 45 1396 1 918 45 1397 13 0 13 2 13 1 33 1398 18 3 43 1 43 2 1 1367 45 1399 1 922 45 1400 8 7 45 1401 13 0 13 2 13 1 33 1402 18 3 43 1 43 2 1 1367 45 1403 1 927 45 1404 75 45 1405 13 0 13 2 13 1 33 1406 18 3 43 1 43 2 1 1367 45 1407 1 932 45 1408 75 45 1409 13 0 13 2 13 1 33 1410 18 3 43 1 43 2 1 1367 45 1411 1 937 45 1412 1 242 45 1413 13 0 13 2 13 1 33 1414 18 3 43 1 43 2 1 1367 45 1415 1 942 45 1416 1 656 45 1417 13 0 13 2 13 1 33 1418 18 3 43 1 43 2 1 1367 45 1419 1 947 45 1420 1 1421 45 1422 13 0 13 2 13 1 33 1423 18 3 43 1 43 2 1 1367 45 1424 1 953 45 1425 1 1039 45 1426 13 0 13 2 13 1 33 1427 18 3 43 1 43 2 1 1367 45 1428 1 958 45 1429 75 45 1430 13 0 13 2 13 1 33 1431 18 3 43 1 43 2 1 1367 45 1432 1 963 45 1433 75 45 1434 13 0 13 2 13 1 33 1435 18 3 43 1 43 2 1 1367 45 1436 1 968 45 1437 75 45 1438 13 0 13 2 13 1 33 1439 18 3 43 1 43 2 1 1367 45 1440 1 973 45 1441 75 45 1442 13 0 13 2 13 1 33 1443 18 3 43 1 43 2 77 75 3 78 1368 15 885 19 1 115 78 1444 1 1444 45 1446 1 829 45 1447 1 981 45 1448 13 0 13 2 13 1 33 1449 18 3 43 1 43 2 1 1444 45 1450 1 834 45 1451 1 1452 45 1453 13 0 13 2 13 1 33 1454 18 3 43 1 43 2 1 1444 45 1455 1 840 45 1456 1 1457 45 1458 13 0 13 2 13 1 33 1459 18 3 43 1 43 2 1 1444 45 1460 1 846 45 1461 75 45 1462 13 0 13 2 13 1 33 1463 18 3 43 1 43 2 1 1444 45 1464 1 906 45 1465 1 1000 45 1466 13 0 13 2 13 1 33 1467 18 3 43 1 43 2 1 1444 45 1468 1 911 45 1469 1 981 45 1470 13 0 13 2 13 1 33 1471 18 3 43 1 43 2 1 1444 45 1472 1 916 45 1473 1 918 45 1474 13 0 13 2 13 1 33 1475 18 3 43 1 43 2 1 1444 45 1476 1 922 45 1477 8 8 45 1478 13 0 13 2 13 1 33 1479 18 3 43 1 43 2 1 1444 45 1480 1 927 45 1481 75 45 1482 13 0 13 2 13 1 33 1483 18 3 43 1 43 2 1 1444 45 1484 1 932 45 1485 75 45 1486 13 0 13 2 13 1 33 1487 18 3 43 1 43 2 1 1444 45 1488 1 937 45 1489 1 1490 45 1491 13 0 13 2 13 1 33 1492 18 3 43 1 43 2 1 1444 45 1493 1 942 45 1494 1 705 45 1495 13 0 13 2 13 1 33 1496 18 3 43 1 43 2 1 1444 45 1497 1 947 45 1498 1 1499 45 1500 13 0 13 2 13 1 33 1501 18 3 43 1 43 2 1 1444 45 1502 1 953 45 1503 1 1039 45 1504 13 0 13 2 13 1 33 1505 18 3 43 1 43 2 1 1444 45 1506 1 958 45 1507 75 45 1508 13 0 13 2 13 1 33 1509 18 3 43 1 43 2 1 1444 45 1510 1 963 45 1511 75 45 1512 13 0 13 2 13 1 33 1513 18 3 43 1 43 2 1 1444 45 1514 1 968 45 1515 75 45 1516 13 0 13 2 13 1 33 1517 18 3 43 1 43 2 1 1444 45 1518 1 973 45 1519 8 2 45 1520 13 0 13 2 13 1 33 1521 18 3 43 1 43 2 77 75 3 78 1445 15 885 19 1 115 78 1522 1 1522 45 1523 1 829 45 1524 1 981 45 1525 13 0 13 2 13 1 33 1526 18 3 43 1 43 2 1 1522 45 1527 1 834 45 1528 1 1529 45 1530 13 0 13 2 13 1 33 1531 18 3 43 1 43 2 1 1522 45 1532 1 840 45 1533 1 1534 45 1535 13 0 13 2 13 1 33 1536 18 3 43 1 43 2 1 1522 45 1537 1 846 45 1538 75 45 1539 13 0 13 2 13 1 33 1540 18 3 43 1 43 2 1 1522 45 1541 1 906 45 1542 1 1000 45 1543 13 0 13 2 13 1 33 1544 18 3 43 1 43 2 1 1522 45 1545 1 911 45 1546 1 981 45 1547 13 0 13 2 13 1 33 1548 18 3 43 1 43 2 1 1522 45 1549 1 916 45 1550 1 918 45 1551 13 0 13 2 13 1 33 1552 18 3 43 1 43 2 1 1522 45 1553 1 922 45 1554 8 9 45 1555 13 0 13 2 13 1 33 1556 18 3 43 1 43 2 1 1522 45 1557 1 927 45 1558 75 45 1559 13 0 13 2 13 1 33 1560 18 3 43 1 43 2 1 1522 45 1561 1 932 45 1562 75 45 1563 13 0 13 2 13 1 33 1564 18 3 43 1 43 2 1 1522 45 1565 1 937 45 1566 1 1567 45 1568 13 0 13 2 13 1 33 1569 18 3 43 1 43 2 1 1522 45 1570 1 942 45 1571 1 754 45 1572 13 0 13 2 13 1 33 1573 18 3 43 1 43 2 1 1522 45 1574 1 947 45 1575 1 1576 45 1577 13 0 13 2 13 1 33 1578 18 3 43 1 43 2 1 1522 45 1579 1 953 45 1580 1 1039 45 1581 13 0 13 2 13 1 33 1582 18 3 43 1 43 2 1 1522 45 1583 1 958 45 1584 75 45 1585 13 0 13 2 13 1 33 1586 18 3 43 1 43 2 1 1522 45 1587 1 963 45 1588 75 45 1589 13 0 13 2 13 1 33 1590 18 3 43 1 43 2 1 1522 45 1591 1 968 45 1592 75 45 1593 13 0 13 2 13 1 33 1594 18 3 43 1 43 2 1 1522 45 1595 1 973 45 1596 8 3 45 1597 13 0 13 2 13 1 33 1598 18 3 43 1 43 2 15 1445 1 1522 17 122 15 1445 75 17 124 15 1368 1 1444 17 122 15 1368 1 1445 17 124 15 1291 1 1367 17 122 15 1291 1 1368 17 124 15 1214 1 1290 17 122 15 1214 1 1291 17 124 15 1137 1 1213 17 122 15 1137 1 1214 17 124 15 1059 1 1136 17 122 15 1059 1 1137 17 124 15 978 1 1058 17 122 15 978 1 1059 17 124 15 884 1 977 17 122 15 884 1 978 17 124 15 858 1 883 17 122 15 858 1 884 17 124 1 823 45 828 1 829 45 830 1 199 45 831 13 0 13 2 13 1 33 832 18 3 43 1 43 2 1 823 45 833 1 834 45 835 1 836 45 837 13 0 13 2 13 1 33 838 18 3 43 1 43 2 1 823 45 839 1 840 45 841 1 842 45 843 13 0 13 2 13 1 33 844 18 3 43 1 43 2 1 823 45 845 1 846 45 847 75 45 848 13 0 13 2 13 1 33 849 18 3 43 1 43 2 1 823 45 850 1 851 45 852 75 45 853 13 0 13 2 13 1 33 854 18 3 43 1 43 2 1 823 45 855 1 856 45 857 1 858 45 859 13 0 13 2 13 1 33 860 18 3 43 1 43 2 1 823 45 861 1 862 45 863 75 45 864 13 0 13 2 13 1 33 865 18 3 43 1 43 2 15 823 1 866 17 867 1 823 45 868 1 869 45 870 75 45 871 13 0 13 2 13 1 33 872 18 3 43 1 43 2 1 823 45 873 1 874 45 875 75 45 876 13 0 13 2 13 1 33 877 18 3 43 1 43 2 1 823 45 878 1 879 45 880 1 824 45 881 13 0 13 2 13 1 33 882 18 3 43 1 43 2 15 199 15 823 14 824 19 3 113 15 1599 15 1600 15 1601 19 3 17 15 1602 15 1603 15 1604 19 3 17 15 1605 15 22 15 1606 15 1607 19 4 25 15 1605 14 26 77 15 27 19 4 25 15 1605 1 1619 12 19 2 44 15 1620 15 22 15 1621 15 1622 19 4 25 15 1620 14 26 77 15 48 19 4 25 15 1620 1 1630 12 19 2 44 1 1602 45 1631 1 60 45 1632 1 1620 45 1633 13 2 13 0 13 1 19 3 63 43 1 43 2 1 1602 45 1634 1 65 45 1635 1 1605 45 1636 13 2 13 0 13 1 19 3 63 43 1 43 2 15 65 15 22 15 1637 15 1638 19 4 25 15 65 77 15 1639 15 1640 1 1641 12 19 5 75 15 60 15 22 15 1642 15 1643 19 4 25 15 60 77 15 1644 15 1645 1 1646 12 19 5 75 15 1647 8 0 17 82 15 1647 15 22 15 1648 15 1649 19 4 25 15 1650 8 1 17 82 15 1650 15 22 15 1651 15 1652 19 4 25 15 1653 8 2 17 82 15 1653 15 22 15 1654 15 1655 19 4 25 15 1656 8 4 17 82 15 1656 15 22 15 1657 15 1658 19 4 25 15 1659 8 8 17 82 15 1659 15 22 15 1660 15 1661 19 4 25 15 1662 8 16 17 82 15 1662 15 22 15 1663 15 1664 19 4 25 15 1665 8 32 17 82 15 1665 15 22 15 1666 15 1667 19 4 25 15 1668 8 64 17 82 15 1668 15 22 15 1669 15 1670 19 4 25 15 1671 8 128 17 82 15 1671 15 22 15 1672 15 1673 19 4 25 15 1674 8 256 17 82 15 1674 15 22 15 1675 15 1676 19 4 25 15 1677 8 512 17 82 15 1677 15 22 15 1678 15 1679 19 4 25 15 1680 19 1 104 15 105 15 22 15 1681 15 1682 19 4 25 15 105 77 15 1683 15 1684 1 1685 12 19 5 75 15 114 19 1 115 78 1686 77 75 3 78 1688 15 125 19 1 115 78 1689 15 1689 15 126 9 0 15 1608 19 4 118 15 1689 15 126 9 1 9 0 19 4 118 77 75 3 78 1690 15 125 19 1 115 78 1691 15 1691 15 126 9 0 15 1609 19 4 118 15 1691 15 126 9 1 9 1 19 4 118 77 75 3 78 1692 15 125 19 1 115 78 1693 15 1693 15 126 9 0 15 1610 19 4 118 15 1693 15 126 9 1 9 2 19 4 118 77 75 3 78 1694 15 125 19 1 115 78 1695 15 1695 15 126 9 0 15 1611 19 4 118 15 1695 15 126 9 1 9 4 19 4 118 77 75 3 78 1696 15 125 19 1 115 78 1697 15 1697 15 126 9 0 15 1612 19 4 118 15 1697 15 126 9 1 9 8 19 4 118 77 75 3 78 1698 15 125 19 1 115 78 1699 15 1699 15 126 9 0 15 1613 19 4 118 15 1699 15 126 9 1 9 16 19 4 118 77 75 3 78 1700 15 125 19 1 115 78 1701 15 1701 15 126 9 0 15 1614 19 4 118 15 1701 15 126 9 1 9 32 19 4 118 77 75 3 78 1702 15 125 19 1 115 78 1703 15 1703 15 126 9 0 15 1615 19 4 118 15 1703 15 126 9 1 9 64 19 4 118 77 75 3 78 1704 15 125 19 1 115 78 1705 15 1705 15 126 9 0 15 1616 19 4 118 15 1705 15 126 9 1 9 128 19 4 118 77 75 3 78 1706 15 125 19 1 115 78 1707 15 1707 15 126 9 0 15 1617 19 4 118 15 1707 15 126 9 1 9 256 19 4 118 77 75 3 78 1708 15 125 19 1 115 78 1709 15 1709 15 126 9 0 15 1618 19 4 118 15 1709 15 126 9 1 9 512 19 4 118 15 1708 1 1709 17 122 15 1708 75 17 124 15 1706 1 1707 17 122 15 1706 1 1708 17 124 15 1704 1 1705 17 122 15 1704 1 1706 17 124 15 1702 1 1703 17 122 15 1702 1 1704 17 124 15 1700 1 1701 17 122 15 1700 1 1702 17 124 15 1698 1 1699 17 122 15 1698 1 1700 17 124 15 1696 1 1697 17 122 15 1696 1 1698 17 124 15 1694 1 1695 17 122 15 1694 1 1696 17 124 15 1692 1 1693 17 122 15 1692 1 1694 17 124 15 1690 1 1691 17 122 15 1690 1 1692 17 124 15 1688 1 1689 17 122 15 1688 1 1690 17 124 15 1686 15 116 9 0 15 1602 19 4 118 15 1686 15 116 9 1 15 1687 19 4 118 15 1686 15 116 9 2 15 1688 19 4 118 15 1602 15 1686 14 112 19 3 113 15 1710 19 1 104 15 196 15 1711 19 2 198 15 1712 15 1713 77 77 15 1714 15 1715 15 1716 15 204 77 77 15 1717 9 12 77 77 77 19 15 206 15 1718 15 22 15 1719 15 1720 19 4 25 15 1721 15 22 15 1722 15 1723 19 4 25 15 1721 14 26 77 15 1724 19 4 25 15 1712 19 1 117 78 1755 15 1721 1 1756 12 19 2 44 15 1721 15 253 15 1757 19 3 255 1 1758 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 1759 14 11 13 0 19 6 265 43 1 15 1758 15 266 1 1761 12 19 3 255 1 1762 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 1763 14 11 13 0 19 6 265 43 1 15 1762 15 266 1 1765 12 19 3 255 1 1766 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 1767 14 11 13 0 19 6 265 43 1 15 1766 15 266 1 1769 12 19 3 255 1 1770 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 1771 14 11 13 0 19 6 265 43 1 15 1770 15 266 1 1773 12 19 3 255 1 1774 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 1775 14 11 13 0 19 6 265 43 1 15 1774 15 266 1 1777 12 19 3 255 1 1778 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 1779 14 11 13 0 19 6 265 43 1 15 1778 15 266 1 1781 12 19 3 255 1 1782 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 1783 14 11 13 0 19 6 265 43 1 15 1782 15 266 1 1785 12 19 3 255 1 1786 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 1787 14 11 13 0 19 6 265 43 1 15 1786 15 266 1 1789 12 19 3 255 1 1790 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 1791 14 11 13 0 19 6 265 43 1 15 1790 15 266 1 1793 12 19 3 255 1 1794 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 1795 14 11 13 0 19 6 265 43 1 15 1794 15 266 1 1797 12 19 3 255 1 1798 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 1799 14 11 13 0 19 6 265 43 1 15 1798 15 266 1 1801 12 19 3 255 1 1802 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 1803 14 11 13 0 19 6 265 43 1 15 1802 15 266 1 1805 12 19 3 255 15 196 15 1806 19 2 198 15 1807 15 22 15 1808 15 1809 19 4 25 15 1807 14 26 77 15 1810 19 4 25 15 1807 1 1812 12 19 2 44 15 1807 15 253 15 1813 19 3 255 15 196 15 1814 19 2 198 15 1815 15 22 15 1816 15 1817 19 4 25 15 1815 14 26 77 15 1818 19 4 25 15 1815 1 1823 12 19 2 44 15 1815 15 253 15 1824 19 3 255 15 196 15 1825 19 2 198 15 1826 15 22 15 1827 15 1828 19 4 25 15 1826 14 26 77 15 1829 19 4 25 15 1826 1 1831 12 19 2 44 15 1826 15 253 15 1832 19 3 255 15 196 15 1833 19 2 198 15 1834 15 22 15 1835 15 1836 19 4 25 15 1834 14 26 77 15 1837 19 4 25 15 1834 1 1840 12 19 2 44 15 1834 15 253 15 1841 19 3 255 15 1842 15 22 15 1843 15 1844 19 4 25 15 1842 77 15 1845 15 1846 1 1847 12 19 5 75 15 1848 15 22 15 1849 15 1850 19 4 25 15 1848 77 15 1851 15 1852 1 1856 12 19 5 75 15 1712 15 1842 19 2 359 15 1857 19 1 104 15 1858 19 1 104 15 196 15 1859 19 2 198 15 1860 15 22 15 1861 15 1862 19 4 25 15 1860 14 26 77 15 1863 19 4 25 15 1860 1 1865 12 19 2 44 15 1860 15 253 15 1866 19 3 255 15 196 15 1867 19 2 198 15 1868 15 22 15 1869 15 1870 19 4 25 15 1868 14 26 77 15 1871 19 4 25 15 1868 1 1874 12 19 2 44 15 1868 15 253 15 1875 19 3 255 15 196 15 1876 19 2 198 15 1877 15 22 15 1878 15 1879 19 4 25 15 1877 14 26 77 15 1880 19 4 25 15 1877 1 1882 12 19 2 44 15 1877 15 253 15 1883 19 3 255 15 196 15 1884 19 2 198 15 1885 15 22 15 1886 15 1887 19 4 25 15 1885 14 26 77 15 1888 19 4 25 15 1885 1 1889 12 19 2 44 15 1885 15 253 15 1890 19 3 255 15 1891 15 22 15 1892 15 1893 19 4 25 15 1891 77 15 1894 15 1895 1 1896 12 19 5 75 15 1897 15 22 15 1898 15 1899 19 4 25 15 1897 77 15 1900 15 1901 1 1905 12 19 5 75 15 1712 15 1891 19 2 359 15 1906 19 1 104 15 1907 19 1 104 15 196 15 1908 19 2 198 15 1909 15 22 15 1910 15 1911 19 4 25 15 1909 14 26 77 15 1912 19 4 25 15 1909 1 1914 12 19 2 44 15 1909 15 253 15 1915 19 3 255 15 196 15 1916 19 2 198 15 1917 15 22 15 1918 15 1919 19 4 25 15 1917 14 26 77 15 1920 19 4 25 15 1917 1 1923 12 19 2 44 15 1917 15 253 15 1924 19 3 255 15 196 15 1925 19 2 198 15 1926 15 22 15 1927 15 1928 19 4 25 15 1926 14 26 77 15 1929 19 4 25 15 1926 1 1931 12 19 2 44 15 1926 15 253 15 1932 19 3 255 15 196 15 1933 19 2 198 15 1934 15 22 15 1935 15 1936 19 4 25 15 1934 14 26 77 15 1937 19 4 25 15 1934 1 1938 12 19 2 44 15 1934 15 253 15 1939 19 3 255 15 1940 15 22 15 1941 15 1942 19 4 25 15 1940 77 15 1943 15 1944 1 1945 12 19 5 75 15 1946 15 22 15 1947 15 1948 19 4 25 15 1946 77 15 1949 15 1950 1 1954 12 19 5 75 15 1712 15 1940 19 2 359 15 1955 19 1 104 15 1956 19 1 104 15 196 15 1957 19 2 198 15 1958 15 22 15 1959 15 1960 19 4 25 15 1958 14 26 77 15 1961 19 4 25 15 1958 1 1963 12 19 2 44 15 1958 15 253 15 1964 19 3 255 15 196 15 1965 19 2 198 15 1966 15 22 15 1967 15 1968 19 4 25 15 1966 14 26 77 15 1969 19 4 25 15 1966 1 1972 12 19 2 44 15 1966 15 253 15 1973 19 3 255 15 196 15 1974 19 2 198 15 1975 15 22 15 1976 15 1977 19 4 25 15 1975 14 26 77 15 1978 19 4 25 15 1975 1 1980 12 19 2 44 15 1975 15 253 15 1981 19 3 255 15 196 15 1982 19 2 198 15 1983 15 22 15 1984 15 1985 19 4 25 15 1983 14 26 77 15 1986 19 4 25 15 1983 1 1987 12 19 2 44 15 1983 15 253 15 1988 19 3 255 15 1989 15 22 15 1990 15 1991 19 4 25 15 1989 77 15 1992 15 1993 1 1994 12 19 5 75 15 1995 15 22 15 1996 15 1997 19 4 25 15 1995 77 15 1998 15 1999 1 2003 12 19 5 75 15 1712 15 1989 19 2 359 15 2004 19 1 104 15 2005 19 1 104 15 196 15 2006 19 2 198 15 2007 15 22 15 2008 15 2009 19 4 25 15 2007 14 26 77 15 2010 19 4 25 15 2007 1 2012 12 19 2 44 15 2007 15 253 15 2013 19 3 255 15 196 15 2014 19 2 198 15 2015 15 22 15 2016 15 2017 19 4 25 15 2015 14 26 77 15 2018 19 4 25 15 2015 1 2023 12 19 2 44 15 2015 15 253 15 2024 19 3 255 15 196 15 2025 19 2 198 15 2026 15 22 15 2027 15 2028 19 4 25 15 2026 14 26 77 15 2029 19 4 25 15 2026 1 2031 12 19 2 44 15 2026 15 253 15 2032 19 3 255 15 196 15 2033 19 2 198 15 2034 15 22 15 2035 15 2036 19 4 25 15 2034 14 26 77 15 2037 19 4 25 15 2034 1 2040 12 19 2 44 15 2034 15 253 15 2041 19 3 255 15 2042 15 22 15 2043 15 2044 19 4 25 15 2042 77 15 2045 15 2046 1 2047 12 19 5 75 15 2048 15 22 15 2049 15 2050 19 4 25 15 2048 77 15 2051 15 2052 1 2056 12 19 5 75 15 1712 15 2042 19 2 359 15 2057 19 1 104 15 2058 19 1 104 15 196 15 2059 19 2 198 15 2060 15 22 15 2061 15 2062 19 4 25 15 2060 14 26 77 15 2063 19 4 25 15 2060 1 2065 12 19 2 44 15 2060 15 253 15 2066 19 3 255 15 196 15 2067 19 2 198 15 2068 15 22 15 2069 15 2070 19 4 25 15 2068 14 26 77 15 2071 19 4 25 15 2068 1 2076 12 19 2 44 15 2068 15 253 15 2077 19 3 255 15 196 15 2078 19 2 198 15 2079 15 22 15 2080 15 2081 19 4 25 15 2079 14 26 77 15 2082 19 4 25 15 2079 1 2084 12 19 2 44 15 2079 15 253 15 2085 19 3 255 15 196 15 2086 19 2 198 15 2087 15 22 15 2088 15 2089 19 4 25 15 2087 14 26 77 15 2090 19 4 25 15 2087 1 2093 12 19 2 44 15 2087 15 253 15 2094 19 3 255 15 2095 15 22 15 2096 15 2097 19 4 25 15 2095 77 15 2098 15 2099 1 2100 12 19 5 75 15 2101 15 22 15 2102 15 2103 19 4 25 15 2101 77 15 2104 15 2105 1 2109 12 19 5 75 15 1712 15 2095 19 2 359 15 2110 19 1 104 15 2111 19 1 104 15 196 15 2112 19 2 198 15 1602 15 22 15 2113 15 2114 19 4 25 15 1602 14 26 77 15 2115 19 4 25 15 1602 1 2117 12 19 2 44 15 1602 15 253 15 2118 19 3 255 15 196 15 2119 19 2 198 15 2120 15 22 15 2121 15 2122 19 4 25 15 2120 14 26 77 15 2123 19 4 25 15 2120 1 2128 12 19 2 44 15 2120 15 253 15 2129 19 3 255 15 196 15 2130 19 2 198 15 2131 15 22 15 2132 15 2133 19 4 25 15 2131 14 26 77 15 2134 19 4 25 15 2131 1 2136 12 19 2 44 15 2131 15 253 15 2137 19 3 255 15 196 15 2138 19 2 198 15 2139 15 22 15 2140 15 2141 19 4 25 15 2139 14 26 77 15 2142 19 4 25 15 2139 1 2145 12 19 2 44 15 2139 15 253 15 2146 19 3 255 15 2147 15 22 15 2148 15 2149 19 4 25 15 2147 77 15 2150 15 2151 1 2152 12 19 5 75 15 2153 15 22 15 2154 15 2155 19 4 25 15 2153 77 15 2156 15 2157 1 2161 12 19 5 75 15 1712 15 2147 19 2 359 15 2162 19 1 104 15 2163 19 1 104 15 196 15 2164 19 2 198 15 2165 15 22 15 2166 15 2167 19 4 25 15 2165 14 26 77 15 2168 19 4 25 15 2165 1 2170 12 19 2 44 15 2165 15 253 15 2171 19 3 255 15 196 15 2172 19 2 198 15 2173 15 22 15 2174 15 2175 19 4 25 15 2173 14 26 77 15 2176 19 4 25 15 2173 1 2181 12 19 2 44 15 2173 15 253 15 2182 19 3 255 15 196 15 2183 19 2 198 15 2184 15 22 15 2185 15 2186 19 4 25 15 2184 14 26 77 15 2187 19 4 25 15 2184 1 2189 12 19 2 44 15 2184 15 253 15 2190 19 3 255 15 196 15 2191 19 2 198 15 2192 15 22 15 2193 15 2194 19 4 25 15 2192 14 26 77 15 2195 19 4 25 15 2192 1 2198 12 19 2 44 15 2192 15 253 15 2199 19 3 255 15 2200 15 22 15 2201 15 2202 19 4 25 15 2200 77 15 2203 15 2204 1 2205 12 19 5 75 15 2206 15 22 15 2207 15 2208 19 4 25 15 2206 77 15 2209 15 2210 1 2214 12 19 5 75 15 1712 15 2200 19 2 359 15 2215 19 1 104 15 2216 19 1 104 15 196 15 2217 19 2 198 15 2218 15 22 15 2219 15 2220 19 4 25 15 2218 14 26 77 15 2221 19 4 25 15 2218 1 2223 12 19 2 44 15 2218 15 253 15 2224 19 3 255 15 196 15 2225 19 2 198 15 2226 15 22 15 2227 15 2228 19 4 25 15 2226 14 26 77 15 2229 19 4 25 15 2226 1 2234 12 19 2 44 15 2226 15 253 15 2235 19 3 255 15 196 15 2236 19 2 198 15 2237 15 22 15 2238 15 2239 19 4 25 15 2237 14 26 77 15 2240 19 4 25 15 2237 1 2242 12 19 2 44 15 2237 15 253 15 2243 19 3 255 15 196 15 2244 19 2 198 15 2245 15 22 15 2246 15 2247 19 4 25 15 2245 14 26 77 15 2248 19 4 25 15 2245 1 2251 12 19 2 44 15 2245 15 253 15 2252 19 3 255 15 2253 15 22 15 2254 15 2255 19 4 25 15 2253 77 15 2256 15 2257 1 2258 12 19 5 75 15 2259 15 22 15 2260 15 2261 19 4 25 15 2259 77 15 2262 15 2263 1 2267 12 19 5 75 15 1712 15 2253 19 2 359 15 2268 19 1 104 15 2269 19 1 104 15 196 15 2270 19 2 198 15 2271 15 22 15 2272 15 2273 19 4 25 15 2271 14 26 77 15 2274 19 4 25 15 2271 1 2276 12 19 2 44 15 2271 15 253 15 2277 19 3 255 15 196 15 2278 19 2 198 15 2279 15 22 15 2280 15 2281 19 4 25 15 2279 14 26 77 15 2282 19 4 25 15 2279 1 2287 12 19 2 44 15 2279 15 253 15 2288 19 3 255 15 196 15 2289 19 2 198 15 2290 15 22 15 2291 15 2292 19 4 25 15 2290 14 26 77 15 2293 19 4 25 15 2290 1 2295 12 19 2 44 15 2290 15 253 15 2296 19 3 255 15 196 15 2297 19 2 198 15 2298 15 22 15 2299 15 2300 19 4 25 15 2298 14 26 77 15 2301 19 4 25 15 2298 1 2304 12 19 2 44 15 2298 15 253 15 2305 19 3 255 15 2306 15 22 15 2307 15 2308 19 4 25 15 2306 77 15 2309 15 2310 1 2311 12 19 5 75 15 2312 15 22 15 2313 15 2314 19 4 25 15 2312 77 15 2315 15 2316 1 2320 12 19 5 75 15 1712 15 2306 19 2 359 15 2321 19 1 104 15 2322 19 1 104 15 196 15 2323 19 2 198 15 2324 15 22 15 2325 15 2326 19 4 25 15 2324 14 26 77 15 2327 19 4 25 15 2324 1 2329 12 19 2 44 15 2324 15 253 15 2330 19 3 255 15 196 15 2331 19 2 198 15 2332 15 22 15 2333 15 2334 19 4 25 15 2332 14 26 77 15 2335 19 4 25 15 2332 1 2340 12 19 2 44 15 2332 15 253 15 2341 19 3 255 15 196 15 2342 19 2 198 15 2343 15 22 15 2344 15 2345 19 4 25 15 2343 14 26 77 15 2346 19 4 25 15 2343 1 2348 12 19 2 44 15 2343 15 253 15 2349 19 3 255 15 196 15 2350 19 2 198 15 2351 15 22 15 2352 15 2353 19 4 25 15 2351 14 26 77 15 2354 19 4 25 15 2351 1 2357 12 19 2 44 15 2351 15 253 15 2358 19 3 255 15 2359 15 22 15 2360 15 2361 19 4 25 15 2359 77 15 2362 15 2363 1 2364 12 19 5 75 15 2365 15 22 15 2366 15 2367 19 4 25 15 2365 77 15 2368 15 2369 1 2373 12 19 5 75 15 1712 15 2359 19 2 359 15 2374 19 1 104 15 2375 19 1 104 15 196 15 2376 19 2 198 15 2377 15 22 15 2378 15 2379 19 4 25 15 2377 14 26 77 15 2380 19 4 25 15 2377 1 2416 12 19 2 44 15 2377 15 253 15 2417 19 3 255 15 2418 15 22 15 2419 15 2420 19 4 25 15 2418 14 26 77 15 2421 19 4 25 15 2418 1 2422 12 19 2 44 15 2423 19 1 104 15 815 15 22 15 2424 15 2425 19 4 25 15 815 77 15 2426 15 2427 1 2430 12 19 5 75 15 825 19 1 115 45 826 15 824 13 0 14 824 19 3 113 10 0 43 1 78 2431 77 75 3 78 2456 15 885 19 1 115 78 2475 1 2475 45 2477 1 829 45 2478 1 241 45 2479 13 0 13 2 13 1 33 2480 18 3 43 1 43 2 1 2475 45 2481 1 834 45 2482 1 2483 45 2484 13 0 13 2 13 1 33 2485 18 3 43 1 43 2 1 2475 45 2486 1 840 45 2487 1 2488 45 2489 13 0 13 2 13 1 33 2490 18 3 43 1 43 2 1 2475 45 2491 1 846 45 2492 75 45 2493 13 0 13 2 13 1 33 2494 18 3 43 1 43 2 1 2475 45 2495 1 906 45 2496 1 1000 45 2497 13 0 13 2 13 1 33 2498 18 3 43 1 43 2 1 2475 45 2499 1 911 45 2500 1 241 45 2501 13 0 13 2 13 1 33 2502 18 3 43 1 43 2 1 2475 45 2503 1 916 45 2504 1 918 45 2505 13 0 13 2 13 1 33 2506 18 3 43 1 43 2 1 2475 45 2507 1 922 45 2508 8 1 45 2509 13 0 13 2 13 1 33 2510 18 3 43 1 43 2 1 2475 45 2511 1 927 45 2512 75 45 2513 13 0 13 2 13 1 33 2514 18 3 43 1 43 2 1 2475 45 2515 1 932 45 2516 75 45 2517 13 0 13 2 13 1 33 2518 18 3 43 1 43 2 1 2475 45 2519 1 937 45 2520 1 1752 45 2521 13 0 13 2 13 1 33 2522 18 3 43 1 43 2 1 2475 45 2523 1 942 45 2524 1 1842 45 2525 13 0 13 2 13 1 33 2526 18 3 43 1 43 2 1 2475 45 2527 1 947 45 2528 1 2529 45 2530 13 0 13 2 13 1 33 2531 18 3 43 1 43 2 1 2475 45 2532 1 953 45 2533 1 1039 45 2534 13 0 13 2 13 1 33 2535 18 3 43 1 43 2 1 2475 45 2536 1 958 45 2537 75 45 2538 13 0 13 2 13 1 33 2539 18 3 43 1 43 2 1 2475 45 2540 1 963 45 2541 75 45 2542 13 0 13 2 13 1 33 2543 18 3 43 1 43 2 1 2475 45 2544 1 968 45 2545 75 45 2546 13 0 13 2 13 1 33 2547 18 3 43 1 43 2 1 2475 45 2548 1 973 45 2549 75 45 2550 13 0 13 2 13 1 33 2551 18 3 43 1 43 2 77 75 3 78 2476 15 885 19 1 115 78 2552 1 2552 45 2554 1 829 45 2555 1 981 45 2556 13 0 13 2 13 1 33 2557 18 3 43 1 43 2 1 2552 45 2558 1 834 45 2559 1 2560 45 2561 13 0 13 2 13 1 33 2562 18 3 43 1 43 2 1 2552 45 2563 1 840 45 2564 1 2565 45 2566 13 0 13 2 13 1 33 2567 18 3 43 1 43 2 1 2552 45 2568 1 846 45 2569 75 45 2570 13 0 13 2 13 1 33 2571 18 3 43 1 43 2 1 2552 45 2572 1 906 45 2573 1 1000 45 2574 13 0 13 2 13 1 33 2575 18 3 43 1 43 2 1 2552 45 2576 1 911 45 2577 1 981 45 2578 13 0 13 2 13 1 33 2579 18 3 43 1 43 2 1 2552 45 2580 1 916 45 2581 1 918 45 2582 13 0 13 2 13 1 33 2583 18 3 43 1 43 2 1 2552 45 2584 1 922 45 2585 8 2 45 2586 13 0 13 2 13 1 33 2587 18 3 43 1 43 2 1 2552 45 2588 1 927 45 2589 75 45 2590 13 0 13 2 13 1 33 2591 18 3 43 1 43 2 1 2552 45 2592 1 932 45 2593 75 45 2594 13 0 13 2 13 1 33 2595 18 3 43 1 43 2 1 2552 45 2596 1 937 45 2597 1 2598 45 2599 13 0 13 2 13 1 33 2600 18 3 43 1 43 2 1 2552 45 2601 1 942 45 2602 1 1891 45 2603 13 0 13 2 13 1 33 2604 18 3 43 1 43 2 1 2552 45 2605 1 947 45 2606 1 2607 45 2608 13 0 13 2 13 1 33 2609 18 3 43 1 43 2 1 2552 45 2610 1 953 45 2611 1 1039 45 2612 13 0 13 2 13 1 33 2613 18 3 43 1 43 2 1 2552 45 2614 1 958 45 2615 75 45 2616 13 0 13 2 13 1 33 2617 18 3 43 1 43 2 1 2552 45 2618 1 963 45 2619 75 45 2620 13 0 13 2 13 1 33 2621 18 3 43 1 43 2 1 2552 45 2622 1 968 45 2623 75 45 2624 13 0 13 2 13 1 33 2625 18 3 43 1 43 2 1 2552 45 2626 1 973 45 2627 8 0 45 2628 13 0 13 2 13 1 33 2629 18 3 43 1 43 2 77 75 3 78 2553 15 885 19 1 115 78 2630 1 2630 45 2632 1 829 45 2633 1 981 45 2634 13 0 13 2 13 1 33 2635 18 3 43 1 43 2 1 2630 45 2636 1 834 45 2637 1 2638 45 2639 13 0 13 2 13 1 33 2640 18 3 43 1 43 2 1 2630 45 2641 1 840 45 2642 1 2643 45 2644 13 0 13 2 13 1 33 2645 18 3 43 1 43 2 1 2630 45 2646 1 846 45 2647 75 45 2648 13 0 13 2 13 1 33 2649 18 3 43 1 43 2 1 2630 45 2650 1 906 45 2651 1 1000 45 2652 13 0 13 2 13 1 33 2653 18 3 43 1 43 2 1 2630 45 2654 1 911 45 2655 1 981 45 2656 13 0 13 2 13 1 33 2657 18 3 43 1 43 2 1 2630 45 2658 1 916 45 2659 1 918 45 2660 13 0 13 2 13 1 33 2661 18 3 43 1 43 2 1 2630 45 2662 1 922 45 2663 8 3 45 2664 13 0 13 2 13 1 33 2665 18 3 43 1 43 2 1 2630 45 2666 1 927 45 2667 75 45 2668 13 0 13 2 13 1 33 2669 18 3 43 1 43 2 1 2630 45 2670 1 932 45 2671 75 45 2672 13 0 13 2 13 1 33 2673 18 3 43 1 43 2 1 2630 45 2674 1 937 45 2675 1 2676 45 2677 13 0 13 2 13 1 33 2678 18 3 43 1 43 2 1 2630 45 2679 1 942 45 2680 1 1940 45 2681 13 0 13 2 13 1 33 2682 18 3 43 1 43 2 1 2630 45 2683 1 947 45 2684 1 2685 45 2686 13 0 13 2 13 1 33 2687 18 3 43 1 43 2 1 2630 45 2688 1 953 45 2689 1 1039 45 2690 13 0 13 2 13 1 33 2691 18 3 43 1 43 2 1 2630 45 2692 1 958 45 2693 75 45 2694 13 0 13 2 13 1 33 2695 18 3 43 1 43 2 1 2630 45 2696 1 963 45 2697 75 45 2698 13 0 13 2 13 1 33 2699 18 3 43 1 43 2 1 2630 45 2700 1 968 45 2701 75 45 2702 13 0 13 2 13 1 33 2703 18 3 43 1 43 2 1 2630 45 2704 1 973 45 2705 8 1 45 2706 13 0 13 2 13 1 33 2707 18 3 43 1 43 2 77 75 3 78 2631 15 885 19 1 115 78 2708 1 2708 45 2710 1 829 45 2711 1 981 45 2712 13 0 13 2 13 1 33 2713 18 3 43 1 43 2 1 2708 45 2714 1 834 45 2715 1 2716 45 2717 13 0 13 2 13 1 33 2718 18 3 43 1 43 2 1 2708 45 2719 1 840 45 2720 1 2721 45 2722 13 0 13 2 13 1 33 2723 18 3 43 1 43 2 1 2708 45 2724 1 846 45 2725 75 45 2726 13 0 13 2 13 1 33 2727 18 3 43 1 43 2 1 2708 45 2728 1 906 45 2729 1 1000 45 2730 13 0 13 2 13 1 33 2731 18 3 43 1 43 2 1 2708 45 2732 1 911 45 2733 1 981 45 2734 13 0 13 2 13 1 33 2735 18 3 43 1 43 2 1 2708 45 2736 1 916 45 2737 1 918 45 2738 13 0 13 2 13 1 33 2739 18 3 43 1 43 2 1 2708 45 2740 1 922 45 2741 8 4 45 2742 13 0 13 2 13 1 33 2743 18 3 43 1 43 2 1 2708 45 2744 1 927 45 2745 75 45 2746 13 0 13 2 13 1 33 2747 18 3 43 1 43 2 1 2708 45 2748 1 932 45 2749 75 45 2750 13 0 13 2 13 1 33 2751 18 3 43 1 43 2 1 2708 45 2752 1 937 45 2753 1 2754 45 2755 13 0 13 2 13 1 33 2756 18 3 43 1 43 2 1 2708 45 2757 1 942 45 2758 1 1989 45 2759 13 0 13 2 13 1 33 2760 18 3 43 1 43 2 1 2708 45 2761 1 947 45 2762 1 2763 45 2764 13 0 13 2 13 1 33 2765 18 3 43 1 43 2 1 2708 45 2766 1 953 45 2767 1 1039 45 2768 13 0 13 2 13 1 33 2769 18 3 43 1 43 2 1 2708 45 2770 1 958 45 2771 75 45 2772 13 0 13 2 13 1 33 2773 18 3 43 1 43 2 1 2708 45 2774 1 963 45 2775 75 45 2776 13 0 13 2 13 1 33 2777 18 3 43 1 43 2 1 2708 45 2778 1 968 45 2779 75 45 2780 13 0 13 2 13 1 33 2781 18 3 43 1 43 2 1 2708 45 2782 1 973 45 2783 8 2 45 2784 13 0 13 2 13 1 33 2785 18 3 43 1 43 2 77 75 3 78 2709 15 885 19 1 115 78 2786 1 2786 45 2788 1 829 45 2789 1 241 45 2790 13 0 13 2 13 1 33 2791 18 3 43 1 43 2 1 2786 45 2792 1 834 45 2793 1 2794 45 2795 13 0 13 2 13 1 33 2796 18 3 43 1 43 2 1 2786 45 2797 1 840 45 2798 1 2799 45 2800 13 0 13 2 13 1 33 2801 18 3 43 1 43 2 1 2786 45 2802 1 846 45 2803 75 45 2804 13 0 13 2 13 1 33 2805 18 3 43 1 43 2 1 2786 45 2806 1 906 45 2807 1 1000 45 2808 13 0 13 2 13 1 33 2809 18 3 43 1 43 2 1 2786 45 2810 1 911 45 2811 1 241 45 2812 13 0 13 2 13 1 33 2813 18 3 43 1 43 2 1 2786 45 2814 1 916 45 2815 1 918 45 2816 13 0 13 2 13 1 33 2817 18 3 43 1 43 2 1 2786 45 2818 1 922 45 2819 8 5 45 2820 13 0 13 2 13 1 33 2821 18 3 43 1 43 2 1 2786 45 2822 1 927 45 2823 75 45 2824 13 0 13 2 13 1 33 2825 18 3 43 1 43 2 1 2786 45 2826 1 932 45 2827 75 45 2828 13 0 13 2 13 1 33 2829 18 3 43 1 43 2 1 2786 45 2830 1 937 45 2831 1 1751 45 2832 13 0 13 2 13 1 33 2833 18 3 43 1 43 2 1 2786 45 2834 1 942 45 2835 1 2042 45 2836 13 0 13 2 13 1 33 2837 18 3 43 1 43 2 1 2786 45 2838 1 947 45 2839 1 2840 45 2841 13 0 13 2 13 1 33 2842 18 3 43 1 43 2 1 2786 45 2843 1 953 45 2844 1 1039 45 2845 13 0 13 2 13 1 33 2846 18 3 43 1 43 2 1 2786 45 2847 1 958 45 2848 75 45 2849 13 0 13 2 13 1 33 2850 18 3 43 1 43 2 1 2786 45 2851 1 963 45 2852 75 45 2853 13 0 13 2 13 1 33 2854 18 3 43 1 43 2 1 2786 45 2855 1 968 45 2856 75 45 2857 13 0 13 2 13 1 33 2858 18 3 43 1 43 2 1 2786 45 2859 1 973 45 2860 75 45 2861 13 0 13 2 13 1 33 2862 18 3 43 1 43 2 77 75 3 78 2787 15 885 19 1 115 78 2863 1 2863 45 2865 1 829 45 2866 1 241 45 2867 13 0 13 2 13 1 33 2868 18 3 43 1 43 2 1 2863 45 2869 1 834 45 2870 1 2871 45 2872 13 0 13 2 13 1 33 2873 18 3 43 1 43 2 1 2863 45 2874 1 840 45 2875 1 2876 45 2877 13 0 13 2 13 1 33 2878 18 3 43 1 43 2 1 2863 45 2879 1 846 45 2880 75 45 2881 13 0 13 2 13 1 33 2882 18 3 43 1 43 2 1 2863 45 2883 1 906 45 2884 1 1000 45 2885 13 0 13 2 13 1 33 2886 18 3 43 1 43 2 1 2863 45 2887 1 911 45 2888 1 241 45 2889 13 0 13 2 13 1 33 2890 18 3 43 1 43 2 1 2863 45 2891 1 916 45 2892 1 918 45 2893 13 0 13 2 13 1 33 2894 18 3 43 1 43 2 1 2863 45 2895 1 922 45 2896 8 6 45 2897 13 0 13 2 13 1 33 2898 18 3 43 1 43 2 1 2863 45 2899 1 927 45 2900 75 45 2901 13 0 13 2 13 1 33 2902 18 3 43 1 43 2 1 2863 45 2903 1 932 45 2904 75 45 2905 13 0 13 2 13 1 33 2906 18 3 43 1 43 2 1 2863 45 2907 1 937 45 2908 1 1750 45 2909 13 0 13 2 13 1 33 2910 18 3 43 1 43 2 1 2863 45 2911 1 942 45 2912 1 2095 45 2913 13 0 13 2 13 1 33 2914 18 3 43 1 43 2 1 2863 45 2915 1 947 45 2916 1 2917 45 2918 13 0 13 2 13 1 33 2919 18 3 43 1 43 2 1 2863 45 2920 1 953 45 2921 1 1039 45 2922 13 0 13 2 13 1 33 2923 18 3 43 1 43 2 1 2863 45 2924 1 958 45 2925 75 45 2926 13 0 13 2 13 1 33 2927 18 3 43 1 43 2 1 2863 45 2928 1 963 45 2929 75 45 2930 13 0 13 2 13 1 33 2931 18 3 43 1 43 2 1 2863 45 2932 1 968 45 2933 75 45 2934 13 0 13 2 13 1 33 2935 18 3 43 1 43 2 1 2863 45 2936 1 973 45 2937 75 45 2938 13 0 13 2 13 1 33 2939 18 3 43 1 43 2 77 75 3 78 2864 15 885 19 1 115 78 2940 1 2940 45 2942 1 829 45 2943 1 241 45 2944 13 0 13 2 13 1 33 2945 18 3 43 1 43 2 1 2940 45 2946 1 834 45 2947 1 2948 45 2949 13 0 13 2 13 1 33 2950 18 3 43 1 43 2 1 2940 45 2951 1 840 45 2952 1 2953 45 2954 13 0 13 2 13 1 33 2955 18 3 43 1 43 2 1 2940 45 2956 1 846 45 2957 75 45 2958 13 0 13 2 13 1 33 2959 18 3 43 1 43 2 1 2940 45 2960 1 906 45 2961 1 1000 45 2962 13 0 13 2 13 1 33 2963 18 3 43 1 43 2 1 2940 45 2964 1 911 45 2965 1 241 45 2966 13 0 13 2 13 1 33 2967 18 3 43 1 43 2 1 2940 45 2968 1 916 45 2969 1 918 45 2970 13 0 13 2 13 1 33 2971 18 3 43 1 43 2 1 2940 45 2972 1 922 45 2973 8 7 45 2974 13 0 13 2 13 1 33 2975 18 3 43 1 43 2 1 2940 45 2976 1 927 45 2977 75 45 2978 13 0 13 2 13 1 33 2979 18 3 43 1 43 2 1 2940 45 2980 1 932 45 2981 75 45 2982 13 0 13 2 13 1 33 2983 18 3 43 1 43 2 1 2940 45 2984 1 937 45 2985 1 1749 45 2986 13 0 13 2 13 1 33 2987 18 3 43 1 43 2 1 2940 45 2988 1 942 45 2989 1 2147 45 2990 13 0 13 2 13 1 33 2991 18 3 43 1 43 2 1 2940 45 2992 1 947 45 2993 1 2994 45 2995 13 0 13 2 13 1 33 2996 18 3 43 1 43 2 1 2940 45 2997 1 953 45 2998 1 1039 45 2999 13 0 13 2 13 1 33 3000 18 3 43 1 43 2 1 2940 45 3001 1 958 45 3002 75 45 3003 13 0 13 2 13 1 33 3004 18 3 43 1 43 2 1 2940 45 3005 1 963 45 3006 75 45 3007 13 0 13 2 13 1 33 3008 18 3 43 1 43 2 1 2940 45 3009 1 968 45 3010 75 45 3011 13 0 13 2 13 1 33 3012 18 3 43 1 43 2 1 2940 45 3013 1 973 45 3014 75 45 3015 13 0 13 2 13 1 33 3016 18 3 43 1 43 2 77 75 3 78 2941 15 885 19 1 115 78 3017 1 3017 45 3019 1 829 45 3020 1 241 45 3021 13 0 13 2 13 1 33 3022 18 3 43 1 43 2 1 3017 45 3023 1 834 45 3024 1 3025 45 3026 13 0 13 2 13 1 33 3027 18 3 43 1 43 2 1 3017 45 3028 1 840 45 3029 1 3030 45 3031 13 0 13 2 13 1 33 3032 18 3 43 1 43 2 1 3017 45 3033 1 846 45 3034 75 45 3035 13 0 13 2 13 1 33 3036 18 3 43 1 43 2 1 3017 45 3037 1 906 45 3038 1 1000 45 3039 13 0 13 2 13 1 33 3040 18 3 43 1 43 2 1 3017 45 3041 1 911 45 3042 1 241 45 3043 13 0 13 2 13 1 33 3044 18 3 43 1 43 2 1 3017 45 3045 1 916 45 3046 1 918 45 3047 13 0 13 2 13 1 33 3048 18 3 43 1 43 2 1 3017 45 3049 1 922 45 3050 8 8 45 3051 13 0 13 2 13 1 33 3052 18 3 43 1 43 2 1 3017 45 3053 1 927 45 3054 75 45 3055 13 0 13 2 13 1 33 3056 18 3 43 1 43 2 1 3017 45 3057 1 932 45 3058 75 45 3059 13 0 13 2 13 1 33 3060 18 3 43 1 43 2 1 3017 45 3061 1 937 45 3062 1 1748 45 3063 13 0 13 2 13 1 33 3064 18 3 43 1 43 2 1 3017 45 3065 1 942 45 3066 1 2200 45 3067 13 0 13 2 13 1 33 3068 18 3 43 1 43 2 1 3017 45 3069 1 947 45 3070 1 3071 45 3072 13 0 13 2 13 1 33 3073 18 3 43 1 43 2 1 3017 45 3074 1 953 45 3075 1 1039 45 3076 13 0 13 2 13 1 33 3077 18 3 43 1 43 2 1 3017 45 3078 1 958 45 3079 75 45 3080 13 0 13 2 13 1 33 3081 18 3 43 1 43 2 1 3017 45 3082 1 963 45 3083 75 45 3084 13 0 13 2 13 1 33 3085 18 3 43 1 43 2 1 3017 45 3086 1 968 45 3087 75 45 3088 13 0 13 2 13 1 33 3089 18 3 43 1 43 2 1 3017 45 3090 1 973 45 3091 75 45 3092 13 0 13 2 13 1 33 3093 18 3 43 1 43 2 77 75 3 78 3018 15 885 19 1 115 78 3094 1 3094 45 3096 1 829 45 3097 1 241 45 3098 13 0 13 2 13 1 33 3099 18 3 43 1 43 2 1 3094 45 3100 1 834 45 3101 1 3102 45 3103 13 0 13 2 13 1 33 3104 18 3 43 1 43 2 1 3094 45 3105 1 840 45 3106 1 3107 45 3108 13 0 13 2 13 1 33 3109 18 3 43 1 43 2 1 3094 45 3110 1 846 45 3111 75 45 3112 13 0 13 2 13 1 33 3113 18 3 43 1 43 2 1 3094 45 3114 1 906 45 3115 1 1000 45 3116 13 0 13 2 13 1 33 3117 18 3 43 1 43 2 1 3094 45 3118 1 911 45 3119 1 241 45 3120 13 0 13 2 13 1 33 3121 18 3 43 1 43 2 1 3094 45 3122 1 916 45 3123 1 918 45 3124 13 0 13 2 13 1 33 3125 18 3 43 1 43 2 1 3094 45 3126 1 922 45 3127 8 9 45 3128 13 0 13 2 13 1 33 3129 18 3 43 1 43 2 1 3094 45 3130 1 927 45 3131 75 45 3132 13 0 13 2 13 1 33 3133 18 3 43 1 43 2 1 3094 45 3134 1 932 45 3135 75 45 3136 13 0 13 2 13 1 33 3137 18 3 43 1 43 2 1 3094 45 3138 1 937 45 3139 1 1747 45 3140 13 0 13 2 13 1 33 3141 18 3 43 1 43 2 1 3094 45 3142 1 942 45 3143 1 2253 45 3144 13 0 13 2 13 1 33 3145 18 3 43 1 43 2 1 3094 45 3146 1 947 45 3147 1 3148 45 3149 13 0 13 2 13 1 33 3150 18 3 43 1 43 2 1 3094 45 3151 1 953 45 3152 1 1039 45 3153 13 0 13 2 13 1 33 3154 18 3 43 1 43 2 1 3094 45 3155 1 958 45 3156 75 45 3157 13 0 13 2 13 1 33 3158 18 3 43 1 43 2 1 3094 45 3159 1 963 45 3160 75 45 3161 13 0 13 2 13 1 33 3162 18 3 43 1 43 2 1 3094 45 3163 1 968 45 3164 75 45 3165 13 0 13 2 13 1 33 3166 18 3 43 1 43 2 1 3094 45 3167 1 973 45 3168 75 45 3169 13 0 13 2 13 1 33 3170 18 3 43 1 43 2 77 75 3 78 3095 15 885 19 1 115 78 3171 1 3171 45 3173 1 829 45 3174 1 241 45 3175 13 0 13 2 13 1 33 3176 18 3 43 1 43 2 1 3171 45 3177 1 834 45 3178 1 3179 45 3180 13 0 13 2 13 1 33 3181 18 3 43 1 43 2 1 3171 45 3182 1 840 45 3183 1 3184 45 3185 13 0 13 2 13 1 33 3186 18 3 43 1 43 2 1 3171 45 3187 1 846 45 3188 75 45 3189 13 0 13 2 13 1 33 3190 18 3 43 1 43 2 1 3171 45 3191 1 906 45 3192 1 1000 45 3193 13 0 13 2 13 1 33 3194 18 3 43 1 43 2 1 3171 45 3195 1 911 45 3196 1 241 45 3197 13 0 13 2 13 1 33 3198 18 3 43 1 43 2 1 3171 45 3199 1 916 45 3200 1 918 45 3201 13 0 13 2 13 1 33 3202 18 3 43 1 43 2 1 3171 45 3203 1 922 45 3204 8 10 45 3205 13 0 13 2 13 1 33 3206 18 3 43 1 43 2 1 3171 45 3207 1 927 45 3208 75 45 3209 13 0 13 2 13 1 33 3210 18 3 43 1 43 2 1 3171 45 3211 1 932 45 3212 75 45 3213 13 0 13 2 13 1 33 3214 18 3 43 1 43 2 1 3171 45 3215 1 937 45 3216 1 1746 45 3217 13 0 13 2 13 1 33 3218 18 3 43 1 43 2 1 3171 45 3219 1 942 45 3220 1 2306 45 3221 13 0 13 2 13 1 33 3222 18 3 43 1 43 2 1 3171 45 3223 1 947 45 3224 1 3225 45 3226 13 0 13 2 13 1 33 3227 18 3 43 1 43 2 1 3171 45 3228 1 953 45 3229 1 1039 45 3230 13 0 13 2 13 1 33 3231 18 3 43 1 43 2 1 3171 45 3232 1 958 45 3233 75 45 3234 13 0 13 2 13 1 33 3235 18 3 43 1 43 2 1 3171 45 3236 1 963 45 3237 75 45 3238 13 0 13 2 13 1 33 3239 18 3 43 1 43 2 1 3171 45 3240 1 968 45 3241 75 45 3242 13 0 13 2 13 1 33 3243 18 3 43 1 43 2 1 3171 45 3244 1 973 45 3245 75 45 3246 13 0 13 2 13 1 33 3247 18 3 43 1 43 2 77 75 3 78 3172 15 885 19 1 115 78 3248 1 3248 45 3249 1 829 45 3250 1 241 45 3251 13 0 13 2 13 1 33 3252 18 3 43 1 43 2 1 3248 45 3253 1 834 45 3254 1 3255 45 3256 13 0 13 2 13 1 33 3257 18 3 43 1 43 2 1 3248 45 3258 1 840 45 3259 1 3260 45 3261 13 0 13 2 13 1 33 3262 18 3 43 1 43 2 1 3248 45 3263 1 846 45 3264 75 45 3265 13 0 13 2 13 1 33 3266 18 3 43 1 43 2 1 3248 45 3267 1 906 45 3268 1 1000 45 3269 13 0 13 2 13 1 33 3270 18 3 43 1 43 2 1 3248 45 3271 1 911 45 3272 1 241 45 3273 13 0 13 2 13 1 33 3274 18 3 43 1 43 2 1 3248 45 3275 1 916 45 3276 1 918 45 3277 13 0 13 2 13 1 33 3278 18 3 43 1 43 2 1 3248 45 3279 1 922 45 3280 8 11 45 3281 13 0 13 2 13 1 33 3282 18 3 43 1 43 2 1 3248 45 3283 1 927 45 3284 75 45 3285 13 0 13 2 13 1 33 3286 18 3 43 1 43 2 1 3248 45 3287 1 932 45 3288 75 45 3289 13 0 13 2 13 1 33 3290 18 3 43 1 43 2 1 3248 45 3291 1 937 45 3292 1 1745 45 3293 13 0 13 2 13 1 33 3294 18 3 43 1 43 2 1 3248 45 3295 1 942 45 3296 1 2359 45 3297 13 0 13 2 13 1 33 3298 18 3 43 1 43 2 1 3248 45 3299 1 947 45 3300 1 3301 45 3302 13 0 13 2 13 1 33 3303 18 3 43 1 43 2 1 3248 45 3304 1 953 45 3305 1 1039 45 3306 13 0 13 2 13 1 33 3307 18 3 43 1 43 2 1 3248 45 3308 1 958 45 3309 75 45 3310 13 0 13 2 13 1 33 3311 18 3 43 1 43 2 1 3248 45 3312 1 963 45 3313 75 45 3314 13 0 13 2 13 1 33 3315 18 3 43 1 43 2 1 3248 45 3316 1 968 45 3317 75 45 3318 13 0 13 2 13 1 33 3319 18 3 43 1 43 2 1 3248 45 3320 1 973 45 3321 75 45 3322 13 0 13 2 13 1 33 3323 18 3 43 1 43 2 15 3172 1 3248 17 122 15 3172 75 17 124 15 3095 1 3171 17 122 15 3095 1 3172 17 124 15 3018 1 3094 17 122 15 3018 1 3095 17 124 15 2941 1 3017 17 122 15 2941 1 3018 17 124 15 2864 1 2940 17 122 15 2864 1 2941 17 124 15 2787 1 2863 17 122 15 2787 1 2864 17 124 15 2709 1 2786 17 122 15 2709 1 2787 17 124 15 2631 1 2708 17 122 15 2631 1 2709 17 124 15 2553 1 2630 17 122 15 2553 1 2631 17 124 15 2476 1 2552 17 122 15 2476 1 2553 17 124 15 2456 1 2475 17 122 15 2456 1 2476 17 124 1 2431 45 2432 1 829 45 2433 1 1712 45 2434 13 0 13 2 13 1 33 2435 18 3 43 1 43 2 1 2431 45 2436 1 834 45 2437 1 2438 45 2439 13 0 13 2 13 1 33 2440 18 3 43 1 43 2 1 2431 45 2441 1 840 45 2442 1 2443 45 2444 13 0 13 2 13 1 33 2445 18 3 43 1 43 2 1 2431 45 2446 1 846 45 2447 75 45 2448 13 0 13 2 13 1 33 2449 18 3 43 1 43 2 1 2431 45 2450 1 851 45 2451 75 45 2452 13 0 13 2 13 1 33 2453 18 3 43 1 43 2 1 2431 45 2454 1 856 45 2455 1 2456 45 2457 13 0 13 2 13 1 33 2458 18 3 43 1 43 2 1 2431 45 2459 1 862 45 2460 75 45 2461 13 0 13 2 13 1 33 2462 18 3 43 1 43 2 15 2431 1 866 17 867 1 2431 45 2463 1 869 45 2464 75 45 2465 13 0 13 2 13 1 33 2466 18 3 43 1 43 2 1 2431 45 2467 1 874 45 2468 75 45 2469 13 0 13 2 13 1 33 2470 18 3 43 1 43 2 1 2431 45 2471 1 879 45 2472 1 824 45 2473 13 0 13 2 13 1 33 2474 18 3 43 1 43 2 15 1712 15 2431 14 824 19 3 113 15 196 15 3324 19 2 198 15 3325 15 3326 77 77 15 3327 15 3328 15 3329 15 204 77 77 15 3330 9 12 77 77 77 19 15 206 15 3331 15 22 15 3332 15 3333 19 4 25 15 3334 15 22 15 3335 15 3336 19 4 25 15 3334 14 26 77 15 3337 19 4 25 15 3325 19 1 117 78 3370 15 3334 1 3371 12 19 2 44 15 3334 15 253 15 3372 19 3 255 1 3373 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 3374 14 11 13 0 19 6 265 43 1 15 3373 15 266 1 3376 12 19 3 255 1 3377 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 3378 14 11 13 0 19 6 265 43 1 15 3377 15 266 1 3380 12 19 3 255 1 3381 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 3382 14 11 13 0 19 6 265 43 1 15 3381 15 266 1 3384 12 19 3 255 1 3385 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 3386 14 11 13 0 19 6 265 43 1 15 3385 15 266 1 3388 12 19 3 255 1 3389 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 3390 14 11 13 0 19 6 265 43 1 15 3389 15 266 1 3392 12 19 3 255 1 3393 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 3394 14 11 13 0 19 6 265 43 1 15 3393 15 266 1 3396 12 19 3 255 1 3397 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 3398 14 11 13 0 19 6 265 43 1 15 3397 15 266 1 3400 12 19 3 255 1 3401 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 3402 14 11 13 0 19 6 265 43 1 15 3401 15 266 1 3404 12 19 3 255 1 3405 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 3406 14 11 13 0 19 6 265 43 1 15 3405 15 266 1 3408 12 19 3 255 1 3409 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 3410 14 11 13 0 19 6 265 43 1 15 3409 15 266 1 3412 12 19 3 255 1 3413 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 3414 14 11 13 0 19 6 265 43 1 15 3413 15 266 1 3416 12 19 3 255 1 3417 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 3418 14 11 13 0 19 6 265 43 1 15 3417 15 266 1 3420 12 19 3 255 15 196 15 3421 19 2 198 15 3422 15 22 15 3423 15 3424 19 4 25 15 3422 14 26 77 15 3425 19 4 25 15 3422 1 3427 12 19 2 44 15 3422 15 253 15 3428 19 3 255 15 196 15 3429 19 2 198 15 3430 15 22 15 3431 15 3432 19 4 25 15 3430 14 26 77 15 3433 19 4 25 15 3430 1 3436 12 19 2 44 15 3430 15 253 15 3437 19 3 255 15 196 15 3438 19 2 198 15 3439 15 22 15 3440 15 3441 19 4 25 15 3439 14 26 77 15 3442 19 4 25 15 3439 1 3444 12 19 2 44 15 3439 15 253 15 3445 19 3 255 15 196 15 3446 19 2 198 15 3447 15 22 15 3448 15 3449 19 4 25 15 3447 14 26 77 15 3450 19 4 25 15 3447 1 3451 12 19 2 44 15 3447 15 253 15 3452 19 3 255 15 3453 15 22 15 3454 15 3455 19 4 25 15 3453 77 15 3456 15 3457 1 3458 12 19 5 75 15 3459 15 22 15 3460 15 3461 19 4 25 15 3459 77 15 3462 15 3463 1 3467 12 19 5 75 15 3325 15 3453 19 2 359 15 3468 19 1 104 15 3469 19 1 104 15 196 15 3470 19 2 198 15 3471 15 22 15 3472 15 3473 19 4 25 15 3471 14 26 77 15 3474 19 4 25 15 3471 1 3476 12 19 2 44 15 3471 15 253 15 3477 19 3 255 15 196 15 3478 19 2 198 15 3479 15 22 15 3480 15 3481 19 4 25 15 3479 14 26 77 15 3482 19 4 25 15 3479 1 3487 12 19 2 44 15 3479 15 253 15 3488 19 3 255 15 196 15 3489 19 2 198 15 3490 15 22 15 3491 15 3492 19 4 25 15 3490 14 26 77 15 3493 19 4 25 15 3490 1 3495 12 19 2 44 15 3490 15 253 15 3496 19 3 255 15 196 15 3497 19 2 198 15 3498 15 22 15 3499 15 3500 19 4 25 15 3498 14 26 77 15 3501 19 4 25 15 3498 1 3504 12 19 2 44 15 3498 15 253 15 3505 19 3 255 15 3506 15 22 15 3507 15 3508 19 4 25 15 3506 77 15 3509 15 3510 1 3511 12 19 5 75 15 3512 15 22 15 3513 15 3514 19 4 25 15 3512 77 15 3515 15 3516 1 3520 12 19 5 75 15 3325 15 3506 19 2 359 15 3521 19 1 104 15 3522 19 1 104 15 196 15 3523 19 2 198 15 3524 15 22 15 3525 15 3526 19 4 25 15 3524 14 26 77 15 3527 19 4 25 15 3524 1 3529 12 19 2 44 15 3524 15 253 15 3530 19 3 255 15 196 15 3531 19 2 198 15 3532 15 22 15 3533 15 3534 19 4 25 15 3532 14 26 77 15 3535 19 4 25 15 3532 1 3540 12 19 2 44 15 3532 15 253 15 3541 19 3 255 15 196 15 3542 19 2 198 15 3543 15 22 15 3544 15 3545 19 4 25 15 3543 14 26 77 15 3546 19 4 25 15 3543 1 3549 12 19 2 44 15 3543 15 253 15 3550 19 3 255 15 196 15 3551 19 2 198 15 3552 15 22 15 3553 15 3554 19 4 25 15 3552 14 26 77 15 3555 19 4 25 15 3552 1 3558 12 19 2 44 15 3552 15 253 15 3559 19 3 255 15 3560 15 22 15 3561 15 3562 19 4 25 15 3560 77 15 3563 15 3564 1 3565 12 19 5 75 15 3566 15 22 15 3567 15 3568 19 4 25 15 3566 77 15 3569 15 3570 1 3574 12 19 5 75 15 3325 15 3560 19 2 359 15 3575 19 1 104 15 3576 19 1 104 15 196 15 3577 19 2 198 15 3578 15 22 15 3579 15 3580 19 4 25 15 3578 14 26 77 15 3581 19 4 25 15 3578 1 3583 12 19 2 44 15 3578 15 253 15 3584 19 3 255 15 196 15 3585 19 2 198 15 3586 15 22 15 3587 15 3588 19 4 25 15 3586 14 26 77 15 3589 19 4 25 15 3586 1 3594 12 19 2 44 15 3586 15 253 15 3595 19 3 255 15 196 15 3596 19 2 198 15 3597 15 22 15 3598 15 3599 19 4 25 15 3597 14 26 77 15 3600 19 4 25 15 3597 1 3602 12 19 2 44 15 3597 15 253 15 3603 19 3 255 15 196 15 3604 19 2 198 15 3605 15 22 15 3606 15 3607 19 4 25 15 3605 14 26 77 15 3608 19 4 25 15 3605 1 3611 12 19 2 44 15 3605 15 253 15 3612 19 3 255 15 3613 15 22 15 3614 15 3615 19 4 25 15 3613 77 15 3616 15 3617 1 3618 12 19 5 75 15 3619 15 22 15 3620 15 3621 19 4 25 15 3619 77 15 3622 15 3623 1 3627 12 19 5 75 15 3325 15 3613 19 2 359 15 3628 19 1 104 15 3629 19 1 104 15 196 15 3630 19 2 198 15 3631 15 22 15 3632 15 3633 19 4 25 15 3631 14 26 77 15 3634 19 4 25 15 3631 1 3636 12 19 2 44 15 3631 15 253 15 3637 19 3 255 15 196 15 3638 19 2 198 15 3639 15 22 15 3640 15 3641 19 4 25 15 3639 14 26 77 15 3642 19 4 25 15 3639 1 3647 12 19 2 44 15 3639 15 253 15 3648 19 3 255 15 196 15 3649 19 2 198 15 3650 15 22 15 3651 15 3652 19 4 25 15 3650 14 26 77 15 3653 19 4 25 15 3650 1 3655 12 19 2 44 15 3650 15 253 15 3656 19 3 255 15 196 15 3657 19 2 198 15 3658 15 22 15 3659 15 3660 19 4 25 15 3658 14 26 77 15 3661 19 4 25 15 3658 1 3664 12 19 2 44 15 3658 15 253 15 3665 19 3 255 15 3666 15 22 15 3667 15 3668 19 4 25 15 3666 77 15 3669 15 3670 1 3671 12 19 5 75 15 3672 15 22 15 3673 15 3674 19 4 25 15 3672 77 15 3675 15 3676 1 3680 12 19 5 75 15 3325 15 3666 19 2 359 15 3681 19 1 104 15 3682 19 1 104 15 196 15 3683 19 2 198 15 3684 15 22 15 3685 15 3686 19 4 25 15 3684 14 26 77 15 3687 19 4 25 15 3684 1 3689 12 19 2 44 15 3684 15 253 15 3690 19 3 255 15 196 15 3691 19 2 198 15 3692 15 22 15 3693 15 3694 19 4 25 15 3692 14 26 77 15 3695 19 4 25 15 3692 1 3700 12 19 2 44 15 3692 15 253 15 3701 19 3 255 15 196 15 3702 19 2 198 15 3703 15 22 15 3704 15 3705 19 4 25 15 3703 14 26 77 15 3706 19 4 25 15 3703 1 3708 12 19 2 44 15 3703 15 253 15 3709 19 3 255 15 196 15 3710 19 2 198 15 3711 15 22 15 3712 15 3713 19 4 25 15 3711 14 26 77 15 3714 19 4 25 15 3711 1 3717 12 19 2 44 15 3711 15 253 15 3718 19 3 255 15 3719 15 22 15 3720 15 3721 19 4 25 15 3719 77 15 3722 15 3723 1 3724 12 19 5 75 15 3725 15 22 15 3726 15 3727 19 4 25 15 3725 77 15 3728 15 3729 1 3733 12 19 5 75 15 3325 15 3719 19 2 359 15 3734 19 1 104 15 3735 19 1 104 15 196 15 3736 19 2 198 15 3737 15 22 15 3738 15 3739 19 4 25 15 3737 14 26 77 15 3740 19 4 25 15 3737 1 3742 12 19 2 44 15 3737 15 253 15 3743 19 3 255 15 196 15 3744 19 2 198 15 3745 15 22 15 3746 15 3747 19 4 25 15 3745 14 26 77 15 3748 19 4 25 15 3745 1 3753 12 19 2 44 15 3745 15 253 15 3754 19 3 255 15 196 15 3755 19 2 198 15 3756 15 22 15 3757 15 3758 19 4 25 15 3756 14 26 77 15 3759 19 4 25 15 3756 1 3761 12 19 2 44 15 3756 15 253 15 3762 19 3 255 15 196 15 3763 19 2 198 15 3764 15 22 15 3765 15 3766 19 4 25 15 3764 14 26 77 15 3767 19 4 25 15 3764 1 3770 12 19 2 44 15 3764 15 253 15 3771 19 3 255 15 3772 15 22 15 3773 15 3774 19 4 25 15 3772 77 15 3775 15 3776 1 3777 12 19 5 75 15 3778 15 22 15 3779 15 3780 19 4 25 15 3778 77 15 3781 15 3782 1 3786 12 19 5 75 15 3325 15 3772 19 2 359 15 3787 19 1 104 15 3788 19 1 104 15 196 15 3789 19 2 198 15 3790 15 22 15 3791 15 3792 19 4 25 15 3790 14 26 77 15 3793 19 4 25 15 3790 1 3795 12 19 2 44 15 3790 15 253 15 3796 19 3 255 15 196 15 3797 19 2 198 15 3798 15 22 15 3799 15 3800 19 4 25 15 3798 14 26 77 15 3801 19 4 25 15 3798 1 3806 12 19 2 44 15 3798 15 253 15 3807 19 3 255 15 196 15 3808 19 2 198 15 3809 15 22 15 3810 15 3811 19 4 25 15 3809 14 26 77 15 3812 19 4 25 15 3809 1 3814 12 19 2 44 15 3809 15 253 15 3815 19 3 255 15 196 15 3816 19 2 198 15 3817 15 22 15 3818 15 3819 19 4 25 15 3817 14 26 77 15 3820 19 4 25 15 3817 1 3823 12 19 2 44 15 3817 15 253 15 3824 19 3 255 15 3825 15 22 15 3826 15 3827 19 4 25 15 3825 77 15 3828 15 3829 1 3830 12 19 5 75 15 3831 15 22 15 3832 15 3833 19 4 25 15 3831 77 15 3834 15 3835 1 3839 12 19 5 75 15 3325 15 3825 19 2 359 15 3840 19 1 104 15 3841 19 1 104 15 196 15 3842 19 2 198 15 3843 15 22 15 3844 15 3845 19 4 25 15 3843 14 26 77 15 3846 19 4 25 15 3843 1 3848 12 19 2 44 15 3843 15 253 15 3849 19 3 255 15 196 15 3850 19 2 198 15 3851 15 22 15 3852 15 3853 19 4 25 15 3851 14 26 77 15 3854 19 4 25 15 3851 1 3859 12 19 2 44 15 3851 15 253 15 3860 19 3 255 15 196 15 3861 19 2 198 15 3862 15 22 15 3863 15 3864 19 4 25 15 3862 14 26 77 15 3865 19 4 25 15 3862 1 3867 12 19 2 44 15 3862 15 253 15 3868 19 3 255 15 196 15 3869 19 2 198 15 3870 15 22 15 3871 15 3872 19 4 25 15 3870 14 26 77 15 3873 19 4 25 15 3870 1 3876 12 19 2 44 15 3870 15 253 15 3877 19 3 255 15 3878 15 22 15 3879 15 3880 19 4 25 15 3878 77 15 3881 15 3882 1 3883 12 19 5 75 15 3884 15 22 15 3885 15 3886 19 4 25 15 3884 77 15 3887 15 3888 1 3892 12 19 5 75 15 3325 15 3878 19 2 359 15 3893 19 1 104 15 3894 19 1 104 15 196 15 3895 19 2 198 15 3896 15 22 15 3897 15 3898 19 4 25 15 3896 14 26 77 15 3899 19 4 25 15 3896 1 3929 12 19 2 44 15 3896 15 253 15 3930 19 3 255 15 3931 15 22 15 3932 15 3933 19 4 25 15 3931 14 26 77 15 3934 19 4 25 15 3931 1 3935 12 19 2 44 15 3936 19 1 104 15 815 15 22 15 3937 15 3938 19 4 25 15 815 77 15 3939 15 3940 1 3943 12 19 5 75 15 825 19 1 115 45 826 15 824 13 0 14 824 19 3 113 10 0 43 1 78 3944 77 75 3 78 3969 15 885 19 1 115 78 3988 1 3988 45 3990 1 829 45 3991 1 981 45 3992 13 0 13 2 13 1 33 3993 18 3 43 1 43 2 1 3988 45 3994 1 834 45 3995 1 3996 45 3997 13 0 13 2 13 1 33 3998 18 3 43 1 43 2 1 3988 45 3999 1 840 45 4000 1 4001 45 4002 13 0 13 2 13 1 33 4003 18 3 43 1 43 2 1 3988 45 4004 1 846 45 4005 75 45 4006 13 0 13 2 13 1 33 4007 18 3 43 1 43 2 1 3988 45 4008 1 906 45 4009 1 1000 45 4010 13 0 13 2 13 1 33 4011 18 3 43 1 43 2 1 3988 45 4012 1 911 45 4013 1 981 45 4014 13 0 13 2 13 1 33 4015 18 3 43 1 43 2 1 3988 45 4016 1 916 45 4017 1 918 45 4018 13 0 13 2 13 1 33 4019 18 3 43 1 43 2 1 3988 45 4020 1 922 45 4021 8 1 45 4022 13 0 13 2 13 1 33 4023 18 3 43 1 43 2 1 3988 45 4024 1 927 45 4025 75 45 4026 13 0 13 2 13 1 33 4027 18 3 43 1 43 2 1 3988 45 4028 1 932 45 4029 75 45 4030 13 0 13 2 13 1 33 4031 18 3 43 1 43 2 1 3988 45 4032 1 937 45 4033 1 4034 45 4035 13 0 13 2 13 1 33 4036 18 3 43 1 43 2 1 3988 45 4037 1 942 45 4038 1 3453 45 4039 13 0 13 2 13 1 33 4040 18 3 43 1 43 2 1 3988 45 4041 1 947 45 4042 1 4043 45 4044 13 0 13 2 13 1 33 4045 18 3 43 1 43 2 1 3988 45 4046 1 953 45 4047 1 1039 45 4048 13 0 13 2 13 1 33 4049 18 3 43 1 43 2 1 3988 45 4050 1 958 45 4051 75 45 4052 13 0 13 2 13 1 33 4053 18 3 43 1 43 2 1 3988 45 4054 1 963 45 4055 75 45 4056 13 0 13 2 13 1 33 4057 18 3 43 1 43 2 1 3988 45 4058 1 968 45 4059 75 45 4060 13 0 13 2 13 1 33 4061 18 3 43 1 43 2 1 3988 45 4062 1 973 45 4063 8 0 45 4064 13 0 13 2 13 1 33 4065 18 3 43 1 43 2 77 75 3 78 3989 15 885 19 1 115 78 4066 1 4066 45 4068 1 829 45 4069 1 241 45 4070 13 0 13 2 13 1 33 4071 18 3 43 1 43 2 1 4066 45 4072 1 834 45 4073 1 4074 45 4075 13 0 13 2 13 1 33 4076 18 3 43 1 43 2 1 4066 45 4077 1 840 45 4078 1 4079 45 4080 13 0 13 2 13 1 33 4081 18 3 43 1 43 2 1 4066 45 4082 1 846 45 4083 75 45 4084 13 0 13 2 13 1 33 4085 18 3 43 1 43 2 1 4066 45 4086 1 906 45 4087 1 1000 45 4088 13 0 13 2 13 1 33 4089 18 3 43 1 43 2 1 4066 45 4090 1 911 45 4091 1 241 45 4092 13 0 13 2 13 1 33 4093 18 3 43 1 43 2 1 4066 45 4094 1 916 45 4095 1 918 45 4096 13 0 13 2 13 1 33 4097 18 3 43 1 43 2 1 4066 45 4098 1 922 45 4099 8 2 45 4100 13 0 13 2 13 1 33 4101 18 3 43 1 43 2 1 4066 45 4102 1 927 45 4103 75 45 4104 13 0 13 2 13 1 33 4105 18 3 43 1 43 2 1 4066 45 4106 1 932 45 4107 75 45 4108 13 0 13 2 13 1 33 4109 18 3 43 1 43 2 1 4066 45 4110 1 937 45 4111 1 3367 45 4112 13 0 13 2 13 1 33 4113 18 3 43 1 43 2 1 4066 45 4114 1 942 45 4115 1 3506 45 4116 13 0 13 2 13 1 33 4117 18 3 43 1 43 2 1 4066 45 4118 1 947 45 4119 1 4120 45 4121 13 0 13 2 13 1 33 4122 18 3 43 1 43 2 1 4066 45 4123 1 953 45 4124 1 1039 45 4125 13 0 13 2 13 1 33 4126 18 3 43 1 43 2 1 4066 45 4127 1 958 45 4128 75 45 4129 13 0 13 2 13 1 33 4130 18 3 43 1 43 2 1 4066 45 4131 1 963 45 4132 75 45 4133 13 0 13 2 13 1 33 4134 18 3 43 1 43 2 1 4066 45 4135 1 968 45 4136 75 45 4137 13 0 13 2 13 1 33 4138 18 3 43 1 43 2 1 4066 45 4139 1 973 45 4140 75 45 4141 13 0 13 2 13 1 33 4142 18 3 43 1 43 2 77 75 3 78 4067 15 885 19 1 115 78 4143 1 4143 45 4145 1 829 45 4146 1 3365 45 4147 13 0 13 2 13 1 33 4148 18 3 43 1 43 2 1 4143 45 4149 1 834 45 4150 1 4151 45 4152 13 0 13 2 13 1 33 4153 18 3 43 1 43 2 1 4143 45 4154 1 840 45 4155 1 4156 45 4157 13 0 13 2 13 1 33 4158 18 3 43 1 43 2 1 4143 45 4159 1 846 45 4160 75 45 4161 13 0 13 2 13 1 33 4162 18 3 43 1 43 2 1 4143 45 4163 1 906 45 4164 1 1000 45 4165 13 0 13 2 13 1 33 4166 18 3 43 1 43 2 1 4143 45 4167 1 911 45 4168 1 3365 45 4169 13 0 13 2 13 1 33 4170 18 3 43 1 43 2 1 4143 45 4171 1 916 45 4172 1 918 45 4173 13 0 13 2 13 1 33 4174 18 3 43 1 43 2 1 4143 45 4175 1 922 45 4176 8 3 45 4177 13 0 13 2 13 1 33 4178 18 3 43 1 43 2 1 4143 45 4179 1 927 45 4180 75 45 4181 13 0 13 2 13 1 33 4182 18 3 43 1 43 2 1 4143 45 4183 1 932 45 4184 75 45 4185 13 0 13 2 13 1 33 4186 18 3 43 1 43 2 1 4143 45 4187 1 937 45 4188 1 3366 45 4189 13 0 13 2 13 1 33 4190 18 3 43 1 43 2 1 4143 45 4191 1 942 45 4192 1 3560 45 4193 13 0 13 2 13 1 33 4194 18 3 43 1 43 2 1 4143 45 4195 1 947 45 4196 1 4197 45 4198 13 0 13 2 13 1 33 4199 18 3 43 1 43 2 1 4143 45 4200 1 953 45 4201 1 1039 45 4202 13 0 13 2 13 1 33 4203 18 3 43 1 43 2 1 4143 45 4204 1 958 45 4205 75 45 4206 13 0 13 2 13 1 33 4207 18 3 43 1 43 2 1 4143 45 4208 1 963 45 4209 75 45 4210 13 0 13 2 13 1 33 4211 18 3 43 1 43 2 1 4143 45 4212 1 968 45 4213 75 45 4214 13 0 13 2 13 1 33 4215 18 3 43 1 43 2 1 4143 45 4216 1 973 45 4217 75 45 4218 13 0 13 2 13 1 33 4219 18 3 43 1 43 2 77 75 3 78 4144 15 885 19 1 115 78 4220 1 4220 45 4222 1 829 45 4223 1 241 45 4224 13 0 13 2 13 1 33 4225 18 3 43 1 43 2 1 4220 45 4226 1 834 45 4227 1 4228 45 4229 13 0 13 2 13 1 33 4230 18 3 43 1 43 2 1 4220 45 4231 1 840 45 4232 1 4233 45 4234 13 0 13 2 13 1 33 4235 18 3 43 1 43 2 1 4220 45 4236 1 846 45 4237 75 45 4238 13 0 13 2 13 1 33 4239 18 3 43 1 43 2 1 4220 45 4240 1 906 45 4241 1 1000 45 4242 13 0 13 2 13 1 33 4243 18 3 43 1 43 2 1 4220 45 4244 1 911 45 4245 1 241 45 4246 13 0 13 2 13 1 33 4247 18 3 43 1 43 2 1 4220 45 4248 1 916 45 4249 1 918 45 4250 13 0 13 2 13 1 33 4251 18 3 43 1 43 2 1 4220 45 4252 1 922 45 4253 8 4 45 4254 13 0 13 2 13 1 33 4255 18 3 43 1 43 2 1 4220 45 4256 1 927 45 4257 75 45 4258 13 0 13 2 13 1 33 4259 18 3 43 1 43 2 1 4220 45 4260 1 932 45 4261 75 45 4262 13 0 13 2 13 1 33 4263 18 3 43 1 43 2 1 4220 45 4264 1 937 45 4265 1 3364 45 4266 13 0 13 2 13 1 33 4267 18 3 43 1 43 2 1 4220 45 4268 1 942 45 4269 1 3613 45 4270 13 0 13 2 13 1 33 4271 18 3 43 1 43 2 1 4220 45 4272 1 947 45 4273 1 4274 45 4275 13 0 13 2 13 1 33 4276 18 3 43 1 43 2 1 4220 45 4277 1 953 45 4278 1 1039 45 4279 13 0 13 2 13 1 33 4280 18 3 43 1 43 2 1 4220 45 4281 1 958 45 4282 75 45 4283 13 0 13 2 13 1 33 4284 18 3 43 1 43 2 1 4220 45 4285 1 963 45 4286 75 45 4287 13 0 13 2 13 1 33 4288 18 3 43 1 43 2 1 4220 45 4289 1 968 45 4290 75 45 4291 13 0 13 2 13 1 33 4292 18 3 43 1 43 2 1 4220 45 4293 1 973 45 4294 75 45 4295 13 0 13 2 13 1 33 4296 18 3 43 1 43 2 77 75 3 78 4221 15 885 19 1 115 78 4297 1 4297 45 4299 1 829 45 4300 1 241 45 4301 13 0 13 2 13 1 33 4302 18 3 43 1 43 2 1 4297 45 4303 1 834 45 4304 1 4305 45 4306 13 0 13 2 13 1 33 4307 18 3 43 1 43 2 1 4297 45 4308 1 840 45 4309 1 4310 45 4311 13 0 13 2 13 1 33 4312 18 3 43 1 43 2 1 4297 45 4313 1 846 45 4314 75 45 4315 13 0 13 2 13 1 33 4316 18 3 43 1 43 2 1 4297 45 4317 1 906 45 4318 1 1000 45 4319 13 0 13 2 13 1 33 4320 18 3 43 1 43 2 1 4297 45 4321 1 911 45 4322 1 241 45 4323 13 0 13 2 13 1 33 4324 18 3 43 1 43 2 1 4297 45 4325 1 916 45 4326 1 918 45 4327 13 0 13 2 13 1 33 4328 18 3 43 1 43 2 1 4297 45 4329 1 922 45 4330 8 5 45 4331 13 0 13 2 13 1 33 4332 18 3 43 1 43 2 1 4297 45 4333 1 927 45 4334 75 45 4335 13 0 13 2 13 1 33 4336 18 3 43 1 43 2 1 4297 45 4337 1 932 45 4338 75 45 4339 13 0 13 2 13 1 33 4340 18 3 43 1 43 2 1 4297 45 4341 1 937 45 4342 1 3363 45 4343 13 0 13 2 13 1 33 4344 18 3 43 1 43 2 1 4297 45 4345 1 942 45 4346 1 3666 45 4347 13 0 13 2 13 1 33 4348 18 3 43 1 43 2 1 4297 45 4349 1 947 45 4350 1 4351 45 4352 13 0 13 2 13 1 33 4353 18 3 43 1 43 2 1 4297 45 4354 1 953 45 4355 1 1039 45 4356 13 0 13 2 13 1 33 4357 18 3 43 1 43 2 1 4297 45 4358 1 958 45 4359 75 45 4360 13 0 13 2 13 1 33 4361 18 3 43 1 43 2 1 4297 45 4362 1 963 45 4363 75 45 4364 13 0 13 2 13 1 33 4365 18 3 43 1 43 2 1 4297 45 4366 1 968 45 4367 75 45 4368 13 0 13 2 13 1 33 4369 18 3 43 1 43 2 1 4297 45 4370 1 973 45 4371 75 45 4372 13 0 13 2 13 1 33 4373 18 3 43 1 43 2 77 75 3 78 4298 15 885 19 1 115 78 4374 1 4374 45 4376 1 829 45 4377 1 241 45 4378 13 0 13 2 13 1 33 4379 18 3 43 1 43 2 1 4374 45 4380 1 834 45 4381 1 4382 45 4383 13 0 13 2 13 1 33 4384 18 3 43 1 43 2 1 4374 45 4385 1 840 45 4386 1 4387 45 4388 13 0 13 2 13 1 33 4389 18 3 43 1 43 2 1 4374 45 4390 1 846 45 4391 75 45 4392 13 0 13 2 13 1 33 4393 18 3 43 1 43 2 1 4374 45 4394 1 906 45 4395 1 1000 45 4396 13 0 13 2 13 1 33 4397 18 3 43 1 43 2 1 4374 45 4398 1 911 45 4399 1 241 45 4400 13 0 13 2 13 1 33 4401 18 3 43 1 43 2 1 4374 45 4402 1 916 45 4403 1 918 45 4404 13 0 13 2 13 1 33 4405 18 3 43 1 43 2 1 4374 45 4406 1 922 45 4407 8 6 45 4408 13 0 13 2 13 1 33 4409 18 3 43 1 43 2 1 4374 45 4410 1 927 45 4411 75 45 4412 13 0 13 2 13 1 33 4413 18 3 43 1 43 2 1 4374 45 4414 1 932 45 4415 75 45 4416 13 0 13 2 13 1 33 4417 18 3 43 1 43 2 1 4374 45 4418 1 937 45 4419 1 3362 45 4420 13 0 13 2 13 1 33 4421 18 3 43 1 43 2 1 4374 45 4422 1 942 45 4423 1 3719 45 4424 13 0 13 2 13 1 33 4425 18 3 43 1 43 2 1 4374 45 4426 1 947 45 4427 1 4428 45 4429 13 0 13 2 13 1 33 4430 18 3 43 1 43 2 1 4374 45 4431 1 953 45 4432 1 1039 45 4433 13 0 13 2 13 1 33 4434 18 3 43 1 43 2 1 4374 45 4435 1 958 45 4436 75 45 4437 13 0 13 2 13 1 33 4438 18 3 43 1 43 2 1 4374 45 4439 1 963 45 4440 75 45 4441 13 0 13 2 13 1 33 4442 18 3 43 1 43 2 1 4374 45 4443 1 968 45 4444 75 45 4445 13 0 13 2 13 1 33 4446 18 3 43 1 43 2 1 4374 45 4447 1 973 45 4448 75 45 4449 13 0 13 2 13 1 33 4450 18 3 43 1 43 2 77 75 3 78 4375 15 885 19 1 115 78 4451 1 4451 45 4453 1 829 45 4454 1 241 45 4455 13 0 13 2 13 1 33 4456 18 3 43 1 43 2 1 4451 45 4457 1 834 45 4458 1 4459 45 4460 13 0 13 2 13 1 33 4461 18 3 43 1 43 2 1 4451 45 4462 1 840 45 4463 1 4464 45 4465 13 0 13 2 13 1 33 4466 18 3 43 1 43 2 1 4451 45 4467 1 846 45 4468 75 45 4469 13 0 13 2 13 1 33 4470 18 3 43 1 43 2 1 4451 45 4471 1 906 45 4472 1 1000 45 4473 13 0 13 2 13 1 33 4474 18 3 43 1 43 2 1 4451 45 4475 1 911 45 4476 1 241 45 4477 13 0 13 2 13 1 33 4478 18 3 43 1 43 2 1 4451 45 4479 1 916 45 4480 1 918 45 4481 13 0 13 2 13 1 33 4482 18 3 43 1 43 2 1 4451 45 4483 1 922 45 4484 8 7 45 4485 13 0 13 2 13 1 33 4486 18 3 43 1 43 2 1 4451 45 4487 1 927 45 4488 75 45 4489 13 0 13 2 13 1 33 4490 18 3 43 1 43 2 1 4451 45 4491 1 932 45 4492 75 45 4493 13 0 13 2 13 1 33 4494 18 3 43 1 43 2 1 4451 45 4495 1 937 45 4496 1 3361 45 4497 13 0 13 2 13 1 33 4498 18 3 43 1 43 2 1 4451 45 4499 1 942 45 4500 1 3772 45 4501 13 0 13 2 13 1 33 4502 18 3 43 1 43 2 1 4451 45 4503 1 947 45 4504 1 4505 45 4506 13 0 13 2 13 1 33 4507 18 3 43 1 43 2 1 4451 45 4508 1 953 45 4509 1 1039 45 4510 13 0 13 2 13 1 33 4511 18 3 43 1 43 2 1 4451 45 4512 1 958 45 4513 75 45 4514 13 0 13 2 13 1 33 4515 18 3 43 1 43 2 1 4451 45 4516 1 963 45 4517 75 45 4518 13 0 13 2 13 1 33 4519 18 3 43 1 43 2 1 4451 45 4520 1 968 45 4521 75 45 4522 13 0 13 2 13 1 33 4523 18 3 43 1 43 2 1 4451 45 4524 1 973 45 4525 75 45 4526 13 0 13 2 13 1 33 4527 18 3 43 1 43 2 77 75 3 78 4452 15 885 19 1 115 78 4528 1 4528 45 4530 1 829 45 4531 1 241 45 4532 13 0 13 2 13 1 33 4533 18 3 43 1 43 2 1 4528 45 4534 1 834 45 4535 1 4536 45 4537 13 0 13 2 13 1 33 4538 18 3 43 1 43 2 1 4528 45 4539 1 840 45 4540 1 4541 45 4542 13 0 13 2 13 1 33 4543 18 3 43 1 43 2 1 4528 45 4544 1 846 45 4545 75 45 4546 13 0 13 2 13 1 33 4547 18 3 43 1 43 2 1 4528 45 4548 1 906 45 4549 1 1000 45 4550 13 0 13 2 13 1 33 4551 18 3 43 1 43 2 1 4528 45 4552 1 911 45 4553 1 241 45 4554 13 0 13 2 13 1 33 4555 18 3 43 1 43 2 1 4528 45 4556 1 916 45 4557 1 918 45 4558 13 0 13 2 13 1 33 4559 18 3 43 1 43 2 1 4528 45 4560 1 922 45 4561 8 8 45 4562 13 0 13 2 13 1 33 4563 18 3 43 1 43 2 1 4528 45 4564 1 927 45 4565 75 45 4566 13 0 13 2 13 1 33 4567 18 3 43 1 43 2 1 4528 45 4568 1 932 45 4569 75 45 4570 13 0 13 2 13 1 33 4571 18 3 43 1 43 2 1 4528 45 4572 1 937 45 4573 1 3360 45 4574 13 0 13 2 13 1 33 4575 18 3 43 1 43 2 1 4528 45 4576 1 942 45 4577 1 3825 45 4578 13 0 13 2 13 1 33 4579 18 3 43 1 43 2 1 4528 45 4580 1 947 45 4581 1 4582 45 4583 13 0 13 2 13 1 33 4584 18 3 43 1 43 2 1 4528 45 4585 1 953 45 4586 1 1039 45 4587 13 0 13 2 13 1 33 4588 18 3 43 1 43 2 1 4528 45 4589 1 958 45 4590 75 45 4591 13 0 13 2 13 1 33 4592 18 3 43 1 43 2 1 4528 45 4593 1 963 45 4594 75 45 4595 13 0 13 2 13 1 33 4596 18 3 43 1 43 2 1 4528 45 4597 1 968 45 4598 75 45 4599 13 0 13 2 13 1 33 4600 18 3 43 1 43 2 1 4528 45 4601 1 973 45 4602 75 45 4603 13 0 13 2 13 1 33 4604 18 3 43 1 43 2 77 75 3 78 4529 15 885 19 1 115 78 4605 1 4605 45 4606 1 829 45 4607 1 241 45 4608 13 0 13 2 13 1 33 4609 18 3 43 1 43 2 1 4605 45 4610 1 834 45 4611 1 4612 45 4613 13 0 13 2 13 1 33 4614 18 3 43 1 43 2 1 4605 45 4615 1 840 45 4616 1 4617 45 4618 13 0 13 2 13 1 33 4619 18 3 43 1 43 2 1 4605 45 4620 1 846 45 4621 75 45 4622 13 0 13 2 13 1 33 4623 18 3 43 1 43 2 1 4605 45 4624 1 906 45 4625 1 1000 45 4626 13 0 13 2 13 1 33 4627 18 3 43 1 43 2 1 4605 45 4628 1 911 45 4629 1 241 45 4630 13 0 13 2 13 1 33 4631 18 3 43 1 43 2 1 4605 45 4632 1 916 45 4633 1 918 45 4634 13 0 13 2 13 1 33 4635 18 3 43 1 43 2 1 4605 45 4636 1 922 45 4637 8 9 45 4638 13 0 13 2 13 1 33 4639 18 3 43 1 43 2 1 4605 45 4640 1 927 45 4641 75 45 4642 13 0 13 2 13 1 33 4643 18 3 43 1 43 2 1 4605 45 4644 1 932 45 4645 75 45 4646 13 0 13 2 13 1 33 4647 18 3 43 1 43 2 1 4605 45 4648 1 937 45 4649 1 3359 45 4650 13 0 13 2 13 1 33 4651 18 3 43 1 43 2 1 4605 45 4652 1 942 45 4653 1 3878 45 4654 13 0 13 2 13 1 33 4655 18 3 43 1 43 2 1 4605 45 4656 1 947 45 4657 1 4658 45 4659 13 0 13 2 13 1 33 4660 18 3 43 1 43 2 1 4605 45 4661 1 953 45 4662 1 1039 45 4663 13 0 13 2 13 1 33 4664 18 3 43 1 43 2 1 4605 45 4665 1 958 45 4666 75 45 4667 13 0 13 2 13 1 33 4668 18 3 43 1 43 2 1 4605 45 4669 1 963 45 4670 75 45 4671 13 0 13 2 13 1 33 4672 18 3 43 1 43 2 1 4605 45 4673 1 968 45 4674 75 45 4675 13 0 13 2 13 1 33 4676 18 3 43 1 43 2 1 4605 45 4677 1 973 45 4678 75 45 4679 13 0 13 2 13 1 33 4680 18 3 43 1 43 2 15 4529 1 4605 17 122 15 4529 75 17 124 15 4452 1 4528 17 122 15 4452 1 4529 17 124 15 4375 1 4451 17 122 15 4375 1 4452 17 124 15 4298 1 4374 17 122 15 4298 1 4375 17 124 15 4221 1 4297 17 122 15 4221 1 4298 17 124 15 4144 1 4220 17 122 15 4144 1 4221 17 124 15 4067 1 4143 17 122 15 4067 1 4144 17 124 15 3989 1 4066 17 122 15 3989 1 4067 17 124 15 3969 1 3988 17 122 15 3969 1 3989 17 124 1 3944 45 3945 1 829 45 3946 1 3325 45 3947 13 0 13 2 13 1 33 3948 18 3 43 1 43 2 1 3944 45 3949 1 834 45 3950 1 3951 45 3952 13 0 13 2 13 1 33 3953 18 3 43 1 43 2 1 3944 45 3954 1 840 45 3955 1 3956 45 3957 13 0 13 2 13 1 33 3958 18 3 43 1 43 2 1 3944 45 3959 1 846 45 3960 75 45 3961 13 0 13 2 13 1 33 3962 18 3 43 1 43 2 1 3944 45 3963 1 851 45 3964 75 45 3965 13 0 13 2 13 1 33 3966 18 3 43 1 43 2 1 3944 45 3967 1 856 45 3968 1 3969 45 3970 13 0 13 2 13 1 33 3971 18 3 43 1 43 2 1 3944 45 3972 1 862 45 3973 75 45 3974 13 0 13 2 13 1 33 3975 18 3 43 1 43 2 15 3944 1 866 17 867 1 3944 45 3976 1 869 45 3977 75 45 3978 13 0 13 2 13 1 33 3979 18 3 43 1 43 2 1 3944 45 3980 1 874 45 3981 75 45 3982 13 0 13 2 13 1 33 3983 18 3 43 1 43 2 1 3944 45 3984 1 879 45 3985 1 824 45 3986 13 0 13 2 13 1 33 3987 18 3 43 1 43 2 15 3325 15 3944 14 824 19 3 113 15 4681 15 4682 15 4683 19 3 17 15 4684 15 4685 15 4686 19 3 17 15 4687 15 22 15 4688 15 4689 19 4 25 15 4687 14 26 77 15 27 19 4 25 15 4687 1 4692 12 19 2 44 15 4693 15 22 15 4694 15 4695 19 4 25 15 4693 14 26 77 15 48 19 4 25 15 4693 1 4696 12 19 2 44 1 4684 45 4697 1 60 45 4698 1 4693 45 4699 13 2 13 0 13 1 19 3 63 43 1 43 2 1 4684 45 4700 1 65 45 4701 1 4687 45 4702 13 2 13 0 13 1 19 3 63 43 1 43 2 15 65 15 22 15 4703 15 4704 19 4 25 15 65 77 15 4705 15 4706 1 4707 12 19 5 75 15 60 15 22 15 4708 15 4709 19 4 25 15 60 77 15 4710 15 4711 1 4712 12 19 5 75 15 4713 8 0 17 82 15 4713 15 22 15 4714 15 4715 19 4 25 15 4716 8 1 17 82 15 4716 15 22 15 4717 15 4718 19 4 25 15 4719 19 1 104 15 105 15 22 15 4720 15 4721 19 4 25 15 105 77 15 4722 15 4723 1 4724 12 19 5 75 15 114 19 1 115 78 4725 77 75 3 78 4727 15 125 19 1 115 78 4728 15 4728 15 126 9 0 15 4690 19 4 118 15 4728 15 126 9 1 9 0 19 4 118 77 75 3 78 4729 15 125 19 1 115 78 4730 15 4730 15 126 9 0 15 4691 19 4 118 15 4730 15 126 9 1 9 1 19 4 118 15 4729 1 4730 17 122 15 4729 75 17 124 15 4727 1 4728 17 122 15 4727 1 4729 17 124 15 4725 15 116 9 0 15 4684 19 4 118 15 4725 15 116 9 1 15 4726 19 4 118 15 4725 15 116 9 2 15 4727 19 4 118 15 4684 15 4725 14 112 19 3 113 15 4731 19 1 104 15 196 15 4732 19 2 198 15 4733 15 4734 77 77 15 4735 15 4736 15 4737 15 204 77 77 15 4738 9 7 77 77 77 19 15 206 15 4739 15 22 15 4740 15 4741 19 4 25 15 4742 15 22 15 4743 15 4744 19 4 25 15 4742 14 26 77 15 4745 19 4 25 15 4733 19 1 117 78 4765 15 4742 1 4766 12 19 2 44 15 4742 15 253 15 4767 19 3 255 1 4768 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 4769 14 11 13 0 19 6 265 43 1 15 4768 15 266 1 4771 12 19 3 255 1 4772 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 4773 14 11 13 0 19 6 265 43 1 15 4772 15 266 1 4775 12 19 3 255 1 4776 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 4777 14 11 13 0 19 6 265 43 1 15 4776 15 266 1 4779 12 19 3 255 1 4780 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 4781 14 11 13 0 19 6 265 43 1 15 4780 15 266 1 4783 12 19 3 255 1 4784 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 4785 14 11 13 0 19 6 265 43 1 15 4784 15 266 1 4787 12 19 3 255 1 4788 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 4789 14 11 13 0 19 6 265 43 1 15 4788 15 266 1 4791 12 19 3 255 1 4792 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 4793 14 11 13 0 19 6 265 43 1 15 4792 15 266 1 4795 12 19 3 255 15 196 15 4796 19 2 198 15 4797 15 22 15 4798 15 4799 19 4 25 15 4797 14 26 77 15 4800 19 4 25 15 4797 1 4802 12 19 2 44 15 4797 15 253 15 4803 19 3 255 15 196 15 4804 19 2 198 15 4805 15 22 15 4806 15 4807 19 4 25 15 4805 14 26 77 15 4808 19 4 25 15 4805 1 4813 12 19 2 44 15 4805 15 253 15 4814 19 3 255 15 196 15 4815 19 2 198 15 4816 15 22 15 4817 15 4818 19 4 25 15 4816 14 26 77 15 4819 19 4 25 15 4816 1 4821 12 19 2 44 15 4816 15 253 15 4822 19 3 255 15 196 15 4823 19 2 198 15 4824 15 22 15 4825 15 4826 19 4 25 15 4824 14 26 77 15 4827 19 4 25 15 4824 1 4830 12 19 2 44 15 4824 15 253 15 4831 19 3 255 15 4832 15 22 15 4833 15 4834 19 4 25 15 4832 77 15 4835 15 4836 1 4837 12 19 5 75 15 4838 15 22 15 4839 15 4840 19 4 25 15 4838 77 15 4841 15 4842 1 4846 12 19 5 75 15 4733 15 4832 19 2 359 15 4847 19 1 104 15 4848 19 1 104 15 196 15 4849 19 2 198 15 4850 15 22 15 4851 15 4852 19 4 25 15 4850 14 26 77 15 4853 19 4 25 15 4850 1 4855 12 19 2 44 15 4850 15 253 15 4856 19 3 255 15 196 15 4857 19 2 198 15 4858 15 22 15 4859 15 4860 19 4 25 15 4858 14 26 77 15 4861 19 4 25 15 4858 1 4866 12 19 2 44 15 4858 15 253 15 4867 19 3 255 15 196 15 4868 19 2 198 15 4869 15 22 15 4870 15 4871 19 4 25 15 4869 14 26 77 15 4872 19 4 25 15 4869 1 4874 12 19 2 44 15 4869 15 253 15 4875 19 3 255 15 196 15 4876 19 2 198 15 4877 15 22 15 4878 15 4879 19 4 25 15 4877 14 26 77 15 4880 19 4 25 15 4877 1 4883 12 19 2 44 15 4877 15 253 15 4884 19 3 255 15 4885 15 22 15 4886 15 4887 19 4 25 15 4885 77 15 4888 15 4889 1 4890 12 19 5 75 15 4891 15 22 15 4892 15 4893 19 4 25 15 4891 77 15 4894 15 4895 1 4899 12 19 5 75 15 4733 15 4885 19 2 359 15 4900 19 1 104 15 4901 19 1 104 15 196 15 4902 19 2 198 15 4903 15 22 15 4904 15 4905 19 4 25 15 4903 14 26 77 15 4906 19 4 25 15 4903 1 4908 12 19 2 44 15 4903 15 253 15 4909 19 3 255 15 196 15 4910 19 2 198 15 4911 15 22 15 4912 15 4913 19 4 25 15 4911 14 26 77 15 4914 19 4 25 15 4911 1 4919 12 19 2 44 15 4911 15 253 15 4920 19 3 255 15 196 15 4921 19 2 198 15 4922 15 22 15 4923 15 4924 19 4 25 15 4922 14 26 77 15 4925 19 4 25 15 4922 1 4927 12 19 2 44 15 4922 15 253 15 4928 19 3 255 15 196 15 4929 19 2 198 15 4930 15 22 15 4931 15 4932 19 4 25 15 4930 14 26 77 15 4933 19 4 25 15 4930 1 4936 12 19 2 44 15 4930 15 253 15 4937 19 3 255 15 4938 15 22 15 4939 15 4940 19 4 25 15 4938 77 15 4941 15 4942 1 4943 12 19 5 75 15 4944 15 22 15 4945 15 4946 19 4 25 15 4944 77 15 4947 15 4948 1 4952 12 19 5 75 15 4733 15 4938 19 2 359 15 4953 19 1 104 15 4954 19 1 104 15 196 15 4955 19 2 198 15 4956 15 22 15 4957 15 4958 19 4 25 15 4956 14 26 77 15 4959 19 4 25 15 4956 1 4961 12 19 2 44 15 4956 15 253 15 4962 19 3 255 15 196 15 4963 19 2 198 15 4964 15 22 15 4965 15 4966 19 4 25 15 4964 14 26 77 15 4967 19 4 25 15 4964 1 4972 12 19 2 44 15 4964 15 253 15 4973 19 3 255 15 196 15 4974 19 2 198 15 4975 15 22 15 4976 15 4977 19 4 25 15 4975 14 26 77 15 4978 19 4 25 15 4975 1 4980 12 19 2 44 15 4975 15 253 15 4981 19 3 255 15 196 15 4982 19 2 198 15 4983 15 22 15 4984 15 4985 19 4 25 15 4983 14 26 77 15 4986 19 4 25 15 4983 1 4989 12 19 2 44 15 4983 15 253 15 4990 19 3 255 15 4991 15 22 15 4992 15 4993 19 4 25 15 4991 77 15 4994 15 4995 1 4996 12 19 5 75 15 4997 15 22 15 4998 15 4999 19 4 25 15 4997 77 15 5000 15 5001 1 5005 12 19 5 75 15 4733 15 4991 19 2 359 15 5006 19 1 104 15 5007 19 1 104 15 196 15 5008 19 2 198 15 5009 15 22 15 5010 15 5011 19 4 25 15 5009 14 26 77 15 5012 19 4 25 15 5009 1 5027 12 19 2 44 15 5009 15 253 15 5028 19 3 255 15 5029 15 22 15 5030 15 5031 19 4 25 15 5029 14 26 77 15 5032 19 4 25 15 5029 1 5033 12 19 2 44 15 5034 19 1 104 15 815 15 22 15 5035 15 5036 19 4 25 15 815 77 15 5037 15 5038 1 5041 12 19 5 75 15 825 19 1 115 45 826 15 824 13 0 14 824 19 3 113 10 0 43 1 78 5042 77 75 3 78 5067 15 885 19 1 115 78 5086 1 5086 45 5088 1 829 45 5089 1 4758 45 5090 13 0 13 2 13 1 33 5091 18 3 43 1 43 2 1 5086 45 5092 1 834 45 5093 1 5094 45 5095 13 0 13 2 13 1 33 5096 18 3 43 1 43 2 1 5086 45 5097 1 840 45 5098 1 5099 45 5100 13 0 13 2 13 1 33 5101 18 3 43 1 43 2 1 5086 45 5102 1 846 45 5103 75 45 5104 13 0 13 2 13 1 33 5105 18 3 43 1 43 2 1 5086 45 5106 1 906 45 5107 1 1000 45 5108 13 0 13 2 13 1 33 5109 18 3 43 1 43 2 1 5086 45 5110 1 911 45 5111 1 4758 45 5112 13 0 13 2 13 1 33 5113 18 3 43 1 43 2 1 5086 45 5114 1 916 45 5115 1 918 45 5116 13 0 13 2 13 1 33 5117 18 3 43 1 43 2 1 5086 45 5118 1 922 45 5119 8 1 45 5120 13 0 13 2 13 1 33 5121 18 3 43 1 43 2 1 5086 45 5122 1 927 45 5123 75 45 5124 13 0 13 2 13 1 33 5125 18 3 43 1 43 2 1 5086 45 5126 1 932 45 5127 75 45 5128 13 0 13 2 13 1 33 5129 18 3 43 1 43 2 1 5086 45 5130 1 937 45 5131 1 4762 45 5132 13 0 13 2 13 1 33 5133 18 3 43 1 43 2 1 5086 45 5134 1 942 45 5135 1 4832 45 5136 13 0 13 2 13 1 33 5137 18 3 43 1 43 2 1 5086 45 5138 1 947 45 5139 1 5140 45 5141 13 0 13 2 13 1 33 5142 18 3 43 1 43 2 1 5086 45 5143 1 953 45 5144 1 1039 45 5145 13 0 13 2 13 1 33 5146 18 3 43 1 43 2 1 5086 45 5147 1 958 45 5148 75 45 5149 13 0 13 2 13 1 33 5150 18 3 43 1 43 2 1 5086 45 5151 1 963 45 5152 75 45 5153 13 0 13 2 13 1 33 5154 18 3 43 1 43 2 1 5086 45 5155 1 968 45 5156 75 45 5157 13 0 13 2 13 1 33 5158 18 3 43 1 43 2 1 5086 45 5159 1 973 45 5160 75 45 5161 13 0 13 2 13 1 33 5162 18 3 43 1 43 2 77 75 3 78 5087 15 885 19 1 115 78 5163 1 5163 45 5165 1 829 45 5166 1 4758 45 5167 13 0 13 2 13 1 33 5168 18 3 43 1 43 2 1 5163 45 5169 1 834 45 5170 1 5171 45 5172 13 0 13 2 13 1 33 5173 18 3 43 1 43 2 1 5163 45 5174 1 840 45 5175 1 5176 45 5177 13 0 13 2 13 1 33 5178 18 3 43 1 43 2 1 5163 45 5179 1 846 45 5180 75 45 5181 13 0 13 2 13 1 33 5182 18 3 43 1 43 2 1 5163 45 5183 1 906 45 5184 1 1000 45 5185 13 0 13 2 13 1 33 5186 18 3 43 1 43 2 1 5163 45 5187 1 911 45 5188 1 4758 45 5189 13 0 13 2 13 1 33 5190 18 3 43 1 43 2 1 5163 45 5191 1 916 45 5192 1 918 45 5193 13 0 13 2 13 1 33 5194 18 3 43 1 43 2 1 5163 45 5195 1 922 45 5196 8 2 45 5197 13 0 13 2 13 1 33 5198 18 3 43 1 43 2 1 5163 45 5199 1 927 45 5200 75 45 5201 13 0 13 2 13 1 33 5202 18 3 43 1 43 2 1 5163 45 5203 1 932 45 5204 75 45 5205 13 0 13 2 13 1 33 5206 18 3 43 1 43 2 1 5163 45 5207 1 937 45 5208 1 4761 45 5209 13 0 13 2 13 1 33 5210 18 3 43 1 43 2 1 5163 45 5211 1 942 45 5212 1 4885 45 5213 13 0 13 2 13 1 33 5214 18 3 43 1 43 2 1 5163 45 5215 1 947 45 5216 1 5217 45 5218 13 0 13 2 13 1 33 5219 18 3 43 1 43 2 1 5163 45 5220 1 953 45 5221 1 1039 45 5222 13 0 13 2 13 1 33 5223 18 3 43 1 43 2 1 5163 45 5224 1 958 45 5225 75 45 5226 13 0 13 2 13 1 33 5227 18 3 43 1 43 2 1 5163 45 5228 1 963 45 5229 75 45 5230 13 0 13 2 13 1 33 5231 18 3 43 1 43 2 1 5163 45 5232 1 968 45 5233 75 45 5234 13 0 13 2 13 1 33 5235 18 3 43 1 43 2 1 5163 45 5236 1 973 45 5237 75 45 5238 13 0 13 2 13 1 33 5239 18 3 43 1 43 2 77 75 3 78 5164 15 885 19 1 115 78 5240 1 5240 45 5242 1 829 45 5243 1 4758 45 5244 13 0 13 2 13 1 33 5245 18 3 43 1 43 2 1 5240 45 5246 1 834 45 5247 1 5248 45 5249 13 0 13 2 13 1 33 5250 18 3 43 1 43 2 1 5240 45 5251 1 840 45 5252 1 5253 45 5254 13 0 13 2 13 1 33 5255 18 3 43 1 43 2 1 5240 45 5256 1 846 45 5257 75 45 5258 13 0 13 2 13 1 33 5259 18 3 43 1 43 2 1 5240 45 5260 1 906 45 5261 1 1000 45 5262 13 0 13 2 13 1 33 5263 18 3 43 1 43 2 1 5240 45 5264 1 911 45 5265 1 4758 45 5266 13 0 13 2 13 1 33 5267 18 3 43 1 43 2 1 5240 45 5268 1 916 45 5269 1 918 45 5270 13 0 13 2 13 1 33 5271 18 3 43 1 43 2 1 5240 45 5272 1 922 45 5273 8 3 45 5274 13 0 13 2 13 1 33 5275 18 3 43 1 43 2 1 5240 45 5276 1 927 45 5277 75 45 5278 13 0 13 2 13 1 33 5279 18 3 43 1 43 2 1 5240 45 5280 1 932 45 5281 75 45 5282 13 0 13 2 13 1 33 5283 18 3 43 1 43 2 1 5240 45 5284 1 937 45 5285 1 4760 45 5286 13 0 13 2 13 1 33 5287 18 3 43 1 43 2 1 5240 45 5288 1 942 45 5289 1 4938 45 5290 13 0 13 2 13 1 33 5291 18 3 43 1 43 2 1 5240 45 5292 1 947 45 5293 1 5294 45 5295 13 0 13 2 13 1 33 5296 18 3 43 1 43 2 1 5240 45 5297 1 953 45 5298 1 1039 45 5299 13 0 13 2 13 1 33 5300 18 3 43 1 43 2 1 5240 45 5301 1 958 45 5302 75 45 5303 13 0 13 2 13 1 33 5304 18 3 43 1 43 2 1 5240 45 5305 1 963 45 5306 75 45 5307 13 0 13 2 13 1 33 5308 18 3 43 1 43 2 1 5240 45 5309 1 968 45 5310 75 45 5311 13 0 13 2 13 1 33 5312 18 3 43 1 43 2 1 5240 45 5313 1 973 45 5314 75 45 5315 13 0 13 2 13 1 33 5316 18 3 43 1 43 2 77 75 3 78 5241 15 885 19 1 115 78 5317 1 5317 45 5318 1 829 45 5319 1 4758 45 5320 13 0 13 2 13 1 33 5321 18 3 43 1 43 2 1 5317 45 5322 1 834 45 5323 1 5324 45 5325 13 0 13 2 13 1 33 5326 18 3 43 1 43 2 1 5317 45 5327 1 840 45 5328 1 5329 45 5330 13 0 13 2 13 1 33 5331 18 3 43 1 43 2 1 5317 45 5332 1 846 45 5333 75 45 5334 13 0 13 2 13 1 33 5335 18 3 43 1 43 2 1 5317 45 5336 1 906 45 5337 1 1000 45 5338 13 0 13 2 13 1 33 5339 18 3 43 1 43 2 1 5317 45 5340 1 911 45 5341 1 4758 45 5342 13 0 13 2 13 1 33 5343 18 3 43 1 43 2 1 5317 45 5344 1 916 45 5345 1 918 45 5346 13 0 13 2 13 1 33 5347 18 3 43 1 43 2 1 5317 45 5348 1 922 45 5349 8 4 45 5350 13 0 13 2 13 1 33 5351 18 3 43 1 43 2 1 5317 45 5352 1 927 45 5353 75 45 5354 13 0 13 2 13 1 33 5355 18 3 43 1 43 2 1 5317 45 5356 1 932 45 5357 75 45 5358 13 0 13 2 13 1 33 5359 18 3 43 1 43 2 1 5317 45 5360 1 937 45 5361 1 4759 45 5362 13 0 13 2 13 1 33 5363 18 3 43 1 43 2 1 5317 45 5364 1 942 45 5365 1 4991 45 5366 13 0 13 2 13 1 33 5367 18 3 43 1 43 2 1 5317 45 5368 1 947 45 5369 1 5370 45 5371 13 0 13 2 13 1 33 5372 18 3 43 1 43 2 1 5317 45 5373 1 953 45 5374 1 1039 45 5375 13 0 13 2 13 1 33 5376 18 3 43 1 43 2 1 5317 45 5377 1 958 45 5378 75 45 5379 13 0 13 2 13 1 33 5380 18 3 43 1 43 2 1 5317 45 5381 1 963 45 5382 75 45 5383 13 0 13 2 13 1 33 5384 18 3 43 1 43 2 1 5317 45 5385 1 968 45 5386 75 45 5387 13 0 13 2 13 1 33 5388 18 3 43 1 43 2 1 5317 45 5389 1 973 45 5390 75 45 5391 13 0 13 2 13 1 33 5392 18 3 43 1 43 2 15 5241 1 5317 17 122 15 5241 75 17 124 15 5164 1 5240 17 122 15 5164 1 5241 17 124 15 5087 1 5163 17 122 15 5087 1 5164 17 124 15 5067 1 5086 17 122 15 5067 1 5087 17 124 1 5042 45 5043 1 829 45 5044 1 4733 45 5045 13 0 13 2 13 1 33 5046 18 3 43 1 43 2 1 5042 45 5047 1 834 45 5048 1 5049 45 5050 13 0 13 2 13 1 33 5051 18 3 43 1 43 2 1 5042 45 5052 1 840 45 5053 1 5054 45 5055 13 0 13 2 13 1 33 5056 18 3 43 1 43 2 1 5042 45 5057 1 846 45 5058 75 45 5059 13 0 13 2 13 1 33 5060 18 3 43 1 43 2 1 5042 45 5061 1 851 45 5062 75 45 5063 13 0 13 2 13 1 33 5064 18 3 43 1 43 2 1 5042 45 5065 1 856 45 5066 1 5067 45 5068 13 0 13 2 13 1 33 5069 18 3 43 1 43 2 1 5042 45 5070 1 862 45 5071 75 45 5072 13 0 13 2 13 1 33 5073 18 3 43 1 43 2 15 5042 1 866 17 867 1 5042 45 5074 1 869 45 5075 75 45 5076 13 0 13 2 13 1 33 5077 18 3 43 1 43 2 1 5042 45 5078 1 874 45 5079 75 45 5080 13 0 13 2 13 1 33 5081 18 3 43 1 43 2 1 5042 45 5082 1 879 45 5083 1 824 45 5084 13 0 13 2 13 1 33 5085 18 3 43 1 43 2 15 4733 15 5042 14 824 19 3 113 15 196 15 5393 19 2 198 15 5394 15 5395 77 77 15 5396 15 5397 15 5398 15 204 77 77 15 5399 9 10 77 77 77 19 15 206 15 5400 15 22 15 5401 15 5402 19 4 25 15 5403 15 22 15 5404 15 5405 19 4 25 15 5403 14 26 77 15 5406 19 4 25 15 5394 19 1 117 78 5441 15 5403 1 5442 12 19 2 44 15 5403 15 253 15 5443 19 3 255 1 5444 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 5445 14 11 13 0 19 6 265 43 1 15 5444 15 266 1 5447 12 19 3 255 1 5448 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 5449 14 11 13 0 19 6 265 43 1 15 5448 15 266 1 5451 12 19 3 255 1 5452 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 5453 14 11 13 0 19 6 265 43 1 15 5452 15 266 1 5455 12 19 3 255 1 5456 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 5457 14 11 13 0 19 6 265 43 1 15 5456 15 266 1 5459 12 19 3 255 1 5460 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 5461 14 11 13 0 19 6 265 43 1 15 5460 15 266 1 5463 12 19 3 255 1 5464 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 5465 14 11 13 0 19 6 265 43 1 15 5464 15 266 1 5467 12 19 3 255 1 5468 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 5469 14 11 13 0 19 6 265 43 1 15 5468 15 266 1 5471 12 19 3 255 1 5472 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 5473 14 11 13 0 19 6 265 43 1 15 5472 15 266 1 5475 12 19 3 255 1 5476 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 5477 14 11 13 0 19 6 265 43 1 15 5476 15 266 1 5479 12 19 3 255 1 5480 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 5481 14 11 13 0 19 6 265 43 1 15 5480 15 266 1 5483 12 19 3 255 15 196 15 5484 19 2 198 15 5485 15 22 15 5486 15 5487 19 4 25 15 5485 14 26 77 15 5488 19 4 25 15 5485 1 5490 12 19 2 44 15 5485 15 253 15 5491 19 3 255 15 196 15 5492 19 2 198 15 5493 15 22 15 5494 15 5495 19 4 25 15 5493 14 26 77 15 5496 19 4 25 15 5493 1 5499 12 19 2 44 15 5493 15 253 15 5500 19 3 255 15 196 15 5501 19 2 198 15 5502 15 22 15 5503 15 5504 19 4 25 15 5502 14 26 77 15 5505 19 4 25 15 5502 1 5507 12 19 2 44 15 5502 15 253 15 5508 19 3 255 15 196 15 5509 19 2 198 15 5510 15 22 15 5511 15 5512 19 4 25 15 5510 14 26 77 15 5513 19 4 25 15 5510 1 5514 12 19 2 44 15 5510 15 253 15 5515 19 3 255 15 5516 15 22 15 5517 15 5518 19 4 25 15 5516 77 15 5519 15 5520 1 5521 12 19 5 75 15 5522 15 22 15 5523 15 5524 19 4 25 15 5522 77 15 5525 15 5526 1 5530 12 19 5 75 15 5394 15 5516 19 2 359 15 5531 19 1 104 15 5532 19 1 104 15 196 15 5533 19 2 198 15 5534 15 22 15 5535 15 5536 19 4 25 15 5534 14 26 77 15 5537 19 4 25 15 5534 1 5539 12 19 2 44 15 5534 15 253 15 5540 19 3 255 15 196 15 5541 19 2 198 15 5542 15 22 15 5543 15 5544 19 4 25 15 5542 14 26 77 15 5545 19 4 25 15 5542 1 5550 12 19 2 44 15 5542 15 253 15 5551 19 3 255 15 196 15 5552 19 2 198 15 5553 15 22 15 5554 15 5555 19 4 25 15 5553 14 26 77 15 5556 19 4 25 15 5553 1 5560 12 19 2 44 15 5553 15 253 15 5561 19 3 255 15 196 15 5562 19 2 198 15 5563 15 22 15 5564 15 5565 19 4 25 15 5563 14 26 77 15 5566 19 4 25 15 5563 1 5569 12 19 2 44 15 5563 15 253 15 5570 19 3 255 15 5571 15 22 15 5572 15 5573 19 4 25 15 5571 77 15 5574 15 5575 1 5576 12 19 5 75 15 5577 15 22 15 5578 15 5579 19 4 25 15 5577 77 15 5580 15 5581 1 5585 12 19 5 75 15 5394 15 5571 19 2 359 15 5586 19 1 104 15 5587 19 1 104 15 196 15 5588 19 2 198 15 5589 15 22 15 5590 15 5591 19 4 25 15 5589 14 26 77 15 5592 19 4 25 15 5589 1 5594 12 19 2 44 15 5589 15 253 15 5595 19 3 255 15 196 15 5596 19 2 198 15 5597 15 22 15 5598 15 5599 19 4 25 15 5597 14 26 77 15 5600 19 4 25 15 5597 1 5605 12 19 2 44 15 5597 15 253 15 5606 19 3 255 15 196 15 5607 19 2 198 15 5608 15 22 15 5609 15 5610 19 4 25 15 5608 14 26 77 15 5611 19 4 25 15 5608 1 5613 12 19 2 44 15 5608 15 253 15 5614 19 3 255 15 196 15 5615 19 2 198 15 5616 15 22 15 5617 15 5618 19 4 25 15 5616 14 26 77 15 5619 19 4 25 15 5616 1 5622 12 19 2 44 15 5616 15 253 15 5623 19 3 255 15 5624 15 22 15 5625 15 5626 19 4 25 15 5624 77 15 5627 15 5628 1 5629 12 19 5 75 15 5630 15 22 15 5631 15 5632 19 4 25 15 5630 77 15 5633 15 5634 1 5638 12 19 5 75 15 5394 15 5624 19 2 359 15 5639 19 1 104 15 5640 19 1 104 15 196 15 5641 19 2 198 15 5642 15 22 15 5643 15 5644 19 4 25 15 5642 14 26 77 15 5645 19 4 25 15 5642 1 5647 12 19 2 44 15 5642 15 253 15 5648 19 3 255 15 196 15 5649 19 2 198 15 5650 15 22 15 5651 15 5652 19 4 25 15 5650 14 26 77 15 5653 19 4 25 15 5650 1 5658 12 19 2 44 15 5650 15 253 15 5659 19 3 255 15 196 15 5660 19 2 198 15 5661 15 22 15 5662 15 5663 19 4 25 15 5661 14 26 77 15 5664 19 4 25 15 5661 1 5666 12 19 2 44 15 5661 15 253 15 5667 19 3 255 15 196 15 5668 19 2 198 15 5669 15 22 15 5670 15 5671 19 4 25 15 5669 14 26 77 15 5672 19 4 25 15 5669 1 5675 12 19 2 44 15 5669 15 253 15 5676 19 3 255 15 5677 15 22 15 5678 15 5679 19 4 25 15 5677 77 15 5680 15 5681 1 5682 12 19 5 75 15 5683 15 22 15 5684 15 5685 19 4 25 15 5683 77 15 5686 15 5687 1 5691 12 19 5 75 15 5394 15 5677 19 2 359 15 5692 19 1 104 15 5693 19 1 104 15 196 15 5694 19 2 198 15 5695 15 22 15 5696 15 5697 19 4 25 15 5695 14 26 77 15 5698 19 4 25 15 5695 1 5700 12 19 2 44 15 5695 15 253 15 5701 19 3 255 15 196 15 5702 19 2 198 15 5703 15 22 15 5704 15 5705 19 4 25 15 5703 14 26 77 15 5706 19 4 25 15 5703 1 5709 12 19 2 44 15 5703 15 253 15 5710 19 3 255 15 196 15 5711 19 2 198 15 5712 15 22 15 5713 15 5714 19 4 25 15 5712 14 26 77 15 5715 19 4 25 15 5712 1 5717 12 19 2 44 15 5712 15 253 15 5718 19 3 255 15 196 15 5719 19 2 198 15 5720 15 22 15 5721 15 5722 19 4 25 15 5720 14 26 77 15 5723 19 4 25 15 5720 1 5724 12 19 2 44 15 5720 15 253 15 5725 19 3 255 15 5726 15 22 15 5727 15 5728 19 4 25 15 5726 77 15 5729 15 5730 1 5731 12 19 5 75 15 5732 15 22 15 5733 15 5734 19 4 25 15 5732 77 15 5735 15 5736 1 5740 12 19 5 75 15 5394 15 5726 19 2 359 15 5741 19 1 104 15 5742 19 1 104 15 196 15 5743 19 2 198 15 4684 15 22 15 5744 15 5745 19 4 25 15 4684 14 26 77 15 5746 19 4 25 15 4684 1 5748 12 19 2 44 15 4684 15 253 15 5749 19 3 255 15 196 15 5750 19 2 198 15 5751 15 22 15 5752 15 5753 19 4 25 15 5751 14 26 77 15 5754 19 4 25 15 5751 1 5759 12 19 2 44 15 5751 15 253 15 5760 19 3 255 15 196 15 5761 19 2 198 15 5762 15 22 15 5763 15 5764 19 4 25 15 5762 14 26 77 15 5765 19 4 25 15 5762 1 5767 12 19 2 44 15 5762 15 253 15 5768 19 3 255 15 196 15 5769 19 2 198 15 5770 15 22 15 5771 15 5772 19 4 25 15 5770 14 26 77 15 5773 19 4 25 15 5770 1 5776 12 19 2 44 15 5770 15 253 15 5777 19 3 255 15 5778 15 22 15 5779 15 5780 19 4 25 15 5778 77 15 5781 15 5782 1 5783 12 19 5 75 15 5784 15 22 15 5785 15 5786 19 4 25 15 5784 77 15 5787 15 5788 1 5792 12 19 5 75 15 5394 15 5778 19 2 359 15 5793 19 1 104 15 5794 19 1 104 15 196 15 5795 19 2 198 15 5796 15 22 15 5797 15 5798 19 4 25 15 5796 14 26 77 15 5799 19 4 25 15 5796 1 5801 12 19 2 44 15 5796 15 253 15 5802 19 3 255 15 196 15 5803 19 2 198 15 5804 15 22 15 5805 15 5806 19 4 25 15 5804 14 26 77 15 5807 19 4 25 15 5804 1 5812 12 19 2 44 15 5804 15 253 15 5813 19 3 255 15 196 15 5814 19 2 198 15 5815 15 22 15 5816 15 5817 19 4 25 15 5815 14 26 77 15 5818 19 4 25 15 5815 1 5820 12 19 2 44 15 5815 15 253 15 5821 19 3 255 15 196 15 5822 19 2 198 15 5823 15 22 15 5824 15 5825 19 4 25 15 5823 14 26 77 15 5826 19 4 25 15 5823 1 5829 12 19 2 44 15 5823 15 253 15 5830 19 3 255 15 5831 15 22 15 5832 15 5833 19 4 25 15 5831 77 15 5834 15 5835 1 5836 12 19 5 75 15 5837 15 22 15 5838 15 5839 19 4 25 15 5837 77 15 5840 15 5841 1 5845 12 19 5 75 15 5394 15 5831 19 2 359 15 5846 19 1 104 15 5847 19 1 104 15 196 15 5848 19 2 198 15 5849 15 22 15 5850 15 5851 19 4 25 15 5849 14 26 77 15 5852 19 4 25 15 5849 1 5854 12 19 2 44 15 5849 15 253 15 5855 19 3 255 15 196 15 5856 19 2 198 15 5857 15 22 15 5858 15 5859 19 4 25 15 5857 14 26 77 15 5860 19 4 25 15 5857 1 5865 12 19 2 44 15 5857 15 253 15 5866 19 3 255 15 196 15 5867 19 2 198 15 5868 15 22 15 5869 15 5870 19 4 25 15 5868 14 26 77 15 5871 19 4 25 15 5868 1 5873 12 19 2 44 15 5868 15 253 15 5874 19 3 255 15 196 15 5875 19 2 198 15 5876 15 22 15 5877 15 5878 19 4 25 15 5876 14 26 77 15 5879 19 4 25 15 5876 1 5882 12 19 2 44 15 5876 15 253 15 5883 19 3 255 15 5884 15 22 15 5885 15 5886 19 4 25 15 5884 77 15 5887 15 5888 1 5889 12 19 5 75 15 5890 15 22 15 5891 15 5892 19 4 25 15 5890 77 15 5893 15 5894 1 5898 12 19 5 75 15 5394 15 5884 19 2 359 15 5899 19 1 104 15 5900 19 1 104 15 196 15 5901 19 2 198 15 5902 15 22 15 5903 15 5904 19 4 25 15 5902 14 26 77 15 5905 19 4 25 15 5902 1 5932 12 19 2 44 15 5902 15 253 15 5933 19 3 255 15 5934 15 22 15 5935 15 5936 19 4 25 15 5934 14 26 77 15 5937 19 4 25 15 5934 1 5938 12 19 2 44 15 5939 19 1 104 15 815 15 22 15 5940 15 5941 19 4 25 15 815 77 15 5942 15 5943 1 5946 12 19 5 75 15 825 19 1 115 45 826 15 824 13 0 14 824 19 3 113 10 0 43 1 78 5947 77 75 3 78 5972 15 885 19 1 115 78 5991 1 5991 45 5993 1 829 45 5994 1 981 45 5995 13 0 13 2 13 1 33 5996 18 3 43 1 43 2 1 5991 45 5997 1 834 45 5998 1 5999 45 6000 13 0 13 2 13 1 33 6001 18 3 43 1 43 2 1 5991 45 6002 1 840 45 6003 1 6004 45 6005 13 0 13 2 13 1 33 6006 18 3 43 1 43 2 1 5991 45 6007 1 846 45 6008 75 45 6009 13 0 13 2 13 1 33 6010 18 3 43 1 43 2 1 5991 45 6011 1 906 45 6012 1 1000 45 6013 13 0 13 2 13 1 33 6014 18 3 43 1 43 2 1 5991 45 6015 1 911 45 6016 1 981 45 6017 13 0 13 2 13 1 33 6018 18 3 43 1 43 2 1 5991 45 6019 1 916 45 6020 1 918 45 6021 13 0 13 2 13 1 33 6022 18 3 43 1 43 2 1 5991 45 6023 1 922 45 6024 8 1 45 6025 13 0 13 2 13 1 33 6026 18 3 43 1 43 2 1 5991 45 6027 1 927 45 6028 75 45 6029 13 0 13 2 13 1 33 6030 18 3 43 1 43 2 1 5991 45 6031 1 932 45 6032 75 45 6033 13 0 13 2 13 1 33 6034 18 3 43 1 43 2 1 5991 45 6035 1 937 45 6036 1 6037 45 6038 13 0 13 2 13 1 33 6039 18 3 43 1 43 2 1 5991 45 6040 1 942 45 6041 1 5516 45 6042 13 0 13 2 13 1 33 6043 18 3 43 1 43 2 1 5991 45 6044 1 947 45 6045 1 6046 45 6047 13 0 13 2 13 1 33 6048 18 3 43 1 43 2 1 5991 45 6049 1 953 45 6050 1 1039 45 6051 13 0 13 2 13 1 33 6052 18 3 43 1 43 2 1 5991 45 6053 1 958 45 6054 75 45 6055 13 0 13 2 13 1 33 6056 18 3 43 1 43 2 1 5991 45 6057 1 963 45 6058 75 45 6059 13 0 13 2 13 1 33 6060 18 3 43 1 43 2 1 5991 45 6061 1 968 45 6062 75 45 6063 13 0 13 2 13 1 33 6064 18 3 43 1 43 2 1 5991 45 6065 1 973 45 6066 8 0 45 6067 13 0 13 2 13 1 33 6068 18 3 43 1 43 2 77 75 3 78 5992 15 885 19 1 115 78 6069 1 6069 45 6071 1 829 45 6072 1 5427 45 6073 13 0 13 2 13 1 33 6074 18 3 43 1 43 2 1 6069 45 6075 1 834 45 6076 1 6077 45 6078 13 0 13 2 13 1 33 6079 18 3 43 1 43 2 1 6069 45 6080 1 840 45 6081 1 6082 45 6083 13 0 13 2 13 1 33 6084 18 3 43 1 43 2 1 6069 45 6085 1 846 45 6086 75 45 6087 13 0 13 2 13 1 33 6088 18 3 43 1 43 2 1 6069 45 6089 1 906 45 6090 1 1000 45 6091 13 0 13 2 13 1 33 6092 18 3 43 1 43 2 1 6069 45 6093 1 911 45 6094 1 5427 45 6095 13 0 13 2 13 1 33 6096 18 3 43 1 43 2 1 6069 45 6097 1 916 45 6098 1 918 45 6099 13 0 13 2 13 1 33 6100 18 3 43 1 43 2 1 6069 45 6101 1 922 45 6102 8 3 45 6103 13 0 13 2 13 1 33 6104 18 3 43 1 43 2 1 6069 45 6105 1 927 45 6106 75 45 6107 13 0 13 2 13 1 33 6108 18 3 43 1 43 2 1 6069 45 6109 1 932 45 6110 75 45 6111 13 0 13 2 13 1 33 6112 18 3 43 1 43 2 1 6069 45 6113 1 937 45 6114 1 5438 45 6115 13 0 13 2 13 1 33 6116 18 3 43 1 43 2 1 6069 45 6117 1 942 45 6118 1 5571 45 6119 13 0 13 2 13 1 33 6120 18 3 43 1 43 2 1 6069 45 6121 1 947 45 6122 1 6123 45 6124 13 0 13 2 13 1 33 6125 18 3 43 1 43 2 1 6069 45 6126 1 953 45 6127 1 1039 45 6128 13 0 13 2 13 1 33 6129 18 3 43 1 43 2 1 6069 45 6130 1 958 45 6131 75 45 6132 13 0 13 2 13 1 33 6133 18 3 43 1 43 2 1 6069 45 6134 1 963 45 6135 75 45 6136 13 0 13 2 13 1 33 6137 18 3 43 1 43 2 1 6069 45 6138 1 968 45 6139 75 45 6140 13 0 13 2 13 1 33 6141 18 3 43 1 43 2 1 6069 45 6142 1 973 45 6143 75 45 6144 13 0 13 2 13 1 33 6145 18 3 43 1 43 2 77 75 3 78 6070 15 885 19 1 115 78 6146 1 6146 45 6148 1 829 45 6149 1 5427 45 6150 13 0 13 2 13 1 33 6151 18 3 43 1 43 2 1 6146 45 6152 1 834 45 6153 1 6154 45 6155 13 0 13 2 13 1 33 6156 18 3 43 1 43 2 1 6146 45 6157 1 840 45 6158 1 6159 45 6160 13 0 13 2 13 1 33 6161 18 3 43 1 43 2 1 6146 45 6162 1 846 45 6163 75 45 6164 13 0 13 2 13 1 33 6165 18 3 43 1 43 2 1 6146 45 6166 1 906 45 6167 1 1000 45 6168 13 0 13 2 13 1 33 6169 18 3 43 1 43 2 1 6146 45 6170 1 911 45 6171 1 5427 45 6172 13 0 13 2 13 1 33 6173 18 3 43 1 43 2 1 6146 45 6174 1 916 45 6175 1 918 45 6176 13 0 13 2 13 1 33 6177 18 3 43 1 43 2 1 6146 45 6178 1 922 45 6179 8 4 45 6180 13 0 13 2 13 1 33 6181 18 3 43 1 43 2 1 6146 45 6182 1 927 45 6183 75 45 6184 13 0 13 2 13 1 33 6185 18 3 43 1 43 2 1 6146 45 6186 1 932 45 6187 75 45 6188 13 0 13 2 13 1 33 6189 18 3 43 1 43 2 1 6146 45 6190 1 937 45 6191 1 5436 45 6192 13 0 13 2 13 1 33 6193 18 3 43 1 43 2 1 6146 45 6194 1 942 45 6195 1 5624 45 6196 13 0 13 2 13 1 33 6197 18 3 43 1 43 2 1 6146 45 6198 1 947 45 6199 1 6200 45 6201 13 0 13 2 13 1 33 6202 18 3 43 1 43 2 1 6146 45 6203 1 953 45 6204 1 1039 45 6205 13 0 13 2 13 1 33 6206 18 3 43 1 43 2 1 6146 45 6207 1 958 45 6208 75 45 6209 13 0 13 2 13 1 33 6210 18 3 43 1 43 2 1 6146 45 6211 1 963 45 6212 75 45 6213 13 0 13 2 13 1 33 6214 18 3 43 1 43 2 1 6146 45 6215 1 968 45 6216 75 45 6217 13 0 13 2 13 1 33 6218 18 3 43 1 43 2 1 6146 45 6219 1 973 45 6220 75 45 6221 13 0 13 2 13 1 33 6222 18 3 43 1 43 2 77 75 3 78 6147 15 885 19 1 115 78 6223 1 6223 45 6225 1 829 45 6226 1 5427 45 6227 13 0 13 2 13 1 33 6228 18 3 43 1 43 2 1 6223 45 6229 1 834 45 6230 1 6231 45 6232 13 0 13 2 13 1 33 6233 18 3 43 1 43 2 1 6223 45 6234 1 840 45 6235 1 6236 45 6237 13 0 13 2 13 1 33 6238 18 3 43 1 43 2 1 6223 45 6239 1 846 45 6240 75 45 6241 13 0 13 2 13 1 33 6242 18 3 43 1 43 2 1 6223 45 6243 1 906 45 6244 1 1000 45 6245 13 0 13 2 13 1 33 6246 18 3 43 1 43 2 1 6223 45 6247 1 911 45 6248 1 5427 45 6249 13 0 13 2 13 1 33 6250 18 3 43 1 43 2 1 6223 45 6251 1 916 45 6252 1 918 45 6253 13 0 13 2 13 1 33 6254 18 3 43 1 43 2 1 6223 45 6255 1 922 45 6256 8 5 45 6257 13 0 13 2 13 1 33 6258 18 3 43 1 43 2 1 6223 45 6259 1 927 45 6260 75 45 6261 13 0 13 2 13 1 33 6262 18 3 43 1 43 2 1 6223 45 6263 1 932 45 6264 75 45 6265 13 0 13 2 13 1 33 6266 18 3 43 1 43 2 1 6223 45 6267 1 937 45 6268 1 5434 45 6269 13 0 13 2 13 1 33 6270 18 3 43 1 43 2 1 6223 45 6271 1 942 45 6272 1 5677 45 6273 13 0 13 2 13 1 33 6274 18 3 43 1 43 2 1 6223 45 6275 1 947 45 6276 1 6277 45 6278 13 0 13 2 13 1 33 6279 18 3 43 1 43 2 1 6223 45 6280 1 953 45 6281 1 1039 45 6282 13 0 13 2 13 1 33 6283 18 3 43 1 43 2 1 6223 45 6284 1 958 45 6285 75 45 6286 13 0 13 2 13 1 33 6287 18 3 43 1 43 2 1 6223 45 6288 1 963 45 6289 75 45 6290 13 0 13 2 13 1 33 6291 18 3 43 1 43 2 1 6223 45 6292 1 968 45 6293 75 45 6294 13 0 13 2 13 1 33 6295 18 3 43 1 43 2 1 6223 45 6296 1 973 45 6297 75 45 6298 13 0 13 2 13 1 33 6299 18 3 43 1 43 2 77 75 3 78 6224 15 885 19 1 115 78 6300 1 6300 45 6302 1 829 45 6303 1 981 45 6304 13 0 13 2 13 1 33 6305 18 3 43 1 43 2 1 6300 45 6306 1 834 45 6307 1 6308 45 6309 13 0 13 2 13 1 33 6310 18 3 43 1 43 2 1 6300 45 6311 1 840 45 6312 1 6313 45 6314 13 0 13 2 13 1 33 6315 18 3 43 1 43 2 1 6300 45 6316 1 846 45 6317 75 45 6318 13 0 13 2 13 1 33 6319 18 3 43 1 43 2 1 6300 45 6320 1 906 45 6321 1 1000 45 6322 13 0 13 2 13 1 33 6323 18 3 43 1 43 2 1 6300 45 6324 1 911 45 6325 1 981 45 6326 13 0 13 2 13 1 33 6327 18 3 43 1 43 2 1 6300 45 6328 1 916 45 6329 1 918 45 6330 13 0 13 2 13 1 33 6331 18 3 43 1 43 2 1 6300 45 6332 1 922 45 6333 8 6 45 6334 13 0 13 2 13 1 33 6335 18 3 43 1 43 2 1 6300 45 6336 1 927 45 6337 75 45 6338 13 0 13 2 13 1 33 6339 18 3 43 1 43 2 1 6300 45 6340 1 932 45 6341 75 45 6342 13 0 13 2 13 1 33 6343 18 3 43 1 43 2 1 6300 45 6344 1 937 45 6345 1 6346 45 6347 13 0 13 2 13 1 33 6348 18 3 43 1 43 2 1 6300 45 6349 1 942 45 6350 1 5726 45 6351 13 0 13 2 13 1 33 6352 18 3 43 1 43 2 1 6300 45 6353 1 947 45 6354 1 6355 45 6356 13 0 13 2 13 1 33 6357 18 3 43 1 43 2 1 6300 45 6358 1 953 45 6359 1 1039 45 6360 13 0 13 2 13 1 33 6361 18 3 43 1 43 2 1 6300 45 6362 1 958 45 6363 75 45 6364 13 0 13 2 13 1 33 6365 18 3 43 1 43 2 1 6300 45 6366 1 963 45 6367 75 45 6368 13 0 13 2 13 1 33 6369 18 3 43 1 43 2 1 6300 45 6370 1 968 45 6371 75 45 6372 13 0 13 2 13 1 33 6373 18 3 43 1 43 2 1 6300 45 6374 1 973 45 6375 8 1 45 6376 13 0 13 2 13 1 33 6377 18 3 43 1 43 2 77 75 3 78 6301 15 885 19 1 115 78 6378 1 6378 45 6380 1 829 45 6381 1 4684 45 6382 13 0 13 2 13 1 33 6383 18 3 43 1 43 2 1 6378 45 6384 1 834 45 6385 1 6386 45 6387 13 0 13 2 13 1 33 6388 18 3 43 1 43 2 1 6378 45 6389 1 840 45 6390 1 6391 45 6392 13 0 13 2 13 1 33 6393 18 3 43 1 43 2 1 6378 45 6394 1 846 45 6395 75 45 6396 13 0 13 2 13 1 33 6397 18 3 43 1 43 2 1 6378 45 6398 1 906 45 6399 1 112 45 6400 13 0 13 2 13 1 33 6401 18 3 43 1 43 2 1 6378 45 6402 1 911 45 6403 1 4681 45 6404 13 0 13 2 13 1 33 6405 18 3 43 1 43 2 1 6378 45 6406 1 916 45 6407 1 918 45 6408 13 0 13 2 13 1 33 6409 18 3 43 1 43 2 1 6378 45 6410 1 922 45 6411 8 7 45 6412 13 0 13 2 13 1 33 6413 18 3 43 1 43 2 1 6378 45 6414 1 927 45 6415 75 45 6416 13 0 13 2 13 1 33 6417 18 3 43 1 43 2 1 6378 45 6418 1 932 45 6419 75 45 6420 13 0 13 2 13 1 33 6421 18 3 43 1 43 2 1 6378 45 6422 1 937 45 6423 1 5432 45 6424 13 0 13 2 13 1 33 6425 18 3 43 1 43 2 1 6378 45 6426 1 942 45 6427 1 5778 45 6428 13 0 13 2 13 1 33 6429 18 3 43 1 43 2 1 6378 45 6430 1 947 45 6431 1 6432 45 6433 13 0 13 2 13 1 33 6434 18 3 43 1 43 2 1 6378 45 6435 1 953 45 6436 1 4690 45 6437 13 0 13 2 13 1 33 6438 18 3 43 1 43 2 1 6378 45 6439 1 958 45 6440 75 45 6441 13 0 13 2 13 1 33 6442 18 3 43 1 43 2 1 6378 45 6443 1 963 45 6444 75 45 6445 13 0 13 2 13 1 33 6446 18 3 43 1 43 2 1 6378 45 6447 1 968 45 6448 75 45 6449 13 0 13 2 13 1 33 6450 18 3 43 1 43 2 1 6378 45 6451 1 973 45 6452 75 45 6453 13 0 13 2 13 1 33 6454 18 3 43 1 43 2 77 75 3 78 6379 15 885 19 1 115 78 6455 1 6455 45 6457 1 829 45 6458 1 4733 45 6459 13 0 13 2 13 1 33 6460 18 3 43 1 43 2 1 6455 45 6461 1 834 45 6462 1 6463 45 6464 13 0 13 2 13 1 33 6465 18 3 43 1 43 2 1 6455 45 6466 1 840 45 6467 1 6468 45 6469 13 0 13 2 13 1 33 6470 18 3 43 1 43 2 1 6455 45 6471 1 846 45 6472 75 45 6473 13 0 13 2 13 1 33 6474 18 3 43 1 43 2 1 6455 45 6475 1 906 45 6476 1 824 45 6477 13 0 13 2 13 1 33 6478 18 3 43 1 43 2 1 6455 45 6479 1 911 45 6480 1 4733 45 6481 13 0 13 2 13 1 33 6482 18 3 43 1 43 2 1 6455 45 6483 1 916 45 6484 1 918 45 6485 13 0 13 2 13 1 33 6486 18 3 43 1 43 2 1 6455 45 6487 1 922 45 6488 8 8 45 6489 13 0 13 2 13 1 33 6490 18 3 43 1 43 2 1 6455 45 6491 1 927 45 6492 75 45 6493 13 0 13 2 13 1 33 6494 18 3 43 1 43 2 1 6455 45 6495 1 932 45 6496 75 45 6497 13 0 13 2 13 1 33 6498 18 3 43 1 43 2 1 6455 45 6499 1 937 45 6500 1 5431 45 6501 13 0 13 2 13 1 33 6502 18 3 43 1 43 2 1 6455 45 6503 1 942 45 6504 1 5831 45 6505 13 0 13 2 13 1 33 6506 18 3 43 1 43 2 1 6455 45 6507 1 947 45 6508 1 6509 45 6510 13 0 13 2 13 1 33 6511 18 3 43 1 43 2 1 6455 45 6512 1 953 45 6513 1 1039 45 6514 13 0 13 2 13 1 33 6515 18 3 43 1 43 2 1 6455 45 6516 1 958 45 6517 75 45 6518 13 0 13 2 13 1 33 6519 18 3 43 1 43 2 1 6455 45 6520 1 963 45 6521 75 45 6522 13 0 13 2 13 1 33 6523 18 3 43 1 43 2 1 6455 45 6524 1 968 45 6525 75 45 6526 13 0 13 2 13 1 33 6527 18 3 43 1 43 2 1 6455 45 6528 1 973 45 6529 75 45 6530 13 0 13 2 13 1 33 6531 18 3 43 1 43 2 77 75 3 78 6456 15 885 19 1 115 78 6532 1 6532 45 6533 1 829 45 6534 1 5427 45 6535 13 0 13 2 13 1 33 6536 18 3 43 1 43 2 1 6532 45 6537 1 834 45 6538 1 6539 45 6540 13 0 13 2 13 1 33 6541 18 3 43 1 43 2 1 6532 45 6542 1 840 45 6543 1 6544 45 6545 13 0 13 2 13 1 33 6546 18 3 43 1 43 2 1 6532 45 6547 1 846 45 6548 75 45 6549 13 0 13 2 13 1 33 6550 18 3 43 1 43 2 1 6532 45 6551 1 906 45 6552 1 1000 45 6553 13 0 13 2 13 1 33 6554 18 3 43 1 43 2 1 6532 45 6555 1 911 45 6556 1 5427 45 6557 13 0 13 2 13 1 33 6558 18 3 43 1 43 2 1 6532 45 6559 1 916 45 6560 1 918 45 6561 13 0 13 2 13 1 33 6562 18 3 43 1 43 2 1 6532 45 6563 1 922 45 6564 8 9 45 6565 13 0 13 2 13 1 33 6566 18 3 43 1 43 2 1 6532 45 6567 1 927 45 6568 75 45 6569 13 0 13 2 13 1 33 6570 18 3 43 1 43 2 1 6532 45 6571 1 932 45 6572 75 45 6573 13 0 13 2 13 1 33 6574 18 3 43 1 43 2 1 6532 45 6575 1 937 45 6576 1 5428 45 6577 13 0 13 2 13 1 33 6578 18 3 43 1 43 2 1 6532 45 6579 1 942 45 6580 1 5884 45 6581 13 0 13 2 13 1 33 6582 18 3 43 1 43 2 1 6532 45 6583 1 947 45 6584 1 6585 45 6586 13 0 13 2 13 1 33 6587 18 3 43 1 43 2 1 6532 45 6588 1 953 45 6589 1 1039 45 6590 13 0 13 2 13 1 33 6591 18 3 43 1 43 2 1 6532 45 6592 1 958 45 6593 75 45 6594 13 0 13 2 13 1 33 6595 18 3 43 1 43 2 1 6532 45 6596 1 963 45 6597 75 45 6598 13 0 13 2 13 1 33 6599 18 3 43 1 43 2 1 6532 45 6600 1 968 45 6601 75 45 6602 13 0 13 2 13 1 33 6603 18 3 43 1 43 2 1 6532 45 6604 1 973 45 6605 75 45 6606 13 0 13 2 13 1 33 6607 18 3 43 1 43 2 15 6456 1 6532 17 122 15 6456 75 17 124 15 6379 1 6455 17 122 15 6379 1 6456 17 124 15 6301 1 6378 17 122 15 6301 1 6379 17 124 15 6224 1 6300 17 122 15 6224 1 6301 17 124 15 6147 1 6223 17 122 15 6147 1 6224 17 124 15 6070 1 6146 17 122 15 6070 1 6147 17 124 15 5992 1 6069 17 122 15 5992 1 6070 17 124 15 5972 1 5991 17 122 15 5972 1 5992 17 124 1 5947 45 5948 1 829 45 5949 1 5394 45 5950 13 0 13 2 13 1 33 5951 18 3 43 1 43 2 1 5947 45 5952 1 834 45 5953 1 5954 45 5955 13 0 13 2 13 1 33 5956 18 3 43 1 43 2 1 5947 45 5957 1 840 45 5958 1 5959 45 5960 13 0 13 2 13 1 33 5961 18 3 43 1 43 2 1 5947 45 5962 1 846 45 5963 75 45 5964 13 0 13 2 13 1 33 5965 18 3 43 1 43 2 1 5947 45 5966 1 851 45 5967 75 45 5968 13 0 13 2 13 1 33 5969 18 3 43 1 43 2 1 5947 45 5970 1 856 45 5971 1 5972 45 5973 13 0 13 2 13 1 33 5974 18 3 43 1 43 2 1 5947 45 5975 1 862 45 5976 75 45 5977 13 0 13 2 13 1 33 5978 18 3 43 1 43 2 15 5947 1 866 17 867 1 5947 45 5979 1 869 45 5980 75 45 5981 13 0 13 2 13 1 33 5982 18 3 43 1 43 2 1 5947 45 5983 1 874 45 5984 75 45 5985 13 0 13 2 13 1 33 5986 18 3 43 1 43 2 1 5947 45 5987 1 879 45 5988 1 824 45 5989 13 0 13 2 13 1 33 5990 18 3 43 1 43 2 15 5394 15 5947 14 824 19 3 113 15 6608 15 6609 15 6610 19 3 17 15 6611 15 6612 15 6613 19 3 17 15 6614 15 22 15 6615 15 6616 19 4 25 15 6614 14 26 77 15 27 19 4 25 15 6614 1 6623 12 19 2 44 15 6624 15 22 15 6625 15 6626 19 4 25 15 6624 14 26 77 15 48 19 4 25 15 6624 1 6627 12 19 2 44 1 6611 45 6628 1 60 45 6629 1 6624 45 6630 13 2 13 0 13 1 19 3 63 43 1 43 2 1 6611 45 6631 1 65 45 6632 1 6614 45 6633 13 2 13 0 13 1 19 3 63 43 1 43 2 15 65 15 22 15 6634 15 6635 19 4 25 15 65 77 15 6636 15 6637 1 6638 12 19 5 75 15 60 15 22 15 6639 15 6640 19 4 25 15 60 77 15 6641 15 6642 1 6643 12 19 5 75 15 6644 8 0 17 82 15 6644 15 22 15 6645 15 6646 19 4 25 15 6647 8 1 17 82 15 6647 15 22 15 6648 15 6649 19 4 25 15 6650 8 2 17 82 15 6650 15 22 15 6651 15 6652 19 4 25 15 6653 8 3 17 82 15 6653 15 22 15 6654 15 6655 19 4 25 15 6656 8 4 17 82 15 6656 15 22 15 6657 15 6658 19 4 25 15 6659 8 5 17 82 15 6659 15 22 15 6660 15 6661 19 4 25 15 6662 19 1 104 15 105 15 22 15 6663 15 6664 19 4 25 15 105 77 15 6665 15 6666 1 6667 12 19 5 75 15 114 19 1 115 78 6668 77 75 3 78 6670 15 125 19 1 115 78 6671 15 6671 15 126 9 0 15 6617 19 4 118 15 6671 15 126 9 1 9 0 19 4 118 77 75 3 78 6672 15 125 19 1 115 78 6673 15 6673 15 126 9 0 15 6618 19 4 118 15 6673 15 126 9 1 9 1 19 4 118 77 75 3 78 6674 15 125 19 1 115 78 6675 15 6675 15 126 9 0 15 6619 19 4 118 15 6675 15 126 9 1 9 2 19 4 118 77 75 3 78 6676 15 125 19 1 115 78 6677 15 6677 15 126 9 0 15 6620 19 4 118 15 6677 15 126 9 1 9 3 19 4 118 77 75 3 78 6678 15 125 19 1 115 78 6679 15 6679 15 126 9 0 15 6621 19 4 118 15 6679 15 126 9 1 9 4 19 4 118 77 75 3 78 6680 15 125 19 1 115 78 6681 15 6681 15 126 9 0 15 6622 19 4 118 15 6681 15 126 9 1 9 5 19 4 118 15 6680 1 6681 17 122 15 6680 75 17 124 15 6678 1 6679 17 122 15 6678 1 6680 17 124 15 6676 1 6677 17 122 15 6676 1 6678 17 124 15 6674 1 6675 17 122 15 6674 1 6676 17 124 15 6672 1 6673 17 122 15 6672 1 6674 17 124 15 6670 1 6671 17 122 15 6670 1 6672 17 124 15 6668 15 116 9 0 15 6611 19 4 118 15 6668 15 116 9 1 15 6669 19 4 118 15 6668 15 116 9 2 15 6670 19 4 118 15 6611 15 6668 14 112 19 3 113 15 6682 19 1 104 15 6683 15 6684 15 6685 19 3 17 15 6686 15 6687 15 6688 19 3 17 15 6689 15 22 15 6690 15 6691 19 4 25 15 6689 14 26 77 15 27 19 4 25 15 6689 1 6694 12 19 2 44 15 6695 15 22 15 6696 15 6697 19 4 25 15 6695 14 26 77 15 48 19 4 25 15 6695 1 6698 12 19 2 44 1 6686 45 6699 1 60 45 6700 1 6695 45 6701 13 2 13 0 13 1 19 3 63 43 1 43 2 1 6686 45 6702 1 65 45 6703 1 6689 45 6704 13 2 13 0 13 1 19 3 63 43 1 43 2 15 65 15 22 15 6705 15 6706 19 4 25 15 65 77 15 6707 15 6708 1 6709 12 19 5 75 15 60 15 22 15 6710 15 6711 19 4 25 15 60 77 15 6712 15 6713 1 6714 12 19 5 75 15 6715 8 0 17 82 15 6715 15 22 15 6716 15 6717 19 4 25 15 6718 8 1 17 82 15 6718 15 22 15 6719 15 6720 19 4 25 15 6721 19 1 104 15 105 15 22 15 6722 15 6723 19 4 25 15 105 77 15 6724 15 6725 1 6726 12 19 5 75 15 114 19 1 115 78 6727 77 75 3 78 6729 15 125 19 1 115 78 6730 15 6730 15 126 9 0 15 6692 19 4 118 15 6730 15 126 9 1 9 0 19 4 118 77 75 3 78 6731 15 125 19 1 115 78 6732 15 6732 15 126 9 0 15 6693 19 4 118 15 6732 15 126 9 1 9 1 19 4 118 15 6731 1 6732 17 122 15 6731 75 17 124 15 6729 1 6730 17 122 15 6729 1 6731 17 124 15 6727 15 116 9 0 15 6686 19 4 118 15 6727 15 116 9 1 15 6728 19 4 118 15 6727 15 116 9 2 15 6729 19 4 118 15 6686 15 6727 14 112 19 3 113 15 6733 19 1 104 15 6734 15 6735 15 6736 19 3 17 15 6737 15 6738 15 6739 19 3 17 15 6740 15 22 15 6741 15 6742 19 4 25 15 6740 14 26 77 15 27 19 4 25 15 6740 1 6747 12 19 2 44 15 6748 15 22 15 6749 15 6750 19 4 25 15 6748 14 26 77 15 48 19 4 25 15 6748 1 6751 12 19 2 44 1 6737 45 6752 1 60 45 6753 1 6748 45 6754 13 2 13 0 13 1 19 3 63 43 1 43 2 1 6737 45 6755 1 65 45 6756 1 6740 45 6757 13 2 13 0 13 1 19 3 63 43 1 43 2 15 65 15 22 15 6758 15 6759 19 4 25 15 65 77 15 6760 15 6761 1 6762 12 19 5 75 15 60 15 22 15 6763 15 6764 19 4 25 15 60 77 15 6765 15 6766 1 6767 12 19 5 75 15 6768 8 0 17 82 15 6768 15 22 15 6769 15 6770 19 4 25 15 6771 8 1 17 82 15 6771 15 22 15 6772 15 6773 19 4 25 15 6774 8 2 17 82 15 6774 15 22 15 6775 15 6776 19 4 25 15 6777 8 3 17 82 15 6777 15 22 15 6778 15 6779 19 4 25 15 6780 19 1 104 15 105 15 22 15 6781 15 6782 19 4 25 15 105 77 15 6783 15 6784 1 6785 12 19 5 75 15 114 19 1 115 78 6786 77 75 3 78 6788 15 125 19 1 115 78 6789 15 6789 15 126 9 0 15 6743 19 4 118 15 6789 15 126 9 1 9 0 19 4 118 77 75 3 78 6790 15 125 19 1 115 78 6791 15 6791 15 126 9 0 15 6744 19 4 118 15 6791 15 126 9 1 9 1 19 4 118 77 75 3 78 6792 15 125 19 1 115 78 6793 15 6793 15 126 9 0 15 6745 19 4 118 15 6793 15 126 9 1 9 2 19 4 118 77 75 3 78 6794 15 125 19 1 115 78 6795 15 6795 15 126 9 0 15 6746 19 4 118 15 6795 15 126 9 1 9 3 19 4 118 15 6794 1 6795 17 122 15 6794 75 17 124 15 6792 1 6793 17 122 15 6792 1 6794 17 124 15 6790 1 6791 17 122 15 6790 1 6792 17 124 15 6788 1 6789 17 122 15 6788 1 6790 17 124 15 6786 15 116 9 0 15 6737 19 4 118 15 6786 15 116 9 1 15 6787 19 4 118 15 6786 15 116 9 2 15 6788 19 4 118 15 6737 15 6786 14 112 19 3 113 15 6796 19 1 104 15 6797 15 6798 15 6799 19 3 17 15 6800 15 6801 15 6802 19 3 17 15 6803 15 22 15 6804 15 6805 19 4 25 15 6803 14 26 77 15 27 19 4 25 15 6803 1 6810 12 19 2 44 15 6811 15 22 15 6812 15 6813 19 4 25 15 6811 14 26 77 15 48 19 4 25 15 6811 1 6814 12 19 2 44 1 6800 45 6815 1 60 45 6816 1 6811 45 6817 13 2 13 0 13 1 19 3 63 43 1 43 2 1 6800 45 6818 1 65 45 6819 1 6803 45 6820 13 2 13 0 13 1 19 3 63 43 1 43 2 15 65 15 22 15 6821 15 6822 19 4 25 15 65 77 15 6823 15 6824 1 6825 12 19 5 75 15 60 15 22 15 6826 15 6827 19 4 25 15 60 77 15 6828 15 6829 1 6830 12 19 5 75 15 6831 8 0 17 82 15 6831 15 22 15 6832 15 6833 19 4 25 15 6834 8 1 17 82 15 6834 15 22 15 6835 15 6836 19 4 25 15 6837 8 2 17 82 15 6837 15 22 15 6838 15 6839 19 4 25 15 6840 8 3 17 82 15 6840 15 22 15 6841 15 6842 19 4 25 15 6843 19 1 104 15 105 15 22 15 6844 15 6845 19 4 25 15 105 77 15 6846 15 6847 1 6848 12 19 5 75 15 114 19 1 115 78 6849 77 75 3 78 6851 15 125 19 1 115 78 6852 15 6852 15 126 9 0 15 6806 19 4 118 15 6852 15 126 9 1 9 0 19 4 118 77 75 3 78 6853 15 125 19 1 115 78 6854 15 6854 15 126 9 0 15 6807 19 4 118 15 6854 15 126 9 1 9 1 19 4 118 77 75 3 78 6855 15 125 19 1 115 78 6856 15 6856 15 126 9 0 15 6808 19 4 118 15 6856 15 126 9 1 9 2 19 4 118 77 75 3 78 6857 15 125 19 1 115 78 6858 15 6858 15 126 9 0 15 6809 19 4 118 15 6858 15 126 9 1 9 3 19 4 118 15 6857 1 6858 17 122 15 6857 75 17 124 15 6855 1 6856 17 122 15 6855 1 6857 17 124 15 6853 1 6854 17 122 15 6853 1 6855 17 124 15 6851 1 6852 17 122 15 6851 1 6853 17 124 15 6849 15 116 9 0 15 6800 19 4 118 15 6849 15 116 9 1 15 6850 19 4 118 15 6849 15 116 9 2 15 6851 19 4 118 15 6800 15 6849 14 112 19 3 113 15 6859 19 1 104 15 196 15 6860 19 2 198 15 6861 15 6862 77 77 15 6863 15 6864 15 6865 15 204 77 77 15 6866 9 10 77 77 77 19 15 206 15 6867 15 22 15 6868 15 6869 19 4 25 15 6870 15 22 15 6871 15 6872 19 4 25 15 6870 14 26 77 15 6873 19 4 25 15 6861 19 1 117 78 6900 15 6870 1 6901 12 19 2 44 15 6870 15 253 15 6902 19 3 255 1 6903 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 6904 14 11 13 0 19 6 265 43 1 15 6903 15 266 1 6906 12 19 3 255 1 6907 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 6908 14 11 13 0 19 6 265 43 1 15 6907 15 266 1 6910 12 19 3 255 1 6911 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 6912 14 11 13 0 19 6 265 43 1 15 6911 15 266 1 6914 12 19 3 255 1 6915 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 6916 14 11 13 0 19 6 265 43 1 15 6915 15 266 1 6918 12 19 3 255 1 6919 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 6920 14 11 13 0 19 6 265 43 1 15 6919 15 266 1 6922 12 19 3 255 1 6923 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 6924 14 11 13 0 19 6 265 43 1 15 6923 15 266 1 6926 12 19 3 255 1 6927 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 6928 14 11 13 0 19 6 265 43 1 15 6927 15 266 1 6930 12 19 3 255 1 6931 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 6932 14 11 13 0 19 6 265 43 1 15 6931 15 266 1 6934 12 19 3 255 1 6935 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 6936 14 11 13 0 19 6 265 43 1 15 6935 15 266 1 6938 12 19 3 255 1 6939 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 6940 14 11 13 0 19 6 265 43 1 15 6939 15 266 1 6942 12 19 3 255 15 196 15 6943 19 2 198 15 6944 15 22 15 6945 15 6946 19 4 25 15 6944 14 26 77 15 6947 19 4 25 15 6944 1 6949 12 19 2 44 15 6944 15 253 15 6950 19 3 255 15 196 15 6951 19 2 198 15 6952 15 22 15 6953 15 6954 19 4 25 15 6952 14 26 77 15 6955 19 4 25 15 6952 1 6960 12 19 2 44 15 6952 15 253 15 6961 19 3 255 15 196 15 6962 19 2 198 15 6963 15 22 15 6964 15 6965 19 4 25 15 6963 14 26 77 15 6966 19 4 25 15 6963 1 6968 12 19 2 44 15 6963 15 253 15 6969 19 3 255 15 196 15 6970 19 2 198 15 6971 15 22 15 6972 15 6973 19 4 25 15 6971 14 26 77 15 6974 19 4 25 15 6971 1 6977 12 19 2 44 15 6971 15 253 15 6978 19 3 255 15 6979 15 22 15 6980 15 6981 19 4 25 15 6979 77 15 6982 15 6983 1 6984 12 19 5 75 15 6985 15 22 15 6986 15 6987 19 4 25 15 6985 77 15 6988 15 6989 1 6993 12 19 5 75 15 6861 15 6979 19 2 359 15 6994 19 1 104 15 6995 19 1 104 15 196 15 6996 19 2 198 15 6997 15 22 15 6998 15 6999 19 4 25 15 6997 14 26 77 15 7000 19 4 25 15 6997 1 7002 12 19 2 44 15 6997 15 253 15 7003 19 3 255 15 196 15 7004 19 2 198 15 7005 15 22 15 7006 15 7007 19 4 25 15 7005 14 26 77 15 7008 19 4 25 15 7005 1 7013 12 19 2 44 15 7005 15 253 15 7014 19 3 255 15 196 15 7015 19 2 198 15 7016 15 22 15 7017 15 7018 19 4 25 15 7016 14 26 77 15 7019 19 4 25 15 7016 1 7021 12 19 2 44 15 7016 15 253 15 7022 19 3 255 15 196 15 7023 19 2 198 15 7024 15 22 15 7025 15 7026 19 4 25 15 7024 14 26 77 15 7027 19 4 25 15 7024 1 7030 12 19 2 44 15 7024 15 253 15 7031 19 3 255 15 7032 15 22 15 7033 15 7034 19 4 25 15 7032 77 15 7035 15 7036 1 7037 12 19 5 75 15 7038 15 22 15 7039 15 7040 19 4 25 15 7038 77 15 7041 15 7042 1 7046 12 19 5 75 15 6861 15 7032 19 2 359 15 7047 19 1 104 15 7048 19 1 104 15 196 15 7049 19 2 198 15 7050 15 22 15 7051 15 7052 19 4 25 15 7050 14 26 77 15 7053 19 4 25 15 7050 1 7055 12 19 2 44 15 7050 15 253 15 7056 19 3 255 15 196 15 7057 19 2 198 15 7058 15 22 15 7059 15 7060 19 4 25 15 7058 14 26 77 15 7061 19 4 25 15 7058 1 7066 12 19 2 44 15 7058 15 253 15 7067 19 3 255 15 196 15 7068 19 2 198 15 7069 15 22 15 7070 15 7071 19 4 25 15 7069 14 26 77 15 7072 19 4 25 15 7069 1 7074 12 19 2 44 15 7069 15 253 15 7075 19 3 255 15 196 15 7076 19 2 198 15 7077 15 22 15 7078 15 7079 19 4 25 15 7077 14 26 77 15 7080 19 4 25 15 7077 1 7083 12 19 2 44 15 7077 15 253 15 7084 19 3 255 15 7085 15 22 15 7086 15 7087 19 4 25 15 7085 77 15 7088 15 7089 1 7090 12 19 5 75 15 7091 15 22 15 7092 15 7093 19 4 25 15 7091 77 15 7094 15 7095 1 7099 12 19 5 75 15 6861 15 7085 19 2 359 15 7100 19 1 104 15 7101 19 1 104 15 196 15 7102 19 2 198 15 7103 15 22 15 7104 15 7105 19 4 25 15 7103 14 26 77 15 7106 19 4 25 15 7103 1 7108 12 19 2 44 15 7103 15 253 15 7109 19 3 255 15 196 15 7110 19 2 198 15 7111 15 22 15 7112 15 7113 19 4 25 15 7111 14 26 77 15 7114 19 4 25 15 7111 1 7117 12 19 2 44 15 7111 15 253 15 7118 19 3 255 15 196 15 7119 19 2 198 15 7120 15 22 15 7121 15 7122 19 4 25 15 7120 14 26 77 15 7123 19 4 25 15 7120 1 7125 12 19 2 44 15 7120 15 253 15 7126 19 3 255 15 196 15 7127 19 2 198 15 7128 15 22 15 7129 15 7130 19 4 25 15 7128 14 26 77 15 7131 19 4 25 15 7128 1 7132 12 19 2 44 15 7128 15 253 15 7133 19 3 255 15 7134 15 22 15 7135 15 7136 19 4 25 15 7134 77 15 7137 15 7138 1 7139 12 19 5 75 15 7140 15 22 15 7141 15 7142 19 4 25 15 7140 77 15 7143 15 7144 1 7148 12 19 5 75 15 6861 15 7134 19 2 359 15 7149 19 1 104 15 7150 19 1 104 15 196 15 7151 19 2 198 15 7152 15 22 15 7153 15 7154 19 4 25 15 7152 14 26 77 15 7155 19 4 25 15 7152 1 7157 12 19 2 44 15 7152 15 253 15 7158 19 3 255 15 196 15 7159 19 2 198 15 7160 15 22 15 7161 15 7162 19 4 25 15 7160 14 26 77 15 7163 19 4 25 15 7160 1 7166 12 19 2 44 15 7160 15 253 15 7167 19 3 255 15 196 15 7168 19 2 198 15 7169 15 22 15 7170 15 7171 19 4 25 15 7169 14 26 77 15 7172 19 4 25 15 7169 1 7174 12 19 2 44 15 7169 15 253 15 7175 19 3 255 15 196 15 7176 19 2 198 15 7177 15 22 15 7178 15 7179 19 4 25 15 7177 14 26 77 15 7180 19 4 25 15 7177 1 7181 12 19 2 44 15 7177 15 253 15 7182 19 3 255 15 7183 15 22 15 7184 15 7185 19 4 25 15 7183 77 15 7186 15 7187 1 7188 12 19 5 75 15 7189 15 22 15 7190 15 7191 19 4 25 15 7189 77 15 7192 15 7193 1 7197 12 19 5 75 15 6861 15 7183 19 2 359 15 7198 19 1 104 15 7199 19 1 104 15 196 15 7200 19 2 198 15 7201 15 22 15 7202 15 7203 19 4 25 15 7201 14 26 77 15 7204 19 4 25 15 7201 1 7206 12 19 2 44 15 7201 15 253 15 7207 19 3 255 15 196 15 7208 19 2 198 15 7209 15 22 15 7210 15 7211 19 4 25 15 7209 14 26 77 15 7212 19 4 25 15 7209 1 7217 12 19 2 44 15 7209 15 253 15 7218 19 3 255 15 196 15 7219 19 2 198 15 7220 15 22 15 7221 15 7222 19 4 25 15 7220 14 26 77 15 7223 19 4 25 15 7220 1 7225 12 19 2 44 15 7220 15 253 15 7226 19 3 255 15 196 15 7227 19 2 198 15 7228 15 22 15 7229 15 7230 19 4 25 15 7228 14 26 77 15 7231 19 4 25 15 7228 1 7234 12 19 2 44 15 7228 15 253 15 7235 19 3 255 15 7236 15 22 15 7237 15 7238 19 4 25 15 7236 77 15 7239 15 7240 1 7241 12 19 5 75 15 7242 15 22 15 7243 15 7244 19 4 25 15 7242 77 15 7245 15 7246 1 7250 12 19 5 75 15 6861 15 7236 19 2 359 15 7251 19 1 104 15 7252 19 1 104 15 196 15 7253 19 2 198 15 7254 15 22 15 7255 15 7256 19 4 25 15 7254 14 26 77 15 7257 19 4 25 15 7254 1 7259 12 19 2 44 15 7254 15 253 15 7260 19 3 255 15 196 15 7261 19 2 198 15 7262 15 22 15 7263 15 7264 19 4 25 15 7262 14 26 77 15 7265 19 4 25 15 7262 1 7270 12 19 2 44 15 7262 15 253 15 7271 19 3 255 15 196 15 7272 19 2 198 15 7273 15 22 15 7274 15 7275 19 4 25 15 7273 14 26 77 15 7276 19 4 25 15 7273 1 7278 12 19 2 44 15 7273 15 253 15 7279 19 3 255 15 196 15 7280 19 2 198 15 7281 15 22 15 7282 15 7283 19 4 25 15 7281 14 26 77 15 7284 19 4 25 15 7281 1 7287 12 19 2 44 15 7281 15 253 15 7288 19 3 255 15 7289 15 22 15 7290 15 7291 19 4 25 15 7289 77 15 7292 15 7293 1 7294 12 19 5 75 15 7295 15 22 15 7296 15 7297 19 4 25 15 7295 77 15 7298 15 7299 1 7303 12 19 5 75 15 6861 15 7289 19 2 359 15 7304 19 1 104 15 7305 19 1 104 15 196 15 7306 19 2 198 15 7307 15 22 15 7308 15 7309 19 4 25 15 7307 14 26 77 15 7310 19 4 25 15 7307 1 7312 12 19 2 44 15 7307 15 253 15 7313 19 3 255 15 196 15 7314 19 2 198 15 7315 15 22 15 7316 15 7317 19 4 25 15 7315 14 26 77 15 7318 19 4 25 15 7315 1 7323 12 19 2 44 15 7315 15 253 15 7324 19 3 255 15 196 15 7325 19 2 198 15 7326 15 22 15 7327 15 7328 19 4 25 15 7326 14 26 77 15 7329 19 4 25 15 7326 1 7331 12 19 2 44 15 7326 15 253 15 7332 19 3 255 15 196 15 7333 19 2 198 15 7334 15 22 15 7335 15 7336 19 4 25 15 7334 14 26 77 15 7337 19 4 25 15 7334 1 7340 12 19 2 44 15 7334 15 253 15 7341 19 3 255 15 7342 15 22 15 7343 15 7344 19 4 25 15 7342 77 15 7345 15 7346 1 7347 12 19 5 75 15 7348 15 22 15 7349 15 7350 19 4 25 15 7348 77 15 7351 15 7352 1 7356 12 19 5 75 15 6861 15 7342 19 2 359 15 7357 19 1 104 15 7358 19 1 104 15 196 15 7359 19 2 198 15 7360 15 22 15 7361 15 7362 19 4 25 15 7360 14 26 77 15 7363 19 4 25 15 7360 1 7365 12 19 2 44 15 7360 15 253 15 7366 19 3 255 15 196 15 7367 19 2 198 15 7368 15 22 15 7369 15 7370 19 4 25 15 7368 14 26 77 15 7371 19 4 25 15 7368 1 7374 12 19 2 44 15 7368 15 253 15 7375 19 3 255 15 196 15 7376 19 2 198 15 7377 15 22 15 7378 15 7379 19 4 25 15 7377 14 26 77 15 7380 19 4 25 15 7377 1 7382 12 19 2 44 15 7377 15 253 15 7383 19 3 255 15 196 15 7384 19 2 198 15 7385 15 22 15 7386 15 7387 19 4 25 15 7385 14 26 77 15 7388 19 4 25 15 7385 1 7389 12 19 2 44 15 7385 15 253 15 7390 19 3 255 15 7391 15 22 15 7392 15 7393 19 4 25 15 7391 77 15 7394 15 7395 1 7396 12 19 5 75 15 7397 15 22 15 7398 15 7399 19 4 25 15 7397 77 15 7400 15 7401 1 7405 12 19 5 75 15 6861 15 7391 19 2 359 15 7406 19 1 104 15 7407 19 1 104 15 196 15 7408 19 2 198 15 7409 15 22 15 7410 15 7411 19 4 25 15 7409 14 26 77 15 7412 19 4 25 15 7409 1 7414 12 19 2 44 15 7409 15 253 15 7415 19 3 255 15 196 15 7416 19 2 198 15 7417 15 22 15 7418 15 7419 19 4 25 15 7417 14 26 77 15 7420 19 4 25 15 7417 1 7423 12 19 2 44 15 7417 15 253 15 7424 19 3 255 15 196 15 7425 19 2 198 15 7426 15 22 15 7427 15 7428 19 4 25 15 7426 14 26 77 15 7429 19 4 25 15 7426 1 7431 12 19 2 44 15 7426 15 253 15 7432 19 3 255 15 196 15 7433 19 2 198 15 7434 15 22 15 7435 15 7436 19 4 25 15 7434 14 26 77 15 7437 19 4 25 15 7434 1 7438 12 19 2 44 15 7434 15 253 15 7439 19 3 255 15 7440 15 22 15 7441 15 7442 19 4 25 15 7440 77 15 7443 15 7444 1 7445 12 19 5 75 15 7446 15 22 15 7447 15 7448 19 4 25 15 7446 77 15 7449 15 7450 1 7454 12 19 5 75 15 6861 15 7440 19 2 359 15 7455 19 1 104 15 7456 19 1 104 15 196 15 7457 19 2 198 15 7458 15 22 15 7459 15 7460 19 4 25 15 7458 14 26 77 15 7461 19 4 25 15 7458 1 7494 12 19 2 44 15 7458 15 253 15 7495 19 3 255 15 7496 15 22 15 7497 15 7498 19 4 25 15 7496 14 26 77 15 7499 19 4 25 15 7496 1 7500 12 19 2 44 15 7501 19 1 104 15 815 15 22 15 7502 15 7503 19 4 25 15 815 77 15 7504 15 7505 1 7508 12 19 5 75 15 825 19 1 115 45 826 15 824 13 0 14 824 19 3 113 10 0 43 1 78 7509 77 75 3 78 7534 15 885 19 1 115 78 7553 1 7553 45 7555 1 829 45 7556 1 241 45 7557 13 0 13 2 13 1 33 7558 18 3 43 1 43 2 1 7553 45 7559 1 834 45 7560 1 7561 45 7562 13 0 13 2 13 1 33 7563 18 3 43 1 43 2 1 7553 45 7564 1 840 45 7565 1 7566 45 7567 13 0 13 2 13 1 33 7568 18 3 43 1 43 2 1 7553 45 7569 1 846 45 7570 75 45 7571 13 0 13 2 13 1 33 7572 18 3 43 1 43 2 1 7553 45 7573 1 906 45 7574 1 1000 45 7575 13 0 13 2 13 1 33 7576 18 3 43 1 43 2 1 7553 45 7577 1 911 45 7578 1 241 45 7579 13 0 13 2 13 1 33 7580 18 3 43 1 43 2 1 7553 45 7581 1 916 45 7582 1 918 45 7583 13 0 13 2 13 1 33 7584 18 3 43 1 43 2 1 7553 45 7585 1 922 45 7586 8 1 45 7587 13 0 13 2 13 1 33 7588 18 3 43 1 43 2 1 7553 45 7589 1 927 45 7590 75 45 7591 13 0 13 2 13 1 33 7592 18 3 43 1 43 2 1 7553 45 7593 1 932 45 7594 75 45 7595 13 0 13 2 13 1 33 7596 18 3 43 1 43 2 1 7553 45 7597 1 937 45 7598 1 6897 45 7599 13 0 13 2 13 1 33 7600 18 3 43 1 43 2 1 7553 45 7601 1 942 45 7602 1 6979 45 7603 13 0 13 2 13 1 33 7604 18 3 43 1 43 2 1 7553 45 7605 1 947 45 7606 1 7607 45 7608 13 0 13 2 13 1 33 7609 18 3 43 1 43 2 1 7553 45 7610 1 953 45 7611 1 1039 45 7612 13 0 13 2 13 1 33 7613 18 3 43 1 43 2 1 7553 45 7614 1 958 45 7615 75 45 7616 13 0 13 2 13 1 33 7617 18 3 43 1 43 2 1 7553 45 7618 1 963 45 7619 75 45 7620 13 0 13 2 13 1 33 7621 18 3 43 1 43 2 1 7553 45 7622 1 968 45 7623 75 45 7624 13 0 13 2 13 1 33 7625 18 3 43 1 43 2 1 7553 45 7626 1 973 45 7627 75 45 7628 13 0 13 2 13 1 33 7629 18 3 43 1 43 2 77 75 3 78 7554 15 885 19 1 115 78 7630 1 7630 45 7632 1 829 45 7633 1 6611 45 7634 13 0 13 2 13 1 33 7635 18 3 43 1 43 2 1 7630 45 7636 1 834 45 7637 1 7638 45 7639 13 0 13 2 13 1 33 7640 18 3 43 1 43 2 1 7630 45 7641 1 840 45 7642 1 7643 45 7644 13 0 13 2 13 1 33 7645 18 3 43 1 43 2 1 7630 45 7646 1 846 45 7647 75 45 7648 13 0 13 2 13 1 33 7649 18 3 43 1 43 2 1 7630 45 7650 1 906 45 7651 1 112 45 7652 13 0 13 2 13 1 33 7653 18 3 43 1 43 2 1 7630 45 7654 1 911 45 7655 1 6608 45 7656 13 0 13 2 13 1 33 7657 18 3 43 1 43 2 1 7630 45 7658 1 916 45 7659 1 918 45 7660 13 0 13 2 13 1 33 7661 18 3 43 1 43 2 1 7630 45 7662 1 922 45 7663 8 2 45 7664 13 0 13 2 13 1 33 7665 18 3 43 1 43 2 1 7630 45 7666 1 927 45 7667 75 45 7668 13 0 13 2 13 1 33 7669 18 3 43 1 43 2 1 7630 45 7670 1 932 45 7671 75 45 7672 13 0 13 2 13 1 33 7673 18 3 43 1 43 2 1 7630 45 7674 1 937 45 7675 1 6896 45 7676 13 0 13 2 13 1 33 7677 18 3 43 1 43 2 1 7630 45 7678 1 942 45 7679 1 7032 45 7680 13 0 13 2 13 1 33 7681 18 3 43 1 43 2 1 7630 45 7682 1 947 45 7683 1 7684 45 7685 13 0 13 2 13 1 33 7686 18 3 43 1 43 2 1 7630 45 7687 1 953 45 7688 1 6617 45 7689 13 0 13 2 13 1 33 7690 18 3 43 1 43 2 1 7630 45 7691 1 958 45 7692 75 45 7693 13 0 13 2 13 1 33 7694 18 3 43 1 43 2 1 7630 45 7695 1 963 45 7696 75 45 7697 13 0 13 2 13 1 33 7698 18 3 43 1 43 2 1 7630 45 7699 1 968 45 7700 75 45 7701 13 0 13 2 13 1 33 7702 18 3 43 1 43 2 1 7630 45 7703 1 973 45 7704 75 45 7705 13 0 13 2 13 1 33 7706 18 3 43 1 43 2 77 75 3 78 7631 15 885 19 1 115 78 7707 1 7707 45 7709 1 829 45 7710 1 241 45 7711 13 0 13 2 13 1 33 7712 18 3 43 1 43 2 1 7707 45 7713 1 834 45 7714 1 7715 45 7716 13 0 13 2 13 1 33 7717 18 3 43 1 43 2 1 7707 45 7718 1 840 45 7719 1 7720 45 7721 13 0 13 2 13 1 33 7722 18 3 43 1 43 2 1 7707 45 7723 1 846 45 7724 75 45 7725 13 0 13 2 13 1 33 7726 18 3 43 1 43 2 1 7707 45 7727 1 906 45 7728 1 1000 45 7729 13 0 13 2 13 1 33 7730 18 3 43 1 43 2 1 7707 45 7731 1 911 45 7732 1 241 45 7733 13 0 13 2 13 1 33 7734 18 3 43 1 43 2 1 7707 45 7735 1 916 45 7736 1 918 45 7737 13 0 13 2 13 1 33 7738 18 3 43 1 43 2 1 7707 45 7739 1 922 45 7740 8 3 45 7741 13 0 13 2 13 1 33 7742 18 3 43 1 43 2 1 7707 45 7743 1 927 45 7744 75 45 7745 13 0 13 2 13 1 33 7746 18 3 43 1 43 2 1 7707 45 7747 1 932 45 7748 75 45 7749 13 0 13 2 13 1 33 7750 18 3 43 1 43 2 1 7707 45 7751 1 937 45 7752 1 6895 45 7753 13 0 13 2 13 1 33 7754 18 3 43 1 43 2 1 7707 45 7755 1 942 45 7756 1 7085 45 7757 13 0 13 2 13 1 33 7758 18 3 43 1 43 2 1 7707 45 7759 1 947 45 7760 1 7761 45 7762 13 0 13 2 13 1 33 7763 18 3 43 1 43 2 1 7707 45 7764 1 953 45 7765 1 1039 45 7766 13 0 13 2 13 1 33 7767 18 3 43 1 43 2 1 7707 45 7768 1 958 45 7769 75 45 7770 13 0 13 2 13 1 33 7771 18 3 43 1 43 2 1 7707 45 7772 1 963 45 7773 75 45 7774 13 0 13 2 13 1 33 7775 18 3 43 1 43 2 1 7707 45 7776 1 968 45 7777 75 45 7778 13 0 13 2 13 1 33 7779 18 3 43 1 43 2 1 7707 45 7780 1 973 45 7781 75 45 7782 13 0 13 2 13 1 33 7783 18 3 43 1 43 2 77 75 3 78 7708 15 885 19 1 115 78 7784 1 7784 45 7786 1 829 45 7787 1 981 45 7788 13 0 13 2 13 1 33 7789 18 3 43 1 43 2 1 7784 45 7790 1 834 45 7791 1 7792 45 7793 13 0 13 2 13 1 33 7794 18 3 43 1 43 2 1 7784 45 7795 1 840 45 7796 1 7797 45 7798 13 0 13 2 13 1 33 7799 18 3 43 1 43 2 1 7784 45 7800 1 846 45 7801 75 45 7802 13 0 13 2 13 1 33 7803 18 3 43 1 43 2 1 7784 45 7804 1 906 45 7805 1 1000 45 7806 13 0 13 2 13 1 33 7807 18 3 43 1 43 2 1 7784 45 7808 1 911 45 7809 1 981 45 7810 13 0 13 2 13 1 33 7811 18 3 43 1 43 2 1 7784 45 7812 1 916 45 7813 1 918 45 7814 13 0 13 2 13 1 33 7815 18 3 43 1 43 2 1 7784 45 7816 1 922 45 7817 8 4 45 7818 13 0 13 2 13 1 33 7819 18 3 43 1 43 2 1 7784 45 7820 1 927 45 7821 75 45 7822 13 0 13 2 13 1 33 7823 18 3 43 1 43 2 1 7784 45 7824 1 932 45 7825 75 45 7826 13 0 13 2 13 1 33 7827 18 3 43 1 43 2 1 7784 45 7828 1 937 45 7829 1 7830 45 7831 13 0 13 2 13 1 33 7832 18 3 43 1 43 2 1 7784 45 7833 1 942 45 7834 1 7134 45 7835 13 0 13 2 13 1 33 7836 18 3 43 1 43 2 1 7784 45 7837 1 947 45 7838 1 7839 45 7840 13 0 13 2 13 1 33 7841 18 3 43 1 43 2 1 7784 45 7842 1 953 45 7843 1 1039 45 7844 13 0 13 2 13 1 33 7845 18 3 43 1 43 2 1 7784 45 7846 1 958 45 7847 75 45 7848 13 0 13 2 13 1 33 7849 18 3 43 1 43 2 1 7784 45 7850 1 963 45 7851 75 45 7852 13 0 13 2 13 1 33 7853 18 3 43 1 43 2 1 7784 45 7854 1 968 45 7855 75 45 7856 13 0 13 2 13 1 33 7857 18 3 43 1 43 2 1 7784 45 7858 1 973 45 7859 8 0 45 7860 13 0 13 2 13 1 33 7861 18 3 43 1 43 2 77 75 3 78 7785 15 885 19 1 115 78 7862 1 7862 45 7864 1 829 45 7865 1 981 45 7866 13 0 13 2 13 1 33 7867 18 3 43 1 43 2 1 7862 45 7868 1 834 45 7869 1 7870 45 7871 13 0 13 2 13 1 33 7872 18 3 43 1 43 2 1 7862 45 7873 1 840 45 7874 1 7875 45 7876 13 0 13 2 13 1 33 7877 18 3 43 1 43 2 1 7862 45 7878 1 846 45 7879 75 45 7880 13 0 13 2 13 1 33 7881 18 3 43 1 43 2 1 7862 45 7882 1 906 45 7883 1 1000 45 7884 13 0 13 2 13 1 33 7885 18 3 43 1 43 2 1 7862 45 7886 1 911 45 7887 1 981 45 7888 13 0 13 2 13 1 33 7889 18 3 43 1 43 2 1 7862 45 7890 1 916 45 7891 1 918 45 7892 13 0 13 2 13 1 33 7893 18 3 43 1 43 2 1 7862 45 7894 1 922 45 7895 8 5 45 7896 13 0 13 2 13 1 33 7897 18 3 43 1 43 2 1 7862 45 7898 1 927 45 7899 75 45 7900 13 0 13 2 13 1 33 7901 18 3 43 1 43 2 1 7862 45 7902 1 932 45 7903 75 45 7904 13 0 13 2 13 1 33 7905 18 3 43 1 43 2 1 7862 45 7906 1 937 45 7907 1 7908 45 7909 13 0 13 2 13 1 33 7910 18 3 43 1 43 2 1 7862 45 7911 1 942 45 7912 1 7183 45 7913 13 0 13 2 13 1 33 7914 18 3 43 1 43 2 1 7862 45 7915 1 947 45 7916 1 7917 45 7918 13 0 13 2 13 1 33 7919 18 3 43 1 43 2 1 7862 45 7920 1 953 45 7921 1 1039 45 7922 13 0 13 2 13 1 33 7923 18 3 43 1 43 2 1 7862 45 7924 1 958 45 7925 75 45 7926 13 0 13 2 13 1 33 7927 18 3 43 1 43 2 1 7862 45 7928 1 963 45 7929 75 45 7930 13 0 13 2 13 1 33 7931 18 3 43 1 43 2 1 7862 45 7932 1 968 45 7933 75 45 7934 13 0 13 2 13 1 33 7935 18 3 43 1 43 2 1 7862 45 7936 1 973 45 7937 8 1 45 7938 13 0 13 2 13 1 33 7939 18 3 43 1 43 2 77 75 3 78 7863 15 885 19 1 115 78 7940 1 7940 45 7942 1 829 45 7943 1 6686 45 7944 13 0 13 2 13 1 33 7945 18 3 43 1 43 2 1 7940 45 7946 1 834 45 7947 1 7948 45 7949 13 0 13 2 13 1 33 7950 18 3 43 1 43 2 1 7940 45 7951 1 840 45 7952 1 7953 45 7954 13 0 13 2 13 1 33 7955 18 3 43 1 43 2 1 7940 45 7956 1 846 45 7957 75 45 7958 13 0 13 2 13 1 33 7959 18 3 43 1 43 2 1 7940 45 7960 1 906 45 7961 1 112 45 7962 13 0 13 2 13 1 33 7963 18 3 43 1 43 2 1 7940 45 7964 1 911 45 7965 1 6683 45 7966 13 0 13 2 13 1 33 7967 18 3 43 1 43 2 1 7940 45 7968 1 916 45 7969 1 918 45 7970 13 0 13 2 13 1 33 7971 18 3 43 1 43 2 1 7940 45 7972 1 922 45 7973 8 6 45 7974 13 0 13 2 13 1 33 7975 18 3 43 1 43 2 1 7940 45 7976 1 927 45 7977 75 45 7978 13 0 13 2 13 1 33 7979 18 3 43 1 43 2 1 7940 45 7980 1 932 45 7981 75 45 7982 13 0 13 2 13 1 33 7983 18 3 43 1 43 2 1 7940 45 7984 1 937 45 7985 1 6894 45 7986 13 0 13 2 13 1 33 7987 18 3 43 1 43 2 1 7940 45 7988 1 942 45 7989 1 7236 45 7990 13 0 13 2 13 1 33 7991 18 3 43 1 43 2 1 7940 45 7992 1 947 45 7993 1 7994 45 7995 13 0 13 2 13 1 33 7996 18 3 43 1 43 2 1 7940 45 7997 1 953 45 7998 1 6692 45 7999 13 0 13 2 13 1 33 8000 18 3 43 1 43 2 1 7940 45 8001 1 958 45 8002 75 45 8003 13 0 13 2 13 1 33 8004 18 3 43 1 43 2 1 7940 45 8005 1 963 45 8006 75 45 8007 13 0 13 2 13 1 33 8008 18 3 43 1 43 2 1 7940 45 8009 1 968 45 8010 75 45 8011 13 0 13 2 13 1 33 8012 18 3 43 1 43 2 1 7940 45 8013 1 973 45 8014 75 45 8015 13 0 13 2 13 1 33 8016 18 3 43 1 43 2 77 75 3 78 7941 15 885 19 1 115 78 8017 1 8017 45 8019 1 829 45 8020 1 6737 45 8021 13 0 13 2 13 1 33 8022 18 3 43 1 43 2 1 8017 45 8023 1 834 45 8024 1 8025 45 8026 13 0 13 2 13 1 33 8027 18 3 43 1 43 2 1 8017 45 8028 1 840 45 8029 1 8030 45 8031 13 0 13 2 13 1 33 8032 18 3 43 1 43 2 1 8017 45 8033 1 846 45 8034 75 45 8035 13 0 13 2 13 1 33 8036 18 3 43 1 43 2 1 8017 45 8037 1 906 45 8038 1 112 45 8039 13 0 13 2 13 1 33 8040 18 3 43 1 43 2 1 8017 45 8041 1 911 45 8042 1 6734 45 8043 13 0 13 2 13 1 33 8044 18 3 43 1 43 2 1 8017 45 8045 1 916 45 8046 1 918 45 8047 13 0 13 2 13 1 33 8048 18 3 43 1 43 2 1 8017 45 8049 1 922 45 8050 8 7 45 8051 13 0 13 2 13 1 33 8052 18 3 43 1 43 2 1 8017 45 8053 1 927 45 8054 75 45 8055 13 0 13 2 13 1 33 8056 18 3 43 1 43 2 1 8017 45 8057 1 932 45 8058 75 45 8059 13 0 13 2 13 1 33 8060 18 3 43 1 43 2 1 8017 45 8061 1 937 45 8062 1 6893 45 8063 13 0 13 2 13 1 33 8064 18 3 43 1 43 2 1 8017 45 8065 1 942 45 8066 1 7289 45 8067 13 0 13 2 13 1 33 8068 18 3 43 1 43 2 1 8017 45 8069 1 947 45 8070 1 8071 45 8072 13 0 13 2 13 1 33 8073 18 3 43 1 43 2 1 8017 45 8074 1 953 45 8075 1 6743 45 8076 13 0 13 2 13 1 33 8077 18 3 43 1 43 2 1 8017 45 8078 1 958 45 8079 75 45 8080 13 0 13 2 13 1 33 8081 18 3 43 1 43 2 1 8017 45 8082 1 963 45 8083 75 45 8084 13 0 13 2 13 1 33 8085 18 3 43 1 43 2 1 8017 45 8086 1 968 45 8087 75 45 8088 13 0 13 2 13 1 33 8089 18 3 43 1 43 2 1 8017 45 8090 1 973 45 8091 75 45 8092 13 0 13 2 13 1 33 8093 18 3 43 1 43 2 77 75 3 78 8018 15 885 19 1 115 78 8094 1 8094 45 8096 1 829 45 8097 1 6800 45 8098 13 0 13 2 13 1 33 8099 18 3 43 1 43 2 1 8094 45 8100 1 834 45 8101 1 8102 45 8103 13 0 13 2 13 1 33 8104 18 3 43 1 43 2 1 8094 45 8105 1 840 45 8106 1 8107 45 8108 13 0 13 2 13 1 33 8109 18 3 43 1 43 2 1 8094 45 8110 1 846 45 8111 75 45 8112 13 0 13 2 13 1 33 8113 18 3 43 1 43 2 1 8094 45 8114 1 906 45 8115 1 112 45 8116 13 0 13 2 13 1 33 8117 18 3 43 1 43 2 1 8094 45 8118 1 911 45 8119 1 6797 45 8120 13 0 13 2 13 1 33 8121 18 3 43 1 43 2 1 8094 45 8122 1 916 45 8123 1 918 45 8124 13 0 13 2 13 1 33 8125 18 3 43 1 43 2 1 8094 45 8126 1 922 45 8127 8 8 45 8128 13 0 13 2 13 1 33 8129 18 3 43 1 43 2 1 8094 45 8130 1 927 45 8131 75 45 8132 13 0 13 2 13 1 33 8133 18 3 43 1 43 2 1 8094 45 8134 1 932 45 8135 75 45 8136 13 0 13 2 13 1 33 8137 18 3 43 1 43 2 1 8094 45 8138 1 937 45 8139 1 6892 45 8140 13 0 13 2 13 1 33 8141 18 3 43 1 43 2 1 8094 45 8142 1 942 45 8143 1 7342 45 8144 13 0 13 2 13 1 33 8145 18 3 43 1 43 2 1 8094 45 8146 1 947 45 8147 1 8148 45 8149 13 0 13 2 13 1 33 8150 18 3 43 1 43 2 1 8094 45 8151 1 953 45 8152 1 6806 45 8153 13 0 13 2 13 1 33 8154 18 3 43 1 43 2 1 8094 45 8155 1 958 45 8156 75 45 8157 13 0 13 2 13 1 33 8158 18 3 43 1 43 2 1 8094 45 8159 1 963 45 8160 75 45 8161 13 0 13 2 13 1 33 8162 18 3 43 1 43 2 1 8094 45 8163 1 968 45 8164 75 45 8165 13 0 13 2 13 1 33 8166 18 3 43 1 43 2 1 8094 45 8167 1 973 45 8168 75 45 8169 13 0 13 2 13 1 33 8170 18 3 43 1 43 2 77 75 3 78 8095 15 885 19 1 115 78 8171 1 8171 45 8173 1 829 45 8174 1 981 45 8175 13 0 13 2 13 1 33 8176 18 3 43 1 43 2 1 8171 45 8177 1 834 45 8178 1 8179 45 8180 13 0 13 2 13 1 33 8181 18 3 43 1 43 2 1 8171 45 8182 1 840 45 8183 1 8184 45 8185 13 0 13 2 13 1 33 8186 18 3 43 1 43 2 1 8171 45 8187 1 846 45 8188 75 45 8189 13 0 13 2 13 1 33 8190 18 3 43 1 43 2 1 8171 45 8191 1 906 45 8192 1 1000 45 8193 13 0 13 2 13 1 33 8194 18 3 43 1 43 2 1 8171 45 8195 1 911 45 8196 1 981 45 8197 13 0 13 2 13 1 33 8198 18 3 43 1 43 2 1 8171 45 8199 1 916 45 8200 1 918 45 8201 13 0 13 2 13 1 33 8202 18 3 43 1 43 2 1 8171 45 8203 1 922 45 8204 8 9 45 8205 13 0 13 2 13 1 33 8206 18 3 43 1 43 2 1 8171 45 8207 1 927 45 8208 75 45 8209 13 0 13 2 13 1 33 8210 18 3 43 1 43 2 1 8171 45 8211 1 932 45 8212 75 45 8213 13 0 13 2 13 1 33 8214 18 3 43 1 43 2 1 8171 45 8215 1 937 45 8216 1 8217 45 8218 13 0 13 2 13 1 33 8219 18 3 43 1 43 2 1 8171 45 8220 1 942 45 8221 1 7391 45 8222 13 0 13 2 13 1 33 8223 18 3 43 1 43 2 1 8171 45 8224 1 947 45 8225 1 8226 45 8227 13 0 13 2 13 1 33 8228 18 3 43 1 43 2 1 8171 45 8229 1 953 45 8230 1 1039 45 8231 13 0 13 2 13 1 33 8232 18 3 43 1 43 2 1 8171 45 8233 1 958 45 8234 75 45 8235 13 0 13 2 13 1 33 8236 18 3 43 1 43 2 1 8171 45 8237 1 963 45 8238 75 45 8239 13 0 13 2 13 1 33 8240 18 3 43 1 43 2 1 8171 45 8241 1 968 45 8242 75 45 8243 13 0 13 2 13 1 33 8244 18 3 43 1 43 2 1 8171 45 8245 1 973 45 8246 8 2 45 8247 13 0 13 2 13 1 33 8248 18 3 43 1 43 2 77 75 3 78 8172 15 885 19 1 115 78 8249 1 8249 45 8250 1 829 45 8251 1 981 45 8252 13 0 13 2 13 1 33 8253 18 3 43 1 43 2 1 8249 45 8254 1 834 45 8255 1 8256 45 8257 13 0 13 2 13 1 33 8258 18 3 43 1 43 2 1 8249 45 8259 1 840 45 8260 1 8261 45 8262 13 0 13 2 13 1 33 8263 18 3 43 1 43 2 1 8249 45 8264 1 846 45 8265 75 45 8266 13 0 13 2 13 1 33 8267 18 3 43 1 43 2 1 8249 45 8268 1 906 45 8269 1 1000 45 8270 13 0 13 2 13 1 33 8271 18 3 43 1 43 2 1 8249 45 8272 1 911 45 8273 1 981 45 8274 13 0 13 2 13 1 33 8275 18 3 43 1 43 2 1 8249 45 8276 1 916 45 8277 1 918 45 8278 13 0 13 2 13 1 33 8279 18 3 43 1 43 2 1 8249 45 8280 1 922 45 8281 8 10 45 8282 13 0 13 2 13 1 33 8283 18 3 43 1 43 2 1 8249 45 8284 1 927 45 8285 75 45 8286 13 0 13 2 13 1 33 8287 18 3 43 1 43 2 1 8249 45 8288 1 932 45 8289 75 45 8290 13 0 13 2 13 1 33 8291 18 3 43 1 43 2 1 8249 45 8292 1 937 45 8293 1 8294 45 8295 13 0 13 2 13 1 33 8296 18 3 43 1 43 2 1 8249 45 8297 1 942 45 8298 1 7440 45 8299 13 0 13 2 13 1 33 8300 18 3 43 1 43 2 1 8249 45 8301 1 947 45 8302 1 8303 45 8304 13 0 13 2 13 1 33 8305 18 3 43 1 43 2 1 8249 45 8306 1 953 45 8307 1 1039 45 8308 13 0 13 2 13 1 33 8309 18 3 43 1 43 2 1 8249 45 8310 1 958 45 8311 75 45 8312 13 0 13 2 13 1 33 8313 18 3 43 1 43 2 1 8249 45 8314 1 963 45 8315 75 45 8316 13 0 13 2 13 1 33 8317 18 3 43 1 43 2 1 8249 45 8318 1 968 45 8319 75 45 8320 13 0 13 2 13 1 33 8321 18 3 43 1 43 2 1 8249 45 8322 1 973 45 8323 8 3 45 8324 13 0 13 2 13 1 33 8325 18 3 43 1 43 2 15 8172 1 8249 17 122 15 8172 75 17 124 15 8095 1 8171 17 122 15 8095 1 8172 17 124 15 8018 1 8094 17 122 15 8018 1 8095 17 124 15 7941 1 8017 17 122 15 7941 1 8018 17 124 15 7863 1 7940 17 122 15 7863 1 7941 17 124 15 7785 1 7862 17 122 15 7785 1 7863 17 124 15 7708 1 7784 17 122 15 7708 1 7785 17 124 15 7631 1 7707 17 122 15 7631 1 7708 17 124 15 7554 1 7630 17 122 15 7554 1 7631 17 124 15 7534 1 7553 17 122 15 7534 1 7554 17 124 1 7509 45 7510 1 829 45 7511 1 6861 45 7512 13 0 13 2 13 1 33 7513 18 3 43 1 43 2 1 7509 45 7514 1 834 45 7515 1 7516 45 7517 13 0 13 2 13 1 33 7518 18 3 43 1 43 2 1 7509 45 7519 1 840 45 7520 1 7521 45 7522 13 0 13 2 13 1 33 7523 18 3 43 1 43 2 1 7509 45 7524 1 846 45 7525 75 45 7526 13 0 13 2 13 1 33 7527 18 3 43 1 43 2 1 7509 45 7528 1 851 45 7529 75 45 7530 13 0 13 2 13 1 33 7531 18 3 43 1 43 2 1 7509 45 7532 1 856 45 7533 1 7534 45 7535 13 0 13 2 13 1 33 7536 18 3 43 1 43 2 1 7509 45 7537 1 862 45 7538 75 45 7539 13 0 13 2 13 1 33 7540 18 3 43 1 43 2 15 7509 1 866 17 867 1 7509 45 7541 1 869 45 7542 75 45 7543 13 0 13 2 13 1 33 7544 18 3 43 1 43 2 1 7509 45 7545 1 874 45 7546 75 45 7547 13 0 13 2 13 1 33 7548 18 3 43 1 43 2 1 7509 45 7549 1 879 45 7550 1 824 45 7551 13 0 13 2 13 1 33 7552 18 3 43 1 43 2 15 6861 15 7509 14 824 19 3 113 15 8326 15 8327 15 8328 19 3 17 15 8329 15 8330 15 8331 19 3 17 15 8332 15 22 15 8333 15 8334 19 4 25 15 8332 14 26 77 15 27 19 4 25 15 8332 1 8350 12 19 2 44 15 8351 15 22 15 8352 15 8353 19 4 25 15 8351 14 26 77 15 48 19 4 25 15 8351 1 8362 12 19 2 44 1 8329 45 8363 1 60 45 8364 1 8351 45 8365 13 2 13 0 13 1 19 3 63 43 1 43 2 1 8329 45 8366 1 65 45 8367 1 8332 45 8368 13 2 13 0 13 1 19 3 63 43 1 43 2 15 65 15 22 15 8369 15 8370 19 4 25 15 65 77 15 8371 15 8372 1 8373 12 19 5 75 15 60 15 22 15 8374 15 8375 19 4 25 15 60 77 15 8376 15 8377 1 8378 12 19 5 75 15 8379 8 0 17 82 15 8379 15 22 15 8380 15 8381 19 4 25 15 8382 8 1 17 82 15 8382 15 22 15 8383 15 8384 19 4 25 15 8385 8 2 17 82 15 8385 15 22 15 8386 15 8387 19 4 25 15 8388 8 3 17 82 15 8388 15 22 15 8389 15 8390 19 4 25 15 8391 8 4 17 82 15 8391 15 22 15 8392 15 8393 19 4 25 15 8394 8 5 17 82 15 8394 15 22 15 8395 15 8396 19 4 25 15 8397 8 6 17 82 15 8397 15 22 15 8398 15 8399 19 4 25 15 8400 8 7 17 82 15 8400 15 22 15 8401 15 8402 19 4 25 15 8403 8 8 17 82 15 8403 15 22 15 8404 15 8405 19 4 25 15 8406 8 9 17 82 15 8406 15 22 15 8407 15 8408 19 4 25 15 8409 8 10 17 82 15 8409 15 22 15 8410 15 8411 19 4 25 15 8412 8 11 17 82 15 8412 15 22 15 8413 15 8414 19 4 25 15 8415 8 12 17 82 15 8415 15 22 15 8416 15 8417 19 4 25 15 8418 8 13 17 82 15 8418 15 22 15 8419 15 8420 19 4 25 15 8421 8 14 17 82 15 8421 15 22 15 8422 15 8423 19 4 25 15 8424 8 15 17 82 15 8424 15 22 15 8425 15 8426 19 4 25 15 8427 19 1 104 15 105 15 22 15 8428 15 8429 19 4 25 15 105 77 15 8430 15 8431 1 8432 12 19 5 75 15 114 19 1 115 78 8433 77 75 3 78 8435 15 125 19 1 115 78 8436 15 8436 15 126 9 0 15 1608 19 4 118 15 8436 15 126 9 1 9 0 19 4 118 77 75 3 78 8437 15 125 19 1 115 78 8438 15 8438 15 126 9 0 15 8335 19 4 118 15 8438 15 126 9 1 9 1 19 4 118 77 75 3 78 8439 15 125 19 1 115 78 8440 15 8440 15 126 9 0 15 8336 19 4 118 15 8440 15 126 9 1 9 2 19 4 118 77 75 3 78 8441 15 125 19 1 115 78 8442 15 8442 15 126 9 0 15 8337 19 4 118 15 8442 15 126 9 1 9 3 19 4 118 77 75 3 78 8443 15 125 19 1 115 78 8444 15 8444 15 126 9 0 15 8338 19 4 118 15 8444 15 126 9 1 9 4 19 4 118 77 75 3 78 8445 15 125 19 1 115 78 8446 15 8446 15 126 9 0 15 8339 19 4 118 15 8446 15 126 9 1 9 5 19 4 118 77 75 3 78 8447 15 125 19 1 115 78 8448 15 8448 15 126 9 0 15 8340 19 4 118 15 8448 15 126 9 1 9 6 19 4 118 77 75 3 78 8449 15 125 19 1 115 78 8450 15 8450 15 126 9 0 15 8341 19 4 118 15 8450 15 126 9 1 9 7 19 4 118 77 75 3 78 8451 15 125 19 1 115 78 8452 15 8452 15 126 9 0 15 8342 19 4 118 15 8452 15 126 9 1 9 8 19 4 118 77 75 3 78 8453 15 125 19 1 115 78 8454 15 8454 15 126 9 0 15 8343 19 4 118 15 8454 15 126 9 1 9 9 19 4 118 77 75 3 78 8455 15 125 19 1 115 78 8456 15 8456 15 126 9 0 15 8344 19 4 118 15 8456 15 126 9 1 9 10 19 4 118 77 75 3 78 8457 15 125 19 1 115 78 8458 15 8458 15 126 9 0 15 8345 19 4 118 15 8458 15 126 9 1 9 11 19 4 118 77 75 3 78 8459 15 125 19 1 115 78 8460 15 8460 15 126 9 0 15 8346 19 4 118 15 8460 15 126 9 1 9 12 19 4 118 77 75 3 78 8461 15 125 19 1 115 78 8462 15 8462 15 126 9 0 15 8347 19 4 118 15 8462 15 126 9 1 9 13 19 4 118 77 75 3 78 8463 15 125 19 1 115 78 8464 15 8464 15 126 9 0 15 8348 19 4 118 15 8464 15 126 9 1 9 14 19 4 118 77 75 3 78 8465 15 125 19 1 115 78 8466 15 8466 15 126 9 0 15 8349 19 4 118 15 8466 15 126 9 1 9 15 19 4 118 15 8465 1 8466 17 122 15 8465 75 17 124 15 8463 1 8464 17 122 15 8463 1 8465 17 124 15 8461 1 8462 17 122 15 8461 1 8463 17 124 15 8459 1 8460 17 122 15 8459 1 8461 17 124 15 8457 1 8458 17 122 15 8457 1 8459 17 124 15 8455 1 8456 17 122 15 8455 1 8457 17 124 15 8453 1 8454 17 122 15 8453 1 8455 17 124 15 8451 1 8452 17 122 15 8451 1 8453 17 124 15 8449 1 8450 17 122 15 8449 1 8451 17 124 15 8447 1 8448 17 122 15 8447 1 8449 17 124 15 8445 1 8446 17 122 15 8445 1 8447 17 124 15 8443 1 8444 17 122 15 8443 1 8445 17 124 15 8441 1 8442 17 122 15 8441 1 8443 17 124 15 8439 1 8440 17 122 15 8439 1 8441 17 124 15 8437 1 8438 17 122 15 8437 1 8439 17 124 15 8435 1 8436 17 122 15 8435 1 8437 17 124 15 8433 15 116 9 0 15 8329 19 4 118 15 8433 15 116 9 1 15 8434 19 4 118 15 8433 15 116 9 2 15 8435 19 4 118 15 8329 15 8433 14 112 19 3 113 15 8467 19 1 104 15 8468 15 8469 15 8470 19 3 17 15 8471 15 8472 15 8473 19 3 17 15 8474 15 22 15 8475 15 8476 19 4 25 15 8474 14 26 77 15 27 19 4 25 15 8474 1 8485 12 19 2 44 15 8486 15 22 15 8487 15 8488 19 4 25 15 8486 14 26 77 15 48 19 4 25 15 8486 1 8489 12 19 2 44 1 8471 45 8490 1 60 45 8491 1 8486 45 8492 13 2 13 0 13 1 19 3 63 43 1 43 2 1 8471 45 8493 1 65 45 8494 1 8474 45 8495 13 2 13 0 13 1 19 3 63 43 1 43 2 15 65 15 22 15 8496 15 8497 19 4 25 15 65 77 15 8498 15 8499 1 8500 12 19 5 75 15 60 15 22 15 8501 15 8502 19 4 25 15 60 77 15 8503 15 8504 1 8505 12 19 5 75 15 8506 8 0 17 82 15 8506 15 22 15 8507 15 8508 19 4 25 15 8509 8 1 17 82 15 8509 15 22 15 8510 15 8511 19 4 25 15 8512 8 2 17 82 15 8512 15 22 15 8513 15 8514 19 4 25 15 8515 8 3 17 82 15 8515 15 22 15 8516 15 8517 19 4 25 15 8518 8 4 17 82 15 8518 15 22 15 8519 15 8520 19 4 25 15 8521 8 5 17 82 15 8521 15 22 15 8522 15 8523 19 4 25 15 8524 8 6 17 82 15 8524 15 22 15 8525 15 8526 19 4 25 15 8527 8 7 17 82 15 8527 15 22 15 8528 15 8529 19 4 25 15 8530 19 1 104 15 105 15 22 15 8531 15 8532 19 4 25 15 105 77 15 8533 15 8534 1 8535 12 19 5 75 15 114 19 1 115 78 8536 77 75 3 78 8538 15 125 19 1 115 78 8539 15 8539 15 126 9 0 15 8477 19 4 118 15 8539 15 126 9 1 9 0 19 4 118 77 75 3 78 8540 15 125 19 1 115 78 8541 15 8541 15 126 9 0 15 8478 19 4 118 15 8541 15 126 9 1 9 1 19 4 118 77 75 3 78 8542 15 125 19 1 115 78 8543 15 8543 15 126 9 0 15 8479 19 4 118 15 8543 15 126 9 1 9 2 19 4 118 77 75 3 78 8544 15 125 19 1 115 78 8545 15 8545 15 126 9 0 15 8480 19 4 118 15 8545 15 126 9 1 9 3 19 4 118 77 75 3 78 8546 15 125 19 1 115 78 8547 15 8547 15 126 9 0 15 8481 19 4 118 15 8547 15 126 9 1 9 4 19 4 118 77 75 3 78 8548 15 125 19 1 115 78 8549 15 8549 15 126 9 0 15 8482 19 4 118 15 8549 15 126 9 1 9 5 19 4 118 77 75 3 78 8550 15 125 19 1 115 78 8551 15 8551 15 126 9 0 15 8483 19 4 118 15 8551 15 126 9 1 9 6 19 4 118 77 75 3 78 8552 15 125 19 1 115 78 8553 15 8553 15 126 9 0 15 8484 19 4 118 15 8553 15 126 9 1 9 7 19 4 118 15 8552 1 8553 17 122 15 8552 75 17 124 15 8550 1 8551 17 122 15 8550 1 8552 17 124 15 8548 1 8549 17 122 15 8548 1 8550 17 124 15 8546 1 8547 17 122 15 8546 1 8548 17 124 15 8544 1 8545 17 122 15 8544 1 8546 17 124 15 8542 1 8543 17 122 15 8542 1 8544 17 124 15 8540 1 8541 17 122 15 8540 1 8542 17 124 15 8538 1 8539 17 122 15 8538 1 8540 17 124 15 8536 15 116 9 0 15 8471 19 4 118 15 8536 15 116 9 1 15 8537 19 4 118 15 8536 15 116 9 2 15 8538 19 4 118 15 8471 15 8536 14 112 19 3 113 15 8554 19 1 104 15 196 15 8555 19 2 198 15 8556 15 8557 77 77 15 8558 15 8559 15 8560 15 204 77 77 15 8561 9 15 77 77 77 19 15 206 15 8562 15 22 15 8563 15 8564 19 4 25 15 8565 15 22 15 8566 15 8567 19 4 25 15 8565 14 26 77 15 8568 19 4 25 15 8556 19 1 117 78 8608 15 8565 1 8609 12 19 2 44 15 8565 15 253 15 8610 19 3 255 1 8611 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 8612 14 11 13 0 19 6 265 43 1 15 8611 15 266 1 8614 12 19 3 255 1 8615 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 8616 14 11 13 0 19 6 265 43 1 15 8615 15 266 1 8618 12 19 3 255 1 8619 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 8620 14 11 13 0 19 6 265 43 1 15 8619 15 266 1 8622 12 19 3 255 1 8623 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 8624 14 11 13 0 19 6 265 43 1 15 8623 15 266 1 8626 12 19 3 255 1 8627 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 8628 14 11 13 0 19 6 265 43 1 15 8627 15 266 1 8630 12 19 3 255 1 8631 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 8632 14 11 13 0 19 6 265 43 1 15 8631 15 266 1 8634 12 19 3 255 1 8635 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 8636 14 11 13 0 19 6 265 43 1 15 8635 15 266 1 8638 12 19 3 255 1 8639 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 8640 14 11 13 0 19 6 265 43 1 15 8639 15 266 1 8642 12 19 3 255 1 8643 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 8644 14 11 13 0 19 6 265 43 1 15 8643 15 266 1 8646 12 19 3 255 1 8647 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 8648 14 11 13 0 19 6 265 43 1 15 8647 15 266 1 8650 12 19 3 255 1 8651 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 8652 14 11 13 0 19 6 265 43 1 15 8651 15 266 1 8654 12 19 3 255 1 8655 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 8656 14 11 13 0 19 6 265 43 1 15 8655 15 266 1 8658 12 19 3 255 1 8659 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 8660 14 11 13 0 19 6 265 43 1 15 8659 15 266 1 8662 12 19 3 255 1 8663 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 8664 14 11 13 0 19 6 265 43 1 15 8663 15 266 1 8666 12 19 3 255 1 8667 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 8668 14 11 13 0 19 6 265 43 1 15 8667 15 266 1 8670 12 19 3 255 15 196 15 8671 19 2 198 15 8672 15 22 15 8673 15 8674 19 4 25 15 8672 14 26 77 15 8675 19 4 25 15 8672 1 8677 12 19 2 44 15 8672 15 253 15 8678 19 3 255 15 196 15 8679 19 2 198 15 8680 15 22 15 8681 15 8682 19 4 25 15 8680 14 26 77 15 8683 19 4 25 15 8680 1 8686 12 19 2 44 15 8680 15 253 15 8687 19 3 255 15 196 15 8688 19 2 198 15 8689 15 22 15 8690 15 8691 19 4 25 15 8689 14 26 77 15 8692 19 4 25 15 8689 1 8694 12 19 2 44 15 8689 15 253 15 8695 19 3 255 15 196 15 8696 19 2 198 15 8697 15 22 15 8698 15 8699 19 4 25 15 8697 14 26 77 15 8700 19 4 25 15 8697 1 8701 12 19 2 44 15 8697 15 253 15 8702 19 3 255 15 8703 15 22 15 8704 15 8705 19 4 25 15 8703 77 15 8706 15 8707 1 8708 12 19 5 75 15 8709 15 22 15 8710 15 8711 19 4 25 15 8709 77 15 8712 15 8713 1 8717 12 19 5 75 15 8556 15 8703 19 2 359 15 8718 19 1 104 15 8719 19 1 104 15 196 15 8720 19 2 198 15 8471 15 22 15 8721 15 8722 19 4 25 15 8471 14 26 77 15 8723 19 4 25 15 8471 1 8725 12 19 2 44 15 8471 15 253 15 8726 19 3 255 15 196 15 8727 19 2 198 15 8728 15 22 15 8729 15 8730 19 4 25 15 8728 14 26 77 15 8731 19 4 25 15 8728 1 8736 12 19 2 44 15 8728 15 253 15 8737 19 3 255 15 196 15 8738 19 2 198 15 8739 15 22 15 8740 15 8741 19 4 25 15 8739 14 26 77 15 8742 19 4 25 15 8739 1 8744 12 19 2 44 15 8739 15 253 15 8745 19 3 255 15 196 15 8746 19 2 198 15 8747 15 22 15 8748 15 8749 19 4 25 15 8747 14 26 77 15 8750 19 4 25 15 8747 1 8753 12 19 2 44 15 8747 15 253 15 8754 19 3 255 15 8755 15 22 15 8756 15 8757 19 4 25 15 8755 77 15 8758 15 8759 1 8760 12 19 5 75 15 8761 15 22 15 8762 15 8763 19 4 25 15 8761 77 15 8764 15 8765 1 8769 12 19 5 75 15 8556 15 8755 19 2 359 15 8770 19 1 104 15 8771 19 1 104 15 196 15 8772 19 2 198 15 8773 15 22 15 8774 15 8775 19 4 25 15 8773 14 26 77 15 8776 19 4 25 15 8773 1 8778 12 19 2 44 15 8773 15 253 15 8779 19 3 255 15 196 15 8780 19 2 198 15 8781 15 22 15 8782 15 8783 19 4 25 15 8781 14 26 77 15 8784 19 4 25 15 8781 1 8789 12 19 2 44 15 8781 15 253 15 8790 19 3 255 15 196 15 8791 19 2 198 15 8792 15 22 15 8793 15 8794 19 4 25 15 8792 14 26 77 15 8795 19 4 25 15 8792 1 8797 12 19 2 44 15 8792 15 253 15 8798 19 3 255 15 196 15 8799 19 2 198 15 8800 15 22 15 8801 15 8802 19 4 25 15 8800 14 26 77 15 8803 19 4 25 15 8800 1 8806 12 19 2 44 15 8800 15 253 15 8807 19 3 255 15 8808 15 22 15 8809 15 8810 19 4 25 15 8808 77 15 8811 15 8812 1 8813 12 19 5 75 15 8814 15 22 15 8815 15 8816 19 4 25 15 8814 77 15 8817 15 8818 1 8822 12 19 5 75 15 8556 15 8808 19 2 359 15 8823 19 1 104 15 8824 19 1 104 15 196 15 8825 19 2 198 15 8826 15 22 15 8827 15 8828 19 4 25 15 8826 14 26 77 15 8829 19 4 25 15 8826 1 8831 12 19 2 44 15 8826 15 253 15 8832 19 3 255 15 196 15 8833 19 2 198 15 8834 15 22 15 8835 15 8836 19 4 25 15 8834 14 26 77 15 8837 19 4 25 15 8834 1 8842 12 19 2 44 15 8834 15 253 15 8843 19 3 255 15 196 15 8844 19 2 198 15 8845 15 22 15 8846 15 8847 19 4 25 15 8845 14 26 77 15 8848 19 4 25 15 8845 1 8850 12 19 2 44 15 8845 15 253 15 8851 19 3 255 15 196 15 8852 19 2 198 15 8853 15 22 15 8854 15 8855 19 4 25 15 8853 14 26 77 15 8856 19 4 25 15 8853 1 8859 12 19 2 44 15 8853 15 253 15 8860 19 3 255 15 8861 15 22 15 8862 15 8863 19 4 25 15 8861 77 15 8864 15 8865 1 8866 12 19 5 75 15 8867 15 22 15 8868 15 8869 19 4 25 15 8867 77 15 8870 15 8871 1 8875 12 19 5 75 15 8556 15 8861 19 2 359 15 8876 19 1 104 15 8877 19 1 104 15 196 15 8878 19 2 198 15 8879 15 22 15 8880 15 8881 19 4 25 15 8879 14 26 77 15 8882 19 4 25 15 8879 1 8884 12 19 2 44 15 8879 15 253 15 8885 19 3 255 15 196 15 8886 19 2 198 15 8887 15 22 15 8888 15 8889 19 4 25 15 8887 14 26 77 15 8890 19 4 25 15 8887 1 8895 12 19 2 44 15 8887 15 253 15 8896 19 3 255 15 196 15 8897 19 2 198 15 8898 15 22 15 8899 15 8900 19 4 25 15 8898 14 26 77 15 8901 19 4 25 15 8898 1 8903 12 19 2 44 15 8898 15 253 15 8904 19 3 255 15 196 15 8905 19 2 198 15 8906 15 22 15 8907 15 8908 19 4 25 15 8906 14 26 77 15 8909 19 4 25 15 8906 1 8912 12 19 2 44 15 8906 15 253 15 8913 19 3 255 15 8914 15 22 15 8915 15 8916 19 4 25 15 8914 77 15 8917 15 8918 1 8919 12 19 5 75 15 8920 15 22 15 8921 15 8922 19 4 25 15 8920 77 15 8923 15 8924 1 8928 12 19 5 75 15 8556 15 8914 19 2 359 15 8929 19 1 104 15 8930 19 1 104 15 196 15 8931 19 2 198 15 8932 15 22 15 8933 15 8934 19 4 25 15 8932 14 26 77 15 8935 19 4 25 15 8932 1 8937 12 19 2 44 15 8932 15 253 15 8938 19 3 255 15 196 15 8939 19 2 198 15 8940 15 22 15 8941 15 8942 19 4 25 15 8940 14 26 77 15 8943 19 4 25 15 8940 1 8948 12 19 2 44 15 8940 15 253 15 8949 19 3 255 15 196 15 8950 19 2 198 15 8951 15 22 15 8952 15 8953 19 4 25 15 8951 14 26 77 15 8954 19 4 25 15 8951 1 8956 12 19 2 44 15 8951 15 253 15 8957 19 3 255 15 196 15 8958 19 2 198 15 8959 15 22 15 8960 15 8961 19 4 25 15 8959 14 26 77 15 8962 19 4 25 15 8959 1 8965 12 19 2 44 15 8959 15 253 15 8966 19 3 255 15 8967 15 22 15 8968 15 8969 19 4 25 15 8967 77 15 8970 15 8971 1 8972 12 19 5 75 15 8973 15 22 15 8974 15 8975 19 4 25 15 8973 77 15 8976 15 8977 1 8981 12 19 5 75 15 8556 15 8967 19 2 359 15 8982 19 1 104 15 8983 19 1 104 15 196 15 8984 19 2 198 15 8985 15 22 15 8986 15 8987 19 4 25 15 8985 14 26 77 15 8988 19 4 25 15 8985 1 8990 12 19 2 44 15 8985 15 253 15 8991 19 3 255 15 196 15 8992 19 2 198 15 8993 15 22 15 8994 15 8995 19 4 25 15 8993 14 26 77 15 8996 19 4 25 15 8993 1 9001 12 19 2 44 15 8993 15 253 15 9002 19 3 255 15 196 15 9003 19 2 198 15 9004 15 22 15 9005 15 9006 19 4 25 15 9004 14 26 77 15 9007 19 4 25 15 9004 1 9009 12 19 2 44 15 9004 15 253 15 9010 19 3 255 15 196 15 9011 19 2 198 15 9012 15 22 15 9013 15 9014 19 4 25 15 9012 14 26 77 15 9015 19 4 25 15 9012 1 9018 12 19 2 44 15 9012 15 253 15 9019 19 3 255 15 9020 15 22 15 9021 15 9022 19 4 25 15 9020 77 15 9023 15 9024 1 9025 12 19 5 75 15 9026 15 22 15 9027 15 9028 19 4 25 15 9026 77 15 9029 15 9030 1 9034 12 19 5 75 15 8556 15 9020 19 2 359 15 9035 19 1 104 15 9036 19 1 104 15 196 15 9037 19 2 198 15 9038 15 22 15 9039 15 9040 19 4 25 15 9038 14 26 77 15 9041 19 4 25 15 9038 1 9043 12 19 2 44 15 9038 15 253 15 9044 19 3 255 15 196 15 9045 19 2 198 15 9046 15 22 15 9047 15 9048 19 4 25 15 9046 14 26 77 15 9049 19 4 25 15 9046 1 9054 12 19 2 44 15 9046 15 253 15 9055 19 3 255 15 196 15 9056 19 2 198 15 9057 15 22 15 9058 15 9059 19 4 25 15 9057 14 26 77 15 9060 19 4 25 15 9057 1 9062 12 19 2 44 15 9057 15 253 15 9063 19 3 255 15 196 15 9064 19 2 198 15 9065 15 22 15 9066 15 9067 19 4 25 15 9065 14 26 77 15 9068 19 4 25 15 9065 1 9071 12 19 2 44 15 9065 15 253 15 9072 19 3 255 15 9073 15 22 15 9074 15 9075 19 4 25 15 9073 77 15 9076 15 9077 1 9078 12 19 5 75 15 9079 15 22 15 9080 15 9081 19 4 25 15 9079 77 15 9082 15 9083 1 9087 12 19 5 75 15 8556 15 9073 19 2 359 15 9088 19 1 104 15 9089 19 1 104 15 196 15 9090 19 2 198 15 9091 15 22 15 9092 15 9093 19 4 25 15 9091 14 26 77 15 9094 19 4 25 15 9091 1 9096 12 19 2 44 15 9091 15 253 15 9097 19 3 255 15 196 15 9098 19 2 198 15 9099 15 22 15 9100 15 9101 19 4 25 15 9099 14 26 77 15 9102 19 4 25 15 9099 1 9105 12 19 2 44 15 9099 15 253 15 9106 19 3 255 15 196 15 9107 19 2 198 15 9108 15 22 15 9109 15 9110 19 4 25 15 9108 14 26 77 15 9111 19 4 25 15 9108 1 9113 12 19 2 44 15 9108 15 253 15 9114 19 3 255 15 196 15 9115 19 2 198 15 9116 15 22 15 9117 15 9118 19 4 25 15 9116 14 26 77 15 9119 19 4 25 15 9116 1 9120 12 19 2 44 15 9116 15 253 15 9121 19 3 255 15 9122 15 22 15 9123 15 9124 19 4 25 15 9122 77 15 9125 15 9126 1 9127 12 19 5 75 15 9128 15 22 15 9129 15 9130 19 4 25 15 9128 77 15 9131 15 9132 1 9136 12 19 5 75 15 8556 15 9122 19 2 359 15 9137 19 1 104 15 9138 19 1 104 15 196 15 9139 19 2 198 15 9140 15 22 15 9141 15 9142 19 4 25 15 9140 14 26 77 15 9143 19 4 25 15 9140 1 9145 12 19 2 44 15 9140 15 253 15 9146 19 3 255 15 196 15 9147 19 2 198 15 9148 15 22 15 9149 15 9150 19 4 25 15 9148 14 26 77 15 9151 19 4 25 15 9148 1 9156 12 19 2 44 15 9148 15 253 15 9157 19 3 255 15 196 15 9158 19 2 198 15 9159 15 22 15 9160 15 9161 19 4 25 15 9159 14 26 77 15 9162 19 4 25 15 9159 1 9164 12 19 2 44 15 9159 15 253 15 9165 19 3 255 15 196 15 9166 19 2 198 15 9167 15 22 15 9168 15 9169 19 4 25 15 9167 14 26 77 15 9170 19 4 25 15 9167 1 9173 12 19 2 44 15 9167 15 253 15 9174 19 3 255 15 9175 15 22 15 9176 15 9177 19 4 25 15 9175 77 15 9178 15 9179 1 9180 12 19 5 75 15 9181 15 22 15 9182 15 9183 19 4 25 15 9181 77 15 9184 15 9185 1 9189 12 19 5 75 15 8556 15 9175 19 2 359 15 9190 19 1 104 15 9191 19 1 104 15 196 15 9192 19 2 198 15 9193 15 22 15 9194 15 9195 19 4 25 15 9193 14 26 77 15 9196 19 4 25 15 9193 1 9198 12 19 2 44 15 9193 15 253 15 9199 19 3 255 15 196 15 9200 19 2 198 15 9201 15 22 15 9202 15 9203 19 4 25 15 9201 14 26 77 15 9204 19 4 25 15 9201 1 9209 12 19 2 44 15 9201 15 253 15 9210 19 3 255 15 196 15 9211 19 2 198 15 9212 15 22 15 9213 15 9214 19 4 25 15 9212 14 26 77 15 9215 19 4 25 15 9212 1 9217 12 19 2 44 15 9212 15 253 15 9218 19 3 255 15 196 15 9219 19 2 198 15 9220 15 22 15 9221 15 9222 19 4 25 15 9220 14 26 77 15 9223 19 4 25 15 9220 1 9226 12 19 2 44 15 9220 15 253 15 9227 19 3 255 15 9228 15 22 15 9229 15 9230 19 4 25 15 9228 77 15 9231 15 9232 1 9233 12 19 5 75 15 9234 15 22 15 9235 15 9236 19 4 25 15 9234 77 15 9237 15 9238 1 9242 12 19 5 75 15 8556 15 9228 19 2 359 15 9243 19 1 104 15 9244 19 1 104 15 196 15 9245 19 2 198 15 9246 15 22 15 9247 15 9248 19 4 25 15 9246 14 26 77 15 9249 19 4 25 15 9246 1 9251 12 19 2 44 15 9246 15 253 15 9252 19 3 255 15 196 15 9253 19 2 198 15 9254 15 22 15 9255 15 9256 19 4 25 15 9254 14 26 77 15 9257 19 4 25 15 9254 1 9260 12 19 2 44 15 9254 15 253 15 9261 19 3 255 15 196 15 9262 19 2 198 15 9263 15 22 15 9264 15 9265 19 4 25 15 9263 14 26 77 15 9266 19 4 25 15 9263 1 9268 12 19 2 44 15 9263 15 253 15 9269 19 3 255 15 196 15 9270 19 2 198 15 9271 15 22 15 9272 15 9273 19 4 25 15 9271 14 26 77 15 9274 19 4 25 15 9271 1 9275 12 19 2 44 15 9271 15 253 15 9276 19 3 255 15 9277 15 22 15 9278 15 9279 19 4 25 15 9277 77 15 9280 15 9281 1 9282 12 19 5 75 15 9283 15 22 15 9284 15 9285 19 4 25 15 9283 77 15 9286 15 9287 1 9291 12 19 5 75 15 8556 15 9277 19 2 359 15 9292 19 1 104 15 9293 19 1 104 15 196 15 9294 19 2 198 15 9295 15 22 15 9296 15 9297 19 4 25 15 9295 14 26 77 15 9298 19 4 25 15 9295 1 9300 12 19 2 44 15 9295 15 253 15 9301 19 3 255 15 196 15 9302 19 2 198 15 9303 15 22 15 9304 15 9305 19 4 25 15 9303 14 26 77 15 9306 19 4 25 15 9303 1 9309 12 19 2 44 15 9303 15 253 15 9310 19 3 255 15 196 15 9311 19 2 198 15 9312 15 22 15 9313 15 9314 19 4 25 15 9312 14 26 77 15 9315 19 4 25 15 9312 1 9317 12 19 2 44 15 9312 15 253 15 9318 19 3 255 15 196 15 9319 19 2 198 15 9320 15 22 15 9321 15 9322 19 4 25 15 9320 14 26 77 15 9323 19 4 25 15 9320 1 9324 12 19 2 44 15 9320 15 253 15 9325 19 3 255 15 9326 15 22 15 9327 15 9328 19 4 25 15 9326 77 15 9329 15 9330 1 9331 12 19 5 75 15 9332 15 22 15 9333 15 9334 19 4 25 15 9332 77 15 9335 15 9336 1 9340 12 19 5 75 15 8556 15 9326 19 2 359 15 9341 19 1 104 15 9342 19 1 104 15 196 15 9343 19 2 198 15 9344 15 22 15 9345 15 9346 19 4 25 15 9344 14 26 77 15 9347 19 4 25 15 9344 1 9349 12 19 2 44 15 9344 15 253 15 9350 19 3 255 15 196 15 9351 19 2 198 15 9352 15 22 15 9353 15 9354 19 4 25 15 9352 14 26 77 15 9355 19 4 25 15 9352 1 9360 12 19 2 44 15 9352 15 253 15 9361 19 3 255 15 196 15 9362 19 2 198 15 9363 15 22 15 9364 15 9365 19 4 25 15 9363 14 26 77 15 9366 19 4 25 15 9363 1 9368 12 19 2 44 15 9363 15 253 15 9369 19 3 255 15 196 15 9370 19 2 198 15 9371 15 22 15 9372 15 9373 19 4 25 15 9371 14 26 77 15 9374 19 4 25 15 9371 1 9377 12 19 2 44 15 9371 15 253 15 9378 19 3 255 15 9379 15 22 15 9380 15 9381 19 4 25 15 9379 77 15 9382 15 9383 1 9384 12 19 5 75 15 9385 15 22 15 9386 15 9387 19 4 25 15 9385 77 15 9388 15 9389 1 9393 12 19 5 75 15 8556 15 9379 19 2 359 15 9394 19 1 104 15 9395 19 1 104 15 196 15 9396 19 2 198 15 9397 15 22 15 9398 15 9399 19 4 25 15 9397 14 26 77 15 9400 19 4 25 15 9397 1 9402 12 19 2 44 15 9397 15 253 15 9403 19 3 255 15 196 15 9404 19 2 198 15 9405 15 22 15 9406 15 9407 19 4 25 15 9405 14 26 77 15 9408 19 4 25 15 9405 1 9413 12 19 2 44 15 9405 15 253 15 9414 19 3 255 15 196 15 9415 19 2 198 15 9416 15 22 15 9417 15 9418 19 4 25 15 9416 14 26 77 15 9419 19 4 25 15 9416 1 9421 12 19 2 44 15 9416 15 253 15 9422 19 3 255 15 196 15 9423 19 2 198 15 9424 15 22 15 9425 15 9426 19 4 25 15 9424 14 26 77 15 9427 19 4 25 15 9424 1 9430 12 19 2 44 15 9424 15 253 15 9431 19 3 255 15 9432 15 22 15 9433 15 9434 19 4 25 15 9432 77 15 9435 15 9436 1 9437 12 19 5 75 15 9438 15 22 15 9439 15 9440 19 4 25 15 9438 77 15 9441 15 9442 1 9446 12 19 5 75 15 8556 15 9432 19 2 359 15 9447 19 1 104 15 9448 19 1 104 15 9449 15 22 15 9450 15 9451 19 4 25 15 9449 14 26 77 15 9452 19 4 25 15 9449 1 9459 12 19 2 44 15 9460 15 22 15 9461 15 9462 19 4 25 15 9460 14 26 77 15 9463 19 4 25 15 9460 1 9464 12 19 2 44 15 9465 15 22 15 9466 15 9467 19 4 25 15 9465 14 26 77 15 9468 19 4 25 15 9465 1 9474 12 19 2 44 15 9475 15 22 15 9476 15 9477 19 4 25 15 9475 77 15 9478 15 9479 1 9480 12 19 5 75 15 9481 15 22 15 9482 15 9483 19 4 25 15 9481 77 15 9484 15 9485 1 9486 12 19 5 75 15 9487 15 22 15 9488 15 9489 19 4 25 15 9487 77 15 9490 15 9491 1 9492 12 19 5 75 15 9493 19 1 104 15 196 15 9494 19 2 198 15 9495 15 22 15 9496 15 9497 19 4 25 15 9495 14 26 77 15 9498 19 4 25 15 9495 1 9546 12 19 2 44 15 9495 15 253 15 9547 19 3 255 15 9548 15 22 15 9549 15 9550 19 4 25 15 9548 14 26 77 15 9551 19 4 25 15 9548 1 9552 12 19 2 44 15 9553 19 1 104 15 815 15 22 15 9554 15 9555 19 4 25 15 815 77 15 9556 15 9557 1 9560 12 19 5 75 15 825 19 1 115 45 826 15 824 13 0 14 824 19 3 113 10 0 43 1 78 9561 77 75 3 78 9586 15 885 19 1 115 78 9605 1 9605 45 9607 1 829 45 9608 1 981 45 9609 13 0 13 2 13 1 33 9610 18 3 43 1 43 2 1 9605 45 9611 1 834 45 9612 1 9613 45 9614 13 0 13 2 13 1 33 9615 18 3 43 1 43 2 1 9605 45 9616 1 840 45 9617 1 9618 45 9619 13 0 13 2 13 1 33 9620 18 3 43 1 43 2 1 9605 45 9621 1 846 45 9622 75 45 9623 13 0 13 2 13 1 33 9624 18 3 43 1 43 2 1 9605 45 9625 1 906 45 9626 1 1000 45 9627 13 0 13 2 13 1 33 9628 18 3 43 1 43 2 1 9605 45 9629 1 911 45 9630 1 981 45 9631 13 0 13 2 13 1 33 9632 18 3 43 1 43 2 1 9605 45 9633 1 916 45 9634 1 918 45 9635 13 0 13 2 13 1 33 9636 18 3 43 1 43 2 1 9605 45 9637 1 922 45 9638 8 1 45 9639 13 0 13 2 13 1 33 9640 18 3 43 1 43 2 1 9605 45 9641 1 927 45 9642 75 45 9643 13 0 13 2 13 1 33 9644 18 3 43 1 43 2 1 9605 45 9645 1 932 45 9646 75 45 9647 13 0 13 2 13 1 33 9648 18 3 43 1 43 2 1 9605 45 9649 1 937 45 9650 1 9651 45 9652 13 0 13 2 13 1 33 9653 18 3 43 1 43 2 1 9605 45 9654 1 942 45 9655 1 8703 45 9656 13 0 13 2 13 1 33 9657 18 3 43 1 43 2 1 9605 45 9658 1 947 45 9659 1 9660 45 9661 13 0 13 2 13 1 33 9662 18 3 43 1 43 2 1 9605 45 9663 1 953 45 9664 1 1039 45 9665 13 0 13 2 13 1 33 9666 18 3 43 1 43 2 1 9605 45 9667 1 958 45 9668 75 45 9669 13 0 13 2 13 1 33 9670 18 3 43 1 43 2 1 9605 45 9671 1 963 45 9672 75 45 9673 13 0 13 2 13 1 33 9674 18 3 43 1 43 2 1 9605 45 9675 1 968 45 9676 75 45 9677 13 0 13 2 13 1 33 9678 18 3 43 1 43 2 1 9605 45 9679 1 973 45 9680 8 0 45 9681 13 0 13 2 13 1 33 9682 18 3 43 1 43 2 77 75 3 78 9606 15 885 19 1 115 78 9683 1 9683 45 9685 1 829 45 9686 1 8471 45 9687 13 0 13 2 13 1 33 9688 18 3 43 1 43 2 1 9683 45 9689 1 834 45 9690 1 9691 45 9692 13 0 13 2 13 1 33 9693 18 3 43 1 43 2 1 9683 45 9694 1 840 45 9695 1 9696 45 9697 13 0 13 2 13 1 33 9698 18 3 43 1 43 2 1 9683 45 9699 1 846 45 9700 75 45 9701 13 0 13 2 13 1 33 9702 18 3 43 1 43 2 1 9683 45 9703 1 906 45 9704 1 112 45 9705 13 0 13 2 13 1 33 9706 18 3 43 1 43 2 1 9683 45 9707 1 911 45 9708 1 8468 45 9709 13 0 13 2 13 1 33 9710 18 3 43 1 43 2 1 9683 45 9711 1 916 45 9712 1 918 45 9713 13 0 13 2 13 1 33 9714 18 3 43 1 43 2 1 9683 45 9715 1 922 45 9716 8 2 45 9717 13 0 13 2 13 1 33 9718 18 3 43 1 43 2 1 9683 45 9719 1 927 45 9720 75 45 9721 13 0 13 2 13 1 33 9722 18 3 43 1 43 2 1 9683 45 9723 1 932 45 9724 75 45 9725 13 0 13 2 13 1 33 9726 18 3 43 1 43 2 1 9683 45 9727 1 937 45 9728 1 8605 45 9729 13 0 13 2 13 1 33 9730 18 3 43 1 43 2 1 9683 45 9731 1 942 45 9732 1 8755 45 9733 13 0 13 2 13 1 33 9734 18 3 43 1 43 2 1 9683 45 9735 1 947 45 9736 1 9737 45 9738 13 0 13 2 13 1 33 9739 18 3 43 1 43 2 1 9683 45 9740 1 953 45 9741 1 8477 45 9742 13 0 13 2 13 1 33 9743 18 3 43 1 43 2 1 9683 45 9744 1 958 45 9745 75 45 9746 13 0 13 2 13 1 33 9747 18 3 43 1 43 2 1 9683 45 9748 1 963 45 9749 75 45 9750 13 0 13 2 13 1 33 9751 18 3 43 1 43 2 1 9683 45 9752 1 968 45 9753 75 45 9754 13 0 13 2 13 1 33 9755 18 3 43 1 43 2 1 9683 45 9756 1 973 45 9757 75 45 9758 13 0 13 2 13 1 33 9759 18 3 43 1 43 2 77 75 3 78 9684 15 885 19 1 115 78 9760 1 9760 45 9762 1 829 45 9763 1 241 45 9764 13 0 13 2 13 1 33 9765 18 3 43 1 43 2 1 9760 45 9766 1 834 45 9767 1 9768 45 9769 13 0 13 2 13 1 33 9770 18 3 43 1 43 2 1 9760 45 9771 1 840 45 9772 1 9773 45 9774 13 0 13 2 13 1 33 9775 18 3 43 1 43 2 1 9760 45 9776 1 846 45 9777 75 45 9778 13 0 13 2 13 1 33 9779 18 3 43 1 43 2 1 9760 45 9780 1 906 45 9781 1 1000 45 9782 13 0 13 2 13 1 33 9783 18 3 43 1 43 2 1 9760 45 9784 1 911 45 9785 1 241 45 9786 13 0 13 2 13 1 33 9787 18 3 43 1 43 2 1 9760 45 9788 1 916 45 9789 1 918 45 9790 13 0 13 2 13 1 33 9791 18 3 43 1 43 2 1 9760 45 9792 1 922 45 9793 8 3 45 9794 13 0 13 2 13 1 33 9795 18 3 43 1 43 2 1 9760 45 9796 1 927 45 9797 75 45 9798 13 0 13 2 13 1 33 9799 18 3 43 1 43 2 1 9760 45 9800 1 932 45 9801 75 45 9802 13 0 13 2 13 1 33 9803 18 3 43 1 43 2 1 9760 45 9804 1 937 45 9805 1 8604 45 9806 13 0 13 2 13 1 33 9807 18 3 43 1 43 2 1 9760 45 9808 1 942 45 9809 1 8808 45 9810 13 0 13 2 13 1 33 9811 18 3 43 1 43 2 1 9760 45 9812 1 947 45 9813 1 9814 45 9815 13 0 13 2 13 1 33 9816 18 3 43 1 43 2 1 9760 45 9817 1 953 45 9818 1 1039 45 9819 13 0 13 2 13 1 33 9820 18 3 43 1 43 2 1 9760 45 9821 1 958 45 9822 75 45 9823 13 0 13 2 13 1 33 9824 18 3 43 1 43 2 1 9760 45 9825 1 963 45 9826 75 45 9827 13 0 13 2 13 1 33 9828 18 3 43 1 43 2 1 9760 45 9829 1 968 45 9830 75 45 9831 13 0 13 2 13 1 33 9832 18 3 43 1 43 2 1 9760 45 9833 1 973 45 9834 75 45 9835 13 0 13 2 13 1 33 9836 18 3 43 1 43 2 77 75 3 78 9761 15 885 19 1 115 78 9837 1 9837 45 9839 1 829 45 9840 1 241 45 9841 13 0 13 2 13 1 33 9842 18 3 43 1 43 2 1 9837 45 9843 1 834 45 9844 1 9845 45 9846 13 0 13 2 13 1 33 9847 18 3 43 1 43 2 1 9837 45 9848 1 840 45 9849 1 9850 45 9851 13 0 13 2 13 1 33 9852 18 3 43 1 43 2 1 9837 45 9853 1 846 45 9854 75 45 9855 13 0 13 2 13 1 33 9856 18 3 43 1 43 2 1 9837 45 9857 1 906 45 9858 1 1000 45 9859 13 0 13 2 13 1 33 9860 18 3 43 1 43 2 1 9837 45 9861 1 911 45 9862 1 241 45 9863 13 0 13 2 13 1 33 9864 18 3 43 1 43 2 1 9837 45 9865 1 916 45 9866 1 918 45 9867 13 0 13 2 13 1 33 9868 18 3 43 1 43 2 1 9837 45 9869 1 922 45 9870 8 4 45 9871 13 0 13 2 13 1 33 9872 18 3 43 1 43 2 1 9837 45 9873 1 927 45 9874 75 45 9875 13 0 13 2 13 1 33 9876 18 3 43 1 43 2 1 9837 45 9877 1 932 45 9878 75 45 9879 13 0 13 2 13 1 33 9880 18 3 43 1 43 2 1 9837 45 9881 1 937 45 9882 1 8603 45 9883 13 0 13 2 13 1 33 9884 18 3 43 1 43 2 1 9837 45 9885 1 942 45 9886 1 8861 45 9887 13 0 13 2 13 1 33 9888 18 3 43 1 43 2 1 9837 45 9889 1 947 45 9890 1 9891 45 9892 13 0 13 2 13 1 33 9893 18 3 43 1 43 2 1 9837 45 9894 1 953 45 9895 1 1039 45 9896 13 0 13 2 13 1 33 9897 18 3 43 1 43 2 1 9837 45 9898 1 958 45 9899 75 45 9900 13 0 13 2 13 1 33 9901 18 3 43 1 43 2 1 9837 45 9902 1 963 45 9903 75 45 9904 13 0 13 2 13 1 33 9905 18 3 43 1 43 2 1 9837 45 9906 1 968 45 9907 75 45 9908 13 0 13 2 13 1 33 9909 18 3 43 1 43 2 1 9837 45 9910 1 973 45 9911 75 45 9912 13 0 13 2 13 1 33 9913 18 3 43 1 43 2 77 75 3 78 9838 15 885 19 1 115 78 9914 1 9914 45 9916 1 829 45 9917 1 241 45 9918 13 0 13 2 13 1 33 9919 18 3 43 1 43 2 1 9914 45 9920 1 834 45 9921 1 9922 45 9923 13 0 13 2 13 1 33 9924 18 3 43 1 43 2 1 9914 45 9925 1 840 45 9926 1 9927 45 9928 13 0 13 2 13 1 33 9929 18 3 43 1 43 2 1 9914 45 9930 1 846 45 9931 75 45 9932 13 0 13 2 13 1 33 9933 18 3 43 1 43 2 1 9914 45 9934 1 906 45 9935 1 1000 45 9936 13 0 13 2 13 1 33 9937 18 3 43 1 43 2 1 9914 45 9938 1 911 45 9939 1 241 45 9940 13 0 13 2 13 1 33 9941 18 3 43 1 43 2 1 9914 45 9942 1 916 45 9943 1 918 45 9944 13 0 13 2 13 1 33 9945 18 3 43 1 43 2 1 9914 45 9946 1 922 45 9947 8 5 45 9948 13 0 13 2 13 1 33 9949 18 3 43 1 43 2 1 9914 45 9950 1 927 45 9951 75 45 9952 13 0 13 2 13 1 33 9953 18 3 43 1 43 2 1 9914 45 9954 1 932 45 9955 75 45 9956 13 0 13 2 13 1 33 9957 18 3 43 1 43 2 1 9914 45 9958 1 937 45 9959 1 8602 45 9960 13 0 13 2 13 1 33 9961 18 3 43 1 43 2 1 9914 45 9962 1 942 45 9963 1 8914 45 9964 13 0 13 2 13 1 33 9965 18 3 43 1 43 2 1 9914 45 9966 1 947 45 9967 1 9968 45 9969 13 0 13 2 13 1 33 9970 18 3 43 1 43 2 1 9914 45 9971 1 953 45 9972 1 1039 45 9973 13 0 13 2 13 1 33 9974 18 3 43 1 43 2 1 9914 45 9975 1 958 45 9976 75 45 9977 13 0 13 2 13 1 33 9978 18 3 43 1 43 2 1 9914 45 9979 1 963 45 9980 75 45 9981 13 0 13 2 13 1 33 9982 18 3 43 1 43 2 1 9914 45 9983 1 968 45 9984 75 45 9985 13 0 13 2 13 1 33 9986 18 3 43 1 43 2 1 9914 45 9987 1 973 45 9988 75 45 9989 13 0 13 2 13 1 33 9990 18 3 43 1 43 2 77 75 3 78 9915 15 885 19 1 115 78 9991 1 9991 45 9993 1 829 45 9994 1 3365 45 9995 13 0 13 2 13 1 33 9996 18 3 43 1 43 2 1 9991 45 9997 1 834 45 9998 1 9999 45 10000 13 0 13 2 13 1 33 10001 18 3 43 1 43 2 1 9991 45 10002 1 840 45 10003 1 10004 45 10005 13 0 13 2 13 1 33 10006 18 3 43 1 43 2 1 9991 45 10007 1 846 45 10008 75 45 10009 13 0 13 2 13 1 33 10010 18 3 43 1 43 2 1 9991 45 10011 1 906 45 10012 1 1000 45 10013 13 0 13 2 13 1 33 10014 18 3 43 1 43 2 1 9991 45 10015 1 911 45 10016 1 3365 45 10017 13 0 13 2 13 1 33 10018 18 3 43 1 43 2 1 9991 45 10019 1 916 45 10020 1 918 45 10021 13 0 13 2 13 1 33 10022 18 3 43 1 43 2 1 9991 45 10023 1 922 45 10024 8 6 45 10025 13 0 13 2 13 1 33 10026 18 3 43 1 43 2 1 9991 45 10027 1 927 45 10028 75 45 10029 13 0 13 2 13 1 33 10030 18 3 43 1 43 2 1 9991 45 10031 1 932 45 10032 75 45 10033 13 0 13 2 13 1 33 10034 18 3 43 1 43 2 1 9991 45 10035 1 937 45 10036 1 8601 45 10037 13 0 13 2 13 1 33 10038 18 3 43 1 43 2 1 9991 45 10039 1 942 45 10040 1 8967 45 10041 13 0 13 2 13 1 33 10042 18 3 43 1 43 2 1 9991 45 10043 1 947 45 10044 1 10045 45 10046 13 0 13 2 13 1 33 10047 18 3 43 1 43 2 1 9991 45 10048 1 953 45 10049 1 1039 45 10050 13 0 13 2 13 1 33 10051 18 3 43 1 43 2 1 9991 45 10052 1 958 45 10053 75 45 10054 13 0 13 2 13 1 33 10055 18 3 43 1 43 2 1 9991 45 10056 1 963 45 10057 75 45 10058 13 0 13 2 13 1 33 10059 18 3 43 1 43 2 1 9991 45 10060 1 968 45 10061 75 45 10062 13 0 13 2 13 1 33 10063 18 3 43 1 43 2 1 9991 45 10064 1 973 45 10065 75 45 10066 13 0 13 2 13 1 33 10067 18 3 43 1 43 2 77 75 3 78 9992 15 885 19 1 115 78 10068 1 10068 45 10070 1 829 45 10071 1 8329 45 10072 13 0 13 2 13 1 33 10073 18 3 43 1 43 2 1 10068 45 10074 1 834 45 10075 1 10076 45 10077 13 0 13 2 13 1 33 10078 18 3 43 1 43 2 1 10068 45 10079 1 840 45 10080 1 10081 45 10082 13 0 13 2 13 1 33 10083 18 3 43 1 43 2 1 10068 45 10084 1 846 45 10085 75 45 10086 13 0 13 2 13 1 33 10087 18 3 43 1 43 2 1 10068 45 10088 1 906 45 10089 1 112 45 10090 13 0 13 2 13 1 33 10091 18 3 43 1 43 2 1 10068 45 10092 1 911 45 10093 1 8326 45 10094 13 0 13 2 13 1 33 10095 18 3 43 1 43 2 1 10068 45 10096 1 916 45 10097 1 918 45 10098 13 0 13 2 13 1 33 10099 18 3 43 1 43 2 1 10068 45 10100 1 922 45 10101 8 7 45 10102 13 0 13 2 13 1 33 10103 18 3 43 1 43 2 1 10068 45 10104 1 927 45 10105 75 45 10106 13 0 13 2 13 1 33 10107 18 3 43 1 43 2 1 10068 45 10108 1 932 45 10109 75 45 10110 13 0 13 2 13 1 33 10111 18 3 43 1 43 2 1 10068 45 10112 1 937 45 10113 1 8600 45 10114 13 0 13 2 13 1 33 10115 18 3 43 1 43 2 1 10068 45 10116 1 942 45 10117 1 9020 45 10118 13 0 13 2 13 1 33 10119 18 3 43 1 43 2 1 10068 45 10120 1 947 45 10121 1 10122 45 10123 13 0 13 2 13 1 33 10124 18 3 43 1 43 2 1 10068 45 10125 1 953 45 10126 1 1608 45 10127 13 0 13 2 13 1 33 10128 18 3 43 1 43 2 1 10068 45 10129 1 958 45 10130 75 45 10131 13 0 13 2 13 1 33 10132 18 3 43 1 43 2 1 10068 45 10133 1 963 45 10134 75 45 10135 13 0 13 2 13 1 33 10136 18 3 43 1 43 2 1 10068 45 10137 1 968 45 10138 75 45 10139 13 0 13 2 13 1 33 10140 18 3 43 1 43 2 1 10068 45 10141 1 973 45 10142 75 45 10143 13 0 13 2 13 1 33 10144 18 3 43 1 43 2 77 75 3 78 10069 15 885 19 1 115 78 10145 1 10145 45 10147 1 829 45 10148 1 241 45 10149 13 0 13 2 13 1 33 10150 18 3 43 1 43 2 1 10145 45 10151 1 834 45 10152 1 10153 45 10154 13 0 13 2 13 1 33 10155 18 3 43 1 43 2 1 10145 45 10156 1 840 45 10157 1 10158 45 10159 13 0 13 2 13 1 33 10160 18 3 43 1 43 2 1 10145 45 10161 1 846 45 10162 75 45 10163 13 0 13 2 13 1 33 10164 18 3 43 1 43 2 1 10145 45 10165 1 906 45 10166 1 1000 45 10167 13 0 13 2 13 1 33 10168 18 3 43 1 43 2 1 10145 45 10169 1 911 45 10170 1 241 45 10171 13 0 13 2 13 1 33 10172 18 3 43 1 43 2 1 10145 45 10173 1 916 45 10174 1 918 45 10175 13 0 13 2 13 1 33 10176 18 3 43 1 43 2 1 10145 45 10177 1 922 45 10178 8 8 45 10179 13 0 13 2 13 1 33 10180 18 3 43 1 43 2 1 10145 45 10181 1 927 45 10182 75 45 10183 13 0 13 2 13 1 33 10184 18 3 43 1 43 2 1 10145 45 10185 1 932 45 10186 75 45 10187 13 0 13 2 13 1 33 10188 18 3 43 1 43 2 1 10145 45 10189 1 937 45 10190 1 8599 45 10191 13 0 13 2 13 1 33 10192 18 3 43 1 43 2 1 10145 45 10193 1 942 45 10194 1 9073 45 10195 13 0 13 2 13 1 33 10196 18 3 43 1 43 2 1 10145 45 10197 1 947 45 10198 1 10199 45 10200 13 0 13 2 13 1 33 10201 18 3 43 1 43 2 1 10145 45 10202 1 953 45 10203 1 1039 45 10204 13 0 13 2 13 1 33 10205 18 3 43 1 43 2 1 10145 45 10206 1 958 45 10207 75 45 10208 13 0 13 2 13 1 33 10209 18 3 43 1 43 2 1 10145 45 10210 1 963 45 10211 75 45 10212 13 0 13 2 13 1 33 10213 18 3 43 1 43 2 1 10145 45 10214 1 968 45 10215 75 45 10216 13 0 13 2 13 1 33 10217 18 3 43 1 43 2 1 10145 45 10218 1 973 45 10219 75 45 10220 13 0 13 2 13 1 33 10221 18 3 43 1 43 2 77 75 3 78 10146 15 885 19 1 115 78 10222 1 10222 45 10224 1 829 45 10225 1 981 45 10226 13 0 13 2 13 1 33 10227 18 3 43 1 43 2 1 10222 45 10228 1 834 45 10229 1 10230 45 10231 13 0 13 2 13 1 33 10232 18 3 43 1 43 2 1 10222 45 10233 1 840 45 10234 1 10235 45 10236 13 0 13 2 13 1 33 10237 18 3 43 1 43 2 1 10222 45 10238 1 846 45 10239 75 45 10240 13 0 13 2 13 1 33 10241 18 3 43 1 43 2 1 10222 45 10242 1 906 45 10243 1 1000 45 10244 13 0 13 2 13 1 33 10245 18 3 43 1 43 2 1 10222 45 10246 1 911 45 10247 1 981 45 10248 13 0 13 2 13 1 33 10249 18 3 43 1 43 2 1 10222 45 10250 1 916 45 10251 1 918 45 10252 13 0 13 2 13 1 33 10253 18 3 43 1 43 2 1 10222 45 10254 1 922 45 10255 8 9 45 10256 13 0 13 2 13 1 33 10257 18 3 43 1 43 2 1 10222 45 10258 1 927 45 10259 75 45 10260 13 0 13 2 13 1 33 10261 18 3 43 1 43 2 1 10222 45 10262 1 932 45 10263 75 45 10264 13 0 13 2 13 1 33 10265 18 3 43 1 43 2 1 10222 45 10266 1 937 45 10267 1 10268 45 10269 13 0 13 2 13 1 33 10270 18 3 43 1 43 2 1 10222 45 10271 1 942 45 10272 1 9122 45 10273 13 0 13 2 13 1 33 10274 18 3 43 1 43 2 1 10222 45 10275 1 947 45 10276 1 10277 45 10278 13 0 13 2 13 1 33 10279 18 3 43 1 43 2 1 10222 45 10280 1 953 45 10281 1 1039 45 10282 13 0 13 2 13 1 33 10283 18 3 43 1 43 2 1 10222 45 10284 1 958 45 10285 75 45 10286 13 0 13 2 13 1 33 10287 18 3 43 1 43 2 1 10222 45 10288 1 963 45 10289 75 45 10290 13 0 13 2 13 1 33 10291 18 3 43 1 43 2 1 10222 45 10292 1 968 45 10293 75 45 10294 13 0 13 2 13 1 33 10295 18 3 43 1 43 2 1 10222 45 10296 1 973 45 10297 8 1 45 10298 13 0 13 2 13 1 33 10299 18 3 43 1 43 2 77 75 3 78 10223 15 885 19 1 115 78 10300 1 10300 45 10302 1 829 45 10303 1 8597 45 10304 13 0 13 2 13 1 33 10305 18 3 43 1 43 2 1 10300 45 10306 1 834 45 10307 1 10308 45 10309 13 0 13 2 13 1 33 10310 18 3 43 1 43 2 1 10300 45 10311 1 840 45 10312 1 10313 45 10314 13 0 13 2 13 1 33 10315 18 3 43 1 43 2 1 10300 45 10316 1 846 45 10317 75 45 10318 13 0 13 2 13 1 33 10319 18 3 43 1 43 2 1 10300 45 10320 1 906 45 10321 1 1000 45 10322 13 0 13 2 13 1 33 10323 18 3 43 1 43 2 1 10300 45 10324 1 911 45 10325 1 8597 45 10326 13 0 13 2 13 1 33 10327 18 3 43 1 43 2 1 10300 45 10328 1 916 45 10329 1 918 45 10330 13 0 13 2 13 1 33 10331 18 3 43 1 43 2 1 10300 45 10332 1 922 45 10333 8 10 45 10334 13 0 13 2 13 1 33 10335 18 3 43 1 43 2 1 10300 45 10336 1 927 45 10337 75 45 10338 13 0 13 2 13 1 33 10339 18 3 43 1 43 2 1 10300 45 10340 1 932 45 10341 75 45 10342 13 0 13 2 13 1 33 10343 18 3 43 1 43 2 1 10300 45 10344 1 937 45 10345 1 8598 45 10346 13 0 13 2 13 1 33 10347 18 3 43 1 43 2 1 10300 45 10348 1 942 45 10349 1 9175 45 10350 13 0 13 2 13 1 33 10351 18 3 43 1 43 2 1 10300 45 10352 1 947 45 10353 1 10354 45 10355 13 0 13 2 13 1 33 10356 18 3 43 1 43 2 1 10300 45 10357 1 953 45 10358 1 1039 45 10359 13 0 13 2 13 1 33 10360 18 3 43 1 43 2 1 10300 45 10361 1 958 45 10362 75 45 10363 13 0 13 2 13 1 33 10364 18 3 43 1 43 2 1 10300 45 10365 1 963 45 10366 75 45 10367 13 0 13 2 13 1 33 10368 18 3 43 1 43 2 1 10300 45 10369 1 968 45 10370 75 45 10371 13 0 13 2 13 1 33 10372 18 3 43 1 43 2 1 10300 45 10373 1 973 45 10374 75 45 10375 13 0 13 2 13 1 33 10376 18 3 43 1 43 2 77 75 3 78 10301 15 885 19 1 115 78 10377 1 10377 45 10379 1 829 45 10380 1 241 45 10381 13 0 13 2 13 1 33 10382 18 3 43 1 43 2 1 10377 45 10383 1 834 45 10384 1 10385 45 10386 13 0 13 2 13 1 33 10387 18 3 43 1 43 2 1 10377 45 10388 1 840 45 10389 1 10390 45 10391 13 0 13 2 13 1 33 10392 18 3 43 1 43 2 1 10377 45 10393 1 846 45 10394 75 45 10395 13 0 13 2 13 1 33 10396 18 3 43 1 43 2 1 10377 45 10397 1 906 45 10398 1 1000 45 10399 13 0 13 2 13 1 33 10400 18 3 43 1 43 2 1 10377 45 10401 1 911 45 10402 1 241 45 10403 13 0 13 2 13 1 33 10404 18 3 43 1 43 2 1 10377 45 10405 1 916 45 10406 1 918 45 10407 13 0 13 2 13 1 33 10408 18 3 43 1 43 2 1 10377 45 10409 1 922 45 10410 8 11 45 10411 13 0 13 2 13 1 33 10412 18 3 43 1 43 2 1 10377 45 10413 1 927 45 10414 75 45 10415 13 0 13 2 13 1 33 10416 18 3 43 1 43 2 1 10377 45 10417 1 932 45 10418 75 45 10419 13 0 13 2 13 1 33 10420 18 3 43 1 43 2 1 10377 45 10421 1 937 45 10422 1 8596 45 10423 13 0 13 2 13 1 33 10424 18 3 43 1 43 2 1 10377 45 10425 1 942 45 10426 1 9228 45 10427 13 0 13 2 13 1 33 10428 18 3 43 1 43 2 1 10377 45 10429 1 947 45 10430 1 10431 45 10432 13 0 13 2 13 1 33 10433 18 3 43 1 43 2 1 10377 45 10434 1 953 45 10435 1 1039 45 10436 13 0 13 2 13 1 33 10437 18 3 43 1 43 2 1 10377 45 10438 1 958 45 10439 75 45 10440 13 0 13 2 13 1 33 10441 18 3 43 1 43 2 1 10377 45 10442 1 963 45 10443 75 45 10444 13 0 13 2 13 1 33 10445 18 3 43 1 43 2 1 10377 45 10446 1 968 45 10447 75 45 10448 13 0 13 2 13 1 33 10449 18 3 43 1 43 2 1 10377 45 10450 1 973 45 10451 75 45 10452 13 0 13 2 13 1 33 10453 18 3 43 1 43 2 77 75 3 78 10378 15 885 19 1 115 78 10454 1 10454 45 10456 1 829 45 10457 1 981 45 10458 13 0 13 2 13 1 33 10459 18 3 43 1 43 2 1 10454 45 10460 1 834 45 10461 1 10462 45 10463 13 0 13 2 13 1 33 10464 18 3 43 1 43 2 1 10454 45 10465 1 840 45 10466 1 10467 45 10468 13 0 13 2 13 1 33 10469 18 3 43 1 43 2 1 10454 45 10470 1 846 45 10471 75 45 10472 13 0 13 2 13 1 33 10473 18 3 43 1 43 2 1 10454 45 10474 1 906 45 10475 1 1000 45 10476 13 0 13 2 13 1 33 10477 18 3 43 1 43 2 1 10454 45 10478 1 911 45 10479 1 981 45 10480 13 0 13 2 13 1 33 10481 18 3 43 1 43 2 1 10454 45 10482 1 916 45 10483 1 918 45 10484 13 0 13 2 13 1 33 10485 18 3 43 1 43 2 1 10454 45 10486 1 922 45 10487 8 12 45 10488 13 0 13 2 13 1 33 10489 18 3 43 1 43 2 1 10454 45 10490 1 927 45 10491 75 45 10492 13 0 13 2 13 1 33 10493 18 3 43 1 43 2 1 10454 45 10494 1 932 45 10495 75 45 10496 13 0 13 2 13 1 33 10497 18 3 43 1 43 2 1 10454 45 10498 1 937 45 10499 1 10500 45 10501 13 0 13 2 13 1 33 10502 18 3 43 1 43 2 1 10454 45 10503 1 942 45 10504 1 9277 45 10505 13 0 13 2 13 1 33 10506 18 3 43 1 43 2 1 10454 45 10507 1 947 45 10508 1 10509 45 10510 13 0 13 2 13 1 33 10511 18 3 43 1 43 2 1 10454 45 10512 1 953 45 10513 1 1039 45 10514 13 0 13 2 13 1 33 10515 18 3 43 1 43 2 1 10454 45 10516 1 958 45 10517 75 45 10518 13 0 13 2 13 1 33 10519 18 3 43 1 43 2 1 10454 45 10520 1 963 45 10521 75 45 10522 13 0 13 2 13 1 33 10523 18 3 43 1 43 2 1 10454 45 10524 1 968 45 10525 75 45 10526 13 0 13 2 13 1 33 10527 18 3 43 1 43 2 1 10454 45 10528 1 973 45 10529 8 2 45 10530 13 0 13 2 13 1 33 10531 18 3 43 1 43 2 77 75 3 78 10455 15 885 19 1 115 78 10532 1 10532 45 10534 1 829 45 10535 1 981 45 10536 13 0 13 2 13 1 33 10537 18 3 43 1 43 2 1 10532 45 10538 1 834 45 10539 1 10540 45 10541 13 0 13 2 13 1 33 10542 18 3 43 1 43 2 1 10532 45 10543 1 840 45 10544 1 10545 45 10546 13 0 13 2 13 1 33 10547 18 3 43 1 43 2 1 10532 45 10548 1 846 45 10549 75 45 10550 13 0 13 2 13 1 33 10551 18 3 43 1 43 2 1 10532 45 10552 1 906 45 10553 1 1000 45 10554 13 0 13 2 13 1 33 10555 18 3 43 1 43 2 1 10532 45 10556 1 911 45 10557 1 981 45 10558 13 0 13 2 13 1 33 10559 18 3 43 1 43 2 1 10532 45 10560 1 916 45 10561 1 918 45 10562 13 0 13 2 13 1 33 10563 18 3 43 1 43 2 1 10532 45 10564 1 922 45 10565 8 13 45 10566 13 0 13 2 13 1 33 10567 18 3 43 1 43 2 1 10532 45 10568 1 927 45 10569 75 45 10570 13 0 13 2 13 1 33 10571 18 3 43 1 43 2 1 10532 45 10572 1 932 45 10573 75 45 10574 13 0 13 2 13 1 33 10575 18 3 43 1 43 2 1 10532 45 10576 1 937 45 10577 1 10578 45 10579 13 0 13 2 13 1 33 10580 18 3 43 1 43 2 1 10532 45 10581 1 942 45 10582 1 9326 45 10583 13 0 13 2 13 1 33 10584 18 3 43 1 43 2 1 10532 45 10585 1 947 45 10586 1 10587 45 10588 13 0 13 2 13 1 33 10589 18 3 43 1 43 2 1 10532 45 10590 1 953 45 10591 1 1039 45 10592 13 0 13 2 13 1 33 10593 18 3 43 1 43 2 1 10532 45 10594 1 958 45 10595 75 45 10596 13 0 13 2 13 1 33 10597 18 3 43 1 43 2 1 10532 45 10598 1 963 45 10599 75 45 10600 13 0 13 2 13 1 33 10601 18 3 43 1 43 2 1 10532 45 10602 1 968 45 10603 75 45 10604 13 0 13 2 13 1 33 10605 18 3 43 1 43 2 1 10532 45 10606 1 973 45 10607 8 3 45 10608 13 0 13 2 13 1 33 10609 18 3 43 1 43 2 77 75 3 78 10533 15 885 19 1 115 78 10610 1 10610 45 10612 1 829 45 10613 1 3365 45 10614 13 0 13 2 13 1 33 10615 18 3 43 1 43 2 1 10610 45 10616 1 834 45 10617 1 10618 45 10619 13 0 13 2 13 1 33 10620 18 3 43 1 43 2 1 10610 45 10621 1 840 45 10622 1 10623 45 10624 13 0 13 2 13 1 33 10625 18 3 43 1 43 2 1 10610 45 10626 1 846 45 10627 75 45 10628 13 0 13 2 13 1 33 10629 18 3 43 1 43 2 1 10610 45 10630 1 906 45 10631 1 1000 45 10632 13 0 13 2 13 1 33 10633 18 3 43 1 43 2 1 10610 45 10634 1 911 45 10635 1 3365 45 10636 13 0 13 2 13 1 33 10637 18 3 43 1 43 2 1 10610 45 10638 1 916 45 10639 1 918 45 10640 13 0 13 2 13 1 33 10641 18 3 43 1 43 2 1 10610 45 10642 1 922 45 10643 8 14 45 10644 13 0 13 2 13 1 33 10645 18 3 43 1 43 2 1 10610 45 10646 1 927 45 10647 75 45 10648 13 0 13 2 13 1 33 10649 18 3 43 1 43 2 1 10610 45 10650 1 932 45 10651 75 45 10652 13 0 13 2 13 1 33 10653 18 3 43 1 43 2 1 10610 45 10654 1 937 45 10655 1 8595 45 10656 13 0 13 2 13 1 33 10657 18 3 43 1 43 2 1 10610 45 10658 1 942 45 10659 1 9379 45 10660 13 0 13 2 13 1 33 10661 18 3 43 1 43 2 1 10610 45 10662 1 947 45 10663 1 10664 45 10665 13 0 13 2 13 1 33 10666 18 3 43 1 43 2 1 10610 45 10667 1 953 45 10668 1 1039 45 10669 13 0 13 2 13 1 33 10670 18 3 43 1 43 2 1 10610 45 10671 1 958 45 10672 75 45 10673 13 0 13 2 13 1 33 10674 18 3 43 1 43 2 1 10610 45 10675 1 963 45 10676 75 45 10677 13 0 13 2 13 1 33 10678 18 3 43 1 43 2 1 10610 45 10679 1 968 45 10680 75 45 10681 13 0 13 2 13 1 33 10682 18 3 43 1 43 2 1 10610 45 10683 1 973 45 10684 75 45 10685 13 0 13 2 13 1 33 10686 18 3 43 1 43 2 77 75 3 78 10611 15 885 19 1 115 78 10687 1 10687 45 10688 1 829 45 10689 1 241 45 10690 13 0 13 2 13 1 33 10691 18 3 43 1 43 2 1 10687 45 10692 1 834 45 10693 1 10694 45 10695 13 0 13 2 13 1 33 10696 18 3 43 1 43 2 1 10687 45 10697 1 840 45 10698 1 10699 45 10700 13 0 13 2 13 1 33 10701 18 3 43 1 43 2 1 10687 45 10702 1 846 45 10703 75 45 10704 13 0 13 2 13 1 33 10705 18 3 43 1 43 2 1 10687 45 10706 1 906 45 10707 1 1000 45 10708 13 0 13 2 13 1 33 10709 18 3 43 1 43 2 1 10687 45 10710 1 911 45 10711 1 241 45 10712 13 0 13 2 13 1 33 10713 18 3 43 1 43 2 1 10687 45 10714 1 916 45 10715 1 10716 45 10717 13 0 13 2 13 1 33 10718 18 3 43 1 43 2 1 10687 45 10719 1 922 45 10720 8 103 45 10721 13 0 13 2 13 1 33 10722 18 3 43 1 43 2 1 10687 45 10723 1 927 45 10724 75 45 10725 13 0 13 2 13 1 33 10726 18 3 43 1 43 2 1 10687 45 10727 1 932 45 10728 75 45 10729 13 0 13 2 13 1 33 10730 18 3 43 1 43 2 1 10687 45 10731 1 937 45 10732 1 8594 45 10733 13 0 13 2 13 1 33 10734 18 3 43 1 43 2 1 10687 45 10735 1 942 45 10736 1 9432 45 10737 13 0 13 2 13 1 33 10738 18 3 43 1 43 2 1 10687 45 10739 1 947 45 10740 1 10741 45 10742 13 0 13 2 13 1 33 10743 18 3 43 1 43 2 1 10687 45 10744 1 953 45 10745 1 1039 45 10746 13 0 13 2 13 1 33 10747 18 3 43 1 43 2 1 10687 45 10748 1 958 45 10749 75 45 10750 13 0 13 2 13 1 33 10751 18 3 43 1 43 2 1 10687 45 10752 1 963 45 10753 1 10754 45 10755 13 0 13 2 13 1 33 10756 18 3 43 1 43 2 1 10687 45 10757 1 968 45 10758 75 45 10759 13 0 13 2 13 1 33 10760 18 3 43 1 43 2 1 10687 45 10761 1 973 45 10762 75 45 10763 13 0 13 2 13 1 33 10764 18 3 43 1 43 2 15 10611 1 10687 17 122 15 10611 75 17 124 15 10533 1 10610 17 122 15 10533 1 10611 17 124 15 10455 1 10532 17 122 15 10455 1 10533 17 124 15 10378 1 10454 17 122 15 10378 1 10455 17 124 15 10301 1 10377 17 122 15 10301 1 10378 17 124 15 10223 1 10300 17 122 15 10223 1 10301 17 124 15 10146 1 10222 17 122 15 10146 1 10223 17 124 15 10069 1 10145 17 122 15 10069 1 10146 17 124 15 9992 1 10068 17 122 15 9992 1 10069 17 124 15 9915 1 9991 17 122 15 9915 1 9992 17 124 15 9838 1 9914 17 122 15 9838 1 9915 17 124 15 9761 1 9837 17 122 15 9761 1 9838 17 124 15 9684 1 9760 17 122 15 9684 1 9761 17 124 15 9606 1 9683 17 122 15 9606 1 9684 17 124 15 9586 1 9605 17 122 15 9586 1 9606 17 124 1 9561 45 9562 1 829 45 9563 1 8556 45 9564 13 0 13 2 13 1 33 9565 18 3 43 1 43 2 1 9561 45 9566 1 834 45 9567 1 9568 45 9569 13 0 13 2 13 1 33 9570 18 3 43 1 43 2 1 9561 45 9571 1 840 45 9572 1 9573 45 9574 13 0 13 2 13 1 33 9575 18 3 43 1 43 2 1 9561 45 9576 1 846 45 9577 75 45 9578 13 0 13 2 13 1 33 9579 18 3 43 1 43 2 1 9561 45 9580 1 851 45 9581 75 45 9582 13 0 13 2 13 1 33 9583 18 3 43 1 43 2 1 9561 45 9584 1 856 45 9585 1 9586 45 9587 13 0 13 2 13 1 33 9588 18 3 43 1 43 2 1 9561 45 9589 1 862 45 9590 75 45 9591 13 0 13 2 13 1 33 9592 18 3 43 1 43 2 15 9561 1 866 17 867 1 9561 45 9593 1 869 45 9594 75 45 9595 13 0 13 2 13 1 33 9596 18 3 43 1 43 2 1 9561 45 9597 1 874 45 9598 75 45 9599 13 0 13 2 13 1 33 9600 18 3 43 1 43 2 1 9561 45 9601 1 879 45 9602 1 824 45 9603 13 0 13 2 13 1 33 9604 18 3 43 1 43 2 15 8556 15 9561 14 824 19 3 113 15 10765 15 10766 15 10767 19 3 17 15 10768 15 10769 15 10770 19 3 17 15 10771 15 22 15 10772 15 10773 19 4 25 15 10771 14 26 77 15 27 19 4 25 15 10771 1 10777 12 19 2 44 15 10778 15 22 15 10779 15 10780 19 4 25 15 10778 14 26 77 15 48 19 4 25 15 10778 1 10781 12 19 2 44 1 10768 45 10782 1 60 45 10783 1 10778 45 10784 13 2 13 0 13 1 19 3 63 43 1 43 2 1 10768 45 10785 1 65 45 10786 1 10771 45 10787 13 2 13 0 13 1 19 3 63 43 1 43 2 15 65 15 22 15 10788 15 10789 19 4 25 15 65 77 15 10790 15 10791 1 10792 12 19 5 75 15 60 15 22 15 10793 15 10794 19 4 25 15 60 77 15 10795 15 10796 1 10797 12 19 5 75 15 10798 8 0 17 82 15 10798 15 22 15 10799 15 10800 19 4 25 15 10801 8 1 17 82 15 10801 15 22 15 10802 15 10803 19 4 25 15 10804 8 2 17 82 15 10804 15 22 15 10805 15 10806 19 4 25 15 10807 19 1 104 15 105 15 22 15 10808 15 10809 19 4 25 15 105 77 15 10810 15 10811 1 10812 12 19 5 75 15 114 19 1 115 78 10813 77 75 3 78 10815 15 125 19 1 115 78 10816 15 10816 15 126 9 0 15 10774 19 4 118 15 10816 15 126 9 1 9 0 19 4 118 77 75 3 78 10817 15 125 19 1 115 78 10818 15 10818 15 126 9 0 15 10775 19 4 118 15 10818 15 126 9 1 9 1 19 4 118 77 75 3 78 10819 15 125 19 1 115 78 10820 15 10820 15 126 9 0 15 10776 19 4 118 15 10820 15 126 9 1 9 2 19 4 118 15 10819 1 10820 17 122 15 10819 75 17 124 15 10817 1 10818 17 122 15 10817 1 10819 17 124 15 10815 1 10816 17 122 15 10815 1 10817 17 124 15 10813 15 116 9 0 15 10768 19 4 118 15 10813 15 116 9 1 15 10814 19 4 118 15 10813 15 116 9 2 15 10815 19 4 118 15 10768 15 10813 14 112 19 3 113 15 10821 19 1 104 15 196 15 10822 19 2 198 15 10823 15 10824 77 77 15 10825 15 10826 15 10827 15 204 77 77 15 10828 9 6 77 77 77 19 15 206 15 10829 15 22 15 10830 15 10831 19 4 25 15 10832 15 22 15 10833 15 10834 19 4 25 15 10832 14 26 77 15 10835 19 4 25 15 10823 19 1 117 78 10854 15 10832 1 10855 12 19 2 44 15 10832 15 253 15 10856 19 3 255 1 10857 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 10858 14 11 13 0 19 6 265 43 1 15 10857 15 266 1 10860 12 19 3 255 1 10861 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 10862 14 11 13 0 19 6 265 43 1 15 10861 15 266 1 10864 12 19 3 255 1 10865 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 10866 14 11 13 0 19 6 265 43 1 15 10865 15 266 1 10868 12 19 3 255 1 10869 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 10870 14 11 13 0 19 6 265 43 1 15 10869 15 266 1 10872 12 19 3 255 1 10873 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 10874 14 11 13 0 19 6 265 43 1 15 10873 15 266 1 10876 12 19 3 255 1 10877 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 10878 14 11 13 0 19 6 265 43 1 15 10877 15 266 1 10880 12 19 3 255 15 196 15 10881 19 2 198 15 10882 15 22 15 10883 15 10884 19 4 25 15 10882 14 26 77 15 10885 19 4 25 15 10882 1 10887 12 19 2 44 15 10882 15 253 15 10888 19 3 255 15 196 15 10889 19 2 198 15 10890 15 22 15 10891 15 10892 19 4 25 15 10890 14 26 77 15 10893 19 4 25 15 10890 1 10896 12 19 2 44 15 10890 15 253 15 10897 19 3 255 15 196 15 10898 19 2 198 15 10899 15 22 15 10900 15 10901 19 4 25 15 10899 14 26 77 15 10902 19 4 25 15 10899 1 10904 12 19 2 44 15 10899 15 253 15 10905 19 3 255 15 196 15 10906 19 2 198 15 10907 15 22 15 10908 15 10909 19 4 25 15 10907 14 26 77 15 10910 19 4 25 15 10907 1 10911 12 19 2 44 15 10907 15 253 15 10912 19 3 255 15 10913 15 22 15 10914 15 10915 19 4 25 15 10913 77 15 10916 15 10917 1 10918 12 19 5 75 15 10919 15 22 15 10920 15 10921 19 4 25 15 10919 77 15 10922 15 10923 1 10927 12 19 5 75 15 10823 15 10913 19 2 359 15 10928 19 1 104 15 10929 19 1 104 15 196 15 10930 19 2 198 15 10931 15 22 15 10932 15 10933 19 4 25 15 10931 14 26 77 15 10934 19 4 25 15 10931 1 10936 12 19 2 44 15 10931 15 253 15 10937 19 3 255 15 196 15 10938 19 2 198 15 10939 15 22 15 10940 15 10941 19 4 25 15 10939 14 26 77 15 10942 19 4 25 15 10939 1 10947 12 19 2 44 15 10939 15 253 15 10948 19 3 255 15 196 15 10949 19 2 198 15 10950 15 22 15 10951 15 10952 19 4 25 15 10950 14 26 77 15 10953 19 4 25 15 10950 1 10955 12 19 2 44 15 10950 15 253 15 10956 19 3 255 15 196 15 10957 19 2 198 15 10958 15 22 15 10959 15 10960 19 4 25 15 10958 14 26 77 15 10961 19 4 25 15 10958 1 10964 12 19 2 44 15 10958 15 253 15 10965 19 3 255 15 10966 15 22 15 10967 15 10968 19 4 25 15 10966 77 15 10969 15 10970 1 10971 12 19 5 75 15 10972 15 22 15 10973 15 10974 19 4 25 15 10972 77 15 10975 15 10976 1 10980 12 19 5 75 15 10823 15 10966 19 2 359 15 10981 19 1 104 15 10982 19 1 104 15 196 15 10983 19 2 198 15 10984 15 22 15 10985 15 10986 19 4 25 15 10984 14 26 77 15 10987 19 4 25 15 10984 1 10989 12 19 2 44 15 10984 15 253 15 10990 19 3 255 15 196 15 10991 19 2 198 15 10992 15 22 15 10993 15 10994 19 4 25 15 10992 14 26 77 15 10995 19 4 25 15 10992 1 11000 12 19 2 44 15 10992 15 253 15 11001 19 3 255 15 196 15 11002 19 2 198 15 11003 15 22 15 11004 15 11005 19 4 25 15 11003 14 26 77 15 11006 19 4 25 15 11003 1 11008 12 19 2 44 15 11003 15 253 15 11009 19 3 255 15 196 15 11010 19 2 198 15 11011 15 22 15 11012 15 11013 19 4 25 15 11011 14 26 77 15 11014 19 4 25 15 11011 1 11017 12 19 2 44 15 11011 15 253 15 11018 19 3 255 15 11019 15 22 15 11020 15 11021 19 4 25 15 11019 77 15 11022 15 11023 1 11024 12 19 5 75 15 11025 15 22 15 11026 15 11027 19 4 25 15 11025 77 15 11028 15 11029 1 11033 12 19 5 75 15 10823 15 11019 19 2 359 15 11034 19 1 104 15 11035 19 1 104 15 196 15 11036 19 2 198 15 11037 15 22 15 11038 15 11039 19 4 25 15 11037 14 26 77 15 11040 19 4 25 15 11037 1 11052 12 19 2 44 15 11037 15 253 15 11053 19 3 255 15 11054 15 22 15 11055 15 11056 19 4 25 15 11054 14 26 77 15 11057 19 4 25 15 11054 1 11058 12 19 2 44 15 11059 19 1 104 15 815 15 22 15 11060 15 11061 19 4 25 15 815 77 15 11062 15 11063 1 11066 12 19 5 75 15 825 19 1 115 45 826 15 824 13 0 14 824 19 3 113 10 0 43 1 78 11067 77 75 3 78 11092 15 885 19 1 115 78 11111 1 11111 45 11113 1 829 45 11114 1 981 45 11115 13 0 13 2 13 1 33 11116 18 3 43 1 43 2 1 11111 45 11117 1 834 45 11118 1 11119 45 11120 13 0 13 2 13 1 33 11121 18 3 43 1 43 2 1 11111 45 11122 1 840 45 11123 1 11124 45 11125 13 0 13 2 13 1 33 11126 18 3 43 1 43 2 1 11111 45 11127 1 846 45 11128 75 45 11129 13 0 13 2 13 1 33 11130 18 3 43 1 43 2 1 11111 45 11131 1 906 45 11132 1 1000 45 11133 13 0 13 2 13 1 33 11134 18 3 43 1 43 2 1 11111 45 11135 1 911 45 11136 1 981 45 11137 13 0 13 2 13 1 33 11138 18 3 43 1 43 2 1 11111 45 11139 1 916 45 11140 1 918 45 11141 13 0 13 2 13 1 33 11142 18 3 43 1 43 2 1 11111 45 11143 1 922 45 11144 8 1 45 11145 13 0 13 2 13 1 33 11146 18 3 43 1 43 2 1 11111 45 11147 1 927 45 11148 75 45 11149 13 0 13 2 13 1 33 11150 18 3 43 1 43 2 1 11111 45 11151 1 932 45 11152 75 45 11153 13 0 13 2 13 1 33 11154 18 3 43 1 43 2 1 11111 45 11155 1 937 45 11156 1 11157 45 11158 13 0 13 2 13 1 33 11159 18 3 43 1 43 2 1 11111 45 11160 1 942 45 11161 1 10913 45 11162 13 0 13 2 13 1 33 11163 18 3 43 1 43 2 1 11111 45 11164 1 947 45 11165 1 11166 45 11167 13 0 13 2 13 1 33 11168 18 3 43 1 43 2 1 11111 45 11169 1 953 45 11170 1 1039 45 11171 13 0 13 2 13 1 33 11172 18 3 43 1 43 2 1 11111 45 11173 1 958 45 11174 75 45 11175 13 0 13 2 13 1 33 11176 18 3 43 1 43 2 1 11111 45 11177 1 963 45 11178 75 45 11179 13 0 13 2 13 1 33 11180 18 3 43 1 43 2 1 11111 45 11181 1 968 45 11182 75 45 11183 13 0 13 2 13 1 33 11184 18 3 43 1 43 2 1 11111 45 11185 1 973 45 11186 8 0 45 11187 13 0 13 2 13 1 33 11188 18 3 43 1 43 2 77 75 3 78 11112 15 885 19 1 115 78 11189 1 11189 45 11191 1 829 45 11192 1 10768 45 11193 13 0 13 2 13 1 33 11194 18 3 43 1 43 2 1 11189 45 11195 1 834 45 11196 1 11197 45 11198 13 0 13 2 13 1 33 11199 18 3 43 1 43 2 1 11189 45 11200 1 840 45 11201 1 11202 45 11203 13 0 13 2 13 1 33 11204 18 3 43 1 43 2 1 11189 45 11205 1 846 45 11206 75 45 11207 13 0 13 2 13 1 33 11208 18 3 43 1 43 2 1 11189 45 11209 1 906 45 11210 1 112 45 11211 13 0 13 2 13 1 33 11212 18 3 43 1 43 2 1 11189 45 11213 1 911 45 11214 1 10765 45 11215 13 0 13 2 13 1 33 11216 18 3 43 1 43 2 1 11189 45 11217 1 916 45 11218 1 918 45 11219 13 0 13 2 13 1 33 11220 18 3 43 1 43 2 1 11189 45 11221 1 922 45 11222 8 2 45 11223 13 0 13 2 13 1 33 11224 18 3 43 1 43 2 1 11189 45 11225 1 927 45 11226 75 45 11227 13 0 13 2 13 1 33 11228 18 3 43 1 43 2 1 11189 45 11229 1 932 45 11230 75 45 11231 13 0 13 2 13 1 33 11232 18 3 43 1 43 2 1 11189 45 11233 1 937 45 11234 1 10851 45 11235 13 0 13 2 13 1 33 11236 18 3 43 1 43 2 1 11189 45 11237 1 942 45 11238 1 10966 45 11239 13 0 13 2 13 1 33 11240 18 3 43 1 43 2 1 11189 45 11241 1 947 45 11242 1 11243 45 11244 13 0 13 2 13 1 33 11245 18 3 43 1 43 2 1 11189 45 11246 1 953 45 11247 1 10774 45 11248 13 0 13 2 13 1 33 11249 18 3 43 1 43 2 1 11189 45 11250 1 958 45 11251 75 45 11252 13 0 13 2 13 1 33 11253 18 3 43 1 43 2 1 11189 45 11254 1 963 45 11255 75 45 11256 13 0 13 2 13 1 33 11257 18 3 43 1 43 2 1 11189 45 11258 1 968 45 11259 75 45 11260 13 0 13 2 13 1 33 11261 18 3 43 1 43 2 1 11189 45 11262 1 973 45 11263 75 45 11264 13 0 13 2 13 1 33 11265 18 3 43 1 43 2 77 75 3 78 11190 15 885 19 1 115 78 11266 1 11266 45 11267 1 829 45 11268 1 241 45 11269 13 0 13 2 13 1 33 11270 18 3 43 1 43 2 1 11266 45 11271 1 834 45 11272 1 11273 45 11274 13 0 13 2 13 1 33 11275 18 3 43 1 43 2 1 11266 45 11276 1 840 45 11277 1 11278 45 11279 13 0 13 2 13 1 33 11280 18 3 43 1 43 2 1 11266 45 11281 1 846 45 11282 75 45 11283 13 0 13 2 13 1 33 11284 18 3 43 1 43 2 1 11266 45 11285 1 906 45 11286 1 1000 45 11287 13 0 13 2 13 1 33 11288 18 3 43 1 43 2 1 11266 45 11289 1 911 45 11290 1 241 45 11291 13 0 13 2 13 1 33 11292 18 3 43 1 43 2 1 11266 45 11293 1 916 45 11294 1 918 45 11295 13 0 13 2 13 1 33 11296 18 3 43 1 43 2 1 11266 45 11297 1 922 45 11298 8 3 45 11299 13 0 13 2 13 1 33 11300 18 3 43 1 43 2 1 11266 45 11301 1 927 45 11302 75 45 11303 13 0 13 2 13 1 33 11304 18 3 43 1 43 2 1 11266 45 11305 1 932 45 11306 75 45 11307 13 0 13 2 13 1 33 11308 18 3 43 1 43 2 1 11266 45 11309 1 937 45 11310 1 10850 45 11311 13 0 13 2 13 1 33 11312 18 3 43 1 43 2 1 11266 45 11313 1 942 45 11314 1 11019 45 11315 13 0 13 2 13 1 33 11316 18 3 43 1 43 2 1 11266 45 11317 1 947 45 11318 1 11319 45 11320 13 0 13 2 13 1 33 11321 18 3 43 1 43 2 1 11266 45 11322 1 953 45 11323 1 1039 45 11324 13 0 13 2 13 1 33 11325 18 3 43 1 43 2 1 11266 45 11326 1 958 45 11327 75 45 11328 13 0 13 2 13 1 33 11329 18 3 43 1 43 2 1 11266 45 11330 1 963 45 11331 75 45 11332 13 0 13 2 13 1 33 11333 18 3 43 1 43 2 1 11266 45 11334 1 968 45 11335 75 45 11336 13 0 13 2 13 1 33 11337 18 3 43 1 43 2 1 11266 45 11338 1 973 45 11339 75 45 11340 13 0 13 2 13 1 33 11341 18 3 43 1 43 2 15 11190 1 11266 17 122 15 11190 75 17 124 15 11112 1 11189 17 122 15 11112 1 11190 17 124 15 11092 1 11111 17 122 15 11092 1 11112 17 124 1 11067 45 11068 1 829 45 11069 1 10823 45 11070 13 0 13 2 13 1 33 11071 18 3 43 1 43 2 1 11067 45 11072 1 834 45 11073 1 11074 45 11075 13 0 13 2 13 1 33 11076 18 3 43 1 43 2 1 11067 45 11077 1 840 45 11078 1 11079 45 11080 13 0 13 2 13 1 33 11081 18 3 43 1 43 2 1 11067 45 11082 1 846 45 11083 75 45 11084 13 0 13 2 13 1 33 11085 18 3 43 1 43 2 1 11067 45 11086 1 851 45 11087 75 45 11088 13 0 13 2 13 1 33 11089 18 3 43 1 43 2 1 11067 45 11090 1 856 45 11091 1 11092 45 11093 13 0 13 2 13 1 33 11094 18 3 43 1 43 2 1 11067 45 11095 1 862 45 11096 75 45 11097 13 0 13 2 13 1 33 11098 18 3 43 1 43 2 15 11067 1 866 17 867 1 11067 45 11099 1 869 45 11100 75 45 11101 13 0 13 2 13 1 33 11102 18 3 43 1 43 2 1 11067 45 11103 1 874 45 11104 75 45 11105 13 0 13 2 13 1 33 11106 18 3 43 1 43 2 1 11067 45 11107 1 879 45 11108 1 824 45 11109 13 0 13 2 13 1 33 11110 18 3 43 1 43 2 15 10823 15 11067 14 824 19 3 113 15 196 15 11342 19 2 198 15 8 15 11343 77 77 15 11344 15 11345 15 11346 15 204 77 77 15 11347 9 4 77 77 77 19 15 206 15 11348 15 22 15 11349 15 11350 19 4 25 15 11351 15 22 15 11352 15 11353 19 4 25 15 11351 14 26 77 15 11354 19 4 25 15 8 19 1 117 78 11369 15 11351 1 11370 12 19 2 44 15 11351 15 253 15 11371 19 3 255 1 11372 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 11373 14 11 13 0 19 6 265 43 1 15 11372 15 266 1 11375 12 19 3 255 1 11376 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 11377 14 11 13 0 19 6 265 43 1 15 11376 15 266 1 11379 12 19 3 255 1 11380 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 11381 14 11 13 0 19 6 265 43 1 15 11380 15 266 1 11383 12 19 3 255 1 11384 16 257 45 258 10 0 39 10 10 0 16 259 39 4 11 260 76 39 16 15 261 15 262 15 263 15 11385 14 11 13 0 19 6 265 43 1 15 11384 15 266 1 11387 12 19 3 255 15 196 15 11388 19 2 198 15 11389 15 22 15 11390 15 11391 19 4 25 15 11389 14 26 77 15 11392 19 4 25 15 11389 1 11406 12 19 2 44 15 11389 15 253 15 11407 19 3 255 15 196 15 11408 19 2 198 15 11409 15 22 15 11410 15 11411 19 4 25 15 11409 14 26 77 15 11412 19 4 25 15 11409 1 11414 12 19 2 44 15 11409 15 253 15 11415 19 3 255 15 196 15 11416 19 2 198 15 11417 15 22 15 11418 15 11419 19 4 25 15 11417 14 26 77 15 11420 19 4 25 15 11417 1 11421 12 19 2 44 15 11417 15 253 15 11422 19 3 255 15 196 15 11423 19 2 198 15 11424 15 22 15 11425 15 11426 19 4 25 15 11424 14 26 77 15 11427 19 4 25 15 11424 1 11432 12 19 2 44 15 11424 15 253 15 11433 19 3 255 15 11434 19 1 104 15 196 15 11435 19 2 198 15 11436 15 22 15 11437 15 11438 19 4 25 15 11436 14 26 77 15 11439 19 4 25 15 11436 1 11442 12 19 2 44 15 11436 15 253 15 11443 19 3 255 15 196 15 11444 19 2 198 15 11445 15 22 15 11446 15 11447 19 4 25 15 11445 14 26 77 15 11448 19 4 25 15 11445 1 11454 12 19 2 44 15 11445 15 253 15 11455 19 3 255 15 196 15 11456 19 2 198 15 11457 15 22 15 11458 15 11459 19 4 25 15 11457 14 26 77 15 11460 19 4 25 15 11457 1 11461 12 19 2 44 15 11457 15 253 15 11462 19 3 255 15 196 15 11463 19 2 198 15 11464 15 22 15 11465 15 11466 19 4 25 15 11464 14 26 77 15 11467 19 4 25 15 11464 1 11468 12 19 2 44 15 11464 15 253 15 11469 19 3 255 15 196 15 11470 19 2 198 15 11471 15 22 15 11472 15 11473 19 4 25 15 11471 14 26 77 15 11474 19 4 25 15 11471 1 11479 12 19 2 44 15 11471 15 253 15 11480 19 3 255 15 11396 15 22 15 11481 15 11482 19 4 25 15 11396 77 15 11483 15 11484 1 11485 12 19 5 75 15 11486 15 22 15 11487 15 11488 19 4 25 15 11486 77 15 11489 15 11490 1 11494 12 19 5 75 15 8 15 11396 19 2 359 15 11495 19 1 104 15 196 15 11496 19 2 198 15 11497 15 22 15 11498 15 11499 19 4 25 15 11497 14 26 77 15 11500 19 4 25 15 11497 1 11502 12 19 2 44 15 11497 15 253 15 11503 19 3 255 15 196 15 11504 19 2 198 15 11505 15 22 15 11506 15 11507 19 4 25 15 11505 14 26 77 15 11508 19 4 25 15 11505 1 11514 12 19 2 44 15 11505 15 253 15 11515 19 3 255 15 196 15 11516 19 2 198 15 11517 15 22 15 11518 15 11519 19 4 25 15 11517 14 26 77 15 11520 19 4 25 15 11517 1 11521 12 19 2 44 15 11517 15 253 15 11522 19 3 255 15 196 15 11523 19 2 198 15 11524 15 22 15 11525 15 11526 19 4 25 15 11524 14 26 77 15 11527 19 4 25 15 11524 1 11528 12 19 2 44 15 11524 15 253 15 11529 19 3 255 15 196 15 11530 19 2 198 15 11531 15 22 15 11532 15 11533 19 4 25 15 11531 14 26 77 15 11534 19 4 25 15 11531 1 11539 12 19 2 44 15 11531 15 253 15 11540 19 3 255 15 11397 15 22 15 11541 15 11542 19 4 25 15 11397 77 15 11543 15 11544 1 11545 12 19 5 75 15 11546 15 22 15 11547 15 11548 19 4 25 15 11546 77 15 11549 15 11550 1 11554 12 19 5 75 15 8 15 11397 19 2 359 15 11555 19 1 104 15 196 15 11556 19 2 198 15 11557 15 22 15 11558 15 11559 19 4 25 15 11557 14 26 77 15 11560 19 4 25 15 11557 1 11562 12 19 2 44 15 11557 15 253 15 11563 19 3 255 15 196 15 11564 19 2 198 15 11565 15 22 15 11566 15 11567 19 4 25 15 11565 14 26 77 15 11568 19 4 25 15 11565 1 11574 12 19 2 44 15 11565 15 253 15 11575 19 3 255 15 196 15 11576 19 2 198 15 11577 15 22 15 11578 15 11579 19 4 25 15 11577 14 26 77 15 11580 19 4 25 15 11577 1 11581 12 19 2 44 15 11577 15 253 15 11582 19 3 255 15 196 15 11583 19 2 198 15 11584 15 22 15 11585 15 11586 19 4 25 15 11584 14 26 77 15 11587 19 4 25 15 11584 1 11588 12 19 2 44 15 11584 15 253 15 11589 19 3 255 15 196 15 11590 19 2 198 15 11591 15 22 15 11592 15 11593 19 4 25 15 11591 14 26 77 15 11594 19 4 25 15 11591 1 11599 12 19 2 44 15 11591 15 253 15 11600 19 3 255 15 11398 15 22 15 11601 15 11602 19 4 25 15 11398 77 15 11603 15 11604 1 11605 12 19 5 75 15 11606 15 22 15 11607 15 11608 19 4 25 15 11606 77 15 11609 15 11610 1 11614 12 19 5 75 15 8 15 11398 19 2 359 15 11615 19 1 104 15 196 15 11616 19 2 198 15 11617 15 22 15 11618 15 11619 19 4 25 15 11617 14 26 77 15 11620 19 4 25 15 11617 1 11622 12 19 2 44 15 11617 15 253 15 11623 19 3 255 15 196 15 11624 19 2 198 15 11625 15 22 15 11626 15 11627 19 4 25 15 11625 14 26 77 15 11628 19 4 25 15 11625 1 11634 12 19 2 44 15 11625 15 253 15 11635 19 3 255 15 196 15 11636 19 2 198 15 11637 15 22 15 11638 15 11639 19 4 25 15 11637 14 26 77 15 11640 19 4 25 15 11637 1 11641 12 19 2 44 15 11637 15 253 15 11642 19 3 255 15 196 15 11643 19 2 198 15 11644 15 22 15 11645 15 11646 19 4 25 15 11644 14 26 77 15 11647 19 4 25 15 11644 1 11648 12 19 2 44 15 11644 15 253 15 11649 19 3 255 15 196 15 11650 19 2 198 15 11651 15 22 15 11652 15 11653 19 4 25 15 11651 14 26 77 15 11654 19 4 25 15 11651 1 11659 12 19 2 44 15 11651 15 253 15 11660 19 3 255 15 11399 15 22 15 11661 15 11662 19 4 25 15 11399 77 15 11663 15 11664 1 11665 12 19 5 75 15 11666 15 22 15 11667 15 11668 19 4 25 15 11666 77 15 11669 15 11670 1 11674 12 19 5 75 15 8 15 11399 19 2 359 15 11675 19 1 104 15 196 15 11676 19 2 198 15 11677 15 22 15 11678 15 11679 19 4 25 15 11677 14 26 77 15 11680 19 4 25 15 11677 1 11682 12 19 2 44 15 11677 15 253 15 11683 19 3 255 15 196 15 11684 19 2 198 15 11685 15 22 15 11686 15 11687 19 4 25 15 11685 14 26 77 15 11688 19 4 25 15 11685 1 11694 12 19 2 44 15 11685 15 253 15 11695 19 3 255 15 196 15 11696 19 2 198 15 11697 15 22 15 11698 15 11699 19 4 25 15 11697 14 26 77 15 11700 19 4 25 15 11697 1 11701 12 19 2 44 15 11697 15 253 15 11702 19 3 255 15 196 15 11703 19 2 198 15 11704 15 22 15 11705 15 11706 19 4 25 15 11704 14 26 77 15 11707 19 4 25 15 11704 1 11708 12 19 2 44 15 11704 15 253 15 11709 19 3 255 15 196 15 11710 19 2 198 15 11711 15 22 15 11712 15 11713 19 4 25 15 11711 14 26 77 15 11714 19 4 25 15 11711 1 11719 12 19 2 44 15 11711 15 253 15 11720 19 3 255 15 11400 15 22 15 11721 15 11722 19 4 25 15 11400 77 15 11723 15 11724 1 11725 12 19 5 75 15 11726 15 22 15 11727 15 11728 19 4 25 15 11726 77 15 11729 15 11730 1 11734 12 19 5 75 15 8 15 11400 19 2 359 15 11735 19 1 104 15 196 15 11736 19 2 198 15 11737 15 22 15 11738 15 11739 19 4 25 15 11737 14 26 77 15 11740 19 4 25 15 11737 1 11742 12 19 2 44 15 11737 15 253 15 11743 19 3 255 15 196 15 11744 19 2 198 15 11745 15 22 15 11746 15 11747 19 4 25 15 11745 14 26 77 15 11748 19 4 25 15 11745 1 11754 12 19 2 44 15 11745 15 253 15 11755 19 3 255 15 196 15 11756 19 2 198 15 11757 15 22 15 11758 15 11759 19 4 25 15 11757 14 26 77 15 11760 19 4 25 15 11757 1 11761 12 19 2 44 15 11757 15 253 15 11762 19 3 255 15 196 15 11763 19 2 198 15 11764 15 22 15 11765 15 11766 19 4 25 15 11764 14 26 77 15 11767 19 4 25 15 11764 1 11768 12 19 2 44 15 11764 15 253 15 11769 19 3 255 15 196 15 11770 19 2 198 15 11771 15 22 15 11772 15 11773 19 4 25 15 11771 14 26 77 15 11774 19 4 25 15 11771 1 11779 12 19 2 44 15 11771 15 253 15 11780 19 3 255 15 11401 15 22 15 11781 15 11782 19 4 25 15 11401 77 15 11783 15 11784 1 11785 12 19 5 75 15 11786 15 22 15 11787 15 11788 19 4 25 15 11786 77 15 11789 15 11790 1 11794 12 19 5 75 15 8 15 11401 19 2 359 15 11795 19 1 104 15 196 15 11796 19 2 198 15 11797 15 22 15 11798 15 11799 19 4 25 15 11797 14 26 77 15 11800 19 4 25 15 11797 1 11802 12 19 2 44 15 11797 15 253 15 11803 19 3 255 15 196 15 11804 19 2 198 15 11805 15 22 15 11806 15 11807 19 4 25 15 11805 14 26 77 15 11808 19 4 25 15 11805 1 11814 12 19 2 44 15 11805 15 253 15 11815 19 3 255 15 196 15 11816 19 2 198 15 11817 15 22 15 11818 15 11819 19 4 25 15 11817 14 26 77 15 11820 19 4 25 15 11817 1 11821 12 19 2 44 15 11817 15 253 15 11822 19 3 255 15 196 15 11823 19 2 198 15 11824 15 22 15 11825 15 11826 19 4 25 15 11824 14 26 77 15 11827 19 4 25 15 11824 1 11828 12 19 2 44 15 11824 15 253 15 11829 19 3 255 15 196 15 11830 19 2 198 15 11831 15 22 15 11832 15 11833 19 4 25 15 11831 14 26 77 15 11834 19 4 25 15 11831 1 11839 12 19 2 44 15 11831 15 253 15 11840 19 3 255 15 11402 15 22 15 11841 15 11842 19 4 25 15 11402 77 15 11843 15 11844 1 11845 12 19 5 75 15 11846 15 22 15 11847 15 11848 19 4 25 15 11846 77 15 11849 15 11850 1 11854 12 19 5 75 15 8 15 11402 19 2 359 15 11855 19 1 104 15 196 15 11856 19 2 198 15 11857 15 22 15 11858 15 11859 19 4 25 15 11857 14 26 77 15 11860 19 4 25 15 11857 1 11889 12 19 2 44 15 11857 15 253 15 11890 19 3 255 15 11891 15 22 15 11892 15 11893 19 4 25 15 11891 14 26 77 15 11894 19 4 25 15 11891 1 11895 12 19 2 44 15 11896 19 1 104 15 815 15 22 15 11897 15 11898 19 4 25 15 815 77 15 11899 15 11900 1 11903 12 19 5 75 15 825 19 1 115 45 826 15 824 13 0 14 824 19 3 113 10 0 43 1 78 11904 77 75 3 78 11933 15 11950 19 1 117 78 11949 15 11949 19 1 115 78 11948 15 11952 14 222 15 40 14 11953 77 14 224 15 11954 19 7 226 78 11951 15 885 19 1 115 78 11955 1 11955 45 11963 1 829 45 11964 1 10823 45 11965 13 0 13 2 13 1 33 11966 18 3 43 1 43 2 1 11955 45 11967 1 834 45 11968 1 11969 45 11970 13 0 13 2 13 1 33 11971 18 3 43 1 43 2 1 11955 45 11972 1 840 45 11973 1 11974 45 11975 13 0 13 2 13 1 33 11976 18 3 43 1 43 2 1 11955 45 11977 1 846 45 11978 75 45 11979 13 0 13 2 13 1 33 11980 18 3 43 1 43 2 1 11955 45 11981 1 906 45 11982 1 824 45 11983 13 0 13 2 13 1 33 11984 18 3 43 1 43 2 1 11955 45 11985 1 911 45 11986 1 10823 45 11987 13 0 13 2 13 1 33 11988 18 3 43 1 43 2 1 11955 45 11989 1 916 45 11990 1 918 45 11991 13 0 13 2 13 1 33 11992 18 3 43 1 43 2 1 11955 45 11993 1 922 45 11994 8 7 45 11995 13 0 13 2 13 1 33 11996 18 3 43 1 43 2 1 11955 45 11997 1 927 45 11998 75 45 11999 13 0 13 2 13 1 33 12000 18 3 43 1 43 2 1 11955 45 12001 1 932 45 12002 8 6 45 12003 13 0 13 2 13 1 33 12004 18 3 43 1 43 2 1 11955 45 12005 1 937 45 12006 1 11362 45 12007 13 0 13 2 13 1 33 12008 18 3 43 1 43 2 1 11955 45 12009 1 942 45 12010 1 11402 45 12011 13 0 13 2 13 1 33 12012 18 3 43 1 43 2 1 11955 45 12013 1 947 45 12014 1 12015 45 12016 13 0 13 2 13 1 33 12017 18 3 43 1 43 2 1 11955 45 12018 1 953 45 12019 1 1039 45 12020 13 0 13 2 13 1 33 12021 18 3 43 1 43 2 1 11955 45 12022 1 958 45 12023 75 45 12024 13 0 13 2 13 1 33 12025 18 3 43 1 43 2 1 11955 45 12026 1 963 45 12027 75 45 12028 13 0 13 2 13 1 33 12029 18 3 43 1 43 2 1 11955 45 12030 1 968 45 12031 75 45 12032 13 0 13 2 13 1 33 12033 18 3 43 1 43 2 1 11955 45 12034 1 973 45 12035 75 45 12036 13 0 13 2 13 1 33 12037 18 3 43 1 43 2 15 885 19 1 115 78 11957 1 11957 45 12038 1 829 45 12039 1 8556 45 12040 13 0 13 2 13 1 33 12041 18 3 43 1 43 2 1 11957 45 12042 1 834 45 12043 1 12044 45 12045 13 0 13 2 13 1 33 12046 18 3 43 1 43 2 1 11957 45 12047 1 840 45 12048 1 12049 45 12050 13 0 13 2 13 1 33 12051 18 3 43 1 43 2 1 11957 45 12052 1 846 45 12053 75 45 12054 13 0 13 2 13 1 33 12055 18 3 43 1 43 2 1 11957 45 12056 1 906 45 12057 1 824 45 12058 13 0 13 2 13 1 33 12059 18 3 43 1 43 2 1 11957 45 12060 1 911 45 12061 1 8556 45 12062 13 0 13 2 13 1 33 12063 18 3 43 1 43 2 1 11957 45 12064 1 916 45 12065 1 918 45 12066 13 0 13 2 13 1 33 12067 18 3 43 1 43 2 1 11957 45 12068 1 922 45 12069 8 6 45 12070 13 0 13 2 13 1 33 12071 18 3 43 1 43 2 1 11957 45 12072 1 927 45 12073 75 45 12074 13 0 13 2 13 1 33 12075 18 3 43 1 43 2 1 11957 45 12076 1 932 45 12077 8 5 45 12078 13 0 13 2 13 1 33 12079 18 3 43 1 43 2 1 11957 45 12080 1 937 45 12081 1 11362 45 12082 13 0 13 2 13 1 33 12083 18 3 43 1 43 2 1 11957 45 12084 1 942 45 12085 1 11401 45 12086 13 0 13 2 13 1 33 12087 18 3 43 1 43 2 1 11957 45 12088 1 947 45 12089 1 12090 45 12091 13 0 13 2 13 1 33 12092 18 3 43 1 43 2 1 11957 45 12093 1 953 45 12094 1 1039 45 12095 13 0 13 2 13 1 33 12096 18 3 43 1 43 2 1 11957 45 12097 1 958 45 12098 75 45 12099 13 0 13 2 13 1 33 12100 18 3 43 1 43 2 1 11957 45 12101 1 963 45 12102 75 45 12103 13 0 13 2 13 1 33 12104 18 3 43 1 43 2 1 11957 45 12105 1 968 45 12106 75 45 12107 13 0 13 2 13 1 33 12108 18 3 43 1 43 2 1 11957 45 12109 1 973 45 12110 75 45 12111 13 0 13 2 13 1 33 12112 18 3 43 1 43 2 15 885 19 1 115 78 11958 1 11958 45 12113 1 829 45 12114 1 6861 45 12115 13 0 13 2 13 1 33 12116 18 3 43 1 43 2 1 11958 45 12117 1 834 45 12118 1 12119 45 12120 13 0 13 2 13 1 33 12121 18 3 43 1 43 2 1 11958 45 12122 1 840 45 12123 1 12124 45 12125 13 0 13 2 13 1 33 12126 18 3 43 1 43 2 1 11958 45 12127 1 846 45 12128 75 45 12129 13 0 13 2 13 1 33 12130 18 3 43 1 43 2 1 11958 45 12131 1 906 45 12132 1 824 45 12133 13 0 13 2 13 1 33 12134 18 3 43 1 43 2 1 11958 45 12135 1 911 45 12136 1 6861 45 12137 13 0 13 2 13 1 33 12138 18 3 43 1 43 2 1 11958 45 12139 1 916 45 12140 1 918 45 12141 13 0 13 2 13 1 33 12142 18 3 43 1 43 2 1 11958 45 12143 1 922 45 12144 8 5 45 12145 13 0 13 2 13 1 33 12146 18 3 43 1 43 2 1 11958 45 12147 1 927 45 12148 75 45 12149 13 0 13 2 13 1 33 12150 18 3 43 1 43 2 1 11958 45 12151 1 932 45 12152 8 4 45 12153 13 0 13 2 13 1 33 12154 18 3 43 1 43 2 1 11958 45 12155 1 937 45 12156 1 11362 45 12157 13 0 13 2 13 1 33 12158 18 3 43 1 43 2 1 11958 45 12159 1 942 45 12160 1 11400 45 12161 13 0 13 2 13 1 33 12162 18 3 43 1 43 2 1 11958 45 12163 1 947 45 12164 1 12165 45 12166 13 0 13 2 13 1 33 12167 18 3 43 1 43 2 1 11958 45 12168 1 953 45 12169 1 1039 45 12170 13 0 13 2 13 1 33 12171 18 3 43 1 43 2 1 11958 45 12172 1 958 45 12173 75 45 12174 13 0 13 2 13 1 33 12175 18 3 43 1 43 2 1 11958 45 12176 1 963 45 12177 75 45 12178 13 0 13 2 13 1 33 12179 18 3 43 1 43 2 1 11958 45 12180 1 968 45 12181 75 45 12182 13 0 13 2 13 1 33 12183 18 3 43 1 43 2 1 11958 45 12184 1 973 45 12185 75 45 12186 13 0 13 2 13 1 33 12187 18 3 43 1 43 2 15 885 19 1 115 78 11959 1 11959 45 12188 1 829 45 12189 1 5394 45 12190 13 0 13 2 13 1 33 12191 18 3 43 1 43 2 1 11959 45 12192 1 834 45 12193 1 12194 45 12195 13 0 13 2 13 1 33 12196 18 3 43 1 43 2 1 11959 45 12197 1 840 45 12198 1 12199 45 12200 13 0 13 2 13 1 33 12201 18 3 43 1 43 2 1 11959 45 12202 1 846 45 12203 75 45 12204 13 0 13 2 13 1 33 12205 18 3 43 1 43 2 1 11959 45 12206 1 906 45 12207 1 824 45 12208 13 0 13 2 13 1 33 12209 18 3 43 1 43 2 1 11959 45 12210 1 911 45 12211 1 5394 45 12212 13 0 13 2 13 1 33 12213 18 3 43 1 43 2 1 11959 45 12214 1 916 45 12215 1 918 45 12216 13 0 13 2 13 1 33 12217 18 3 43 1 43 2 1 11959 45 12218 1 922 45 12219 8 4 45 12220 13 0 13 2 13 1 33 12221 18 3 43 1 43 2 1 11959 45 12222 1 927 45 12223 75 45 12224 13 0 13 2 13 1 33 12225 18 3 43 1 43 2 1 11959 45 12226 1 932 45 12227 8 3 45 12228 13 0 13 2 13 1 33 12229 18 3 43 1 43 2 1 11959 45 12230 1 937 45 12231 1 11362 45 12232 13 0 13 2 13 1 33 12233 18 3 43 1 43 2 1 11959 45 12234 1 942 45 12235 1 11399 45 12236 13 0 13 2 13 1 33 12237 18 3 43 1 43 2 1 11959 45 12238 1 947 45 12239 1 12240 45 12241 13 0 13 2 13 1 33 12242 18 3 43 1 43 2 1 11959 45 12243 1 953 45 12244 1 1039 45 12245 13 0 13 2 13 1 33 12246 18 3 43 1 43 2 1 11959 45 12247 1 958 45 12248 75 45 12249 13 0 13 2 13 1 33 12250 18 3 43 1 43 2 1 11959 45 12251 1 963 45 12252 75 45 12253 13 0 13 2 13 1 33 12254 18 3 43 1 43 2 1 11959 45 12255 1 968 45 12256 75 45 12257 13 0 13 2 13 1 33 12258 18 3 43 1 43 2 1 11959 45 12259 1 973 45 12260 75 45 12261 13 0 13 2 13 1 33 12262 18 3 43 1 43 2 15 885 19 1 115 78 11960 1 11960 45 12263 1 829 45 12264 1 3325 45 12265 13 0 13 2 13 1 33 12266 18 3 43 1 43 2 1 11960 45 12267 1 834 45 12268 1 12269 45 12270 13 0 13 2 13 1 33 12271 18 3 43 1 43 2 1 11960 45 12272 1 840 45 12273 1 12274 45 12275 13 0 13 2 13 1 33 12276 18 3 43 1 43 2 1 11960 45 12277 1 846 45 12278 75 45 12279 13 0 13 2 13 1 33 12280 18 3 43 1 43 2 1 11960 45 12281 1 906 45 12282 1 824 45 12283 13 0 13 2 13 1 33 12284 18 3 43 1 43 2 1 11960 45 12285 1 911 45 12286 1 3325 45 12287 13 0 13 2 13 1 33 12288 18 3 43 1 43 2 1 11960 45 12289 1 916 45 12290 1 918 45 12291 13 0 13 2 13 1 33 12292 18 3 43 1 43 2 1 11960 45 12293 1 922 45 12294 8 3 45 12295 13 0 13 2 13 1 33 12296 18 3 43 1 43 2 1 11960 45 12297 1 927 45 12298 75 45 12299 13 0 13 2 13 1 33 12300 18 3 43 1 43 2 1 11960 45 12301 1 932 45 12302 8 2 45 12303 13 0 13 2 13 1 33 12304 18 3 43 1 43 2 1 11960 45 12305 1 937 45 12306 1 11362 45 12307 13 0 13 2 13 1 33 12308 18 3 43 1 43 2 1 11960 45 12309 1 942 45 12310 1 11398 45 12311 13 0 13 2 13 1 33 12312 18 3 43 1 43 2 1 11960 45 12313 1 947 45 12314 1 12315 45 12316 13 0 13 2 13 1 33 12317 18 3 43 1 43 2 1 11960 45 12318 1 953 45 12319 1 1039 45 12320 13 0 13 2 13 1 33 12321 18 3 43 1 43 2 1 11960 45 12322 1 958 45 12323 75 45 12324 13 0 13 2 13 1 33 12325 18 3 43 1 43 2 1 11960 45 12326 1 963 45 12327 75 45 12328 13 0 13 2 13 1 33 12329 18 3 43 1 43 2 1 11960 45 12330 1 968 45 12331 75 45 12332 13 0 13 2 13 1 33 12333 18 3 43 1 43 2 1 11960 45 12334 1 973 45 12335 75 45 12336 13 0 13 2 13 1 33 12337 18 3 43 1 43 2 15 885 19 1 115 78 11961 1 11961 45 12338 1 829 45 12339 1 1712 45 12340 13 0 13 2 13 1 33 12341 18 3 43 1 43 2 1 11961 45 12342 1 834 45 12343 1 12344 45 12345 13 0 13 2 13 1 33 12346 18 3 43 1 43 2 1 11961 45 12347 1 840 45 12348 1 12349 45 12350 13 0 13 2 13 1 33 12351 18 3 43 1 43 2 1 11961 45 12352 1 846 45 12353 75 45 12354 13 0 13 2 13 1 33 12355 18 3 43 1 43 2 1 11961 45 12356 1 906 45 12357 1 824 45 12358 13 0 13 2 13 1 33 12359 18 3 43 1 43 2 1 11961 45 12360 1 911 45 12361 1 1712 45 12362 13 0 13 2 13 1 33 12363 18 3 43 1 43 2 1 11961 45 12364 1 916 45 12365 1 918 45 12366 13 0 13 2 13 1 33 12367 18 3 43 1 43 2 1 11961 45 12368 1 922 45 12369 8 2 45 12370 13 0 13 2 13 1 33 12371 18 3 43 1 43 2 1 11961 45 12372 1 927 45 12373 75 45 12374 13 0 13 2 13 1 33 12375 18 3 43 1 43 2 1 11961 45 12376 1 932 45 12377 8 1 45 12378 13 0 13 2 13 1 33 12379 18 3 43 1 43 2 1 11961 45 12380 1 937 45 12381 1 11362 45 12382 13 0 13 2 13 1 33 12383 18 3 43 1 43 2 1 11961 45 12384 1 942 45 12385 1 11397 45 12386 13 0 13 2 13 1 33 12387 18 3 43 1 43 2 1 11961 45 12388 1 947 45 12389 1 12390 45 12391 13 0 13 2 13 1 33 12392 18 3 43 1 43 2 1 11961 45 12393 1 953 45 12394 1 1039 45 12395 13 0 13 2 13 1 33 12396 18 3 43 1 43 2 1 11961 45 12397 1 958 45 12398 75 45 12399 13 0 13 2 13 1 33 12400 18 3 43 1 43 2 1 11961 45 12401 1 963 45 12402 75 45 12403 13 0 13 2 13 1 33 12404 18 3 43 1 43 2 1 11961 45 12405 1 968 45 12406 75 45 12407 13 0 13 2 13 1 33 12408 18 3 43 1 43 2 1 11961 45 12409 1 973 45 12410 75 45 12411 13 0 13 2 13 1 33 12412 18 3 43 1 43 2 15 885 19 1 115 78 11962 1 11962 45 12413 1 829 45 12414 1 199 45 12415 13 0 13 2 13 1 33 12416 18 3 43 1 43 2 1 11962 45 12417 1 834 45 12418 1 12419 45 12420 13 0 13 2 13 1 33 12421 18 3 43 1 43 2 1 11962 45 12422 1 840 45 12423 1 12424 45 12425 13 0 13 2 13 1 33 12426 18 3 43 1 43 2 1 11962 45 12427 1 846 45 12428 75 45 12429 13 0 13 2 13 1 33 12430 18 3 43 1 43 2 1 11962 45 12431 1 906 45 12432 1 824 45 12433 13 0 13 2 13 1 33 12434 18 3 43 1 43 2 1 11962 45 12435 1 911 45 12436 1 199 45 12437 13 0 13 2 13 1 33 12438 18 3 43 1 43 2 1 11962 45 12439 1 916 45 12440 1 918 45 12441 13 0 13 2 13 1 33 12442 18 3 43 1 43 2 1 11962 45 12443 1 922 45 12444 8 1 45 12445 13 0 13 2 13 1 33 12446 18 3 43 1 43 2 1 11962 45 12447 1 927 45 12448 75 45 12449 13 0 13 2 13 1 33 12450 18 3 43 1 43 2 1 11962 45 12451 1 932 45 12452 8 0 45 12453 13 0 13 2 13 1 33 12454 18 3 43 1 43 2 1 11962 45 12455 1 937 45 12456 1 11362 45 12457 13 0 13 2 13 1 33 12458 18 3 43 1 43 2 1 11962 45 12459 1 942 45 12460 1 11396 45 12461 13 0 13 2 13 1 33 12462 18 3 43 1 43 2 1 11962 45 12463 1 947 45 12464 1 12465 45 12466 13 0 13 2 13 1 33 12467 18 3 43 1 43 2 1 11962 45 12468 1 953 45 12469 1 1039 45 12470 13 0 13 2 13 1 33 12471 18 3 43 1 43 2 1 11962 45 12472 1 958 45 12473 75 45 12474 13 0 13 2 13 1 33 12475 18 3 43 1 43 2 1 11962 45 12476 1 963 45 12477 75 45 12478 13 0 13 2 13 1 33 12479 18 3 43 1 43 2 1 11962 45 12480 1 968 45 12481 75 45 12482 13 0 13 2 13 1 33 12483 18 3 43 1 43 2 1 11962 45 12484 1 973 45 12485 75 45 12486 13 0 13 2 13 1 33 12487 18 3 43 1 43 2 15 11951 9 6 15 11955 19 3 11956 15 11951 9 5 15 11957 19 3 11956 15 11951 9 4 15 11958 19 3 11956 15 11951 9 3 15 11959 19 3 11956 15 11951 9 2 15 11960 19 3 11956 15 11951 9 1 15 11961 19 3 11956 15 11951 9 0 15 11962 19 3 11956 15 11948 15 11950 9 0 77 19 4 118 15 11948 15 11950 9 1 15 11951 19 4 118 15 11948 15 11950 9 2 15 11862 19 4 118 15 11948 15 11950 9 3 15 11362 19 4 118 15 11933 1 11948 17 122 15 11933 75 17 124 1 11904 45 11905 1 829 45 11906 1 8 45 11907 13 0 13 2 13 1 33 11908 18 3 43 1 43 2 1 11904 45 11909 1 834 45 11910 1 11911 45 11912 13 0 13 2 13 1 33 11913 18 3 43 1 43 2 1 11904 45 11914 1 840 45 11915 1 11916 45 11917 13 0 13 2 13 1 33 11918 18 3 43 1 43 2 1 11904 45 11919 1 846 45 11920 75 45 11921 13 0 13 2 13 1 33 11922 18 3 43 1 43 2 1 11904 45 11923 1 851 45 11924 75 45 11925 13 0 13 2 13 1 33 11926 18 3 43 1 43 2 1 11904 45 11927 1 856 45 11928 75 45 11929 13 0 13 2 13 1 33 11930 18 3 43 1 43 2 1 11904 45 11931 1 862 45 11932 1 11933 45 11934 13 0 13 2 13 1 33 11935 18 3 43 1 43 2 15 11904 1 866 17 867 1 11904 45 11936 1 869 45 11937 75 45 11938 13 0 13 2 13 1 33 11939 18 3 43 1 43 2 1 11904 45 11940 1 874 45 11941 75 45 11942 13 0 13 2 13 1 33 11943 18 3 43 1 43 2 1 11904 45 11944 1 879 45 11945 1 824 45 11946 13 0 13 2 13 1 33 11947 18 3 43 1 43 2 15 8 15 11904 14 824 19 3 113 29) #1# #6# 718) #Y(si::bytecodes nil nil (15 12488 19 1 104 29) #1# #6# 13204))
